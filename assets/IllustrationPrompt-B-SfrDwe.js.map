{"version":3,"file":"IllustrationPrompt-B-SfrDwe.js","sources":["../../node_modules/auto-text-size/dist/index.mjs","../../src/components/IllustrationPrompt.tsx"],"sourcesContent":["var __defProp = Object.defineProperty;\nvar __getOwnPropSymbols = Object.getOwnPropertySymbols;\nvar __hasOwnProp = Object.prototype.hasOwnProperty;\nvar __propIsEnum = Object.prototype.propertyIsEnumerable;\nvar __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;\nvar __spreadValues = (a, b) => {\n  for (var prop in b || (b = {}))\n    if (__hasOwnProp.call(b, prop))\n      __defNormalProp(a, prop, b[prop]);\n  if (__getOwnPropSymbols)\n    for (var prop of __getOwnPropSymbols(b)) {\n      if (__propIsEnum.call(b, prop))\n        __defNormalProp(a, prop, b[prop]);\n    }\n  return a;\n};\nvar __objRest = (source, exclude) => {\n  var target = {};\n  for (var prop in source)\n    if (__hasOwnProp.call(source, prop) && exclude.indexOf(prop) < 0)\n      target[prop] = source[prop];\n  if (source != null && __getOwnPropSymbols)\n    for (var prop of __getOwnPropSymbols(source)) {\n      if (exclude.indexOf(prop) < 0 && __propIsEnum.call(source, prop))\n        target[prop] = source[prop];\n    }\n  return target;\n};\n\n// src/auto-text-size-standalone.ts\nfunction throttleAnimationFrame(func) {\n  let wait = false;\n  return () => {\n    if (!wait) {\n      wait = true;\n      requestAnimationFrame(() => {\n        func();\n        wait = false;\n      });\n    }\n  };\n}\nvar antiOverflowAlgo = ({\n  fontSizePx,\n  minFontSizePx,\n  fontSizePrecisionPx,\n  updateFontSizePx,\n  breakPredicate: breakPred\n}) => {\n  const maxIterCount = Math.ceil(1 / fontSizePrecisionPx);\n  let iterCount = 0;\n  while (fontSizePx > minFontSizePx && iterCount < maxIterCount) {\n    if (breakPred())\n      break;\n    fontSizePx = updateFontSizePx(fontSizePx - fontSizePrecisionPx);\n    iterCount++;\n  }\n};\nvar getContentWidth = (element) => {\n  const computedStyle = getComputedStyle(element);\n  return element.clientWidth - parseFloat(computedStyle.paddingLeft) - parseFloat(computedStyle.paddingRight);\n};\nvar getContentHeight = (element) => {\n  const computedStyle = getComputedStyle(element);\n  return element.clientHeight - parseFloat(computedStyle.paddingTop) - parseFloat(computedStyle.paddingBottom);\n};\nvar multilineAlgo = (opts) => {\n  opts.innerEl.style.whiteSpace = \"nowrap\";\n  onelineAlgo(opts);\n  if (opts.innerEl.scrollWidth > getContentWidth(opts.containerEl)) {\n    opts.innerEl.style.whiteSpace = \"normal\";\n  }\n};\nvar onelineAlgo = ({\n  innerEl,\n  containerEl,\n  fontSizePx,\n  minFontSizePx,\n  maxFontSizePx,\n  fontSizePrecisionPx,\n  updateFontSizePx\n}) => {\n  const maxIterCount = 10;\n  let iterCount = 0;\n  let prevOverflowFactor = 1;\n  while (iterCount < maxIterCount) {\n    const w0 = innerEl.scrollWidth;\n    const w1 = getContentWidth(containerEl);\n    const canGrow = fontSizePx < maxFontSizePx && w0 < w1;\n    const canShrink = fontSizePx > minFontSizePx && w0 > w1;\n    const overflowFactor = w0 / w1;\n    if (prevOverflowFactor === overflowFactor) {\n      break;\n    }\n    if (!(canGrow || canShrink)) {\n      break;\n    }\n    const updatePx = fontSizePx / overflowFactor - fontSizePx;\n    const prevFontSizePx = fontSizePx;\n    fontSizePx = updateFontSizePx(fontSizePx + updatePx);\n    if (Math.abs(fontSizePx - prevFontSizePx) <= fontSizePrecisionPx) {\n      break;\n    }\n    prevOverflowFactor = overflowFactor;\n    iterCount++;\n  }\n  antiOverflowAlgo({\n    fontSizePx,\n    minFontSizePx,\n    updateFontSizePx,\n    fontSizePrecisionPx,\n    breakPredicate: () => innerEl.scrollWidth <= getContentWidth(containerEl)\n  });\n};\nvar boxAlgo = ({\n  innerEl,\n  containerEl,\n  fontSizePx,\n  minFontSizePx,\n  maxFontSizePx,\n  fontSizePrecisionPx,\n  updateFontSizePx\n}) => {\n  const maxIterCount = 100;\n  fontSizePx = updateFontSizePx((maxFontSizePx - minFontSizePx) * 0.5);\n  let updatePx = (maxFontSizePx - minFontSizePx) * 0.25;\n  let iterCount = 0;\n  while (updatePx > fontSizePrecisionPx && iterCount < maxIterCount) {\n    const w0 = innerEl.scrollWidth;\n    const w1 = getContentWidth(containerEl);\n    const h0 = innerEl.scrollHeight;\n    const h1 = getContentHeight(containerEl);\n    if (w0 === w1 && h0 === h1)\n      break;\n    if (fontSizePx < maxFontSizePx && w0 <= w1 && h0 <= h1) {\n      fontSizePx = updateFontSizePx(fontSizePx + updatePx);\n    } else if (fontSizePx > minFontSizePx && (w0 > w1 || h0 > h1)) {\n      fontSizePx = updateFontSizePx(fontSizePx - updatePx);\n    }\n    updatePx *= 0.5;\n    iterCount++;\n  }\n  antiOverflowAlgo({\n    fontSizePx,\n    minFontSizePx,\n    updateFontSizePx,\n    fontSizePrecisionPx,\n    breakPredicate: () => innerEl.scrollWidth <= getContentWidth(containerEl) && innerEl.scrollHeight <= getContentHeight(containerEl)\n  });\n};\nfunction updateTextSize({\n  innerEl,\n  containerEl,\n  mode = \"multiline\",\n  minFontSizePx = 8,\n  maxFontSizePx = 160,\n  fontSizePrecisionPx = 0.1\n}) {\n  const t0 = performance.now();\n  if (!isFinite(minFontSizePx)) {\n    throw new Error(`Invalid minFontSizePx (${minFontSizePx})`);\n  }\n  if (!isFinite(minFontSizePx)) {\n    throw new Error(`Invalid maxFontSizePx (${maxFontSizePx})`);\n  }\n  if (!isFinite(fontSizePrecisionPx) || fontSizePrecisionPx === 0) {\n    throw new Error(`Invalid fontSizePrecisionPx (${fontSizePrecisionPx})`);\n  }\n  if (containerEl.children.length > 1) {\n    console.warn(\n      `AutoTextSize has ${containerEl.children.length - 1} siblings. This may interfere with the algorithm.`\n    );\n  }\n  const containerStyles = {\n    // Necessary to correctly compute the dimensions `innerEl`.\n    display: \"flex\",\n    alignItems: \"start\"\n  };\n  const innerStyles = {\n    display: \"block\"\n    // Necessary to compute dimensions.\n  };\n  if (mode === \"oneline\") {\n    innerStyles.whiteSpace = \"nowrap\";\n  } else if (mode === \"multiline\") {\n    innerStyles.wordBreak = \"break-word\";\n  } else if (mode === \"box\") {\n    innerStyles.whiteSpace = \"pre-wrap\";\n    innerStyles.wordBreak = \"break-word\";\n  } else if (mode === \"boxoneline\") {\n    innerStyles.whiteSpace = \"nowrap\";\n  }\n  Object.assign(containerEl.style, containerStyles);\n  Object.assign(innerEl.style, innerStyles);\n  const fontSizeStr = window.getComputedStyle(innerEl, null).getPropertyValue(\"font-size\");\n  let fontSizePx = parseFloat(fontSizeStr);\n  let iterations = 0;\n  const updateFontSizePx = (px) => {\n    px = Math.min(Math.max(px, minFontSizePx), maxFontSizePx);\n    fontSizePx = px;\n    innerEl.style.fontSize = `${fontSizePx}px`;\n    iterations++;\n    return fontSizePx;\n  };\n  if (fontSizePx > maxFontSizePx || fontSizePx < minFontSizePx) {\n    updateFontSizePx(fontSizePx);\n  }\n  const algoOpts = {\n    innerEl,\n    containerEl,\n    fontSizePx,\n    minFontSizePx,\n    maxFontSizePx,\n    fontSizePrecisionPx,\n    updateFontSizePx\n  };\n  if (mode === \"oneline\") {\n    onelineAlgo(algoOpts);\n  } else if (mode === \"multiline\") {\n    multilineAlgo(algoOpts);\n  } else if (mode === \"box\") {\n    boxAlgo(algoOpts);\n  } else if (mode === \"boxoneline\") {\n    boxAlgo(algoOpts);\n  }\n}\nfunction autoTextSize({\n  innerEl,\n  containerEl,\n  mode,\n  minFontSizePx,\n  maxFontSizePx,\n  fontSizePrecisionPx\n}) {\n  let containerDimensions = void 0;\n  const throttledUpdateTextSize = throttleAnimationFrame(() => {\n    updateTextSize({\n      innerEl,\n      containerEl,\n      mode,\n      maxFontSizePx,\n      minFontSizePx,\n      fontSizePrecisionPx\n    });\n    containerDimensions = [\n      getContentWidth(containerEl),\n      getContentHeight(containerEl)\n    ];\n  });\n  const resizeObserver = new ResizeObserver(() => {\n    const prevContainerDimensions = containerDimensions;\n    containerDimensions = [\n      getContentWidth(containerEl),\n      getContentHeight(containerEl)\n    ];\n    if ((prevContainerDimensions == null ? void 0 : prevContainerDimensions[0]) !== containerDimensions[0] || (prevContainerDimensions == null ? void 0 : prevContainerDimensions[1]) !== containerDimensions[1]) {\n      throttledUpdateTextSize();\n    }\n  });\n  resizeObserver.observe(containerEl);\n  throttledUpdateTextSize.disconnect = () => resizeObserver.disconnect();\n  return throttledUpdateTextSize;\n}\n\n// src/auto-text-size-react.tsx\nimport React, {\n  useCallback,\n  useEffect,\n  useRef\n} from \"react\";\nfunction AutoTextSize(_a) {\n  var _b = _a, {\n    mode,\n    minFontSizePx,\n    maxFontSizePx,\n    fontSizePrecisionPx,\n    as: Comp = \"div\",\n    children: children\n  } = _b, rest = __objRest(_b, [\n    \"mode\",\n    \"minFontSizePx\",\n    \"maxFontSizePx\",\n    \"fontSizePrecisionPx\",\n    \"as\",\n    // TODO: The `...rest` props are not typed to reflect another `as`.\n    \"children\"\n  ]);\n  const updateTextSizeRef = useRef();\n  useEffect(() => {\n    var _a2;\n    return (_a2 = updateTextSizeRef.current) == null ? void 0 : _a2.call(updateTextSizeRef);\n  }, [children]);\n  const refCallback = useCallback(\n    (innerEl) => {\n      var _a2;\n      (_a2 = updateTextSizeRef.current) == null ? void 0 : _a2.disconnect();\n      const containerEl = innerEl == null ? void 0 : innerEl.parentElement;\n      if (!innerEl || !containerEl)\n        return;\n      updateTextSizeRef.current = autoTextSize({\n        innerEl,\n        containerEl,\n        mode,\n        minFontSizePx,\n        maxFontSizePx,\n        fontSizePrecisionPx\n      });\n    },\n    [mode, minFontSizePx, maxFontSizePx, fontSizePrecisionPx]\n  );\n  return /* @__PURE__ */ React.createElement(Comp, __spreadValues({ ref: refCallback }, rest), children);\n}\nexport {\n  AutoTextSize,\n  autoTextSize,\n  updateTextSize\n};\n//# sourceMappingURL=index.mjs.map","import { useEffect, useState } from \"react\";\nimport { fetchIllustrationPrompt } from \"./song_loader\";\nimport { AutoTextSize } from \"auto-text-size\";\nimport { cn } from \"@/lib/utils\";\n\nexport function IllustrationPrompt({ song, show, className }) {\n    const [promptContent, setPromptContent] = useState(null);\n\n    useEffect(() => {\n        const fetchPrompt = async () => {\n            const promptContent = await fetchIllustrationPrompt(song.id);\n            // console.log(promptContent)\n            setPromptContent(promptContent[0].response);\n        }\n        if (show && !promptContent) { fetchPrompt(); }\n    }, [show]);\n    return (\n        <div className={cn('px-4 flex flex-grow my-4 w-full ', className)}>\n            <AutoTextSize mode=\"boxoneline\">\n                <p className='text-wrap w-full text-shadow'>{promptContent}</p>\n            </AutoTextSize>\n        </div>\n    )\n}"],"names":["__defProp","__getOwnPropSymbols","__hasOwnProp","__propIsEnum","__defNormalProp","obj","key","value","__spreadValues","a","b","prop","__objRest","source","exclude","target","throttleAnimationFrame","func","wait","antiOverflowAlgo","fontSizePx","minFontSizePx","fontSizePrecisionPx","updateFontSizePx","breakPred","maxIterCount","iterCount","getContentWidth","element","computedStyle","getContentHeight","multilineAlgo","opts","onelineAlgo","innerEl","containerEl","maxFontSizePx","prevOverflowFactor","w0","w1","canGrow","canShrink","overflowFactor","updatePx","prevFontSizePx","boxAlgo","h0","h1","updateTextSize","mode","containerStyles","innerStyles","fontSizeStr","px","algoOpts","autoTextSize","containerDimensions","throttledUpdateTextSize","resizeObserver","prevContainerDimensions","AutoTextSize","_a","_b","Comp","children","rest","updateTextSizeRef","useRef","useEffect","_a2","refCallback","useCallback","React","IllustrationPrompt","song","show","className","promptContent","setPromptContent","useState","fetchIllustrationPrompt","cn","jsx"],"mappings":"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","x_google_ignoreList":[0]}