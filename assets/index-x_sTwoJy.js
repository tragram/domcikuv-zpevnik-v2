var __defProp = Object.defineProperty;
var __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;
var __publicField = (obj, key, value) => __defNormalProp(obj, typeof key !== "symbol" ? key + "" : key, value);
function _mergeNamespaces(n2, m2) {
  for (var i = 0; i < m2.length; i++) {
    const e = m2[i];
    if (typeof e !== "string" && !Array.isArray(e)) {
      for (const k2 in e) {
        if (k2 !== "default" && !(k2 in n2)) {
          const d = Object.getOwnPropertyDescriptor(e, k2);
          if (d) {
            Object.defineProperty(n2, k2, d.get ? d : {
              enumerable: true,
              get: () => e[k2]
            });
          }
        }
      }
    }
  }
  return Object.freeze(Object.defineProperty(n2, Symbol.toStringTag, { value: "Module" }));
}
(function polyfill() {
  const relList = document.createElement("link").relList;
  if (relList && relList.supports && relList.supports("modulepreload")) {
    return;
  }
  for (const link2 of document.querySelectorAll('link[rel="modulepreload"]')) {
    processPreload(link2);
  }
  new MutationObserver((mutations) => {
    for (const mutation of mutations) {
      if (mutation.type !== "childList") {
        continue;
      }
      for (const node of mutation.addedNodes) {
        if (node.tagName === "LINK" && node.rel === "modulepreload")
          processPreload(node);
      }
    }
  }).observe(document, { childList: true, subtree: true });
  function getFetchOpts(link2) {
    const fetchOpts = {};
    if (link2.integrity) fetchOpts.integrity = link2.integrity;
    if (link2.referrerPolicy) fetchOpts.referrerPolicy = link2.referrerPolicy;
    if (link2.crossOrigin === "use-credentials")
      fetchOpts.credentials = "include";
    else if (link2.crossOrigin === "anonymous") fetchOpts.credentials = "omit";
    else fetchOpts.credentials = "same-origin";
    return fetchOpts;
  }
  function processPreload(link2) {
    if (link2.ep)
      return;
    link2.ep = true;
    const fetchOpts = getFetchOpts(link2);
    fetch(link2.href, fetchOpts);
  }
})();
var commonjsGlobal = typeof globalThis !== "undefined" ? globalThis : typeof window !== "undefined" ? window : typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : {};
function getDefaultExportFromCjs(x2) {
  return x2 && x2.__esModule && Object.prototype.hasOwnProperty.call(x2, "default") ? x2["default"] : x2;
}
var jsxRuntime = { exports: {} };
var reactJsxRuntime_production_min = {};
var react = { exports: {} };
var react_production_min = {};
/**
 * @license React
 * react.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
var l$2 = Symbol.for("react.element"), n$1 = Symbol.for("react.portal"), p$3 = Symbol.for("react.fragment"), q$2 = Symbol.for("react.strict_mode"), r$1 = Symbol.for("react.profiler"), t = Symbol.for("react.provider"), u$1 = Symbol.for("react.context"), v$1 = Symbol.for("react.forward_ref"), w$1 = Symbol.for("react.suspense"), x$1 = Symbol.for("react.memo"), y$1 = Symbol.for("react.lazy"), z$1 = Symbol.iterator;
function A$1(a2) {
  if (null === a2 || "object" !== typeof a2) return null;
  a2 = z$1 && a2[z$1] || a2["@@iterator"];
  return "function" === typeof a2 ? a2 : null;
}
var B$1 = { isMounted: function() {
  return false;
}, enqueueForceUpdate: function() {
}, enqueueReplaceState: function() {
}, enqueueSetState: function() {
} }, C$1 = Object.assign, D$1 = {};
function E$1(a2, b, e) {
  this.props = a2;
  this.context = b;
  this.refs = D$1;
  this.updater = e || B$1;
}
E$1.prototype.isReactComponent = {};
E$1.prototype.setState = function(a2, b) {
  if ("object" !== typeof a2 && "function" !== typeof a2 && null != a2) throw Error("setState(...): takes an object of state variables to update or a function which returns an object of state variables.");
  this.updater.enqueueSetState(this, a2, b, "setState");
};
E$1.prototype.forceUpdate = function(a2) {
  this.updater.enqueueForceUpdate(this, a2, "forceUpdate");
};
function F$1() {
}
F$1.prototype = E$1.prototype;
function G$1(a2, b, e) {
  this.props = a2;
  this.context = b;
  this.refs = D$1;
  this.updater = e || B$1;
}
var H$1 = G$1.prototype = new F$1();
H$1.constructor = G$1;
C$1(H$1, E$1.prototype);
H$1.isPureReactComponent = true;
var I$1 = Array.isArray, J = Object.prototype.hasOwnProperty, K$1 = { current: null }, L$1 = { key: true, ref: true, __self: true, __source: true };
function M$2(a2, b, e) {
  var d, c = {}, k2 = null, h = null;
  if (null != b) for (d in void 0 !== b.ref && (h = b.ref), void 0 !== b.key && (k2 = "" + b.key), b) J.call(b, d) && !L$1.hasOwnProperty(d) && (c[d] = b[d]);
  var g2 = arguments.length - 2;
  if (1 === g2) c.children = e;
  else if (1 < g2) {
    for (var f2 = Array(g2), m2 = 0; m2 < g2; m2++) f2[m2] = arguments[m2 + 2];
    c.children = f2;
  }
  if (a2 && a2.defaultProps) for (d in g2 = a2.defaultProps, g2) void 0 === c[d] && (c[d] = g2[d]);
  return { $$typeof: l$2, type: a2, key: k2, ref: h, props: c, _owner: K$1.current };
}
function N$2(a2, b) {
  return { $$typeof: l$2, type: a2.type, key: b, ref: a2.ref, props: a2.props, _owner: a2._owner };
}
function O$1(a2) {
  return "object" === typeof a2 && null !== a2 && a2.$$typeof === l$2;
}
function escape(a2) {
  var b = { "=": "=0", ":": "=2" };
  return "$" + a2.replace(/[=:]/g, function(a3) {
    return b[a3];
  });
}
var P$1 = /\/+/g;
function Q$1(a2, b) {
  return "object" === typeof a2 && null !== a2 && null != a2.key ? escape("" + a2.key) : b.toString(36);
}
function R$1(a2, b, e, d, c) {
  var k2 = typeof a2;
  if ("undefined" === k2 || "boolean" === k2) a2 = null;
  var h = false;
  if (null === a2) h = true;
  else switch (k2) {
    case "string":
    case "number":
      h = true;
      break;
    case "object":
      switch (a2.$$typeof) {
        case l$2:
        case n$1:
          h = true;
      }
  }
  if (h) return h = a2, c = c(h), a2 = "" === d ? "." + Q$1(h, 0) : d, I$1(c) ? (e = "", null != a2 && (e = a2.replace(P$1, "$&/") + "/"), R$1(c, b, e, "", function(a3) {
    return a3;
  })) : null != c && (O$1(c) && (c = N$2(c, e + (!c.key || h && h.key === c.key ? "" : ("" + c.key).replace(P$1, "$&/") + "/") + a2)), b.push(c)), 1;
  h = 0;
  d = "" === d ? "." : d + ":";
  if (I$1(a2)) for (var g2 = 0; g2 < a2.length; g2++) {
    k2 = a2[g2];
    var f2 = d + Q$1(k2, g2);
    h += R$1(k2, b, e, f2, c);
  }
  else if (f2 = A$1(a2), "function" === typeof f2) for (a2 = f2.call(a2), g2 = 0; !(k2 = a2.next()).done; ) k2 = k2.value, f2 = d + Q$1(k2, g2++), h += R$1(k2, b, e, f2, c);
  else if ("object" === k2) throw b = String(a2), Error("Objects are not valid as a React child (found: " + ("[object Object]" === b ? "object with keys {" + Object.keys(a2).join(", ") + "}" : b) + "). If you meant to render a collection of children, use an array instead.");
  return h;
}
function S$1(a2, b, e) {
  if (null == a2) return a2;
  var d = [], c = 0;
  R$1(a2, d, "", "", function(a3) {
    return b.call(e, a3, c++);
  });
  return d;
}
function T$1(a2) {
  if (-1 === a2._status) {
    var b = a2._result;
    b = b();
    b.then(function(b2) {
      if (0 === a2._status || -1 === a2._status) a2._status = 1, a2._result = b2;
    }, function(b2) {
      if (0 === a2._status || -1 === a2._status) a2._status = 2, a2._result = b2;
    });
    -1 === a2._status && (a2._status = 0, a2._result = b);
  }
  if (1 === a2._status) return a2._result.default;
  throw a2._result;
}
var U$1 = { current: null }, V$1 = { transition: null }, W$1 = { ReactCurrentDispatcher: U$1, ReactCurrentBatchConfig: V$1, ReactCurrentOwner: K$1 };
function X$1() {
  throw Error("act(...) is not supported in production builds of React.");
}
react_production_min.Children = { map: S$1, forEach: function(a2, b, e) {
  S$1(a2, function() {
    b.apply(this, arguments);
  }, e);
}, count: function(a2) {
  var b = 0;
  S$1(a2, function() {
    b++;
  });
  return b;
}, toArray: function(a2) {
  return S$1(a2, function(a3) {
    return a3;
  }) || [];
}, only: function(a2) {
  if (!O$1(a2)) throw Error("React.Children.only expected to receive a single React element child.");
  return a2;
} };
react_production_min.Component = E$1;
react_production_min.Fragment = p$3;
react_production_min.Profiler = r$1;
react_production_min.PureComponent = G$1;
react_production_min.StrictMode = q$2;
react_production_min.Suspense = w$1;
react_production_min.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED = W$1;
react_production_min.act = X$1;
react_production_min.cloneElement = function(a2, b, e) {
  if (null === a2 || void 0 === a2) throw Error("React.cloneElement(...): The argument must be a React element, but you passed " + a2 + ".");
  var d = C$1({}, a2.props), c = a2.key, k2 = a2.ref, h = a2._owner;
  if (null != b) {
    void 0 !== b.ref && (k2 = b.ref, h = K$1.current);
    void 0 !== b.key && (c = "" + b.key);
    if (a2.type && a2.type.defaultProps) var g2 = a2.type.defaultProps;
    for (f2 in b) J.call(b, f2) && !L$1.hasOwnProperty(f2) && (d[f2] = void 0 === b[f2] && void 0 !== g2 ? g2[f2] : b[f2]);
  }
  var f2 = arguments.length - 2;
  if (1 === f2) d.children = e;
  else if (1 < f2) {
    g2 = Array(f2);
    for (var m2 = 0; m2 < f2; m2++) g2[m2] = arguments[m2 + 2];
    d.children = g2;
  }
  return { $$typeof: l$2, type: a2.type, key: c, ref: k2, props: d, _owner: h };
};
react_production_min.createContext = function(a2) {
  a2 = { $$typeof: u$1, _currentValue: a2, _currentValue2: a2, _threadCount: 0, Provider: null, Consumer: null, _defaultValue: null, _globalName: null };
  a2.Provider = { $$typeof: t, _context: a2 };
  return a2.Consumer = a2;
};
react_production_min.createElement = M$2;
react_production_min.createFactory = function(a2) {
  var b = M$2.bind(null, a2);
  b.type = a2;
  return b;
};
react_production_min.createRef = function() {
  return { current: null };
};
react_production_min.forwardRef = function(a2) {
  return { $$typeof: v$1, render: a2 };
};
react_production_min.isValidElement = O$1;
react_production_min.lazy = function(a2) {
  return { $$typeof: y$1, _payload: { _status: -1, _result: a2 }, _init: T$1 };
};
react_production_min.memo = function(a2, b) {
  return { $$typeof: x$1, type: a2, compare: void 0 === b ? null : b };
};
react_production_min.startTransition = function(a2) {
  var b = V$1.transition;
  V$1.transition = {};
  try {
    a2();
  } finally {
    V$1.transition = b;
  }
};
react_production_min.unstable_act = X$1;
react_production_min.useCallback = function(a2, b) {
  return U$1.current.useCallback(a2, b);
};
react_production_min.useContext = function(a2) {
  return U$1.current.useContext(a2);
};
react_production_min.useDebugValue = function() {
};
react_production_min.useDeferredValue = function(a2) {
  return U$1.current.useDeferredValue(a2);
};
react_production_min.useEffect = function(a2, b) {
  return U$1.current.useEffect(a2, b);
};
react_production_min.useId = function() {
  return U$1.current.useId();
};
react_production_min.useImperativeHandle = function(a2, b, e) {
  return U$1.current.useImperativeHandle(a2, b, e);
};
react_production_min.useInsertionEffect = function(a2, b) {
  return U$1.current.useInsertionEffect(a2, b);
};
react_production_min.useLayoutEffect = function(a2, b) {
  return U$1.current.useLayoutEffect(a2, b);
};
react_production_min.useMemo = function(a2, b) {
  return U$1.current.useMemo(a2, b);
};
react_production_min.useReducer = function(a2, b, e) {
  return U$1.current.useReducer(a2, b, e);
};
react_production_min.useRef = function(a2) {
  return U$1.current.useRef(a2);
};
react_production_min.useState = function(a2) {
  return U$1.current.useState(a2);
};
react_production_min.useSyncExternalStore = function(a2, b, e) {
  return U$1.current.useSyncExternalStore(a2, b, e);
};
react_production_min.useTransition = function() {
  return U$1.current.useTransition();
};
react_production_min.version = "18.3.1";
{
  react.exports = react_production_min;
}
var reactExports = react.exports;
const React$1 = /* @__PURE__ */ getDefaultExportFromCjs(reactExports);
const React$2 = /* @__PURE__ */ _mergeNamespaces({
  __proto__: null,
  default: React$1
}, [reactExports]);
/**
 * @license React
 * react-jsx-runtime.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
var f = reactExports, k = Symbol.for("react.element"), l$1 = Symbol.for("react.fragment"), m$2 = Object.prototype.hasOwnProperty, n = f.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED.ReactCurrentOwner, p$2 = { key: true, ref: true, __self: true, __source: true };
function q$1(c, a2, g2) {
  var b, d = {}, e = null, h = null;
  void 0 !== g2 && (e = "" + g2);
  void 0 !== a2.key && (e = "" + a2.key);
  void 0 !== a2.ref && (h = a2.ref);
  for (b in a2) m$2.call(a2, b) && !p$2.hasOwnProperty(b) && (d[b] = a2[b]);
  if (c && c.defaultProps) for (b in a2 = c.defaultProps, a2) void 0 === d[b] && (d[b] = a2[b]);
  return { $$typeof: k, type: c, key: e, ref: h, props: d, _owner: n.current };
}
reactJsxRuntime_production_min.Fragment = l$1;
reactJsxRuntime_production_min.jsx = q$1;
reactJsxRuntime_production_min.jsxs = q$1;
{
  jsxRuntime.exports = reactJsxRuntime_production_min;
}
var jsxRuntimeExports = jsxRuntime.exports;
var reactDom = { exports: {} };
var reactDom_production_min = {};
var scheduler = { exports: {} };
var scheduler_production_min = {};
/**
 * @license React
 * scheduler.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
(function(exports) {
  function f2(a2, b) {
    var c = a2.length;
    a2.push(b);
    a: for (; 0 < c; ) {
      var d = c - 1 >>> 1, e = a2[d];
      if (0 < g2(e, b)) a2[d] = b, a2[c] = e, c = d;
      else break a;
    }
  }
  function h(a2) {
    return 0 === a2.length ? null : a2[0];
  }
  function k2(a2) {
    if (0 === a2.length) return null;
    var b = a2[0], c = a2.pop();
    if (c !== b) {
      a2[0] = c;
      a: for (var d = 0, e = a2.length, w2 = e >>> 1; d < w2; ) {
        var m2 = 2 * (d + 1) - 1, C2 = a2[m2], n2 = m2 + 1, x2 = a2[n2];
        if (0 > g2(C2, c)) n2 < e && 0 > g2(x2, C2) ? (a2[d] = x2, a2[n2] = c, d = n2) : (a2[d] = C2, a2[m2] = c, d = m2);
        else if (n2 < e && 0 > g2(x2, c)) a2[d] = x2, a2[n2] = c, d = n2;
        else break a;
      }
    }
    return b;
  }
  function g2(a2, b) {
    var c = a2.sortIndex - b.sortIndex;
    return 0 !== c ? c : a2.id - b.id;
  }
  if ("object" === typeof performance && "function" === typeof performance.now) {
    var l2 = performance;
    exports.unstable_now = function() {
      return l2.now();
    };
  } else {
    var p2 = Date, q2 = p2.now();
    exports.unstable_now = function() {
      return p2.now() - q2;
    };
  }
  var r2 = [], t2 = [], u2 = 1, v2 = null, y2 = 3, z2 = false, A2 = false, B2 = false, D2 = "function" === typeof setTimeout ? setTimeout : null, E2 = "function" === typeof clearTimeout ? clearTimeout : null, F2 = "undefined" !== typeof setImmediate ? setImmediate : null;
  "undefined" !== typeof navigator && void 0 !== navigator.scheduling && void 0 !== navigator.scheduling.isInputPending && navigator.scheduling.isInputPending.bind(navigator.scheduling);
  function G2(a2) {
    for (var b = h(t2); null !== b; ) {
      if (null === b.callback) k2(t2);
      else if (b.startTime <= a2) k2(t2), b.sortIndex = b.expirationTime, f2(r2, b);
      else break;
      b = h(t2);
    }
  }
  function H2(a2) {
    B2 = false;
    G2(a2);
    if (!A2) if (null !== h(r2)) A2 = true, I2(J2);
    else {
      var b = h(t2);
      null !== b && K2(H2, b.startTime - a2);
    }
  }
  function J2(a2, b) {
    A2 = false;
    B2 && (B2 = false, E2(L2), L2 = -1);
    z2 = true;
    var c = y2;
    try {
      G2(b);
      for (v2 = h(r2); null !== v2 && (!(v2.expirationTime > b) || a2 && !M2()); ) {
        var d = v2.callback;
        if ("function" === typeof d) {
          v2.callback = null;
          y2 = v2.priorityLevel;
          var e = d(v2.expirationTime <= b);
          b = exports.unstable_now();
          "function" === typeof e ? v2.callback = e : v2 === h(r2) && k2(r2);
          G2(b);
        } else k2(r2);
        v2 = h(r2);
      }
      if (null !== v2) var w2 = true;
      else {
        var m2 = h(t2);
        null !== m2 && K2(H2, m2.startTime - b);
        w2 = false;
      }
      return w2;
    } finally {
      v2 = null, y2 = c, z2 = false;
    }
  }
  var N2 = false, O2 = null, L2 = -1, P2 = 5, Q2 = -1;
  function M2() {
    return exports.unstable_now() - Q2 < P2 ? false : true;
  }
  function R2() {
    if (null !== O2) {
      var a2 = exports.unstable_now();
      Q2 = a2;
      var b = true;
      try {
        b = O2(true, a2);
      } finally {
        b ? S2() : (N2 = false, O2 = null);
      }
    } else N2 = false;
  }
  var S2;
  if ("function" === typeof F2) S2 = function() {
    F2(R2);
  };
  else if ("undefined" !== typeof MessageChannel) {
    var T2 = new MessageChannel(), U2 = T2.port2;
    T2.port1.onmessage = R2;
    S2 = function() {
      U2.postMessage(null);
    };
  } else S2 = function() {
    D2(R2, 0);
  };
  function I2(a2) {
    O2 = a2;
    N2 || (N2 = true, S2());
  }
  function K2(a2, b) {
    L2 = D2(function() {
      a2(exports.unstable_now());
    }, b);
  }
  exports.unstable_IdlePriority = 5;
  exports.unstable_ImmediatePriority = 1;
  exports.unstable_LowPriority = 4;
  exports.unstable_NormalPriority = 3;
  exports.unstable_Profiling = null;
  exports.unstable_UserBlockingPriority = 2;
  exports.unstable_cancelCallback = function(a2) {
    a2.callback = null;
  };
  exports.unstable_continueExecution = function() {
    A2 || z2 || (A2 = true, I2(J2));
  };
  exports.unstable_forceFrameRate = function(a2) {
    0 > a2 || 125 < a2 ? console.error("forceFrameRate takes a positive int between 0 and 125, forcing frame rates higher than 125 fps is not supported") : P2 = 0 < a2 ? Math.floor(1e3 / a2) : 5;
  };
  exports.unstable_getCurrentPriorityLevel = function() {
    return y2;
  };
  exports.unstable_getFirstCallbackNode = function() {
    return h(r2);
  };
  exports.unstable_next = function(a2) {
    switch (y2) {
      case 1:
      case 2:
      case 3:
        var b = 3;
        break;
      default:
        b = y2;
    }
    var c = y2;
    y2 = b;
    try {
      return a2();
    } finally {
      y2 = c;
    }
  };
  exports.unstable_pauseExecution = function() {
  };
  exports.unstable_requestPaint = function() {
  };
  exports.unstable_runWithPriority = function(a2, b) {
    switch (a2) {
      case 1:
      case 2:
      case 3:
      case 4:
      case 5:
        break;
      default:
        a2 = 3;
    }
    var c = y2;
    y2 = a2;
    try {
      return b();
    } finally {
      y2 = c;
    }
  };
  exports.unstable_scheduleCallback = function(a2, b, c) {
    var d = exports.unstable_now();
    "object" === typeof c && null !== c ? (c = c.delay, c = "number" === typeof c && 0 < c ? d + c : d) : c = d;
    switch (a2) {
      case 1:
        var e = -1;
        break;
      case 2:
        e = 250;
        break;
      case 5:
        e = 1073741823;
        break;
      case 4:
        e = 1e4;
        break;
      default:
        e = 5e3;
    }
    e = c + e;
    a2 = { id: u2++, callback: b, priorityLevel: a2, startTime: c, expirationTime: e, sortIndex: -1 };
    c > d ? (a2.sortIndex = c, f2(t2, a2), null === h(r2) && a2 === h(t2) && (B2 ? (E2(L2), L2 = -1) : B2 = true, K2(H2, c - d))) : (a2.sortIndex = e, f2(r2, a2), A2 || z2 || (A2 = true, I2(J2)));
    return a2;
  };
  exports.unstable_shouldYield = M2;
  exports.unstable_wrapCallback = function(a2) {
    var b = y2;
    return function() {
      var c = y2;
      y2 = b;
      try {
        return a2.apply(this, arguments);
      } finally {
        y2 = c;
      }
    };
  };
})(scheduler_production_min);
{
  scheduler.exports = scheduler_production_min;
}
var schedulerExports = scheduler.exports;
/**
 * @license React
 * react-dom.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
var aa = reactExports, ca = schedulerExports;
function p$1(a2) {
  for (var b = "https://reactjs.org/docs/error-decoder.html?invariant=" + a2, c = 1; c < arguments.length; c++) b += "&args[]=" + encodeURIComponent(arguments[c]);
  return "Minified React error #" + a2 + "; visit " + b + " for the full message or use the non-minified dev environment for full errors and additional helpful warnings.";
}
var da = /* @__PURE__ */ new Set(), ea = {};
function fa(a2, b) {
  ha(a2, b);
  ha(a2 + "Capture", b);
}
function ha(a2, b) {
  ea[a2] = b;
  for (a2 = 0; a2 < b.length; a2++) da.add(b[a2]);
}
var ia = !("undefined" === typeof window || "undefined" === typeof window.document || "undefined" === typeof window.document.createElement), ja = Object.prototype.hasOwnProperty, ka = /^[:A-Z_a-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD][:A-Z_a-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD\-.0-9\u00B7\u0300-\u036F\u203F-\u2040]*$/, la = {}, ma = {};
function oa(a2) {
  if (ja.call(ma, a2)) return true;
  if (ja.call(la, a2)) return false;
  if (ka.test(a2)) return ma[a2] = true;
  la[a2] = true;
  return false;
}
function pa(a2, b, c, d) {
  if (null !== c && 0 === c.type) return false;
  switch (typeof b) {
    case "function":
    case "symbol":
      return true;
    case "boolean":
      if (d) return false;
      if (null !== c) return !c.acceptsBooleans;
      a2 = a2.toLowerCase().slice(0, 5);
      return "data-" !== a2 && "aria-" !== a2;
    default:
      return false;
  }
}
function qa(a2, b, c, d) {
  if (null === b || "undefined" === typeof b || pa(a2, b, c, d)) return true;
  if (d) return false;
  if (null !== c) switch (c.type) {
    case 3:
      return !b;
    case 4:
      return false === b;
    case 5:
      return isNaN(b);
    case 6:
      return isNaN(b) || 1 > b;
  }
  return false;
}
function v(a2, b, c, d, e, f2, g2) {
  this.acceptsBooleans = 2 === b || 3 === b || 4 === b;
  this.attributeName = d;
  this.attributeNamespace = e;
  this.mustUseProperty = c;
  this.propertyName = a2;
  this.type = b;
  this.sanitizeURL = f2;
  this.removeEmptyString = g2;
}
var z = {};
"children dangerouslySetInnerHTML defaultValue defaultChecked innerHTML suppressContentEditableWarning suppressHydrationWarning style".split(" ").forEach(function(a2) {
  z[a2] = new v(a2, 0, false, a2, null, false, false);
});
[["acceptCharset", "accept-charset"], ["className", "class"], ["htmlFor", "for"], ["httpEquiv", "http-equiv"]].forEach(function(a2) {
  var b = a2[0];
  z[b] = new v(b, 1, false, a2[1], null, false, false);
});
["contentEditable", "draggable", "spellCheck", "value"].forEach(function(a2) {
  z[a2] = new v(a2, 2, false, a2.toLowerCase(), null, false, false);
});
["autoReverse", "externalResourcesRequired", "focusable", "preserveAlpha"].forEach(function(a2) {
  z[a2] = new v(a2, 2, false, a2, null, false, false);
});
"allowFullScreen async autoFocus autoPlay controls default defer disabled disablePictureInPicture disableRemotePlayback formNoValidate hidden loop noModule noValidate open playsInline readOnly required reversed scoped seamless itemScope".split(" ").forEach(function(a2) {
  z[a2] = new v(a2, 3, false, a2.toLowerCase(), null, false, false);
});
["checked", "multiple", "muted", "selected"].forEach(function(a2) {
  z[a2] = new v(a2, 3, true, a2, null, false, false);
});
["capture", "download"].forEach(function(a2) {
  z[a2] = new v(a2, 4, false, a2, null, false, false);
});
["cols", "rows", "size", "span"].forEach(function(a2) {
  z[a2] = new v(a2, 6, false, a2, null, false, false);
});
["rowSpan", "start"].forEach(function(a2) {
  z[a2] = new v(a2, 5, false, a2.toLowerCase(), null, false, false);
});
var ra = /[\-:]([a-z])/g;
function sa(a2) {
  return a2[1].toUpperCase();
}
"accent-height alignment-baseline arabic-form baseline-shift cap-height clip-path clip-rule color-interpolation color-interpolation-filters color-profile color-rendering dominant-baseline enable-background fill-opacity fill-rule flood-color flood-opacity font-family font-size font-size-adjust font-stretch font-style font-variant font-weight glyph-name glyph-orientation-horizontal glyph-orientation-vertical horiz-adv-x horiz-origin-x image-rendering letter-spacing lighting-color marker-end marker-mid marker-start overline-position overline-thickness paint-order panose-1 pointer-events rendering-intent shape-rendering stop-color stop-opacity strikethrough-position strikethrough-thickness stroke-dasharray stroke-dashoffset stroke-linecap stroke-linejoin stroke-miterlimit stroke-opacity stroke-width text-anchor text-decoration text-rendering underline-position underline-thickness unicode-bidi unicode-range units-per-em v-alphabetic v-hanging v-ideographic v-mathematical vector-effect vert-adv-y vert-origin-x vert-origin-y word-spacing writing-mode xmlns:xlink x-height".split(" ").forEach(function(a2) {
  var b = a2.replace(
    ra,
    sa
  );
  z[b] = new v(b, 1, false, a2, null, false, false);
});
"xlink:actuate xlink:arcrole xlink:role xlink:show xlink:title xlink:type".split(" ").forEach(function(a2) {
  var b = a2.replace(ra, sa);
  z[b] = new v(b, 1, false, a2, "http://www.w3.org/1999/xlink", false, false);
});
["xml:base", "xml:lang", "xml:space"].forEach(function(a2) {
  var b = a2.replace(ra, sa);
  z[b] = new v(b, 1, false, a2, "http://www.w3.org/XML/1998/namespace", false, false);
});
["tabIndex", "crossOrigin"].forEach(function(a2) {
  z[a2] = new v(a2, 1, false, a2.toLowerCase(), null, false, false);
});
z.xlinkHref = new v("xlinkHref", 1, false, "xlink:href", "http://www.w3.org/1999/xlink", true, false);
["src", "href", "action", "formAction"].forEach(function(a2) {
  z[a2] = new v(a2, 1, false, a2.toLowerCase(), null, true, true);
});
function ta(a2, b, c, d) {
  var e = z.hasOwnProperty(b) ? z[b] : null;
  if (null !== e ? 0 !== e.type : d || !(2 < b.length) || "o" !== b[0] && "O" !== b[0] || "n" !== b[1] && "N" !== b[1]) qa(b, c, e, d) && (c = null), d || null === e ? oa(b) && (null === c ? a2.removeAttribute(b) : a2.setAttribute(b, "" + c)) : e.mustUseProperty ? a2[e.propertyName] = null === c ? 3 === e.type ? false : "" : c : (b = e.attributeName, d = e.attributeNamespace, null === c ? a2.removeAttribute(b) : (e = e.type, c = 3 === e || 4 === e && true === c ? "" : "" + c, d ? a2.setAttributeNS(d, b, c) : a2.setAttribute(b, c)));
}
var ua = aa.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED, va = Symbol.for("react.element"), wa = Symbol.for("react.portal"), ya = Symbol.for("react.fragment"), za = Symbol.for("react.strict_mode"), Aa = Symbol.for("react.profiler"), Ba = Symbol.for("react.provider"), Ca = Symbol.for("react.context"), Da = Symbol.for("react.forward_ref"), Ea = Symbol.for("react.suspense"), Fa = Symbol.for("react.suspense_list"), Ga = Symbol.for("react.memo"), Ha = Symbol.for("react.lazy");
var Ia = Symbol.for("react.offscreen");
var Ja = Symbol.iterator;
function Ka(a2) {
  if (null === a2 || "object" !== typeof a2) return null;
  a2 = Ja && a2[Ja] || a2["@@iterator"];
  return "function" === typeof a2 ? a2 : null;
}
var A = Object.assign, La;
function Ma(a2) {
  if (void 0 === La) try {
    throw Error();
  } catch (c) {
    var b = c.stack.trim().match(/\n( *(at )?)/);
    La = b && b[1] || "";
  }
  return "\n" + La + a2;
}
var Na = false;
function Oa(a2, b) {
  if (!a2 || Na) return "";
  Na = true;
  var c = Error.prepareStackTrace;
  Error.prepareStackTrace = void 0;
  try {
    if (b) if (b = function() {
      throw Error();
    }, Object.defineProperty(b.prototype, "props", { set: function() {
      throw Error();
    } }), "object" === typeof Reflect && Reflect.construct) {
      try {
        Reflect.construct(b, []);
      } catch (l2) {
        var d = l2;
      }
      Reflect.construct(a2, [], b);
    } else {
      try {
        b.call();
      } catch (l2) {
        d = l2;
      }
      a2.call(b.prototype);
    }
    else {
      try {
        throw Error();
      } catch (l2) {
        d = l2;
      }
      a2();
    }
  } catch (l2) {
    if (l2 && d && "string" === typeof l2.stack) {
      for (var e = l2.stack.split("\n"), f2 = d.stack.split("\n"), g2 = e.length - 1, h = f2.length - 1; 1 <= g2 && 0 <= h && e[g2] !== f2[h]; ) h--;
      for (; 1 <= g2 && 0 <= h; g2--, h--) if (e[g2] !== f2[h]) {
        if (1 !== g2 || 1 !== h) {
          do
            if (g2--, h--, 0 > h || e[g2] !== f2[h]) {
              var k2 = "\n" + e[g2].replace(" at new ", " at ");
              a2.displayName && k2.includes("<anonymous>") && (k2 = k2.replace("<anonymous>", a2.displayName));
              return k2;
            }
          while (1 <= g2 && 0 <= h);
        }
        break;
      }
    }
  } finally {
    Na = false, Error.prepareStackTrace = c;
  }
  return (a2 = a2 ? a2.displayName || a2.name : "") ? Ma(a2) : "";
}
function Pa(a2) {
  switch (a2.tag) {
    case 5:
      return Ma(a2.type);
    case 16:
      return Ma("Lazy");
    case 13:
      return Ma("Suspense");
    case 19:
      return Ma("SuspenseList");
    case 0:
    case 2:
    case 15:
      return a2 = Oa(a2.type, false), a2;
    case 11:
      return a2 = Oa(a2.type.render, false), a2;
    case 1:
      return a2 = Oa(a2.type, true), a2;
    default:
      return "";
  }
}
function Qa(a2) {
  if (null == a2) return null;
  if ("function" === typeof a2) return a2.displayName || a2.name || null;
  if ("string" === typeof a2) return a2;
  switch (a2) {
    case ya:
      return "Fragment";
    case wa:
      return "Portal";
    case Aa:
      return "Profiler";
    case za:
      return "StrictMode";
    case Ea:
      return "Suspense";
    case Fa:
      return "SuspenseList";
  }
  if ("object" === typeof a2) switch (a2.$$typeof) {
    case Ca:
      return (a2.displayName || "Context") + ".Consumer";
    case Ba:
      return (a2._context.displayName || "Context") + ".Provider";
    case Da:
      var b = a2.render;
      a2 = a2.displayName;
      a2 || (a2 = b.displayName || b.name || "", a2 = "" !== a2 ? "ForwardRef(" + a2 + ")" : "ForwardRef");
      return a2;
    case Ga:
      return b = a2.displayName || null, null !== b ? b : Qa(a2.type) || "Memo";
    case Ha:
      b = a2._payload;
      a2 = a2._init;
      try {
        return Qa(a2(b));
      } catch (c) {
      }
  }
  return null;
}
function Ra(a2) {
  var b = a2.type;
  switch (a2.tag) {
    case 24:
      return "Cache";
    case 9:
      return (b.displayName || "Context") + ".Consumer";
    case 10:
      return (b._context.displayName || "Context") + ".Provider";
    case 18:
      return "DehydratedFragment";
    case 11:
      return a2 = b.render, a2 = a2.displayName || a2.name || "", b.displayName || ("" !== a2 ? "ForwardRef(" + a2 + ")" : "ForwardRef");
    case 7:
      return "Fragment";
    case 5:
      return b;
    case 4:
      return "Portal";
    case 3:
      return "Root";
    case 6:
      return "Text";
    case 16:
      return Qa(b);
    case 8:
      return b === za ? "StrictMode" : "Mode";
    case 22:
      return "Offscreen";
    case 12:
      return "Profiler";
    case 21:
      return "Scope";
    case 13:
      return "Suspense";
    case 19:
      return "SuspenseList";
    case 25:
      return "TracingMarker";
    case 1:
    case 0:
    case 17:
    case 2:
    case 14:
    case 15:
      if ("function" === typeof b) return b.displayName || b.name || null;
      if ("string" === typeof b) return b;
  }
  return null;
}
function Sa(a2) {
  switch (typeof a2) {
    case "boolean":
    case "number":
    case "string":
    case "undefined":
      return a2;
    case "object":
      return a2;
    default:
      return "";
  }
}
function Ta(a2) {
  var b = a2.type;
  return (a2 = a2.nodeName) && "input" === a2.toLowerCase() && ("checkbox" === b || "radio" === b);
}
function Ua(a2) {
  var b = Ta(a2) ? "checked" : "value", c = Object.getOwnPropertyDescriptor(a2.constructor.prototype, b), d = "" + a2[b];
  if (!a2.hasOwnProperty(b) && "undefined" !== typeof c && "function" === typeof c.get && "function" === typeof c.set) {
    var e = c.get, f2 = c.set;
    Object.defineProperty(a2, b, { configurable: true, get: function() {
      return e.call(this);
    }, set: function(a3) {
      d = "" + a3;
      f2.call(this, a3);
    } });
    Object.defineProperty(a2, b, { enumerable: c.enumerable });
    return { getValue: function() {
      return d;
    }, setValue: function(a3) {
      d = "" + a3;
    }, stopTracking: function() {
      a2._valueTracker = null;
      delete a2[b];
    } };
  }
}
function Va(a2) {
  a2._valueTracker || (a2._valueTracker = Ua(a2));
}
function Wa(a2) {
  if (!a2) return false;
  var b = a2._valueTracker;
  if (!b) return true;
  var c = b.getValue();
  var d = "";
  a2 && (d = Ta(a2) ? a2.checked ? "true" : "false" : a2.value);
  a2 = d;
  return a2 !== c ? (b.setValue(a2), true) : false;
}
function Xa(a2) {
  a2 = a2 || ("undefined" !== typeof document ? document : void 0);
  if ("undefined" === typeof a2) return null;
  try {
    return a2.activeElement || a2.body;
  } catch (b) {
    return a2.body;
  }
}
function Ya(a2, b) {
  var c = b.checked;
  return A({}, b, { defaultChecked: void 0, defaultValue: void 0, value: void 0, checked: null != c ? c : a2._wrapperState.initialChecked });
}
function Za(a2, b) {
  var c = null == b.defaultValue ? "" : b.defaultValue, d = null != b.checked ? b.checked : b.defaultChecked;
  c = Sa(null != b.value ? b.value : c);
  a2._wrapperState = { initialChecked: d, initialValue: c, controlled: "checkbox" === b.type || "radio" === b.type ? null != b.checked : null != b.value };
}
function ab(a2, b) {
  b = b.checked;
  null != b && ta(a2, "checked", b, false);
}
function bb(a2, b) {
  ab(a2, b);
  var c = Sa(b.value), d = b.type;
  if (null != c) if ("number" === d) {
    if (0 === c && "" === a2.value || a2.value != c) a2.value = "" + c;
  } else a2.value !== "" + c && (a2.value = "" + c);
  else if ("submit" === d || "reset" === d) {
    a2.removeAttribute("value");
    return;
  }
  b.hasOwnProperty("value") ? cb(a2, b.type, c) : b.hasOwnProperty("defaultValue") && cb(a2, b.type, Sa(b.defaultValue));
  null == b.checked && null != b.defaultChecked && (a2.defaultChecked = !!b.defaultChecked);
}
function db(a2, b, c) {
  if (b.hasOwnProperty("value") || b.hasOwnProperty("defaultValue")) {
    var d = b.type;
    if (!("submit" !== d && "reset" !== d || void 0 !== b.value && null !== b.value)) return;
    b = "" + a2._wrapperState.initialValue;
    c || b === a2.value || (a2.value = b);
    a2.defaultValue = b;
  }
  c = a2.name;
  "" !== c && (a2.name = "");
  a2.defaultChecked = !!a2._wrapperState.initialChecked;
  "" !== c && (a2.name = c);
}
function cb(a2, b, c) {
  if ("number" !== b || Xa(a2.ownerDocument) !== a2) null == c ? a2.defaultValue = "" + a2._wrapperState.initialValue : a2.defaultValue !== "" + c && (a2.defaultValue = "" + c);
}
var eb = Array.isArray;
function fb(a2, b, c, d) {
  a2 = a2.options;
  if (b) {
    b = {};
    for (var e = 0; e < c.length; e++) b["$" + c[e]] = true;
    for (c = 0; c < a2.length; c++) e = b.hasOwnProperty("$" + a2[c].value), a2[c].selected !== e && (a2[c].selected = e), e && d && (a2[c].defaultSelected = true);
  } else {
    c = "" + Sa(c);
    b = null;
    for (e = 0; e < a2.length; e++) {
      if (a2[e].value === c) {
        a2[e].selected = true;
        d && (a2[e].defaultSelected = true);
        return;
      }
      null !== b || a2[e].disabled || (b = a2[e]);
    }
    null !== b && (b.selected = true);
  }
}
function gb(a2, b) {
  if (null != b.dangerouslySetInnerHTML) throw Error(p$1(91));
  return A({}, b, { value: void 0, defaultValue: void 0, children: "" + a2._wrapperState.initialValue });
}
function hb(a2, b) {
  var c = b.value;
  if (null == c) {
    c = b.children;
    b = b.defaultValue;
    if (null != c) {
      if (null != b) throw Error(p$1(92));
      if (eb(c)) {
        if (1 < c.length) throw Error(p$1(93));
        c = c[0];
      }
      b = c;
    }
    null == b && (b = "");
    c = b;
  }
  a2._wrapperState = { initialValue: Sa(c) };
}
function ib(a2, b) {
  var c = Sa(b.value), d = Sa(b.defaultValue);
  null != c && (c = "" + c, c !== a2.value && (a2.value = c), null == b.defaultValue && a2.defaultValue !== c && (a2.defaultValue = c));
  null != d && (a2.defaultValue = "" + d);
}
function jb(a2) {
  var b = a2.textContent;
  b === a2._wrapperState.initialValue && "" !== b && null !== b && (a2.value = b);
}
function kb(a2) {
  switch (a2) {
    case "svg":
      return "http://www.w3.org/2000/svg";
    case "math":
      return "http://www.w3.org/1998/Math/MathML";
    default:
      return "http://www.w3.org/1999/xhtml";
  }
}
function lb(a2, b) {
  return null == a2 || "http://www.w3.org/1999/xhtml" === a2 ? kb(b) : "http://www.w3.org/2000/svg" === a2 && "foreignObject" === b ? "http://www.w3.org/1999/xhtml" : a2;
}
var mb, nb = function(a2) {
  return "undefined" !== typeof MSApp && MSApp.execUnsafeLocalFunction ? function(b, c, d, e) {
    MSApp.execUnsafeLocalFunction(function() {
      return a2(b, c, d, e);
    });
  } : a2;
}(function(a2, b) {
  if ("http://www.w3.org/2000/svg" !== a2.namespaceURI || "innerHTML" in a2) a2.innerHTML = b;
  else {
    mb = mb || document.createElement("div");
    mb.innerHTML = "<svg>" + b.valueOf().toString() + "</svg>";
    for (b = mb.firstChild; a2.firstChild; ) a2.removeChild(a2.firstChild);
    for (; b.firstChild; ) a2.appendChild(b.firstChild);
  }
});
function ob(a2, b) {
  if (b) {
    var c = a2.firstChild;
    if (c && c === a2.lastChild && 3 === c.nodeType) {
      c.nodeValue = b;
      return;
    }
  }
  a2.textContent = b;
}
var pb = {
  animationIterationCount: true,
  aspectRatio: true,
  borderImageOutset: true,
  borderImageSlice: true,
  borderImageWidth: true,
  boxFlex: true,
  boxFlexGroup: true,
  boxOrdinalGroup: true,
  columnCount: true,
  columns: true,
  flex: true,
  flexGrow: true,
  flexPositive: true,
  flexShrink: true,
  flexNegative: true,
  flexOrder: true,
  gridArea: true,
  gridRow: true,
  gridRowEnd: true,
  gridRowSpan: true,
  gridRowStart: true,
  gridColumn: true,
  gridColumnEnd: true,
  gridColumnSpan: true,
  gridColumnStart: true,
  fontWeight: true,
  lineClamp: true,
  lineHeight: true,
  opacity: true,
  order: true,
  orphans: true,
  tabSize: true,
  widows: true,
  zIndex: true,
  zoom: true,
  fillOpacity: true,
  floodOpacity: true,
  stopOpacity: true,
  strokeDasharray: true,
  strokeDashoffset: true,
  strokeMiterlimit: true,
  strokeOpacity: true,
  strokeWidth: true
}, qb = ["Webkit", "ms", "Moz", "O"];
Object.keys(pb).forEach(function(a2) {
  qb.forEach(function(b) {
    b = b + a2.charAt(0).toUpperCase() + a2.substring(1);
    pb[b] = pb[a2];
  });
});
function rb(a2, b, c) {
  return null == b || "boolean" === typeof b || "" === b ? "" : c || "number" !== typeof b || 0 === b || pb.hasOwnProperty(a2) && pb[a2] ? ("" + b).trim() : b + "px";
}
function sb(a2, b) {
  a2 = a2.style;
  for (var c in b) if (b.hasOwnProperty(c)) {
    var d = 0 === c.indexOf("--"), e = rb(c, b[c], d);
    "float" === c && (c = "cssFloat");
    d ? a2.setProperty(c, e) : a2[c] = e;
  }
}
var tb = A({ menuitem: true }, { area: true, base: true, br: true, col: true, embed: true, hr: true, img: true, input: true, keygen: true, link: true, meta: true, param: true, source: true, track: true, wbr: true });
function ub(a2, b) {
  if (b) {
    if (tb[a2] && (null != b.children || null != b.dangerouslySetInnerHTML)) throw Error(p$1(137, a2));
    if (null != b.dangerouslySetInnerHTML) {
      if (null != b.children) throw Error(p$1(60));
      if ("object" !== typeof b.dangerouslySetInnerHTML || !("__html" in b.dangerouslySetInnerHTML)) throw Error(p$1(61));
    }
    if (null != b.style && "object" !== typeof b.style) throw Error(p$1(62));
  }
}
function vb(a2, b) {
  if (-1 === a2.indexOf("-")) return "string" === typeof b.is;
  switch (a2) {
    case "annotation-xml":
    case "color-profile":
    case "font-face":
    case "font-face-src":
    case "font-face-uri":
    case "font-face-format":
    case "font-face-name":
    case "missing-glyph":
      return false;
    default:
      return true;
  }
}
var wb = null;
function xb(a2) {
  a2 = a2.target || a2.srcElement || window;
  a2.correspondingUseElement && (a2 = a2.correspondingUseElement);
  return 3 === a2.nodeType ? a2.parentNode : a2;
}
var yb = null, zb = null, Ab = null;
function Bb(a2) {
  if (a2 = Cb(a2)) {
    if ("function" !== typeof yb) throw Error(p$1(280));
    var b = a2.stateNode;
    b && (b = Db(b), yb(a2.stateNode, a2.type, b));
  }
}
function Eb(a2) {
  zb ? Ab ? Ab.push(a2) : Ab = [a2] : zb = a2;
}
function Fb() {
  if (zb) {
    var a2 = zb, b = Ab;
    Ab = zb = null;
    Bb(a2);
    if (b) for (a2 = 0; a2 < b.length; a2++) Bb(b[a2]);
  }
}
function Gb(a2, b) {
  return a2(b);
}
function Hb() {
}
var Ib = false;
function Jb(a2, b, c) {
  if (Ib) return a2(b, c);
  Ib = true;
  try {
    return Gb(a2, b, c);
  } finally {
    if (Ib = false, null !== zb || null !== Ab) Hb(), Fb();
  }
}
function Kb(a2, b) {
  var c = a2.stateNode;
  if (null === c) return null;
  var d = Db(c);
  if (null === d) return null;
  c = d[b];
  a: switch (b) {
    case "onClick":
    case "onClickCapture":
    case "onDoubleClick":
    case "onDoubleClickCapture":
    case "onMouseDown":
    case "onMouseDownCapture":
    case "onMouseMove":
    case "onMouseMoveCapture":
    case "onMouseUp":
    case "onMouseUpCapture":
    case "onMouseEnter":
      (d = !d.disabled) || (a2 = a2.type, d = !("button" === a2 || "input" === a2 || "select" === a2 || "textarea" === a2));
      a2 = !d;
      break a;
    default:
      a2 = false;
  }
  if (a2) return null;
  if (c && "function" !== typeof c) throw Error(p$1(231, b, typeof c));
  return c;
}
var Lb = false;
if (ia) try {
  var Mb = {};
  Object.defineProperty(Mb, "passive", { get: function() {
    Lb = true;
  } });
  window.addEventListener("test", Mb, Mb);
  window.removeEventListener("test", Mb, Mb);
} catch (a2) {
  Lb = false;
}
function Nb(a2, b, c, d, e, f2, g2, h, k2) {
  var l2 = Array.prototype.slice.call(arguments, 3);
  try {
    b.apply(c, l2);
  } catch (m2) {
    this.onError(m2);
  }
}
var Ob = false, Pb = null, Qb = false, Rb = null, Sb = { onError: function(a2) {
  Ob = true;
  Pb = a2;
} };
function Tb(a2, b, c, d, e, f2, g2, h, k2) {
  Ob = false;
  Pb = null;
  Nb.apply(Sb, arguments);
}
function Ub(a2, b, c, d, e, f2, g2, h, k2) {
  Tb.apply(this, arguments);
  if (Ob) {
    if (Ob) {
      var l2 = Pb;
      Ob = false;
      Pb = null;
    } else throw Error(p$1(198));
    Qb || (Qb = true, Rb = l2);
  }
}
function Vb(a2) {
  var b = a2, c = a2;
  if (a2.alternate) for (; b.return; ) b = b.return;
  else {
    a2 = b;
    do
      b = a2, 0 !== (b.flags & 4098) && (c = b.return), a2 = b.return;
    while (a2);
  }
  return 3 === b.tag ? c : null;
}
function Wb(a2) {
  if (13 === a2.tag) {
    var b = a2.memoizedState;
    null === b && (a2 = a2.alternate, null !== a2 && (b = a2.memoizedState));
    if (null !== b) return b.dehydrated;
  }
  return null;
}
function Xb(a2) {
  if (Vb(a2) !== a2) throw Error(p$1(188));
}
function Yb(a2) {
  var b = a2.alternate;
  if (!b) {
    b = Vb(a2);
    if (null === b) throw Error(p$1(188));
    return b !== a2 ? null : a2;
  }
  for (var c = a2, d = b; ; ) {
    var e = c.return;
    if (null === e) break;
    var f2 = e.alternate;
    if (null === f2) {
      d = e.return;
      if (null !== d) {
        c = d;
        continue;
      }
      break;
    }
    if (e.child === f2.child) {
      for (f2 = e.child; f2; ) {
        if (f2 === c) return Xb(e), a2;
        if (f2 === d) return Xb(e), b;
        f2 = f2.sibling;
      }
      throw Error(p$1(188));
    }
    if (c.return !== d.return) c = e, d = f2;
    else {
      for (var g2 = false, h = e.child; h; ) {
        if (h === c) {
          g2 = true;
          c = e;
          d = f2;
          break;
        }
        if (h === d) {
          g2 = true;
          d = e;
          c = f2;
          break;
        }
        h = h.sibling;
      }
      if (!g2) {
        for (h = f2.child; h; ) {
          if (h === c) {
            g2 = true;
            c = f2;
            d = e;
            break;
          }
          if (h === d) {
            g2 = true;
            d = f2;
            c = e;
            break;
          }
          h = h.sibling;
        }
        if (!g2) throw Error(p$1(189));
      }
    }
    if (c.alternate !== d) throw Error(p$1(190));
  }
  if (3 !== c.tag) throw Error(p$1(188));
  return c.stateNode.current === c ? a2 : b;
}
function Zb(a2) {
  a2 = Yb(a2);
  return null !== a2 ? $b(a2) : null;
}
function $b(a2) {
  if (5 === a2.tag || 6 === a2.tag) return a2;
  for (a2 = a2.child; null !== a2; ) {
    var b = $b(a2);
    if (null !== b) return b;
    a2 = a2.sibling;
  }
  return null;
}
var ac = ca.unstable_scheduleCallback, bc = ca.unstable_cancelCallback, cc = ca.unstable_shouldYield, dc = ca.unstable_requestPaint, B = ca.unstable_now, ec = ca.unstable_getCurrentPriorityLevel, fc = ca.unstable_ImmediatePriority, gc = ca.unstable_UserBlockingPriority, hc = ca.unstable_NormalPriority, ic = ca.unstable_LowPriority, jc = ca.unstable_IdlePriority, kc = null, lc = null;
function mc(a2) {
  if (lc && "function" === typeof lc.onCommitFiberRoot) try {
    lc.onCommitFiberRoot(kc, a2, void 0, 128 === (a2.current.flags & 128));
  } catch (b) {
  }
}
var oc = Math.clz32 ? Math.clz32 : nc, pc = Math.log, qc = Math.LN2;
function nc(a2) {
  a2 >>>= 0;
  return 0 === a2 ? 32 : 31 - (pc(a2) / qc | 0) | 0;
}
var rc = 64, sc = 4194304;
function tc(a2) {
  switch (a2 & -a2) {
    case 1:
      return 1;
    case 2:
      return 2;
    case 4:
      return 4;
    case 8:
      return 8;
    case 16:
      return 16;
    case 32:
      return 32;
    case 64:
    case 128:
    case 256:
    case 512:
    case 1024:
    case 2048:
    case 4096:
    case 8192:
    case 16384:
    case 32768:
    case 65536:
    case 131072:
    case 262144:
    case 524288:
    case 1048576:
    case 2097152:
      return a2 & 4194240;
    case 4194304:
    case 8388608:
    case 16777216:
    case 33554432:
    case 67108864:
      return a2 & 130023424;
    case 134217728:
      return 134217728;
    case 268435456:
      return 268435456;
    case 536870912:
      return 536870912;
    case 1073741824:
      return 1073741824;
    default:
      return a2;
  }
}
function uc(a2, b) {
  var c = a2.pendingLanes;
  if (0 === c) return 0;
  var d = 0, e = a2.suspendedLanes, f2 = a2.pingedLanes, g2 = c & 268435455;
  if (0 !== g2) {
    var h = g2 & ~e;
    0 !== h ? d = tc(h) : (f2 &= g2, 0 !== f2 && (d = tc(f2)));
  } else g2 = c & ~e, 0 !== g2 ? d = tc(g2) : 0 !== f2 && (d = tc(f2));
  if (0 === d) return 0;
  if (0 !== b && b !== d && 0 === (b & e) && (e = d & -d, f2 = b & -b, e >= f2 || 16 === e && 0 !== (f2 & 4194240))) return b;
  0 !== (d & 4) && (d |= c & 16);
  b = a2.entangledLanes;
  if (0 !== b) for (a2 = a2.entanglements, b &= d; 0 < b; ) c = 31 - oc(b), e = 1 << c, d |= a2[c], b &= ~e;
  return d;
}
function vc(a2, b) {
  switch (a2) {
    case 1:
    case 2:
    case 4:
      return b + 250;
    case 8:
    case 16:
    case 32:
    case 64:
    case 128:
    case 256:
    case 512:
    case 1024:
    case 2048:
    case 4096:
    case 8192:
    case 16384:
    case 32768:
    case 65536:
    case 131072:
    case 262144:
    case 524288:
    case 1048576:
    case 2097152:
      return b + 5e3;
    case 4194304:
    case 8388608:
    case 16777216:
    case 33554432:
    case 67108864:
      return -1;
    case 134217728:
    case 268435456:
    case 536870912:
    case 1073741824:
      return -1;
    default:
      return -1;
  }
}
function wc(a2, b) {
  for (var c = a2.suspendedLanes, d = a2.pingedLanes, e = a2.expirationTimes, f2 = a2.pendingLanes; 0 < f2; ) {
    var g2 = 31 - oc(f2), h = 1 << g2, k2 = e[g2];
    if (-1 === k2) {
      if (0 === (h & c) || 0 !== (h & d)) e[g2] = vc(h, b);
    } else k2 <= b && (a2.expiredLanes |= h);
    f2 &= ~h;
  }
}
function xc(a2) {
  a2 = a2.pendingLanes & -1073741825;
  return 0 !== a2 ? a2 : a2 & 1073741824 ? 1073741824 : 0;
}
function yc() {
  var a2 = rc;
  rc <<= 1;
  0 === (rc & 4194240) && (rc = 64);
  return a2;
}
function zc(a2) {
  for (var b = [], c = 0; 31 > c; c++) b.push(a2);
  return b;
}
function Ac(a2, b, c) {
  a2.pendingLanes |= b;
  536870912 !== b && (a2.suspendedLanes = 0, a2.pingedLanes = 0);
  a2 = a2.eventTimes;
  b = 31 - oc(b);
  a2[b] = c;
}
function Bc(a2, b) {
  var c = a2.pendingLanes & ~b;
  a2.pendingLanes = b;
  a2.suspendedLanes = 0;
  a2.pingedLanes = 0;
  a2.expiredLanes &= b;
  a2.mutableReadLanes &= b;
  a2.entangledLanes &= b;
  b = a2.entanglements;
  var d = a2.eventTimes;
  for (a2 = a2.expirationTimes; 0 < c; ) {
    var e = 31 - oc(c), f2 = 1 << e;
    b[e] = 0;
    d[e] = -1;
    a2[e] = -1;
    c &= ~f2;
  }
}
function Cc(a2, b) {
  var c = a2.entangledLanes |= b;
  for (a2 = a2.entanglements; c; ) {
    var d = 31 - oc(c), e = 1 << d;
    e & b | a2[d] & b && (a2[d] |= b);
    c &= ~e;
  }
}
var C = 0;
function Dc(a2) {
  a2 &= -a2;
  return 1 < a2 ? 4 < a2 ? 0 !== (a2 & 268435455) ? 16 : 536870912 : 4 : 1;
}
var Ec, Fc, Gc, Hc, Ic, Jc = false, Kc = [], Lc = null, Mc = null, Nc = null, Oc = /* @__PURE__ */ new Map(), Pc = /* @__PURE__ */ new Map(), Qc = [], Rc = "mousedown mouseup touchcancel touchend touchstart auxclick dblclick pointercancel pointerdown pointerup dragend dragstart drop compositionend compositionstart keydown keypress keyup input textInput copy cut paste click change contextmenu reset submit".split(" ");
function Sc(a2, b) {
  switch (a2) {
    case "focusin":
    case "focusout":
      Lc = null;
      break;
    case "dragenter":
    case "dragleave":
      Mc = null;
      break;
    case "mouseover":
    case "mouseout":
      Nc = null;
      break;
    case "pointerover":
    case "pointerout":
      Oc.delete(b.pointerId);
      break;
    case "gotpointercapture":
    case "lostpointercapture":
      Pc.delete(b.pointerId);
  }
}
function Tc(a2, b, c, d, e, f2) {
  if (null === a2 || a2.nativeEvent !== f2) return a2 = { blockedOn: b, domEventName: c, eventSystemFlags: d, nativeEvent: f2, targetContainers: [e] }, null !== b && (b = Cb(b), null !== b && Fc(b)), a2;
  a2.eventSystemFlags |= d;
  b = a2.targetContainers;
  null !== e && -1 === b.indexOf(e) && b.push(e);
  return a2;
}
function Uc(a2, b, c, d, e) {
  switch (b) {
    case "focusin":
      return Lc = Tc(Lc, a2, b, c, d, e), true;
    case "dragenter":
      return Mc = Tc(Mc, a2, b, c, d, e), true;
    case "mouseover":
      return Nc = Tc(Nc, a2, b, c, d, e), true;
    case "pointerover":
      var f2 = e.pointerId;
      Oc.set(f2, Tc(Oc.get(f2) || null, a2, b, c, d, e));
      return true;
    case "gotpointercapture":
      return f2 = e.pointerId, Pc.set(f2, Tc(Pc.get(f2) || null, a2, b, c, d, e)), true;
  }
  return false;
}
function Vc(a2) {
  var b = Wc(a2.target);
  if (null !== b) {
    var c = Vb(b);
    if (null !== c) {
      if (b = c.tag, 13 === b) {
        if (b = Wb(c), null !== b) {
          a2.blockedOn = b;
          Ic(a2.priority, function() {
            Gc(c);
          });
          return;
        }
      } else if (3 === b && c.stateNode.current.memoizedState.isDehydrated) {
        a2.blockedOn = 3 === c.tag ? c.stateNode.containerInfo : null;
        return;
      }
    }
  }
  a2.blockedOn = null;
}
function Xc(a2) {
  if (null !== a2.blockedOn) return false;
  for (var b = a2.targetContainers; 0 < b.length; ) {
    var c = Yc(a2.domEventName, a2.eventSystemFlags, b[0], a2.nativeEvent);
    if (null === c) {
      c = a2.nativeEvent;
      var d = new c.constructor(c.type, c);
      wb = d;
      c.target.dispatchEvent(d);
      wb = null;
    } else return b = Cb(c), null !== b && Fc(b), a2.blockedOn = c, false;
    b.shift();
  }
  return true;
}
function Zc(a2, b, c) {
  Xc(a2) && c.delete(b);
}
function $c() {
  Jc = false;
  null !== Lc && Xc(Lc) && (Lc = null);
  null !== Mc && Xc(Mc) && (Mc = null);
  null !== Nc && Xc(Nc) && (Nc = null);
  Oc.forEach(Zc);
  Pc.forEach(Zc);
}
function ad(a2, b) {
  a2.blockedOn === b && (a2.blockedOn = null, Jc || (Jc = true, ca.unstable_scheduleCallback(ca.unstable_NormalPriority, $c)));
}
function bd(a2) {
  function b(b2) {
    return ad(b2, a2);
  }
  if (0 < Kc.length) {
    ad(Kc[0], a2);
    for (var c = 1; c < Kc.length; c++) {
      var d = Kc[c];
      d.blockedOn === a2 && (d.blockedOn = null);
    }
  }
  null !== Lc && ad(Lc, a2);
  null !== Mc && ad(Mc, a2);
  null !== Nc && ad(Nc, a2);
  Oc.forEach(b);
  Pc.forEach(b);
  for (c = 0; c < Qc.length; c++) d = Qc[c], d.blockedOn === a2 && (d.blockedOn = null);
  for (; 0 < Qc.length && (c = Qc[0], null === c.blockedOn); ) Vc(c), null === c.blockedOn && Qc.shift();
}
var cd = ua.ReactCurrentBatchConfig, dd = true;
function ed(a2, b, c, d) {
  var e = C, f2 = cd.transition;
  cd.transition = null;
  try {
    C = 1, fd(a2, b, c, d);
  } finally {
    C = e, cd.transition = f2;
  }
}
function gd(a2, b, c, d) {
  var e = C, f2 = cd.transition;
  cd.transition = null;
  try {
    C = 4, fd(a2, b, c, d);
  } finally {
    C = e, cd.transition = f2;
  }
}
function fd(a2, b, c, d) {
  if (dd) {
    var e = Yc(a2, b, c, d);
    if (null === e) hd(a2, b, d, id$1, c), Sc(a2, d);
    else if (Uc(e, a2, b, c, d)) d.stopPropagation();
    else if (Sc(a2, d), b & 4 && -1 < Rc.indexOf(a2)) {
      for (; null !== e; ) {
        var f2 = Cb(e);
        null !== f2 && Ec(f2);
        f2 = Yc(a2, b, c, d);
        null === f2 && hd(a2, b, d, id$1, c);
        if (f2 === e) break;
        e = f2;
      }
      null !== e && d.stopPropagation();
    } else hd(a2, b, d, null, c);
  }
}
var id$1 = null;
function Yc(a2, b, c, d) {
  id$1 = null;
  a2 = xb(d);
  a2 = Wc(a2);
  if (null !== a2) if (b = Vb(a2), null === b) a2 = null;
  else if (c = b.tag, 13 === c) {
    a2 = Wb(b);
    if (null !== a2) return a2;
    a2 = null;
  } else if (3 === c) {
    if (b.stateNode.current.memoizedState.isDehydrated) return 3 === b.tag ? b.stateNode.containerInfo : null;
    a2 = null;
  } else b !== a2 && (a2 = null);
  id$1 = a2;
  return null;
}
function jd(a2) {
  switch (a2) {
    case "cancel":
    case "click":
    case "close":
    case "contextmenu":
    case "copy":
    case "cut":
    case "auxclick":
    case "dblclick":
    case "dragend":
    case "dragstart":
    case "drop":
    case "focusin":
    case "focusout":
    case "input":
    case "invalid":
    case "keydown":
    case "keypress":
    case "keyup":
    case "mousedown":
    case "mouseup":
    case "paste":
    case "pause":
    case "play":
    case "pointercancel":
    case "pointerdown":
    case "pointerup":
    case "ratechange":
    case "reset":
    case "resize":
    case "seeked":
    case "submit":
    case "touchcancel":
    case "touchend":
    case "touchstart":
    case "volumechange":
    case "change":
    case "selectionchange":
    case "textInput":
    case "compositionstart":
    case "compositionend":
    case "compositionupdate":
    case "beforeblur":
    case "afterblur":
    case "beforeinput":
    case "blur":
    case "fullscreenchange":
    case "focus":
    case "hashchange":
    case "popstate":
    case "select":
    case "selectstart":
      return 1;
    case "drag":
    case "dragenter":
    case "dragexit":
    case "dragleave":
    case "dragover":
    case "mousemove":
    case "mouseout":
    case "mouseover":
    case "pointermove":
    case "pointerout":
    case "pointerover":
    case "scroll":
    case "toggle":
    case "touchmove":
    case "wheel":
    case "mouseenter":
    case "mouseleave":
    case "pointerenter":
    case "pointerleave":
      return 4;
    case "message":
      switch (ec()) {
        case fc:
          return 1;
        case gc:
          return 4;
        case hc:
        case ic:
          return 16;
        case jc:
          return 536870912;
        default:
          return 16;
      }
    default:
      return 16;
  }
}
var kd = null, ld = null, md = null;
function nd() {
  if (md) return md;
  var a2, b = ld, c = b.length, d, e = "value" in kd ? kd.value : kd.textContent, f2 = e.length;
  for (a2 = 0; a2 < c && b[a2] === e[a2]; a2++) ;
  var g2 = c - a2;
  for (d = 1; d <= g2 && b[c - d] === e[f2 - d]; d++) ;
  return md = e.slice(a2, 1 < d ? 1 - d : void 0);
}
function od(a2) {
  var b = a2.keyCode;
  "charCode" in a2 ? (a2 = a2.charCode, 0 === a2 && 13 === b && (a2 = 13)) : a2 = b;
  10 === a2 && (a2 = 13);
  return 32 <= a2 || 13 === a2 ? a2 : 0;
}
function pd() {
  return true;
}
function qd() {
  return false;
}
function rd(a2) {
  function b(b2, d, e, f2, g2) {
    this._reactName = b2;
    this._targetInst = e;
    this.type = d;
    this.nativeEvent = f2;
    this.target = g2;
    this.currentTarget = null;
    for (var c in a2) a2.hasOwnProperty(c) && (b2 = a2[c], this[c] = b2 ? b2(f2) : f2[c]);
    this.isDefaultPrevented = (null != f2.defaultPrevented ? f2.defaultPrevented : false === f2.returnValue) ? pd : qd;
    this.isPropagationStopped = qd;
    return this;
  }
  A(b.prototype, { preventDefault: function() {
    this.defaultPrevented = true;
    var a3 = this.nativeEvent;
    a3 && (a3.preventDefault ? a3.preventDefault() : "unknown" !== typeof a3.returnValue && (a3.returnValue = false), this.isDefaultPrevented = pd);
  }, stopPropagation: function() {
    var a3 = this.nativeEvent;
    a3 && (a3.stopPropagation ? a3.stopPropagation() : "unknown" !== typeof a3.cancelBubble && (a3.cancelBubble = true), this.isPropagationStopped = pd);
  }, persist: function() {
  }, isPersistent: pd });
  return b;
}
var sd = { eventPhase: 0, bubbles: 0, cancelable: 0, timeStamp: function(a2) {
  return a2.timeStamp || Date.now();
}, defaultPrevented: 0, isTrusted: 0 }, td = rd(sd), ud = A({}, sd, { view: 0, detail: 0 }), vd = rd(ud), wd, xd, yd, Ad = A({}, ud, { screenX: 0, screenY: 0, clientX: 0, clientY: 0, pageX: 0, pageY: 0, ctrlKey: 0, shiftKey: 0, altKey: 0, metaKey: 0, getModifierState: zd, button: 0, buttons: 0, relatedTarget: function(a2) {
  return void 0 === a2.relatedTarget ? a2.fromElement === a2.srcElement ? a2.toElement : a2.fromElement : a2.relatedTarget;
}, movementX: function(a2) {
  if ("movementX" in a2) return a2.movementX;
  a2 !== yd && (yd && "mousemove" === a2.type ? (wd = a2.screenX - yd.screenX, xd = a2.screenY - yd.screenY) : xd = wd = 0, yd = a2);
  return wd;
}, movementY: function(a2) {
  return "movementY" in a2 ? a2.movementY : xd;
} }), Bd = rd(Ad), Cd = A({}, Ad, { dataTransfer: 0 }), Dd = rd(Cd), Ed = A({}, ud, { relatedTarget: 0 }), Fd = rd(Ed), Gd = A({}, sd, { animationName: 0, elapsedTime: 0, pseudoElement: 0 }), Hd = rd(Gd), Id = A({}, sd, { clipboardData: function(a2) {
  return "clipboardData" in a2 ? a2.clipboardData : window.clipboardData;
} }), Jd = rd(Id), Kd = A({}, sd, { data: 0 }), Ld = rd(Kd), Md = {
  Esc: "Escape",
  Spacebar: " ",
  Left: "ArrowLeft",
  Up: "ArrowUp",
  Right: "ArrowRight",
  Down: "ArrowDown",
  Del: "Delete",
  Win: "OS",
  Menu: "ContextMenu",
  Apps: "ContextMenu",
  Scroll: "ScrollLock",
  MozPrintableKey: "Unidentified"
}, Nd = {
  8: "Backspace",
  9: "Tab",
  12: "Clear",
  13: "Enter",
  16: "Shift",
  17: "Control",
  18: "Alt",
  19: "Pause",
  20: "CapsLock",
  27: "Escape",
  32: " ",
  33: "PageUp",
  34: "PageDown",
  35: "End",
  36: "Home",
  37: "ArrowLeft",
  38: "ArrowUp",
  39: "ArrowRight",
  40: "ArrowDown",
  45: "Insert",
  46: "Delete",
  112: "F1",
  113: "F2",
  114: "F3",
  115: "F4",
  116: "F5",
  117: "F6",
  118: "F7",
  119: "F8",
  120: "F9",
  121: "F10",
  122: "F11",
  123: "F12",
  144: "NumLock",
  145: "ScrollLock",
  224: "Meta"
}, Od = { Alt: "altKey", Control: "ctrlKey", Meta: "metaKey", Shift: "shiftKey" };
function Pd(a2) {
  var b = this.nativeEvent;
  return b.getModifierState ? b.getModifierState(a2) : (a2 = Od[a2]) ? !!b[a2] : false;
}
function zd() {
  return Pd;
}
var Qd = A({}, ud, { key: function(a2) {
  if (a2.key) {
    var b = Md[a2.key] || a2.key;
    if ("Unidentified" !== b) return b;
  }
  return "keypress" === a2.type ? (a2 = od(a2), 13 === a2 ? "Enter" : String.fromCharCode(a2)) : "keydown" === a2.type || "keyup" === a2.type ? Nd[a2.keyCode] || "Unidentified" : "";
}, code: 0, location: 0, ctrlKey: 0, shiftKey: 0, altKey: 0, metaKey: 0, repeat: 0, locale: 0, getModifierState: zd, charCode: function(a2) {
  return "keypress" === a2.type ? od(a2) : 0;
}, keyCode: function(a2) {
  return "keydown" === a2.type || "keyup" === a2.type ? a2.keyCode : 0;
}, which: function(a2) {
  return "keypress" === a2.type ? od(a2) : "keydown" === a2.type || "keyup" === a2.type ? a2.keyCode : 0;
} }), Rd = rd(Qd), Sd = A({}, Ad, { pointerId: 0, width: 0, height: 0, pressure: 0, tangentialPressure: 0, tiltX: 0, tiltY: 0, twist: 0, pointerType: 0, isPrimary: 0 }), Td = rd(Sd), Ud = A({}, ud, { touches: 0, targetTouches: 0, changedTouches: 0, altKey: 0, metaKey: 0, ctrlKey: 0, shiftKey: 0, getModifierState: zd }), Vd = rd(Ud), Wd = A({}, sd, { propertyName: 0, elapsedTime: 0, pseudoElement: 0 }), Xd = rd(Wd), Yd = A({}, Ad, {
  deltaX: function(a2) {
    return "deltaX" in a2 ? a2.deltaX : "wheelDeltaX" in a2 ? -a2.wheelDeltaX : 0;
  },
  deltaY: function(a2) {
    return "deltaY" in a2 ? a2.deltaY : "wheelDeltaY" in a2 ? -a2.wheelDeltaY : "wheelDelta" in a2 ? -a2.wheelDelta : 0;
  },
  deltaZ: 0,
  deltaMode: 0
}), Zd = rd(Yd), $d = [9, 13, 27, 32], ae = ia && "CompositionEvent" in window, be = null;
ia && "documentMode" in document && (be = document.documentMode);
var ce = ia && "TextEvent" in window && !be, de = ia && (!ae || be && 8 < be && 11 >= be), ee = String.fromCharCode(32), fe = false;
function ge(a2, b) {
  switch (a2) {
    case "keyup":
      return -1 !== $d.indexOf(b.keyCode);
    case "keydown":
      return 229 !== b.keyCode;
    case "keypress":
    case "mousedown":
    case "focusout":
      return true;
    default:
      return false;
  }
}
function he(a2) {
  a2 = a2.detail;
  return "object" === typeof a2 && "data" in a2 ? a2.data : null;
}
var ie$1 = false;
function je(a2, b) {
  switch (a2) {
    case "compositionend":
      return he(b);
    case "keypress":
      if (32 !== b.which) return null;
      fe = true;
      return ee;
    case "textInput":
      return a2 = b.data, a2 === ee && fe ? null : a2;
    default:
      return null;
  }
}
function ke(a2, b) {
  if (ie$1) return "compositionend" === a2 || !ae && ge(a2, b) ? (a2 = nd(), md = ld = kd = null, ie$1 = false, a2) : null;
  switch (a2) {
    case "paste":
      return null;
    case "keypress":
      if (!(b.ctrlKey || b.altKey || b.metaKey) || b.ctrlKey && b.altKey) {
        if (b.char && 1 < b.char.length) return b.char;
        if (b.which) return String.fromCharCode(b.which);
      }
      return null;
    case "compositionend":
      return de && "ko" !== b.locale ? null : b.data;
    default:
      return null;
  }
}
var le = { color: true, date: true, datetime: true, "datetime-local": true, email: true, month: true, number: true, password: true, range: true, search: true, tel: true, text: true, time: true, url: true, week: true };
function me(a2) {
  var b = a2 && a2.nodeName && a2.nodeName.toLowerCase();
  return "input" === b ? !!le[a2.type] : "textarea" === b ? true : false;
}
function ne(a2, b, c, d) {
  Eb(d);
  b = oe(b, "onChange");
  0 < b.length && (c = new td("onChange", "change", null, c, d), a2.push({ event: c, listeners: b }));
}
var pe = null, qe = null;
function re(a2) {
  se$1(a2, 0);
}
function te(a2) {
  var b = ue(a2);
  if (Wa(b)) return a2;
}
function ve(a2, b) {
  if ("change" === a2) return b;
}
var we = false;
if (ia) {
  var xe;
  if (ia) {
    var ye = "oninput" in document;
    if (!ye) {
      var ze = document.createElement("div");
      ze.setAttribute("oninput", "return;");
      ye = "function" === typeof ze.oninput;
    }
    xe = ye;
  } else xe = false;
  we = xe && (!document.documentMode || 9 < document.documentMode);
}
function Ae() {
  pe && (pe.detachEvent("onpropertychange", Be), qe = pe = null);
}
function Be(a2) {
  if ("value" === a2.propertyName && te(qe)) {
    var b = [];
    ne(b, qe, a2, xb(a2));
    Jb(re, b);
  }
}
function Ce(a2, b, c) {
  "focusin" === a2 ? (Ae(), pe = b, qe = c, pe.attachEvent("onpropertychange", Be)) : "focusout" === a2 && Ae();
}
function De(a2) {
  if ("selectionchange" === a2 || "keyup" === a2 || "keydown" === a2) return te(qe);
}
function Ee(a2, b) {
  if ("click" === a2) return te(b);
}
function Fe(a2, b) {
  if ("input" === a2 || "change" === a2) return te(b);
}
function Ge(a2, b) {
  return a2 === b && (0 !== a2 || 1 / a2 === 1 / b) || a2 !== a2 && b !== b;
}
var He = "function" === typeof Object.is ? Object.is : Ge;
function Ie(a2, b) {
  if (He(a2, b)) return true;
  if ("object" !== typeof a2 || null === a2 || "object" !== typeof b || null === b) return false;
  var c = Object.keys(a2), d = Object.keys(b);
  if (c.length !== d.length) return false;
  for (d = 0; d < c.length; d++) {
    var e = c[d];
    if (!ja.call(b, e) || !He(a2[e], b[e])) return false;
  }
  return true;
}
function Je(a2) {
  for (; a2 && a2.firstChild; ) a2 = a2.firstChild;
  return a2;
}
function Ke(a2, b) {
  var c = Je(a2);
  a2 = 0;
  for (var d; c; ) {
    if (3 === c.nodeType) {
      d = a2 + c.textContent.length;
      if (a2 <= b && d >= b) return { node: c, offset: b - a2 };
      a2 = d;
    }
    a: {
      for (; c; ) {
        if (c.nextSibling) {
          c = c.nextSibling;
          break a;
        }
        c = c.parentNode;
      }
      c = void 0;
    }
    c = Je(c);
  }
}
function Le(a2, b) {
  return a2 && b ? a2 === b ? true : a2 && 3 === a2.nodeType ? false : b && 3 === b.nodeType ? Le(a2, b.parentNode) : "contains" in a2 ? a2.contains(b) : a2.compareDocumentPosition ? !!(a2.compareDocumentPosition(b) & 16) : false : false;
}
function Me() {
  for (var a2 = window, b = Xa(); b instanceof a2.HTMLIFrameElement; ) {
    try {
      var c = "string" === typeof b.contentWindow.location.href;
    } catch (d) {
      c = false;
    }
    if (c) a2 = b.contentWindow;
    else break;
    b = Xa(a2.document);
  }
  return b;
}
function Ne(a2) {
  var b = a2 && a2.nodeName && a2.nodeName.toLowerCase();
  return b && ("input" === b && ("text" === a2.type || "search" === a2.type || "tel" === a2.type || "url" === a2.type || "password" === a2.type) || "textarea" === b || "true" === a2.contentEditable);
}
function Oe(a2) {
  var b = Me(), c = a2.focusedElem, d = a2.selectionRange;
  if (b !== c && c && c.ownerDocument && Le(c.ownerDocument.documentElement, c)) {
    if (null !== d && Ne(c)) {
      if (b = d.start, a2 = d.end, void 0 === a2 && (a2 = b), "selectionStart" in c) c.selectionStart = b, c.selectionEnd = Math.min(a2, c.value.length);
      else if (a2 = (b = c.ownerDocument || document) && b.defaultView || window, a2.getSelection) {
        a2 = a2.getSelection();
        var e = c.textContent.length, f2 = Math.min(d.start, e);
        d = void 0 === d.end ? f2 : Math.min(d.end, e);
        !a2.extend && f2 > d && (e = d, d = f2, f2 = e);
        e = Ke(c, f2);
        var g2 = Ke(
          c,
          d
        );
        e && g2 && (1 !== a2.rangeCount || a2.anchorNode !== e.node || a2.anchorOffset !== e.offset || a2.focusNode !== g2.node || a2.focusOffset !== g2.offset) && (b = b.createRange(), b.setStart(e.node, e.offset), a2.removeAllRanges(), f2 > d ? (a2.addRange(b), a2.extend(g2.node, g2.offset)) : (b.setEnd(g2.node, g2.offset), a2.addRange(b)));
      }
    }
    b = [];
    for (a2 = c; a2 = a2.parentNode; ) 1 === a2.nodeType && b.push({ element: a2, left: a2.scrollLeft, top: a2.scrollTop });
    "function" === typeof c.focus && c.focus();
    for (c = 0; c < b.length; c++) a2 = b[c], a2.element.scrollLeft = a2.left, a2.element.scrollTop = a2.top;
  }
}
var Pe = ia && "documentMode" in document && 11 >= document.documentMode, Qe = null, Re = null, Se = null, Te = false;
function Ue(a2, b, c) {
  var d = c.window === c ? c.document : 9 === c.nodeType ? c : c.ownerDocument;
  Te || null == Qe || Qe !== Xa(d) || (d = Qe, "selectionStart" in d && Ne(d) ? d = { start: d.selectionStart, end: d.selectionEnd } : (d = (d.ownerDocument && d.ownerDocument.defaultView || window).getSelection(), d = { anchorNode: d.anchorNode, anchorOffset: d.anchorOffset, focusNode: d.focusNode, focusOffset: d.focusOffset }), Se && Ie(Se, d) || (Se = d, d = oe(Re, "onSelect"), 0 < d.length && (b = new td("onSelect", "select", null, b, c), a2.push({ event: b, listeners: d }), b.target = Qe)));
}
function Ve(a2, b) {
  var c = {};
  c[a2.toLowerCase()] = b.toLowerCase();
  c["Webkit" + a2] = "webkit" + b;
  c["Moz" + a2] = "moz" + b;
  return c;
}
var We = { animationend: Ve("Animation", "AnimationEnd"), animationiteration: Ve("Animation", "AnimationIteration"), animationstart: Ve("Animation", "AnimationStart"), transitionend: Ve("Transition", "TransitionEnd") }, Xe = {}, Ye = {};
ia && (Ye = document.createElement("div").style, "AnimationEvent" in window || (delete We.animationend.animation, delete We.animationiteration.animation, delete We.animationstart.animation), "TransitionEvent" in window || delete We.transitionend.transition);
function Ze(a2) {
  if (Xe[a2]) return Xe[a2];
  if (!We[a2]) return a2;
  var b = We[a2], c;
  for (c in b) if (b.hasOwnProperty(c) && c in Ye) return Xe[a2] = b[c];
  return a2;
}
var $e = Ze("animationend"), af = Ze("animationiteration"), bf = Ze("animationstart"), cf = Ze("transitionend"), df = /* @__PURE__ */ new Map(), ef = "abort auxClick cancel canPlay canPlayThrough click close contextMenu copy cut drag dragEnd dragEnter dragExit dragLeave dragOver dragStart drop durationChange emptied encrypted ended error gotPointerCapture input invalid keyDown keyPress keyUp load loadedData loadedMetadata loadStart lostPointerCapture mouseDown mouseMove mouseOut mouseOver mouseUp paste pause play playing pointerCancel pointerDown pointerMove pointerOut pointerOver pointerUp progress rateChange reset resize seeked seeking stalled submit suspend timeUpdate touchCancel touchEnd touchStart volumeChange scroll toggle touchMove waiting wheel".split(" ");
function ff(a2, b) {
  df.set(a2, b);
  fa(b, [a2]);
}
for (var gf = 0; gf < ef.length; gf++) {
  var hf = ef[gf], jf = hf.toLowerCase(), kf = hf[0].toUpperCase() + hf.slice(1);
  ff(jf, "on" + kf);
}
ff($e, "onAnimationEnd");
ff(af, "onAnimationIteration");
ff(bf, "onAnimationStart");
ff("dblclick", "onDoubleClick");
ff("focusin", "onFocus");
ff("focusout", "onBlur");
ff(cf, "onTransitionEnd");
ha("onMouseEnter", ["mouseout", "mouseover"]);
ha("onMouseLeave", ["mouseout", "mouseover"]);
ha("onPointerEnter", ["pointerout", "pointerover"]);
ha("onPointerLeave", ["pointerout", "pointerover"]);
fa("onChange", "change click focusin focusout input keydown keyup selectionchange".split(" "));
fa("onSelect", "focusout contextmenu dragend focusin keydown keyup mousedown mouseup selectionchange".split(" "));
fa("onBeforeInput", ["compositionend", "keypress", "textInput", "paste"]);
fa("onCompositionEnd", "compositionend focusout keydown keypress keyup mousedown".split(" "));
fa("onCompositionStart", "compositionstart focusout keydown keypress keyup mousedown".split(" "));
fa("onCompositionUpdate", "compositionupdate focusout keydown keypress keyup mousedown".split(" "));
var lf = "abort canplay canplaythrough durationchange emptied encrypted ended error loadeddata loadedmetadata loadstart pause play playing progress ratechange resize seeked seeking stalled suspend timeupdate volumechange waiting".split(" "), mf = new Set("cancel close invalid load scroll toggle".split(" ").concat(lf));
function nf(a2, b, c) {
  var d = a2.type || "unknown-event";
  a2.currentTarget = c;
  Ub(d, b, void 0, a2);
  a2.currentTarget = null;
}
function se$1(a2, b) {
  b = 0 !== (b & 4);
  for (var c = 0; c < a2.length; c++) {
    var d = a2[c], e = d.event;
    d = d.listeners;
    a: {
      var f2 = void 0;
      if (b) for (var g2 = d.length - 1; 0 <= g2; g2--) {
        var h = d[g2], k2 = h.instance, l2 = h.currentTarget;
        h = h.listener;
        if (k2 !== f2 && e.isPropagationStopped()) break a;
        nf(e, h, l2);
        f2 = k2;
      }
      else for (g2 = 0; g2 < d.length; g2++) {
        h = d[g2];
        k2 = h.instance;
        l2 = h.currentTarget;
        h = h.listener;
        if (k2 !== f2 && e.isPropagationStopped()) break a;
        nf(e, h, l2);
        f2 = k2;
      }
    }
  }
  if (Qb) throw a2 = Rb, Qb = false, Rb = null, a2;
}
function D(a2, b) {
  var c = b[of];
  void 0 === c && (c = b[of] = /* @__PURE__ */ new Set());
  var d = a2 + "__bubble";
  c.has(d) || (pf(b, a2, 2, false), c.add(d));
}
function qf(a2, b, c) {
  var d = 0;
  b && (d |= 4);
  pf(c, a2, d, b);
}
var rf = "_reactListening" + Math.random().toString(36).slice(2);
function sf(a2) {
  if (!a2[rf]) {
    a2[rf] = true;
    da.forEach(function(b2) {
      "selectionchange" !== b2 && (mf.has(b2) || qf(b2, false, a2), qf(b2, true, a2));
    });
    var b = 9 === a2.nodeType ? a2 : a2.ownerDocument;
    null === b || b[rf] || (b[rf] = true, qf("selectionchange", false, b));
  }
}
function pf(a2, b, c, d) {
  switch (jd(b)) {
    case 1:
      var e = ed;
      break;
    case 4:
      e = gd;
      break;
    default:
      e = fd;
  }
  c = e.bind(null, b, c, a2);
  e = void 0;
  !Lb || "touchstart" !== b && "touchmove" !== b && "wheel" !== b || (e = true);
  d ? void 0 !== e ? a2.addEventListener(b, c, { capture: true, passive: e }) : a2.addEventListener(b, c, true) : void 0 !== e ? a2.addEventListener(b, c, { passive: e }) : a2.addEventListener(b, c, false);
}
function hd(a2, b, c, d, e) {
  var f2 = d;
  if (0 === (b & 1) && 0 === (b & 2) && null !== d) a: for (; ; ) {
    if (null === d) return;
    var g2 = d.tag;
    if (3 === g2 || 4 === g2) {
      var h = d.stateNode.containerInfo;
      if (h === e || 8 === h.nodeType && h.parentNode === e) break;
      if (4 === g2) for (g2 = d.return; null !== g2; ) {
        var k2 = g2.tag;
        if (3 === k2 || 4 === k2) {
          if (k2 = g2.stateNode.containerInfo, k2 === e || 8 === k2.nodeType && k2.parentNode === e) return;
        }
        g2 = g2.return;
      }
      for (; null !== h; ) {
        g2 = Wc(h);
        if (null === g2) return;
        k2 = g2.tag;
        if (5 === k2 || 6 === k2) {
          d = f2 = g2;
          continue a;
        }
        h = h.parentNode;
      }
    }
    d = d.return;
  }
  Jb(function() {
    var d2 = f2, e2 = xb(c), g3 = [];
    a: {
      var h2 = df.get(a2);
      if (void 0 !== h2) {
        var k3 = td, n2 = a2;
        switch (a2) {
          case "keypress":
            if (0 === od(c)) break a;
          case "keydown":
          case "keyup":
            k3 = Rd;
            break;
          case "focusin":
            n2 = "focus";
            k3 = Fd;
            break;
          case "focusout":
            n2 = "blur";
            k3 = Fd;
            break;
          case "beforeblur":
          case "afterblur":
            k3 = Fd;
            break;
          case "click":
            if (2 === c.button) break a;
          case "auxclick":
          case "dblclick":
          case "mousedown":
          case "mousemove":
          case "mouseup":
          case "mouseout":
          case "mouseover":
          case "contextmenu":
            k3 = Bd;
            break;
          case "drag":
          case "dragend":
          case "dragenter":
          case "dragexit":
          case "dragleave":
          case "dragover":
          case "dragstart":
          case "drop":
            k3 = Dd;
            break;
          case "touchcancel":
          case "touchend":
          case "touchmove":
          case "touchstart":
            k3 = Vd;
            break;
          case $e:
          case af:
          case bf:
            k3 = Hd;
            break;
          case cf:
            k3 = Xd;
            break;
          case "scroll":
            k3 = vd;
            break;
          case "wheel":
            k3 = Zd;
            break;
          case "copy":
          case "cut":
          case "paste":
            k3 = Jd;
            break;
          case "gotpointercapture":
          case "lostpointercapture":
          case "pointercancel":
          case "pointerdown":
          case "pointermove":
          case "pointerout":
          case "pointerover":
          case "pointerup":
            k3 = Td;
        }
        var t2 = 0 !== (b & 4), J2 = !t2 && "scroll" === a2, x2 = t2 ? null !== h2 ? h2 + "Capture" : null : h2;
        t2 = [];
        for (var w2 = d2, u2; null !== w2; ) {
          u2 = w2;
          var F2 = u2.stateNode;
          5 === u2.tag && null !== F2 && (u2 = F2, null !== x2 && (F2 = Kb(w2, x2), null != F2 && t2.push(tf(w2, F2, u2))));
          if (J2) break;
          w2 = w2.return;
        }
        0 < t2.length && (h2 = new k3(h2, n2, null, c, e2), g3.push({ event: h2, listeners: t2 }));
      }
    }
    if (0 === (b & 7)) {
      a: {
        h2 = "mouseover" === a2 || "pointerover" === a2;
        k3 = "mouseout" === a2 || "pointerout" === a2;
        if (h2 && c !== wb && (n2 = c.relatedTarget || c.fromElement) && (Wc(n2) || n2[uf])) break a;
        if (k3 || h2) {
          h2 = e2.window === e2 ? e2 : (h2 = e2.ownerDocument) ? h2.defaultView || h2.parentWindow : window;
          if (k3) {
            if (n2 = c.relatedTarget || c.toElement, k3 = d2, n2 = n2 ? Wc(n2) : null, null !== n2 && (J2 = Vb(n2), n2 !== J2 || 5 !== n2.tag && 6 !== n2.tag)) n2 = null;
          } else k3 = null, n2 = d2;
          if (k3 !== n2) {
            t2 = Bd;
            F2 = "onMouseLeave";
            x2 = "onMouseEnter";
            w2 = "mouse";
            if ("pointerout" === a2 || "pointerover" === a2) t2 = Td, F2 = "onPointerLeave", x2 = "onPointerEnter", w2 = "pointer";
            J2 = null == k3 ? h2 : ue(k3);
            u2 = null == n2 ? h2 : ue(n2);
            h2 = new t2(F2, w2 + "leave", k3, c, e2);
            h2.target = J2;
            h2.relatedTarget = u2;
            F2 = null;
            Wc(e2) === d2 && (t2 = new t2(x2, w2 + "enter", n2, c, e2), t2.target = u2, t2.relatedTarget = J2, F2 = t2);
            J2 = F2;
            if (k3 && n2) b: {
              t2 = k3;
              x2 = n2;
              w2 = 0;
              for (u2 = t2; u2; u2 = vf(u2)) w2++;
              u2 = 0;
              for (F2 = x2; F2; F2 = vf(F2)) u2++;
              for (; 0 < w2 - u2; ) t2 = vf(t2), w2--;
              for (; 0 < u2 - w2; ) x2 = vf(x2), u2--;
              for (; w2--; ) {
                if (t2 === x2 || null !== x2 && t2 === x2.alternate) break b;
                t2 = vf(t2);
                x2 = vf(x2);
              }
              t2 = null;
            }
            else t2 = null;
            null !== k3 && wf(g3, h2, k3, t2, false);
            null !== n2 && null !== J2 && wf(g3, J2, n2, t2, true);
          }
        }
      }
      a: {
        h2 = d2 ? ue(d2) : window;
        k3 = h2.nodeName && h2.nodeName.toLowerCase();
        if ("select" === k3 || "input" === k3 && "file" === h2.type) var na = ve;
        else if (me(h2)) if (we) na = Fe;
        else {
          na = De;
          var xa = Ce;
        }
        else (k3 = h2.nodeName) && "input" === k3.toLowerCase() && ("checkbox" === h2.type || "radio" === h2.type) && (na = Ee);
        if (na && (na = na(a2, d2))) {
          ne(g3, na, c, e2);
          break a;
        }
        xa && xa(a2, h2, d2);
        "focusout" === a2 && (xa = h2._wrapperState) && xa.controlled && "number" === h2.type && cb(h2, "number", h2.value);
      }
      xa = d2 ? ue(d2) : window;
      switch (a2) {
        case "focusin":
          if (me(xa) || "true" === xa.contentEditable) Qe = xa, Re = d2, Se = null;
          break;
        case "focusout":
          Se = Re = Qe = null;
          break;
        case "mousedown":
          Te = true;
          break;
        case "contextmenu":
        case "mouseup":
        case "dragend":
          Te = false;
          Ue(g3, c, e2);
          break;
        case "selectionchange":
          if (Pe) break;
        case "keydown":
        case "keyup":
          Ue(g3, c, e2);
      }
      var $a;
      if (ae) b: {
        switch (a2) {
          case "compositionstart":
            var ba = "onCompositionStart";
            break b;
          case "compositionend":
            ba = "onCompositionEnd";
            break b;
          case "compositionupdate":
            ba = "onCompositionUpdate";
            break b;
        }
        ba = void 0;
      }
      else ie$1 ? ge(a2, c) && (ba = "onCompositionEnd") : "keydown" === a2 && 229 === c.keyCode && (ba = "onCompositionStart");
      ba && (de && "ko" !== c.locale && (ie$1 || "onCompositionStart" !== ba ? "onCompositionEnd" === ba && ie$1 && ($a = nd()) : (kd = e2, ld = "value" in kd ? kd.value : kd.textContent, ie$1 = true)), xa = oe(d2, ba), 0 < xa.length && (ba = new Ld(ba, a2, null, c, e2), g3.push({ event: ba, listeners: xa }), $a ? ba.data = $a : ($a = he(c), null !== $a && (ba.data = $a))));
      if ($a = ce ? je(a2, c) : ke(a2, c)) d2 = oe(d2, "onBeforeInput"), 0 < d2.length && (e2 = new Ld("onBeforeInput", "beforeinput", null, c, e2), g3.push({ event: e2, listeners: d2 }), e2.data = $a);
    }
    se$1(g3, b);
  });
}
function tf(a2, b, c) {
  return { instance: a2, listener: b, currentTarget: c };
}
function oe(a2, b) {
  for (var c = b + "Capture", d = []; null !== a2; ) {
    var e = a2, f2 = e.stateNode;
    5 === e.tag && null !== f2 && (e = f2, f2 = Kb(a2, c), null != f2 && d.unshift(tf(a2, f2, e)), f2 = Kb(a2, b), null != f2 && d.push(tf(a2, f2, e)));
    a2 = a2.return;
  }
  return d;
}
function vf(a2) {
  if (null === a2) return null;
  do
    a2 = a2.return;
  while (a2 && 5 !== a2.tag);
  return a2 ? a2 : null;
}
function wf(a2, b, c, d, e) {
  for (var f2 = b._reactName, g2 = []; null !== c && c !== d; ) {
    var h = c, k2 = h.alternate, l2 = h.stateNode;
    if (null !== k2 && k2 === d) break;
    5 === h.tag && null !== l2 && (h = l2, e ? (k2 = Kb(c, f2), null != k2 && g2.unshift(tf(c, k2, h))) : e || (k2 = Kb(c, f2), null != k2 && g2.push(tf(c, k2, h))));
    c = c.return;
  }
  0 !== g2.length && a2.push({ event: b, listeners: g2 });
}
var xf = /\r\n?/g, yf = /\u0000|\uFFFD/g;
function zf(a2) {
  return ("string" === typeof a2 ? a2 : "" + a2).replace(xf, "\n").replace(yf, "");
}
function Af(a2, b, c) {
  b = zf(b);
  if (zf(a2) !== b && c) throw Error(p$1(425));
}
function Bf() {
}
var Cf = null, Df = null;
function Ef(a2, b) {
  return "textarea" === a2 || "noscript" === a2 || "string" === typeof b.children || "number" === typeof b.children || "object" === typeof b.dangerouslySetInnerHTML && null !== b.dangerouslySetInnerHTML && null != b.dangerouslySetInnerHTML.__html;
}
var Ff = "function" === typeof setTimeout ? setTimeout : void 0, Gf = "function" === typeof clearTimeout ? clearTimeout : void 0, Hf = "function" === typeof Promise ? Promise : void 0, Jf = "function" === typeof queueMicrotask ? queueMicrotask : "undefined" !== typeof Hf ? function(a2) {
  return Hf.resolve(null).then(a2).catch(If);
} : Ff;
function If(a2) {
  setTimeout(function() {
    throw a2;
  });
}
function Kf(a2, b) {
  var c = b, d = 0;
  do {
    var e = c.nextSibling;
    a2.removeChild(c);
    if (e && 8 === e.nodeType) if (c = e.data, "/$" === c) {
      if (0 === d) {
        a2.removeChild(e);
        bd(b);
        return;
      }
      d--;
    } else "$" !== c && "$?" !== c && "$!" !== c || d++;
    c = e;
  } while (c);
  bd(b);
}
function Lf(a2) {
  for (; null != a2; a2 = a2.nextSibling) {
    var b = a2.nodeType;
    if (1 === b || 3 === b) break;
    if (8 === b) {
      b = a2.data;
      if ("$" === b || "$!" === b || "$?" === b) break;
      if ("/$" === b) return null;
    }
  }
  return a2;
}
function Mf(a2) {
  a2 = a2.previousSibling;
  for (var b = 0; a2; ) {
    if (8 === a2.nodeType) {
      var c = a2.data;
      if ("$" === c || "$!" === c || "$?" === c) {
        if (0 === b) return a2;
        b--;
      } else "/$" === c && b++;
    }
    a2 = a2.previousSibling;
  }
  return null;
}
var Nf = Math.random().toString(36).slice(2), Of = "__reactFiber$" + Nf, Pf = "__reactProps$" + Nf, uf = "__reactContainer$" + Nf, of = "__reactEvents$" + Nf, Qf = "__reactListeners$" + Nf, Rf = "__reactHandles$" + Nf;
function Wc(a2) {
  var b = a2[Of];
  if (b) return b;
  for (var c = a2.parentNode; c; ) {
    if (b = c[uf] || c[Of]) {
      c = b.alternate;
      if (null !== b.child || null !== c && null !== c.child) for (a2 = Mf(a2); null !== a2; ) {
        if (c = a2[Of]) return c;
        a2 = Mf(a2);
      }
      return b;
    }
    a2 = c;
    c = a2.parentNode;
  }
  return null;
}
function Cb(a2) {
  a2 = a2[Of] || a2[uf];
  return !a2 || 5 !== a2.tag && 6 !== a2.tag && 13 !== a2.tag && 3 !== a2.tag ? null : a2;
}
function ue(a2) {
  if (5 === a2.tag || 6 === a2.tag) return a2.stateNode;
  throw Error(p$1(33));
}
function Db(a2) {
  return a2[Pf] || null;
}
var Sf = [], Tf = -1;
function Uf(a2) {
  return { current: a2 };
}
function E(a2) {
  0 > Tf || (a2.current = Sf[Tf], Sf[Tf] = null, Tf--);
}
function G(a2, b) {
  Tf++;
  Sf[Tf] = a2.current;
  a2.current = b;
}
var Vf = {}, H = Uf(Vf), Wf = Uf(false), Xf = Vf;
function Yf(a2, b) {
  var c = a2.type.contextTypes;
  if (!c) return Vf;
  var d = a2.stateNode;
  if (d && d.__reactInternalMemoizedUnmaskedChildContext === b) return d.__reactInternalMemoizedMaskedChildContext;
  var e = {}, f2;
  for (f2 in c) e[f2] = b[f2];
  d && (a2 = a2.stateNode, a2.__reactInternalMemoizedUnmaskedChildContext = b, a2.__reactInternalMemoizedMaskedChildContext = e);
  return e;
}
function Zf(a2) {
  a2 = a2.childContextTypes;
  return null !== a2 && void 0 !== a2;
}
function $f() {
  E(Wf);
  E(H);
}
function ag(a2, b, c) {
  if (H.current !== Vf) throw Error(p$1(168));
  G(H, b);
  G(Wf, c);
}
function bg(a2, b, c) {
  var d = a2.stateNode;
  b = b.childContextTypes;
  if ("function" !== typeof d.getChildContext) return c;
  d = d.getChildContext();
  for (var e in d) if (!(e in b)) throw Error(p$1(108, Ra(a2) || "Unknown", e));
  return A({}, c, d);
}
function cg(a2) {
  a2 = (a2 = a2.stateNode) && a2.__reactInternalMemoizedMergedChildContext || Vf;
  Xf = H.current;
  G(H, a2);
  G(Wf, Wf.current);
  return true;
}
function dg(a2, b, c) {
  var d = a2.stateNode;
  if (!d) throw Error(p$1(169));
  c ? (a2 = bg(a2, b, Xf), d.__reactInternalMemoizedMergedChildContext = a2, E(Wf), E(H), G(H, a2)) : E(Wf);
  G(Wf, c);
}
var eg = null, fg = false, gg = false;
function hg(a2) {
  null === eg ? eg = [a2] : eg.push(a2);
}
function ig(a2) {
  fg = true;
  hg(a2);
}
function jg() {
  if (!gg && null !== eg) {
    gg = true;
    var a2 = 0, b = C;
    try {
      var c = eg;
      for (C = 1; a2 < c.length; a2++) {
        var d = c[a2];
        do
          d = d(true);
        while (null !== d);
      }
      eg = null;
      fg = false;
    } catch (e) {
      throw null !== eg && (eg = eg.slice(a2 + 1)), ac(fc, jg), e;
    } finally {
      C = b, gg = false;
    }
  }
  return null;
}
var kg = [], lg = 0, mg = null, ng = 0, og = [], pg = 0, qg = null, rg = 1, sg = "";
function tg(a2, b) {
  kg[lg++] = ng;
  kg[lg++] = mg;
  mg = a2;
  ng = b;
}
function ug(a2, b, c) {
  og[pg++] = rg;
  og[pg++] = sg;
  og[pg++] = qg;
  qg = a2;
  var d = rg;
  a2 = sg;
  var e = 32 - oc(d) - 1;
  d &= ~(1 << e);
  c += 1;
  var f2 = 32 - oc(b) + e;
  if (30 < f2) {
    var g2 = e - e % 5;
    f2 = (d & (1 << g2) - 1).toString(32);
    d >>= g2;
    e -= g2;
    rg = 1 << 32 - oc(b) + e | c << e | d;
    sg = f2 + a2;
  } else rg = 1 << f2 | c << e | d, sg = a2;
}
function vg(a2) {
  null !== a2.return && (tg(a2, 1), ug(a2, 1, 0));
}
function wg(a2) {
  for (; a2 === mg; ) mg = kg[--lg], kg[lg] = null, ng = kg[--lg], kg[lg] = null;
  for (; a2 === qg; ) qg = og[--pg], og[pg] = null, sg = og[--pg], og[pg] = null, rg = og[--pg], og[pg] = null;
}
var xg = null, yg = null, I = false, zg = null;
function Ag(a2, b) {
  var c = Bg(5, null, null, 0);
  c.elementType = "DELETED";
  c.stateNode = b;
  c.return = a2;
  b = a2.deletions;
  null === b ? (a2.deletions = [c], a2.flags |= 16) : b.push(c);
}
function Cg(a2, b) {
  switch (a2.tag) {
    case 5:
      var c = a2.type;
      b = 1 !== b.nodeType || c.toLowerCase() !== b.nodeName.toLowerCase() ? null : b;
      return null !== b ? (a2.stateNode = b, xg = a2, yg = Lf(b.firstChild), true) : false;
    case 6:
      return b = "" === a2.pendingProps || 3 !== b.nodeType ? null : b, null !== b ? (a2.stateNode = b, xg = a2, yg = null, true) : false;
    case 13:
      return b = 8 !== b.nodeType ? null : b, null !== b ? (c = null !== qg ? { id: rg, overflow: sg } : null, a2.memoizedState = { dehydrated: b, treeContext: c, retryLane: 1073741824 }, c = Bg(18, null, null, 0), c.stateNode = b, c.return = a2, a2.child = c, xg = a2, yg = null, true) : false;
    default:
      return false;
  }
}
function Dg(a2) {
  return 0 !== (a2.mode & 1) && 0 === (a2.flags & 128);
}
function Eg(a2) {
  if (I) {
    var b = yg;
    if (b) {
      var c = b;
      if (!Cg(a2, b)) {
        if (Dg(a2)) throw Error(p$1(418));
        b = Lf(c.nextSibling);
        var d = xg;
        b && Cg(a2, b) ? Ag(d, c) : (a2.flags = a2.flags & -4097 | 2, I = false, xg = a2);
      }
    } else {
      if (Dg(a2)) throw Error(p$1(418));
      a2.flags = a2.flags & -4097 | 2;
      I = false;
      xg = a2;
    }
  }
}
function Fg(a2) {
  for (a2 = a2.return; null !== a2 && 5 !== a2.tag && 3 !== a2.tag && 13 !== a2.tag; ) a2 = a2.return;
  xg = a2;
}
function Gg(a2) {
  if (a2 !== xg) return false;
  if (!I) return Fg(a2), I = true, false;
  var b;
  (b = 3 !== a2.tag) && !(b = 5 !== a2.tag) && (b = a2.type, b = "head" !== b && "body" !== b && !Ef(a2.type, a2.memoizedProps));
  if (b && (b = yg)) {
    if (Dg(a2)) throw Hg(), Error(p$1(418));
    for (; b; ) Ag(a2, b), b = Lf(b.nextSibling);
  }
  Fg(a2);
  if (13 === a2.tag) {
    a2 = a2.memoizedState;
    a2 = null !== a2 ? a2.dehydrated : null;
    if (!a2) throw Error(p$1(317));
    a: {
      a2 = a2.nextSibling;
      for (b = 0; a2; ) {
        if (8 === a2.nodeType) {
          var c = a2.data;
          if ("/$" === c) {
            if (0 === b) {
              yg = Lf(a2.nextSibling);
              break a;
            }
            b--;
          } else "$" !== c && "$!" !== c && "$?" !== c || b++;
        }
        a2 = a2.nextSibling;
      }
      yg = null;
    }
  } else yg = xg ? Lf(a2.stateNode.nextSibling) : null;
  return true;
}
function Hg() {
  for (var a2 = yg; a2; ) a2 = Lf(a2.nextSibling);
}
function Ig() {
  yg = xg = null;
  I = false;
}
function Jg(a2) {
  null === zg ? zg = [a2] : zg.push(a2);
}
var Kg = ua.ReactCurrentBatchConfig;
function Lg(a2, b, c) {
  a2 = c.ref;
  if (null !== a2 && "function" !== typeof a2 && "object" !== typeof a2) {
    if (c._owner) {
      c = c._owner;
      if (c) {
        if (1 !== c.tag) throw Error(p$1(309));
        var d = c.stateNode;
      }
      if (!d) throw Error(p$1(147, a2));
      var e = d, f2 = "" + a2;
      if (null !== b && null !== b.ref && "function" === typeof b.ref && b.ref._stringRef === f2) return b.ref;
      b = function(a3) {
        var b2 = e.refs;
        null === a3 ? delete b2[f2] : b2[f2] = a3;
      };
      b._stringRef = f2;
      return b;
    }
    if ("string" !== typeof a2) throw Error(p$1(284));
    if (!c._owner) throw Error(p$1(290, a2));
  }
  return a2;
}
function Mg(a2, b) {
  a2 = Object.prototype.toString.call(b);
  throw Error(p$1(31, "[object Object]" === a2 ? "object with keys {" + Object.keys(b).join(", ") + "}" : a2));
}
function Ng(a2) {
  var b = a2._init;
  return b(a2._payload);
}
function Og(a2) {
  function b(b2, c2) {
    if (a2) {
      var d2 = b2.deletions;
      null === d2 ? (b2.deletions = [c2], b2.flags |= 16) : d2.push(c2);
    }
  }
  function c(c2, d2) {
    if (!a2) return null;
    for (; null !== d2; ) b(c2, d2), d2 = d2.sibling;
    return null;
  }
  function d(a3, b2) {
    for (a3 = /* @__PURE__ */ new Map(); null !== b2; ) null !== b2.key ? a3.set(b2.key, b2) : a3.set(b2.index, b2), b2 = b2.sibling;
    return a3;
  }
  function e(a3, b2) {
    a3 = Pg(a3, b2);
    a3.index = 0;
    a3.sibling = null;
    return a3;
  }
  function f2(b2, c2, d2) {
    b2.index = d2;
    if (!a2) return b2.flags |= 1048576, c2;
    d2 = b2.alternate;
    if (null !== d2) return d2 = d2.index, d2 < c2 ? (b2.flags |= 2, c2) : d2;
    b2.flags |= 2;
    return c2;
  }
  function g2(b2) {
    a2 && null === b2.alternate && (b2.flags |= 2);
    return b2;
  }
  function h(a3, b2, c2, d2) {
    if (null === b2 || 6 !== b2.tag) return b2 = Qg(c2, a3.mode, d2), b2.return = a3, b2;
    b2 = e(b2, c2);
    b2.return = a3;
    return b2;
  }
  function k2(a3, b2, c2, d2) {
    var f3 = c2.type;
    if (f3 === ya) return m2(a3, b2, c2.props.children, d2, c2.key);
    if (null !== b2 && (b2.elementType === f3 || "object" === typeof f3 && null !== f3 && f3.$$typeof === Ha && Ng(f3) === b2.type)) return d2 = e(b2, c2.props), d2.ref = Lg(a3, b2, c2), d2.return = a3, d2;
    d2 = Rg(c2.type, c2.key, c2.props, null, a3.mode, d2);
    d2.ref = Lg(a3, b2, c2);
    d2.return = a3;
    return d2;
  }
  function l2(a3, b2, c2, d2) {
    if (null === b2 || 4 !== b2.tag || b2.stateNode.containerInfo !== c2.containerInfo || b2.stateNode.implementation !== c2.implementation) return b2 = Sg(c2, a3.mode, d2), b2.return = a3, b2;
    b2 = e(b2, c2.children || []);
    b2.return = a3;
    return b2;
  }
  function m2(a3, b2, c2, d2, f3) {
    if (null === b2 || 7 !== b2.tag) return b2 = Tg(c2, a3.mode, d2, f3), b2.return = a3, b2;
    b2 = e(b2, c2);
    b2.return = a3;
    return b2;
  }
  function q2(a3, b2, c2) {
    if ("string" === typeof b2 && "" !== b2 || "number" === typeof b2) return b2 = Qg("" + b2, a3.mode, c2), b2.return = a3, b2;
    if ("object" === typeof b2 && null !== b2) {
      switch (b2.$$typeof) {
        case va:
          return c2 = Rg(b2.type, b2.key, b2.props, null, a3.mode, c2), c2.ref = Lg(a3, null, b2), c2.return = a3, c2;
        case wa:
          return b2 = Sg(b2, a3.mode, c2), b2.return = a3, b2;
        case Ha:
          var d2 = b2._init;
          return q2(a3, d2(b2._payload), c2);
      }
      if (eb(b2) || Ka(b2)) return b2 = Tg(b2, a3.mode, c2, null), b2.return = a3, b2;
      Mg(a3, b2);
    }
    return null;
  }
  function r2(a3, b2, c2, d2) {
    var e2 = null !== b2 ? b2.key : null;
    if ("string" === typeof c2 && "" !== c2 || "number" === typeof c2) return null !== e2 ? null : h(a3, b2, "" + c2, d2);
    if ("object" === typeof c2 && null !== c2) {
      switch (c2.$$typeof) {
        case va:
          return c2.key === e2 ? k2(a3, b2, c2, d2) : null;
        case wa:
          return c2.key === e2 ? l2(a3, b2, c2, d2) : null;
        case Ha:
          return e2 = c2._init, r2(
            a3,
            b2,
            e2(c2._payload),
            d2
          );
      }
      if (eb(c2) || Ka(c2)) return null !== e2 ? null : m2(a3, b2, c2, d2, null);
      Mg(a3, c2);
    }
    return null;
  }
  function y2(a3, b2, c2, d2, e2) {
    if ("string" === typeof d2 && "" !== d2 || "number" === typeof d2) return a3 = a3.get(c2) || null, h(b2, a3, "" + d2, e2);
    if ("object" === typeof d2 && null !== d2) {
      switch (d2.$$typeof) {
        case va:
          return a3 = a3.get(null === d2.key ? c2 : d2.key) || null, k2(b2, a3, d2, e2);
        case wa:
          return a3 = a3.get(null === d2.key ? c2 : d2.key) || null, l2(b2, a3, d2, e2);
        case Ha:
          var f3 = d2._init;
          return y2(a3, b2, c2, f3(d2._payload), e2);
      }
      if (eb(d2) || Ka(d2)) return a3 = a3.get(c2) || null, m2(b2, a3, d2, e2, null);
      Mg(b2, d2);
    }
    return null;
  }
  function n2(e2, g3, h2, k3) {
    for (var l3 = null, m3 = null, u2 = g3, w2 = g3 = 0, x2 = null; null !== u2 && w2 < h2.length; w2++) {
      u2.index > w2 ? (x2 = u2, u2 = null) : x2 = u2.sibling;
      var n3 = r2(e2, u2, h2[w2], k3);
      if (null === n3) {
        null === u2 && (u2 = x2);
        break;
      }
      a2 && u2 && null === n3.alternate && b(e2, u2);
      g3 = f2(n3, g3, w2);
      null === m3 ? l3 = n3 : m3.sibling = n3;
      m3 = n3;
      u2 = x2;
    }
    if (w2 === h2.length) return c(e2, u2), I && tg(e2, w2), l3;
    if (null === u2) {
      for (; w2 < h2.length; w2++) u2 = q2(e2, h2[w2], k3), null !== u2 && (g3 = f2(u2, g3, w2), null === m3 ? l3 = u2 : m3.sibling = u2, m3 = u2);
      I && tg(e2, w2);
      return l3;
    }
    for (u2 = d(e2, u2); w2 < h2.length; w2++) x2 = y2(u2, e2, w2, h2[w2], k3), null !== x2 && (a2 && null !== x2.alternate && u2.delete(null === x2.key ? w2 : x2.key), g3 = f2(x2, g3, w2), null === m3 ? l3 = x2 : m3.sibling = x2, m3 = x2);
    a2 && u2.forEach(function(a3) {
      return b(e2, a3);
    });
    I && tg(e2, w2);
    return l3;
  }
  function t2(e2, g3, h2, k3) {
    var l3 = Ka(h2);
    if ("function" !== typeof l3) throw Error(p$1(150));
    h2 = l3.call(h2);
    if (null == h2) throw Error(p$1(151));
    for (var u2 = l3 = null, m3 = g3, w2 = g3 = 0, x2 = null, n3 = h2.next(); null !== m3 && !n3.done; w2++, n3 = h2.next()) {
      m3.index > w2 ? (x2 = m3, m3 = null) : x2 = m3.sibling;
      var t3 = r2(e2, m3, n3.value, k3);
      if (null === t3) {
        null === m3 && (m3 = x2);
        break;
      }
      a2 && m3 && null === t3.alternate && b(e2, m3);
      g3 = f2(t3, g3, w2);
      null === u2 ? l3 = t3 : u2.sibling = t3;
      u2 = t3;
      m3 = x2;
    }
    if (n3.done) return c(
      e2,
      m3
    ), I && tg(e2, w2), l3;
    if (null === m3) {
      for (; !n3.done; w2++, n3 = h2.next()) n3 = q2(e2, n3.value, k3), null !== n3 && (g3 = f2(n3, g3, w2), null === u2 ? l3 = n3 : u2.sibling = n3, u2 = n3);
      I && tg(e2, w2);
      return l3;
    }
    for (m3 = d(e2, m3); !n3.done; w2++, n3 = h2.next()) n3 = y2(m3, e2, w2, n3.value, k3), null !== n3 && (a2 && null !== n3.alternate && m3.delete(null === n3.key ? w2 : n3.key), g3 = f2(n3, g3, w2), null === u2 ? l3 = n3 : u2.sibling = n3, u2 = n3);
    a2 && m3.forEach(function(a3) {
      return b(e2, a3);
    });
    I && tg(e2, w2);
    return l3;
  }
  function J2(a3, d2, f3, h2) {
    "object" === typeof f3 && null !== f3 && f3.type === ya && null === f3.key && (f3 = f3.props.children);
    if ("object" === typeof f3 && null !== f3) {
      switch (f3.$$typeof) {
        case va:
          a: {
            for (var k3 = f3.key, l3 = d2; null !== l3; ) {
              if (l3.key === k3) {
                k3 = f3.type;
                if (k3 === ya) {
                  if (7 === l3.tag) {
                    c(a3, l3.sibling);
                    d2 = e(l3, f3.props.children);
                    d2.return = a3;
                    a3 = d2;
                    break a;
                  }
                } else if (l3.elementType === k3 || "object" === typeof k3 && null !== k3 && k3.$$typeof === Ha && Ng(k3) === l3.type) {
                  c(a3, l3.sibling);
                  d2 = e(l3, f3.props);
                  d2.ref = Lg(a3, l3, f3);
                  d2.return = a3;
                  a3 = d2;
                  break a;
                }
                c(a3, l3);
                break;
              } else b(a3, l3);
              l3 = l3.sibling;
            }
            f3.type === ya ? (d2 = Tg(f3.props.children, a3.mode, h2, f3.key), d2.return = a3, a3 = d2) : (h2 = Rg(f3.type, f3.key, f3.props, null, a3.mode, h2), h2.ref = Lg(a3, d2, f3), h2.return = a3, a3 = h2);
          }
          return g2(a3);
        case wa:
          a: {
            for (l3 = f3.key; null !== d2; ) {
              if (d2.key === l3) if (4 === d2.tag && d2.stateNode.containerInfo === f3.containerInfo && d2.stateNode.implementation === f3.implementation) {
                c(a3, d2.sibling);
                d2 = e(d2, f3.children || []);
                d2.return = a3;
                a3 = d2;
                break a;
              } else {
                c(a3, d2);
                break;
              }
              else b(a3, d2);
              d2 = d2.sibling;
            }
            d2 = Sg(f3, a3.mode, h2);
            d2.return = a3;
            a3 = d2;
          }
          return g2(a3);
        case Ha:
          return l3 = f3._init, J2(a3, d2, l3(f3._payload), h2);
      }
      if (eb(f3)) return n2(a3, d2, f3, h2);
      if (Ka(f3)) return t2(a3, d2, f3, h2);
      Mg(a3, f3);
    }
    return "string" === typeof f3 && "" !== f3 || "number" === typeof f3 ? (f3 = "" + f3, null !== d2 && 6 === d2.tag ? (c(a3, d2.sibling), d2 = e(d2, f3), d2.return = a3, a3 = d2) : (c(a3, d2), d2 = Qg(f3, a3.mode, h2), d2.return = a3, a3 = d2), g2(a3)) : c(a3, d2);
  }
  return J2;
}
var Ug = Og(true), Vg = Og(false), Wg = Uf(null), Xg = null, Yg = null, Zg = null;
function $g() {
  Zg = Yg = Xg = null;
}
function ah(a2) {
  var b = Wg.current;
  E(Wg);
  a2._currentValue = b;
}
function bh(a2, b, c) {
  for (; null !== a2; ) {
    var d = a2.alternate;
    (a2.childLanes & b) !== b ? (a2.childLanes |= b, null !== d && (d.childLanes |= b)) : null !== d && (d.childLanes & b) !== b && (d.childLanes |= b);
    if (a2 === c) break;
    a2 = a2.return;
  }
}
function ch(a2, b) {
  Xg = a2;
  Zg = Yg = null;
  a2 = a2.dependencies;
  null !== a2 && null !== a2.firstContext && (0 !== (a2.lanes & b) && (dh = true), a2.firstContext = null);
}
function eh(a2) {
  var b = a2._currentValue;
  if (Zg !== a2) if (a2 = { context: a2, memoizedValue: b, next: null }, null === Yg) {
    if (null === Xg) throw Error(p$1(308));
    Yg = a2;
    Xg.dependencies = { lanes: 0, firstContext: a2 };
  } else Yg = Yg.next = a2;
  return b;
}
var fh = null;
function gh(a2) {
  null === fh ? fh = [a2] : fh.push(a2);
}
function hh(a2, b, c, d) {
  var e = b.interleaved;
  null === e ? (c.next = c, gh(b)) : (c.next = e.next, e.next = c);
  b.interleaved = c;
  return ih(a2, d);
}
function ih(a2, b) {
  a2.lanes |= b;
  var c = a2.alternate;
  null !== c && (c.lanes |= b);
  c = a2;
  for (a2 = a2.return; null !== a2; ) a2.childLanes |= b, c = a2.alternate, null !== c && (c.childLanes |= b), c = a2, a2 = a2.return;
  return 3 === c.tag ? c.stateNode : null;
}
var jh = false;
function kh(a2) {
  a2.updateQueue = { baseState: a2.memoizedState, firstBaseUpdate: null, lastBaseUpdate: null, shared: { pending: null, interleaved: null, lanes: 0 }, effects: null };
}
function lh(a2, b) {
  a2 = a2.updateQueue;
  b.updateQueue === a2 && (b.updateQueue = { baseState: a2.baseState, firstBaseUpdate: a2.firstBaseUpdate, lastBaseUpdate: a2.lastBaseUpdate, shared: a2.shared, effects: a2.effects });
}
function mh(a2, b) {
  return { eventTime: a2, lane: b, tag: 0, payload: null, callback: null, next: null };
}
function nh(a2, b, c) {
  var d = a2.updateQueue;
  if (null === d) return null;
  d = d.shared;
  if (0 !== (K & 2)) {
    var e = d.pending;
    null === e ? b.next = b : (b.next = e.next, e.next = b);
    d.pending = b;
    return ih(a2, c);
  }
  e = d.interleaved;
  null === e ? (b.next = b, gh(d)) : (b.next = e.next, e.next = b);
  d.interleaved = b;
  return ih(a2, c);
}
function oh(a2, b, c) {
  b = b.updateQueue;
  if (null !== b && (b = b.shared, 0 !== (c & 4194240))) {
    var d = b.lanes;
    d &= a2.pendingLanes;
    c |= d;
    b.lanes = c;
    Cc(a2, c);
  }
}
function ph(a2, b) {
  var c = a2.updateQueue, d = a2.alternate;
  if (null !== d && (d = d.updateQueue, c === d)) {
    var e = null, f2 = null;
    c = c.firstBaseUpdate;
    if (null !== c) {
      do {
        var g2 = { eventTime: c.eventTime, lane: c.lane, tag: c.tag, payload: c.payload, callback: c.callback, next: null };
        null === f2 ? e = f2 = g2 : f2 = f2.next = g2;
        c = c.next;
      } while (null !== c);
      null === f2 ? e = f2 = b : f2 = f2.next = b;
    } else e = f2 = b;
    c = { baseState: d.baseState, firstBaseUpdate: e, lastBaseUpdate: f2, shared: d.shared, effects: d.effects };
    a2.updateQueue = c;
    return;
  }
  a2 = c.lastBaseUpdate;
  null === a2 ? c.firstBaseUpdate = b : a2.next = b;
  c.lastBaseUpdate = b;
}
function qh(a2, b, c, d) {
  var e = a2.updateQueue;
  jh = false;
  var f2 = e.firstBaseUpdate, g2 = e.lastBaseUpdate, h = e.shared.pending;
  if (null !== h) {
    e.shared.pending = null;
    var k2 = h, l2 = k2.next;
    k2.next = null;
    null === g2 ? f2 = l2 : g2.next = l2;
    g2 = k2;
    var m2 = a2.alternate;
    null !== m2 && (m2 = m2.updateQueue, h = m2.lastBaseUpdate, h !== g2 && (null === h ? m2.firstBaseUpdate = l2 : h.next = l2, m2.lastBaseUpdate = k2));
  }
  if (null !== f2) {
    var q2 = e.baseState;
    g2 = 0;
    m2 = l2 = k2 = null;
    h = f2;
    do {
      var r2 = h.lane, y2 = h.eventTime;
      if ((d & r2) === r2) {
        null !== m2 && (m2 = m2.next = {
          eventTime: y2,
          lane: 0,
          tag: h.tag,
          payload: h.payload,
          callback: h.callback,
          next: null
        });
        a: {
          var n2 = a2, t2 = h;
          r2 = b;
          y2 = c;
          switch (t2.tag) {
            case 1:
              n2 = t2.payload;
              if ("function" === typeof n2) {
                q2 = n2.call(y2, q2, r2);
                break a;
              }
              q2 = n2;
              break a;
            case 3:
              n2.flags = n2.flags & -65537 | 128;
            case 0:
              n2 = t2.payload;
              r2 = "function" === typeof n2 ? n2.call(y2, q2, r2) : n2;
              if (null === r2 || void 0 === r2) break a;
              q2 = A({}, q2, r2);
              break a;
            case 2:
              jh = true;
          }
        }
        null !== h.callback && 0 !== h.lane && (a2.flags |= 64, r2 = e.effects, null === r2 ? e.effects = [h] : r2.push(h));
      } else y2 = { eventTime: y2, lane: r2, tag: h.tag, payload: h.payload, callback: h.callback, next: null }, null === m2 ? (l2 = m2 = y2, k2 = q2) : m2 = m2.next = y2, g2 |= r2;
      h = h.next;
      if (null === h) if (h = e.shared.pending, null === h) break;
      else r2 = h, h = r2.next, r2.next = null, e.lastBaseUpdate = r2, e.shared.pending = null;
    } while (1);
    null === m2 && (k2 = q2);
    e.baseState = k2;
    e.firstBaseUpdate = l2;
    e.lastBaseUpdate = m2;
    b = e.shared.interleaved;
    if (null !== b) {
      e = b;
      do
        g2 |= e.lane, e = e.next;
      while (e !== b);
    } else null === f2 && (e.shared.lanes = 0);
    rh |= g2;
    a2.lanes = g2;
    a2.memoizedState = q2;
  }
}
function sh(a2, b, c) {
  a2 = b.effects;
  b.effects = null;
  if (null !== a2) for (b = 0; b < a2.length; b++) {
    var d = a2[b], e = d.callback;
    if (null !== e) {
      d.callback = null;
      d = c;
      if ("function" !== typeof e) throw Error(p$1(191, e));
      e.call(d);
    }
  }
}
var th = {}, uh = Uf(th), vh$1 = Uf(th), wh = Uf(th);
function xh(a2) {
  if (a2 === th) throw Error(p$1(174));
  return a2;
}
function yh(a2, b) {
  G(wh, b);
  G(vh$1, a2);
  G(uh, th);
  a2 = b.nodeType;
  switch (a2) {
    case 9:
    case 11:
      b = (b = b.documentElement) ? b.namespaceURI : lb(null, "");
      break;
    default:
      a2 = 8 === a2 ? b.parentNode : b, b = a2.namespaceURI || null, a2 = a2.tagName, b = lb(b, a2);
  }
  E(uh);
  G(uh, b);
}
function zh() {
  E(uh);
  E(vh$1);
  E(wh);
}
function Ah(a2) {
  xh(wh.current);
  var b = xh(uh.current);
  var c = lb(b, a2.type);
  b !== c && (G(vh$1, a2), G(uh, c));
}
function Bh(a2) {
  vh$1.current === a2 && (E(uh), E(vh$1));
}
var L = Uf(0);
function Ch(a2) {
  for (var b = a2; null !== b; ) {
    if (13 === b.tag) {
      var c = b.memoizedState;
      if (null !== c && (c = c.dehydrated, null === c || "$?" === c.data || "$!" === c.data)) return b;
    } else if (19 === b.tag && void 0 !== b.memoizedProps.revealOrder) {
      if (0 !== (b.flags & 128)) return b;
    } else if (null !== b.child) {
      b.child.return = b;
      b = b.child;
      continue;
    }
    if (b === a2) break;
    for (; null === b.sibling; ) {
      if (null === b.return || b.return === a2) return null;
      b = b.return;
    }
    b.sibling.return = b.return;
    b = b.sibling;
  }
  return null;
}
var Dh = [];
function Eh() {
  for (var a2 = 0; a2 < Dh.length; a2++) Dh[a2]._workInProgressVersionPrimary = null;
  Dh.length = 0;
}
var Fh = ua.ReactCurrentDispatcher, Gh = ua.ReactCurrentBatchConfig, Hh = 0, M$1 = null, N$1 = null, O = null, Ih = false, Jh = false, Kh = 0, Lh = 0;
function P() {
  throw Error(p$1(321));
}
function Mh(a2, b) {
  if (null === b) return false;
  for (var c = 0; c < b.length && c < a2.length; c++) if (!He(a2[c], b[c])) return false;
  return true;
}
function Nh(a2, b, c, d, e, f2) {
  Hh = f2;
  M$1 = b;
  b.memoizedState = null;
  b.updateQueue = null;
  b.lanes = 0;
  Fh.current = null === a2 || null === a2.memoizedState ? Oh : Ph;
  a2 = c(d, e);
  if (Jh) {
    f2 = 0;
    do {
      Jh = false;
      Kh = 0;
      if (25 <= f2) throw Error(p$1(301));
      f2 += 1;
      O = N$1 = null;
      b.updateQueue = null;
      Fh.current = Qh;
      a2 = c(d, e);
    } while (Jh);
  }
  Fh.current = Rh;
  b = null !== N$1 && null !== N$1.next;
  Hh = 0;
  O = N$1 = M$1 = null;
  Ih = false;
  if (b) throw Error(p$1(300));
  return a2;
}
function Sh() {
  var a2 = 0 !== Kh;
  Kh = 0;
  return a2;
}
function Th() {
  var a2 = { memoizedState: null, baseState: null, baseQueue: null, queue: null, next: null };
  null === O ? M$1.memoizedState = O = a2 : O = O.next = a2;
  return O;
}
function Uh() {
  if (null === N$1) {
    var a2 = M$1.alternate;
    a2 = null !== a2 ? a2.memoizedState : null;
  } else a2 = N$1.next;
  var b = null === O ? M$1.memoizedState : O.next;
  if (null !== b) O = b, N$1 = a2;
  else {
    if (null === a2) throw Error(p$1(310));
    N$1 = a2;
    a2 = { memoizedState: N$1.memoizedState, baseState: N$1.baseState, baseQueue: N$1.baseQueue, queue: N$1.queue, next: null };
    null === O ? M$1.memoizedState = O = a2 : O = O.next = a2;
  }
  return O;
}
function Vh(a2, b) {
  return "function" === typeof b ? b(a2) : b;
}
function Wh(a2) {
  var b = Uh(), c = b.queue;
  if (null === c) throw Error(p$1(311));
  c.lastRenderedReducer = a2;
  var d = N$1, e = d.baseQueue, f2 = c.pending;
  if (null !== f2) {
    if (null !== e) {
      var g2 = e.next;
      e.next = f2.next;
      f2.next = g2;
    }
    d.baseQueue = e = f2;
    c.pending = null;
  }
  if (null !== e) {
    f2 = e.next;
    d = d.baseState;
    var h = g2 = null, k2 = null, l2 = f2;
    do {
      var m2 = l2.lane;
      if ((Hh & m2) === m2) null !== k2 && (k2 = k2.next = { lane: 0, action: l2.action, hasEagerState: l2.hasEagerState, eagerState: l2.eagerState, next: null }), d = l2.hasEagerState ? l2.eagerState : a2(d, l2.action);
      else {
        var q2 = {
          lane: m2,
          action: l2.action,
          hasEagerState: l2.hasEagerState,
          eagerState: l2.eagerState,
          next: null
        };
        null === k2 ? (h = k2 = q2, g2 = d) : k2 = k2.next = q2;
        M$1.lanes |= m2;
        rh |= m2;
      }
      l2 = l2.next;
    } while (null !== l2 && l2 !== f2);
    null === k2 ? g2 = d : k2.next = h;
    He(d, b.memoizedState) || (dh = true);
    b.memoizedState = d;
    b.baseState = g2;
    b.baseQueue = k2;
    c.lastRenderedState = d;
  }
  a2 = c.interleaved;
  if (null !== a2) {
    e = a2;
    do
      f2 = e.lane, M$1.lanes |= f2, rh |= f2, e = e.next;
    while (e !== a2);
  } else null === e && (c.lanes = 0);
  return [b.memoizedState, c.dispatch];
}
function Xh(a2) {
  var b = Uh(), c = b.queue;
  if (null === c) throw Error(p$1(311));
  c.lastRenderedReducer = a2;
  var d = c.dispatch, e = c.pending, f2 = b.memoizedState;
  if (null !== e) {
    c.pending = null;
    var g2 = e = e.next;
    do
      f2 = a2(f2, g2.action), g2 = g2.next;
    while (g2 !== e);
    He(f2, b.memoizedState) || (dh = true);
    b.memoizedState = f2;
    null === b.baseQueue && (b.baseState = f2);
    c.lastRenderedState = f2;
  }
  return [f2, d];
}
function Yh() {
}
function Zh(a2, b) {
  var c = M$1, d = Uh(), e = b(), f2 = !He(d.memoizedState, e);
  f2 && (d.memoizedState = e, dh = true);
  d = d.queue;
  $h(ai.bind(null, c, d, a2), [a2]);
  if (d.getSnapshot !== b || f2 || null !== O && O.memoizedState.tag & 1) {
    c.flags |= 2048;
    bi(9, ci.bind(null, c, d, e, b), void 0, null);
    if (null === Q) throw Error(p$1(349));
    0 !== (Hh & 30) || di(c, b, e);
  }
  return e;
}
function di(a2, b, c) {
  a2.flags |= 16384;
  a2 = { getSnapshot: b, value: c };
  b = M$1.updateQueue;
  null === b ? (b = { lastEffect: null, stores: null }, M$1.updateQueue = b, b.stores = [a2]) : (c = b.stores, null === c ? b.stores = [a2] : c.push(a2));
}
function ci(a2, b, c, d) {
  b.value = c;
  b.getSnapshot = d;
  ei(b) && fi(a2);
}
function ai(a2, b, c) {
  return c(function() {
    ei(b) && fi(a2);
  });
}
function ei(a2) {
  var b = a2.getSnapshot;
  a2 = a2.value;
  try {
    var c = b();
    return !He(a2, c);
  } catch (d) {
    return true;
  }
}
function fi(a2) {
  var b = ih(a2, 1);
  null !== b && gi(b, a2, 1, -1);
}
function hi(a2) {
  var b = Th();
  "function" === typeof a2 && (a2 = a2());
  b.memoizedState = b.baseState = a2;
  a2 = { pending: null, interleaved: null, lanes: 0, dispatch: null, lastRenderedReducer: Vh, lastRenderedState: a2 };
  b.queue = a2;
  a2 = a2.dispatch = ii.bind(null, M$1, a2);
  return [b.memoizedState, a2];
}
function bi(a2, b, c, d) {
  a2 = { tag: a2, create: b, destroy: c, deps: d, next: null };
  b = M$1.updateQueue;
  null === b ? (b = { lastEffect: null, stores: null }, M$1.updateQueue = b, b.lastEffect = a2.next = a2) : (c = b.lastEffect, null === c ? b.lastEffect = a2.next = a2 : (d = c.next, c.next = a2, a2.next = d, b.lastEffect = a2));
  return a2;
}
function ji() {
  return Uh().memoizedState;
}
function ki(a2, b, c, d) {
  var e = Th();
  M$1.flags |= a2;
  e.memoizedState = bi(1 | b, c, void 0, void 0 === d ? null : d);
}
function li(a2, b, c, d) {
  var e = Uh();
  d = void 0 === d ? null : d;
  var f2 = void 0;
  if (null !== N$1) {
    var g2 = N$1.memoizedState;
    f2 = g2.destroy;
    if (null !== d && Mh(d, g2.deps)) {
      e.memoizedState = bi(b, c, f2, d);
      return;
    }
  }
  M$1.flags |= a2;
  e.memoizedState = bi(1 | b, c, f2, d);
}
function mi(a2, b) {
  return ki(8390656, 8, a2, b);
}
function $h(a2, b) {
  return li(2048, 8, a2, b);
}
function ni(a2, b) {
  return li(4, 2, a2, b);
}
function oi(a2, b) {
  return li(4, 4, a2, b);
}
function pi(a2, b) {
  if ("function" === typeof b) return a2 = a2(), b(a2), function() {
    b(null);
  };
  if (null !== b && void 0 !== b) return a2 = a2(), b.current = a2, function() {
    b.current = null;
  };
}
function qi(a2, b, c) {
  c = null !== c && void 0 !== c ? c.concat([a2]) : null;
  return li(4, 4, pi.bind(null, b, a2), c);
}
function ri() {
}
function si(a2, b) {
  var c = Uh();
  b = void 0 === b ? null : b;
  var d = c.memoizedState;
  if (null !== d && null !== b && Mh(b, d[1])) return d[0];
  c.memoizedState = [a2, b];
  return a2;
}
function ti(a2, b) {
  var c = Uh();
  b = void 0 === b ? null : b;
  var d = c.memoizedState;
  if (null !== d && null !== b && Mh(b, d[1])) return d[0];
  a2 = a2();
  c.memoizedState = [a2, b];
  return a2;
}
function ui(a2, b, c) {
  if (0 === (Hh & 21)) return a2.baseState && (a2.baseState = false, dh = true), a2.memoizedState = c;
  He(c, b) || (c = yc(), M$1.lanes |= c, rh |= c, a2.baseState = true);
  return b;
}
function vi(a2, b) {
  var c = C;
  C = 0 !== c && 4 > c ? c : 4;
  a2(true);
  var d = Gh.transition;
  Gh.transition = {};
  try {
    a2(false), b();
  } finally {
    C = c, Gh.transition = d;
  }
}
function wi() {
  return Uh().memoizedState;
}
function xi(a2, b, c) {
  var d = yi(a2);
  c = { lane: d, action: c, hasEagerState: false, eagerState: null, next: null };
  if (zi(a2)) Ai(b, c);
  else if (c = hh(a2, b, c, d), null !== c) {
    var e = R();
    gi(c, a2, d, e);
    Bi(c, b, d);
  }
}
function ii(a2, b, c) {
  var d = yi(a2), e = { lane: d, action: c, hasEagerState: false, eagerState: null, next: null };
  if (zi(a2)) Ai(b, e);
  else {
    var f2 = a2.alternate;
    if (0 === a2.lanes && (null === f2 || 0 === f2.lanes) && (f2 = b.lastRenderedReducer, null !== f2)) try {
      var g2 = b.lastRenderedState, h = f2(g2, c);
      e.hasEagerState = true;
      e.eagerState = h;
      if (He(h, g2)) {
        var k2 = b.interleaved;
        null === k2 ? (e.next = e, gh(b)) : (e.next = k2.next, k2.next = e);
        b.interleaved = e;
        return;
      }
    } catch (l2) {
    } finally {
    }
    c = hh(a2, b, e, d);
    null !== c && (e = R(), gi(c, a2, d, e), Bi(c, b, d));
  }
}
function zi(a2) {
  var b = a2.alternate;
  return a2 === M$1 || null !== b && b === M$1;
}
function Ai(a2, b) {
  Jh = Ih = true;
  var c = a2.pending;
  null === c ? b.next = b : (b.next = c.next, c.next = b);
  a2.pending = b;
}
function Bi(a2, b, c) {
  if (0 !== (c & 4194240)) {
    var d = b.lanes;
    d &= a2.pendingLanes;
    c |= d;
    b.lanes = c;
    Cc(a2, c);
  }
}
var Rh = { readContext: eh, useCallback: P, useContext: P, useEffect: P, useImperativeHandle: P, useInsertionEffect: P, useLayoutEffect: P, useMemo: P, useReducer: P, useRef: P, useState: P, useDebugValue: P, useDeferredValue: P, useTransition: P, useMutableSource: P, useSyncExternalStore: P, useId: P, unstable_isNewReconciler: false }, Oh = { readContext: eh, useCallback: function(a2, b) {
  Th().memoizedState = [a2, void 0 === b ? null : b];
  return a2;
}, useContext: eh, useEffect: mi, useImperativeHandle: function(a2, b, c) {
  c = null !== c && void 0 !== c ? c.concat([a2]) : null;
  return ki(
    4194308,
    4,
    pi.bind(null, b, a2),
    c
  );
}, useLayoutEffect: function(a2, b) {
  return ki(4194308, 4, a2, b);
}, useInsertionEffect: function(a2, b) {
  return ki(4, 2, a2, b);
}, useMemo: function(a2, b) {
  var c = Th();
  b = void 0 === b ? null : b;
  a2 = a2();
  c.memoizedState = [a2, b];
  return a2;
}, useReducer: function(a2, b, c) {
  var d = Th();
  b = void 0 !== c ? c(b) : b;
  d.memoizedState = d.baseState = b;
  a2 = { pending: null, interleaved: null, lanes: 0, dispatch: null, lastRenderedReducer: a2, lastRenderedState: b };
  d.queue = a2;
  a2 = a2.dispatch = xi.bind(null, M$1, a2);
  return [d.memoizedState, a2];
}, useRef: function(a2) {
  var b = Th();
  a2 = { current: a2 };
  return b.memoizedState = a2;
}, useState: hi, useDebugValue: ri, useDeferredValue: function(a2) {
  return Th().memoizedState = a2;
}, useTransition: function() {
  var a2 = hi(false), b = a2[0];
  a2 = vi.bind(null, a2[1]);
  Th().memoizedState = a2;
  return [b, a2];
}, useMutableSource: function() {
}, useSyncExternalStore: function(a2, b, c) {
  var d = M$1, e = Th();
  if (I) {
    if (void 0 === c) throw Error(p$1(407));
    c = c();
  } else {
    c = b();
    if (null === Q) throw Error(p$1(349));
    0 !== (Hh & 30) || di(d, b, c);
  }
  e.memoizedState = c;
  var f2 = { value: c, getSnapshot: b };
  e.queue = f2;
  mi(ai.bind(
    null,
    d,
    f2,
    a2
  ), [a2]);
  d.flags |= 2048;
  bi(9, ci.bind(null, d, f2, c, b), void 0, null);
  return c;
}, useId: function() {
  var a2 = Th(), b = Q.identifierPrefix;
  if (I) {
    var c = sg;
    var d = rg;
    c = (d & ~(1 << 32 - oc(d) - 1)).toString(32) + c;
    b = ":" + b + "R" + c;
    c = Kh++;
    0 < c && (b += "H" + c.toString(32));
    b += ":";
  } else c = Lh++, b = ":" + b + "r" + c.toString(32) + ":";
  return a2.memoizedState = b;
}, unstable_isNewReconciler: false }, Ph = {
  readContext: eh,
  useCallback: si,
  useContext: eh,
  useEffect: $h,
  useImperativeHandle: qi,
  useInsertionEffect: ni,
  useLayoutEffect: oi,
  useMemo: ti,
  useReducer: Wh,
  useRef: ji,
  useState: function() {
    return Wh(Vh);
  },
  useDebugValue: ri,
  useDeferredValue: function(a2) {
    var b = Uh();
    return ui(b, N$1.memoizedState, a2);
  },
  useTransition: function() {
    var a2 = Wh(Vh)[0], b = Uh().memoizedState;
    return [a2, b];
  },
  useMutableSource: Yh,
  useSyncExternalStore: Zh,
  useId: wi,
  unstable_isNewReconciler: false
}, Qh = { readContext: eh, useCallback: si, useContext: eh, useEffect: $h, useImperativeHandle: qi, useInsertionEffect: ni, useLayoutEffect: oi, useMemo: ti, useReducer: Xh, useRef: ji, useState: function() {
  return Xh(Vh);
}, useDebugValue: ri, useDeferredValue: function(a2) {
  var b = Uh();
  return null === N$1 ? b.memoizedState = a2 : ui(b, N$1.memoizedState, a2);
}, useTransition: function() {
  var a2 = Xh(Vh)[0], b = Uh().memoizedState;
  return [a2, b];
}, useMutableSource: Yh, useSyncExternalStore: Zh, useId: wi, unstable_isNewReconciler: false };
function Ci(a2, b) {
  if (a2 && a2.defaultProps) {
    b = A({}, b);
    a2 = a2.defaultProps;
    for (var c in a2) void 0 === b[c] && (b[c] = a2[c]);
    return b;
  }
  return b;
}
function Di(a2, b, c, d) {
  b = a2.memoizedState;
  c = c(d, b);
  c = null === c || void 0 === c ? b : A({}, b, c);
  a2.memoizedState = c;
  0 === a2.lanes && (a2.updateQueue.baseState = c);
}
var Ei = { isMounted: function(a2) {
  return (a2 = a2._reactInternals) ? Vb(a2) === a2 : false;
}, enqueueSetState: function(a2, b, c) {
  a2 = a2._reactInternals;
  var d = R(), e = yi(a2), f2 = mh(d, e);
  f2.payload = b;
  void 0 !== c && null !== c && (f2.callback = c);
  b = nh(a2, f2, e);
  null !== b && (gi(b, a2, e, d), oh(b, a2, e));
}, enqueueReplaceState: function(a2, b, c) {
  a2 = a2._reactInternals;
  var d = R(), e = yi(a2), f2 = mh(d, e);
  f2.tag = 1;
  f2.payload = b;
  void 0 !== c && null !== c && (f2.callback = c);
  b = nh(a2, f2, e);
  null !== b && (gi(b, a2, e, d), oh(b, a2, e));
}, enqueueForceUpdate: function(a2, b) {
  a2 = a2._reactInternals;
  var c = R(), d = yi(a2), e = mh(c, d);
  e.tag = 2;
  void 0 !== b && null !== b && (e.callback = b);
  b = nh(a2, e, d);
  null !== b && (gi(b, a2, d, c), oh(b, a2, d));
} };
function Fi(a2, b, c, d, e, f2, g2) {
  a2 = a2.stateNode;
  return "function" === typeof a2.shouldComponentUpdate ? a2.shouldComponentUpdate(d, f2, g2) : b.prototype && b.prototype.isPureReactComponent ? !Ie(c, d) || !Ie(e, f2) : true;
}
function Gi(a2, b, c) {
  var d = false, e = Vf;
  var f2 = b.contextType;
  "object" === typeof f2 && null !== f2 ? f2 = eh(f2) : (e = Zf(b) ? Xf : H.current, d = b.contextTypes, f2 = (d = null !== d && void 0 !== d) ? Yf(a2, e) : Vf);
  b = new b(c, f2);
  a2.memoizedState = null !== b.state && void 0 !== b.state ? b.state : null;
  b.updater = Ei;
  a2.stateNode = b;
  b._reactInternals = a2;
  d && (a2 = a2.stateNode, a2.__reactInternalMemoizedUnmaskedChildContext = e, a2.__reactInternalMemoizedMaskedChildContext = f2);
  return b;
}
function Hi(a2, b, c, d) {
  a2 = b.state;
  "function" === typeof b.componentWillReceiveProps && b.componentWillReceiveProps(c, d);
  "function" === typeof b.UNSAFE_componentWillReceiveProps && b.UNSAFE_componentWillReceiveProps(c, d);
  b.state !== a2 && Ei.enqueueReplaceState(b, b.state, null);
}
function Ii(a2, b, c, d) {
  var e = a2.stateNode;
  e.props = c;
  e.state = a2.memoizedState;
  e.refs = {};
  kh(a2);
  var f2 = b.contextType;
  "object" === typeof f2 && null !== f2 ? e.context = eh(f2) : (f2 = Zf(b) ? Xf : H.current, e.context = Yf(a2, f2));
  e.state = a2.memoizedState;
  f2 = b.getDerivedStateFromProps;
  "function" === typeof f2 && (Di(a2, b, f2, c), e.state = a2.memoizedState);
  "function" === typeof b.getDerivedStateFromProps || "function" === typeof e.getSnapshotBeforeUpdate || "function" !== typeof e.UNSAFE_componentWillMount && "function" !== typeof e.componentWillMount || (b = e.state, "function" === typeof e.componentWillMount && e.componentWillMount(), "function" === typeof e.UNSAFE_componentWillMount && e.UNSAFE_componentWillMount(), b !== e.state && Ei.enqueueReplaceState(e, e.state, null), qh(a2, c, e, d), e.state = a2.memoizedState);
  "function" === typeof e.componentDidMount && (a2.flags |= 4194308);
}
function Ji(a2, b) {
  try {
    var c = "", d = b;
    do
      c += Pa(d), d = d.return;
    while (d);
    var e = c;
  } catch (f2) {
    e = "\nError generating stack: " + f2.message + "\n" + f2.stack;
  }
  return { value: a2, source: b, stack: e, digest: null };
}
function Ki(a2, b, c) {
  return { value: a2, source: null, stack: null != c ? c : null, digest: null != b ? b : null };
}
function Li(a2, b) {
  try {
    console.error(b.value);
  } catch (c) {
    setTimeout(function() {
      throw c;
    });
  }
}
var Mi = "function" === typeof WeakMap ? WeakMap : Map;
function Ni(a2, b, c) {
  c = mh(-1, c);
  c.tag = 3;
  c.payload = { element: null };
  var d = b.value;
  c.callback = function() {
    Oi || (Oi = true, Pi = d);
    Li(a2, b);
  };
  return c;
}
function Qi(a2, b, c) {
  c = mh(-1, c);
  c.tag = 3;
  var d = a2.type.getDerivedStateFromError;
  if ("function" === typeof d) {
    var e = b.value;
    c.payload = function() {
      return d(e);
    };
    c.callback = function() {
      Li(a2, b);
    };
  }
  var f2 = a2.stateNode;
  null !== f2 && "function" === typeof f2.componentDidCatch && (c.callback = function() {
    Li(a2, b);
    "function" !== typeof d && (null === Ri ? Ri = /* @__PURE__ */ new Set([this]) : Ri.add(this));
    var c2 = b.stack;
    this.componentDidCatch(b.value, { componentStack: null !== c2 ? c2 : "" });
  });
  return c;
}
function Si(a2, b, c) {
  var d = a2.pingCache;
  if (null === d) {
    d = a2.pingCache = new Mi();
    var e = /* @__PURE__ */ new Set();
    d.set(b, e);
  } else e = d.get(b), void 0 === e && (e = /* @__PURE__ */ new Set(), d.set(b, e));
  e.has(c) || (e.add(c), a2 = Ti.bind(null, a2, b, c), b.then(a2, a2));
}
function Ui(a2) {
  do {
    var b;
    if (b = 13 === a2.tag) b = a2.memoizedState, b = null !== b ? null !== b.dehydrated ? true : false : true;
    if (b) return a2;
    a2 = a2.return;
  } while (null !== a2);
  return null;
}
function Vi(a2, b, c, d, e) {
  if (0 === (a2.mode & 1)) return a2 === b ? a2.flags |= 65536 : (a2.flags |= 128, c.flags |= 131072, c.flags &= -52805, 1 === c.tag && (null === c.alternate ? c.tag = 17 : (b = mh(-1, 1), b.tag = 2, nh(c, b, 1))), c.lanes |= 1), a2;
  a2.flags |= 65536;
  a2.lanes = e;
  return a2;
}
var Wi = ua.ReactCurrentOwner, dh = false;
function Xi(a2, b, c, d) {
  b.child = null === a2 ? Vg(b, null, c, d) : Ug(b, a2.child, c, d);
}
function Yi(a2, b, c, d, e) {
  c = c.render;
  var f2 = b.ref;
  ch(b, e);
  d = Nh(a2, b, c, d, f2, e);
  c = Sh();
  if (null !== a2 && !dh) return b.updateQueue = a2.updateQueue, b.flags &= -2053, a2.lanes &= ~e, Zi(a2, b, e);
  I && c && vg(b);
  b.flags |= 1;
  Xi(a2, b, d, e);
  return b.child;
}
function $i(a2, b, c, d, e) {
  if (null === a2) {
    var f2 = c.type;
    if ("function" === typeof f2 && !aj(f2) && void 0 === f2.defaultProps && null === c.compare && void 0 === c.defaultProps) return b.tag = 15, b.type = f2, bj(a2, b, f2, d, e);
    a2 = Rg(c.type, null, d, b, b.mode, e);
    a2.ref = b.ref;
    a2.return = b;
    return b.child = a2;
  }
  f2 = a2.child;
  if (0 === (a2.lanes & e)) {
    var g2 = f2.memoizedProps;
    c = c.compare;
    c = null !== c ? c : Ie;
    if (c(g2, d) && a2.ref === b.ref) return Zi(a2, b, e);
  }
  b.flags |= 1;
  a2 = Pg(f2, d);
  a2.ref = b.ref;
  a2.return = b;
  return b.child = a2;
}
function bj(a2, b, c, d, e) {
  if (null !== a2) {
    var f2 = a2.memoizedProps;
    if (Ie(f2, d) && a2.ref === b.ref) if (dh = false, b.pendingProps = d = f2, 0 !== (a2.lanes & e)) 0 !== (a2.flags & 131072) && (dh = true);
    else return b.lanes = a2.lanes, Zi(a2, b, e);
  }
  return cj(a2, b, c, d, e);
}
function dj(a2, b, c) {
  var d = b.pendingProps, e = d.children, f2 = null !== a2 ? a2.memoizedState : null;
  if ("hidden" === d.mode) if (0 === (b.mode & 1)) b.memoizedState = { baseLanes: 0, cachePool: null, transitions: null }, G(ej, fj), fj |= c;
  else {
    if (0 === (c & 1073741824)) return a2 = null !== f2 ? f2.baseLanes | c : c, b.lanes = b.childLanes = 1073741824, b.memoizedState = { baseLanes: a2, cachePool: null, transitions: null }, b.updateQueue = null, G(ej, fj), fj |= a2, null;
    b.memoizedState = { baseLanes: 0, cachePool: null, transitions: null };
    d = null !== f2 ? f2.baseLanes : c;
    G(ej, fj);
    fj |= d;
  }
  else null !== f2 ? (d = f2.baseLanes | c, b.memoizedState = null) : d = c, G(ej, fj), fj |= d;
  Xi(a2, b, e, c);
  return b.child;
}
function gj(a2, b) {
  var c = b.ref;
  if (null === a2 && null !== c || null !== a2 && a2.ref !== c) b.flags |= 512, b.flags |= 2097152;
}
function cj(a2, b, c, d, e) {
  var f2 = Zf(c) ? Xf : H.current;
  f2 = Yf(b, f2);
  ch(b, e);
  c = Nh(a2, b, c, d, f2, e);
  d = Sh();
  if (null !== a2 && !dh) return b.updateQueue = a2.updateQueue, b.flags &= -2053, a2.lanes &= ~e, Zi(a2, b, e);
  I && d && vg(b);
  b.flags |= 1;
  Xi(a2, b, c, e);
  return b.child;
}
function hj(a2, b, c, d, e) {
  if (Zf(c)) {
    var f2 = true;
    cg(b);
  } else f2 = false;
  ch(b, e);
  if (null === b.stateNode) ij(a2, b), Gi(b, c, d), Ii(b, c, d, e), d = true;
  else if (null === a2) {
    var g2 = b.stateNode, h = b.memoizedProps;
    g2.props = h;
    var k2 = g2.context, l2 = c.contextType;
    "object" === typeof l2 && null !== l2 ? l2 = eh(l2) : (l2 = Zf(c) ? Xf : H.current, l2 = Yf(b, l2));
    var m2 = c.getDerivedStateFromProps, q2 = "function" === typeof m2 || "function" === typeof g2.getSnapshotBeforeUpdate;
    q2 || "function" !== typeof g2.UNSAFE_componentWillReceiveProps && "function" !== typeof g2.componentWillReceiveProps || (h !== d || k2 !== l2) && Hi(b, g2, d, l2);
    jh = false;
    var r2 = b.memoizedState;
    g2.state = r2;
    qh(b, d, g2, e);
    k2 = b.memoizedState;
    h !== d || r2 !== k2 || Wf.current || jh ? ("function" === typeof m2 && (Di(b, c, m2, d), k2 = b.memoizedState), (h = jh || Fi(b, c, h, d, r2, k2, l2)) ? (q2 || "function" !== typeof g2.UNSAFE_componentWillMount && "function" !== typeof g2.componentWillMount || ("function" === typeof g2.componentWillMount && g2.componentWillMount(), "function" === typeof g2.UNSAFE_componentWillMount && g2.UNSAFE_componentWillMount()), "function" === typeof g2.componentDidMount && (b.flags |= 4194308)) : ("function" === typeof g2.componentDidMount && (b.flags |= 4194308), b.memoizedProps = d, b.memoizedState = k2), g2.props = d, g2.state = k2, g2.context = l2, d = h) : ("function" === typeof g2.componentDidMount && (b.flags |= 4194308), d = false);
  } else {
    g2 = b.stateNode;
    lh(a2, b);
    h = b.memoizedProps;
    l2 = b.type === b.elementType ? h : Ci(b.type, h);
    g2.props = l2;
    q2 = b.pendingProps;
    r2 = g2.context;
    k2 = c.contextType;
    "object" === typeof k2 && null !== k2 ? k2 = eh(k2) : (k2 = Zf(c) ? Xf : H.current, k2 = Yf(b, k2));
    var y2 = c.getDerivedStateFromProps;
    (m2 = "function" === typeof y2 || "function" === typeof g2.getSnapshotBeforeUpdate) || "function" !== typeof g2.UNSAFE_componentWillReceiveProps && "function" !== typeof g2.componentWillReceiveProps || (h !== q2 || r2 !== k2) && Hi(b, g2, d, k2);
    jh = false;
    r2 = b.memoizedState;
    g2.state = r2;
    qh(b, d, g2, e);
    var n2 = b.memoizedState;
    h !== q2 || r2 !== n2 || Wf.current || jh ? ("function" === typeof y2 && (Di(b, c, y2, d), n2 = b.memoizedState), (l2 = jh || Fi(b, c, l2, d, r2, n2, k2) || false) ? (m2 || "function" !== typeof g2.UNSAFE_componentWillUpdate && "function" !== typeof g2.componentWillUpdate || ("function" === typeof g2.componentWillUpdate && g2.componentWillUpdate(d, n2, k2), "function" === typeof g2.UNSAFE_componentWillUpdate && g2.UNSAFE_componentWillUpdate(d, n2, k2)), "function" === typeof g2.componentDidUpdate && (b.flags |= 4), "function" === typeof g2.getSnapshotBeforeUpdate && (b.flags |= 1024)) : ("function" !== typeof g2.componentDidUpdate || h === a2.memoizedProps && r2 === a2.memoizedState || (b.flags |= 4), "function" !== typeof g2.getSnapshotBeforeUpdate || h === a2.memoizedProps && r2 === a2.memoizedState || (b.flags |= 1024), b.memoizedProps = d, b.memoizedState = n2), g2.props = d, g2.state = n2, g2.context = k2, d = l2) : ("function" !== typeof g2.componentDidUpdate || h === a2.memoizedProps && r2 === a2.memoizedState || (b.flags |= 4), "function" !== typeof g2.getSnapshotBeforeUpdate || h === a2.memoizedProps && r2 === a2.memoizedState || (b.flags |= 1024), d = false);
  }
  return jj(a2, b, c, d, f2, e);
}
function jj(a2, b, c, d, e, f2) {
  gj(a2, b);
  var g2 = 0 !== (b.flags & 128);
  if (!d && !g2) return e && dg(b, c, false), Zi(a2, b, f2);
  d = b.stateNode;
  Wi.current = b;
  var h = g2 && "function" !== typeof c.getDerivedStateFromError ? null : d.render();
  b.flags |= 1;
  null !== a2 && g2 ? (b.child = Ug(b, a2.child, null, f2), b.child = Ug(b, null, h, f2)) : Xi(a2, b, h, f2);
  b.memoizedState = d.state;
  e && dg(b, c, true);
  return b.child;
}
function kj(a2) {
  var b = a2.stateNode;
  b.pendingContext ? ag(a2, b.pendingContext, b.pendingContext !== b.context) : b.context && ag(a2, b.context, false);
  yh(a2, b.containerInfo);
}
function lj(a2, b, c, d, e) {
  Ig();
  Jg(e);
  b.flags |= 256;
  Xi(a2, b, c, d);
  return b.child;
}
var mj = { dehydrated: null, treeContext: null, retryLane: 0 };
function nj(a2) {
  return { baseLanes: a2, cachePool: null, transitions: null };
}
function oj(a2, b, c) {
  var d = b.pendingProps, e = L.current, f2 = false, g2 = 0 !== (b.flags & 128), h;
  (h = g2) || (h = null !== a2 && null === a2.memoizedState ? false : 0 !== (e & 2));
  if (h) f2 = true, b.flags &= -129;
  else if (null === a2 || null !== a2.memoizedState) e |= 1;
  G(L, e & 1);
  if (null === a2) {
    Eg(b);
    a2 = b.memoizedState;
    if (null !== a2 && (a2 = a2.dehydrated, null !== a2)) return 0 === (b.mode & 1) ? b.lanes = 1 : "$!" === a2.data ? b.lanes = 8 : b.lanes = 1073741824, null;
    g2 = d.children;
    a2 = d.fallback;
    return f2 ? (d = b.mode, f2 = b.child, g2 = { mode: "hidden", children: g2 }, 0 === (d & 1) && null !== f2 ? (f2.childLanes = 0, f2.pendingProps = g2) : f2 = pj(g2, d, 0, null), a2 = Tg(a2, d, c, null), f2.return = b, a2.return = b, f2.sibling = a2, b.child = f2, b.child.memoizedState = nj(c), b.memoizedState = mj, a2) : qj(b, g2);
  }
  e = a2.memoizedState;
  if (null !== e && (h = e.dehydrated, null !== h)) return rj(a2, b, g2, d, h, e, c);
  if (f2) {
    f2 = d.fallback;
    g2 = b.mode;
    e = a2.child;
    h = e.sibling;
    var k2 = { mode: "hidden", children: d.children };
    0 === (g2 & 1) && b.child !== e ? (d = b.child, d.childLanes = 0, d.pendingProps = k2, b.deletions = null) : (d = Pg(e, k2), d.subtreeFlags = e.subtreeFlags & 14680064);
    null !== h ? f2 = Pg(h, f2) : (f2 = Tg(f2, g2, c, null), f2.flags |= 2);
    f2.return = b;
    d.return = b;
    d.sibling = f2;
    b.child = d;
    d = f2;
    f2 = b.child;
    g2 = a2.child.memoizedState;
    g2 = null === g2 ? nj(c) : { baseLanes: g2.baseLanes | c, cachePool: null, transitions: g2.transitions };
    f2.memoizedState = g2;
    f2.childLanes = a2.childLanes & ~c;
    b.memoizedState = mj;
    return d;
  }
  f2 = a2.child;
  a2 = f2.sibling;
  d = Pg(f2, { mode: "visible", children: d.children });
  0 === (b.mode & 1) && (d.lanes = c);
  d.return = b;
  d.sibling = null;
  null !== a2 && (c = b.deletions, null === c ? (b.deletions = [a2], b.flags |= 16) : c.push(a2));
  b.child = d;
  b.memoizedState = null;
  return d;
}
function qj(a2, b) {
  b = pj({ mode: "visible", children: b }, a2.mode, 0, null);
  b.return = a2;
  return a2.child = b;
}
function sj(a2, b, c, d) {
  null !== d && Jg(d);
  Ug(b, a2.child, null, c);
  a2 = qj(b, b.pendingProps.children);
  a2.flags |= 2;
  b.memoizedState = null;
  return a2;
}
function rj(a2, b, c, d, e, f2, g2) {
  if (c) {
    if (b.flags & 256) return b.flags &= -257, d = Ki(Error(p$1(422))), sj(a2, b, g2, d);
    if (null !== b.memoizedState) return b.child = a2.child, b.flags |= 128, null;
    f2 = d.fallback;
    e = b.mode;
    d = pj({ mode: "visible", children: d.children }, e, 0, null);
    f2 = Tg(f2, e, g2, null);
    f2.flags |= 2;
    d.return = b;
    f2.return = b;
    d.sibling = f2;
    b.child = d;
    0 !== (b.mode & 1) && Ug(b, a2.child, null, g2);
    b.child.memoizedState = nj(g2);
    b.memoizedState = mj;
    return f2;
  }
  if (0 === (b.mode & 1)) return sj(a2, b, g2, null);
  if ("$!" === e.data) {
    d = e.nextSibling && e.nextSibling.dataset;
    if (d) var h = d.dgst;
    d = h;
    f2 = Error(p$1(419));
    d = Ki(f2, d, void 0);
    return sj(a2, b, g2, d);
  }
  h = 0 !== (g2 & a2.childLanes);
  if (dh || h) {
    d = Q;
    if (null !== d) {
      switch (g2 & -g2) {
        case 4:
          e = 2;
          break;
        case 16:
          e = 8;
          break;
        case 64:
        case 128:
        case 256:
        case 512:
        case 1024:
        case 2048:
        case 4096:
        case 8192:
        case 16384:
        case 32768:
        case 65536:
        case 131072:
        case 262144:
        case 524288:
        case 1048576:
        case 2097152:
        case 4194304:
        case 8388608:
        case 16777216:
        case 33554432:
        case 67108864:
          e = 32;
          break;
        case 536870912:
          e = 268435456;
          break;
        default:
          e = 0;
      }
      e = 0 !== (e & (d.suspendedLanes | g2)) ? 0 : e;
      0 !== e && e !== f2.retryLane && (f2.retryLane = e, ih(a2, e), gi(d, a2, e, -1));
    }
    tj();
    d = Ki(Error(p$1(421)));
    return sj(a2, b, g2, d);
  }
  if ("$?" === e.data) return b.flags |= 128, b.child = a2.child, b = uj.bind(null, a2), e._reactRetry = b, null;
  a2 = f2.treeContext;
  yg = Lf(e.nextSibling);
  xg = b;
  I = true;
  zg = null;
  null !== a2 && (og[pg++] = rg, og[pg++] = sg, og[pg++] = qg, rg = a2.id, sg = a2.overflow, qg = b);
  b = qj(b, d.children);
  b.flags |= 4096;
  return b;
}
function vj(a2, b, c) {
  a2.lanes |= b;
  var d = a2.alternate;
  null !== d && (d.lanes |= b);
  bh(a2.return, b, c);
}
function wj(a2, b, c, d, e) {
  var f2 = a2.memoizedState;
  null === f2 ? a2.memoizedState = { isBackwards: b, rendering: null, renderingStartTime: 0, last: d, tail: c, tailMode: e } : (f2.isBackwards = b, f2.rendering = null, f2.renderingStartTime = 0, f2.last = d, f2.tail = c, f2.tailMode = e);
}
function xj(a2, b, c) {
  var d = b.pendingProps, e = d.revealOrder, f2 = d.tail;
  Xi(a2, b, d.children, c);
  d = L.current;
  if (0 !== (d & 2)) d = d & 1 | 2, b.flags |= 128;
  else {
    if (null !== a2 && 0 !== (a2.flags & 128)) a: for (a2 = b.child; null !== a2; ) {
      if (13 === a2.tag) null !== a2.memoizedState && vj(a2, c, b);
      else if (19 === a2.tag) vj(a2, c, b);
      else if (null !== a2.child) {
        a2.child.return = a2;
        a2 = a2.child;
        continue;
      }
      if (a2 === b) break a;
      for (; null === a2.sibling; ) {
        if (null === a2.return || a2.return === b) break a;
        a2 = a2.return;
      }
      a2.sibling.return = a2.return;
      a2 = a2.sibling;
    }
    d &= 1;
  }
  G(L, d);
  if (0 === (b.mode & 1)) b.memoizedState = null;
  else switch (e) {
    case "forwards":
      c = b.child;
      for (e = null; null !== c; ) a2 = c.alternate, null !== a2 && null === Ch(a2) && (e = c), c = c.sibling;
      c = e;
      null === c ? (e = b.child, b.child = null) : (e = c.sibling, c.sibling = null);
      wj(b, false, e, c, f2);
      break;
    case "backwards":
      c = null;
      e = b.child;
      for (b.child = null; null !== e; ) {
        a2 = e.alternate;
        if (null !== a2 && null === Ch(a2)) {
          b.child = e;
          break;
        }
        a2 = e.sibling;
        e.sibling = c;
        c = e;
        e = a2;
      }
      wj(b, true, c, null, f2);
      break;
    case "together":
      wj(b, false, null, null, void 0);
      break;
    default:
      b.memoizedState = null;
  }
  return b.child;
}
function ij(a2, b) {
  0 === (b.mode & 1) && null !== a2 && (a2.alternate = null, b.alternate = null, b.flags |= 2);
}
function Zi(a2, b, c) {
  null !== a2 && (b.dependencies = a2.dependencies);
  rh |= b.lanes;
  if (0 === (c & b.childLanes)) return null;
  if (null !== a2 && b.child !== a2.child) throw Error(p$1(153));
  if (null !== b.child) {
    a2 = b.child;
    c = Pg(a2, a2.pendingProps);
    b.child = c;
    for (c.return = b; null !== a2.sibling; ) a2 = a2.sibling, c = c.sibling = Pg(a2, a2.pendingProps), c.return = b;
    c.sibling = null;
  }
  return b.child;
}
function yj(a2, b, c) {
  switch (b.tag) {
    case 3:
      kj(b);
      Ig();
      break;
    case 5:
      Ah(b);
      break;
    case 1:
      Zf(b.type) && cg(b);
      break;
    case 4:
      yh(b, b.stateNode.containerInfo);
      break;
    case 10:
      var d = b.type._context, e = b.memoizedProps.value;
      G(Wg, d._currentValue);
      d._currentValue = e;
      break;
    case 13:
      d = b.memoizedState;
      if (null !== d) {
        if (null !== d.dehydrated) return G(L, L.current & 1), b.flags |= 128, null;
        if (0 !== (c & b.child.childLanes)) return oj(a2, b, c);
        G(L, L.current & 1);
        a2 = Zi(a2, b, c);
        return null !== a2 ? a2.sibling : null;
      }
      G(L, L.current & 1);
      break;
    case 19:
      d = 0 !== (c & b.childLanes);
      if (0 !== (a2.flags & 128)) {
        if (d) return xj(a2, b, c);
        b.flags |= 128;
      }
      e = b.memoizedState;
      null !== e && (e.rendering = null, e.tail = null, e.lastEffect = null);
      G(L, L.current);
      if (d) break;
      else return null;
    case 22:
    case 23:
      return b.lanes = 0, dj(a2, b, c);
  }
  return Zi(a2, b, c);
}
var zj, Aj, Bj, Cj;
zj = function(a2, b) {
  for (var c = b.child; null !== c; ) {
    if (5 === c.tag || 6 === c.tag) a2.appendChild(c.stateNode);
    else if (4 !== c.tag && null !== c.child) {
      c.child.return = c;
      c = c.child;
      continue;
    }
    if (c === b) break;
    for (; null === c.sibling; ) {
      if (null === c.return || c.return === b) return;
      c = c.return;
    }
    c.sibling.return = c.return;
    c = c.sibling;
  }
};
Aj = function() {
};
Bj = function(a2, b, c, d) {
  var e = a2.memoizedProps;
  if (e !== d) {
    a2 = b.stateNode;
    xh(uh.current);
    var f2 = null;
    switch (c) {
      case "input":
        e = Ya(a2, e);
        d = Ya(a2, d);
        f2 = [];
        break;
      case "select":
        e = A({}, e, { value: void 0 });
        d = A({}, d, { value: void 0 });
        f2 = [];
        break;
      case "textarea":
        e = gb(a2, e);
        d = gb(a2, d);
        f2 = [];
        break;
      default:
        "function" !== typeof e.onClick && "function" === typeof d.onClick && (a2.onclick = Bf);
    }
    ub(c, d);
    var g2;
    c = null;
    for (l2 in e) if (!d.hasOwnProperty(l2) && e.hasOwnProperty(l2) && null != e[l2]) if ("style" === l2) {
      var h = e[l2];
      for (g2 in h) h.hasOwnProperty(g2) && (c || (c = {}), c[g2] = "");
    } else "dangerouslySetInnerHTML" !== l2 && "children" !== l2 && "suppressContentEditableWarning" !== l2 && "suppressHydrationWarning" !== l2 && "autoFocus" !== l2 && (ea.hasOwnProperty(l2) ? f2 || (f2 = []) : (f2 = f2 || []).push(l2, null));
    for (l2 in d) {
      var k2 = d[l2];
      h = null != e ? e[l2] : void 0;
      if (d.hasOwnProperty(l2) && k2 !== h && (null != k2 || null != h)) if ("style" === l2) if (h) {
        for (g2 in h) !h.hasOwnProperty(g2) || k2 && k2.hasOwnProperty(g2) || (c || (c = {}), c[g2] = "");
        for (g2 in k2) k2.hasOwnProperty(g2) && h[g2] !== k2[g2] && (c || (c = {}), c[g2] = k2[g2]);
      } else c || (f2 || (f2 = []), f2.push(
        l2,
        c
      )), c = k2;
      else "dangerouslySetInnerHTML" === l2 ? (k2 = k2 ? k2.__html : void 0, h = h ? h.__html : void 0, null != k2 && h !== k2 && (f2 = f2 || []).push(l2, k2)) : "children" === l2 ? "string" !== typeof k2 && "number" !== typeof k2 || (f2 = f2 || []).push(l2, "" + k2) : "suppressContentEditableWarning" !== l2 && "suppressHydrationWarning" !== l2 && (ea.hasOwnProperty(l2) ? (null != k2 && "onScroll" === l2 && D("scroll", a2), f2 || h === k2 || (f2 = [])) : (f2 = f2 || []).push(l2, k2));
    }
    c && (f2 = f2 || []).push("style", c);
    var l2 = f2;
    if (b.updateQueue = l2) b.flags |= 4;
  }
};
Cj = function(a2, b, c, d) {
  c !== d && (b.flags |= 4);
};
function Dj(a2, b) {
  if (!I) switch (a2.tailMode) {
    case "hidden":
      b = a2.tail;
      for (var c = null; null !== b; ) null !== b.alternate && (c = b), b = b.sibling;
      null === c ? a2.tail = null : c.sibling = null;
      break;
    case "collapsed":
      c = a2.tail;
      for (var d = null; null !== c; ) null !== c.alternate && (d = c), c = c.sibling;
      null === d ? b || null === a2.tail ? a2.tail = null : a2.tail.sibling = null : d.sibling = null;
  }
}
function S(a2) {
  var b = null !== a2.alternate && a2.alternate.child === a2.child, c = 0, d = 0;
  if (b) for (var e = a2.child; null !== e; ) c |= e.lanes | e.childLanes, d |= e.subtreeFlags & 14680064, d |= e.flags & 14680064, e.return = a2, e = e.sibling;
  else for (e = a2.child; null !== e; ) c |= e.lanes | e.childLanes, d |= e.subtreeFlags, d |= e.flags, e.return = a2, e = e.sibling;
  a2.subtreeFlags |= d;
  a2.childLanes = c;
  return b;
}
function Ej(a2, b, c) {
  var d = b.pendingProps;
  wg(b);
  switch (b.tag) {
    case 2:
    case 16:
    case 15:
    case 0:
    case 11:
    case 7:
    case 8:
    case 12:
    case 9:
    case 14:
      return S(b), null;
    case 1:
      return Zf(b.type) && $f(), S(b), null;
    case 3:
      d = b.stateNode;
      zh();
      E(Wf);
      E(H);
      Eh();
      d.pendingContext && (d.context = d.pendingContext, d.pendingContext = null);
      if (null === a2 || null === a2.child) Gg(b) ? b.flags |= 4 : null === a2 || a2.memoizedState.isDehydrated && 0 === (b.flags & 256) || (b.flags |= 1024, null !== zg && (Fj(zg), zg = null));
      Aj(a2, b);
      S(b);
      return null;
    case 5:
      Bh(b);
      var e = xh(wh.current);
      c = b.type;
      if (null !== a2 && null != b.stateNode) Bj(a2, b, c, d, e), a2.ref !== b.ref && (b.flags |= 512, b.flags |= 2097152);
      else {
        if (!d) {
          if (null === b.stateNode) throw Error(p$1(166));
          S(b);
          return null;
        }
        a2 = xh(uh.current);
        if (Gg(b)) {
          d = b.stateNode;
          c = b.type;
          var f2 = b.memoizedProps;
          d[Of] = b;
          d[Pf] = f2;
          a2 = 0 !== (b.mode & 1);
          switch (c) {
            case "dialog":
              D("cancel", d);
              D("close", d);
              break;
            case "iframe":
            case "object":
            case "embed":
              D("load", d);
              break;
            case "video":
            case "audio":
              for (e = 0; e < lf.length; e++) D(lf[e], d);
              break;
            case "source":
              D("error", d);
              break;
            case "img":
            case "image":
            case "link":
              D(
                "error",
                d
              );
              D("load", d);
              break;
            case "details":
              D("toggle", d);
              break;
            case "input":
              Za(d, f2);
              D("invalid", d);
              break;
            case "select":
              d._wrapperState = { wasMultiple: !!f2.multiple };
              D("invalid", d);
              break;
            case "textarea":
              hb(d, f2), D("invalid", d);
          }
          ub(c, f2);
          e = null;
          for (var g2 in f2) if (f2.hasOwnProperty(g2)) {
            var h = f2[g2];
            "children" === g2 ? "string" === typeof h ? d.textContent !== h && (true !== f2.suppressHydrationWarning && Af(d.textContent, h, a2), e = ["children", h]) : "number" === typeof h && d.textContent !== "" + h && (true !== f2.suppressHydrationWarning && Af(
              d.textContent,
              h,
              a2
            ), e = ["children", "" + h]) : ea.hasOwnProperty(g2) && null != h && "onScroll" === g2 && D("scroll", d);
          }
          switch (c) {
            case "input":
              Va(d);
              db(d, f2, true);
              break;
            case "textarea":
              Va(d);
              jb(d);
              break;
            case "select":
            case "option":
              break;
            default:
              "function" === typeof f2.onClick && (d.onclick = Bf);
          }
          d = e;
          b.updateQueue = d;
          null !== d && (b.flags |= 4);
        } else {
          g2 = 9 === e.nodeType ? e : e.ownerDocument;
          "http://www.w3.org/1999/xhtml" === a2 && (a2 = kb(c));
          "http://www.w3.org/1999/xhtml" === a2 ? "script" === c ? (a2 = g2.createElement("div"), a2.innerHTML = "<script><\/script>", a2 = a2.removeChild(a2.firstChild)) : "string" === typeof d.is ? a2 = g2.createElement(c, { is: d.is }) : (a2 = g2.createElement(c), "select" === c && (g2 = a2, d.multiple ? g2.multiple = true : d.size && (g2.size = d.size))) : a2 = g2.createElementNS(a2, c);
          a2[Of] = b;
          a2[Pf] = d;
          zj(a2, b, false, false);
          b.stateNode = a2;
          a: {
            g2 = vb(c, d);
            switch (c) {
              case "dialog":
                D("cancel", a2);
                D("close", a2);
                e = d;
                break;
              case "iframe":
              case "object":
              case "embed":
                D("load", a2);
                e = d;
                break;
              case "video":
              case "audio":
                for (e = 0; e < lf.length; e++) D(lf[e], a2);
                e = d;
                break;
              case "source":
                D("error", a2);
                e = d;
                break;
              case "img":
              case "image":
              case "link":
                D(
                  "error",
                  a2
                );
                D("load", a2);
                e = d;
                break;
              case "details":
                D("toggle", a2);
                e = d;
                break;
              case "input":
                Za(a2, d);
                e = Ya(a2, d);
                D("invalid", a2);
                break;
              case "option":
                e = d;
                break;
              case "select":
                a2._wrapperState = { wasMultiple: !!d.multiple };
                e = A({}, d, { value: void 0 });
                D("invalid", a2);
                break;
              case "textarea":
                hb(a2, d);
                e = gb(a2, d);
                D("invalid", a2);
                break;
              default:
                e = d;
            }
            ub(c, e);
            h = e;
            for (f2 in h) if (h.hasOwnProperty(f2)) {
              var k2 = h[f2];
              "style" === f2 ? sb(a2, k2) : "dangerouslySetInnerHTML" === f2 ? (k2 = k2 ? k2.__html : void 0, null != k2 && nb(a2, k2)) : "children" === f2 ? "string" === typeof k2 ? ("textarea" !== c || "" !== k2) && ob(a2, k2) : "number" === typeof k2 && ob(a2, "" + k2) : "suppressContentEditableWarning" !== f2 && "suppressHydrationWarning" !== f2 && "autoFocus" !== f2 && (ea.hasOwnProperty(f2) ? null != k2 && "onScroll" === f2 && D("scroll", a2) : null != k2 && ta(a2, f2, k2, g2));
            }
            switch (c) {
              case "input":
                Va(a2);
                db(a2, d, false);
                break;
              case "textarea":
                Va(a2);
                jb(a2);
                break;
              case "option":
                null != d.value && a2.setAttribute("value", "" + Sa(d.value));
                break;
              case "select":
                a2.multiple = !!d.multiple;
                f2 = d.value;
                null != f2 ? fb(a2, !!d.multiple, f2, false) : null != d.defaultValue && fb(
                  a2,
                  !!d.multiple,
                  d.defaultValue,
                  true
                );
                break;
              default:
                "function" === typeof e.onClick && (a2.onclick = Bf);
            }
            switch (c) {
              case "button":
              case "input":
              case "select":
              case "textarea":
                d = !!d.autoFocus;
                break a;
              case "img":
                d = true;
                break a;
              default:
                d = false;
            }
          }
          d && (b.flags |= 4);
        }
        null !== b.ref && (b.flags |= 512, b.flags |= 2097152);
      }
      S(b);
      return null;
    case 6:
      if (a2 && null != b.stateNode) Cj(a2, b, a2.memoizedProps, d);
      else {
        if ("string" !== typeof d && null === b.stateNode) throw Error(p$1(166));
        c = xh(wh.current);
        xh(uh.current);
        if (Gg(b)) {
          d = b.stateNode;
          c = b.memoizedProps;
          d[Of] = b;
          if (f2 = d.nodeValue !== c) {
            if (a2 = xg, null !== a2) switch (a2.tag) {
              case 3:
                Af(d.nodeValue, c, 0 !== (a2.mode & 1));
                break;
              case 5:
                true !== a2.memoizedProps.suppressHydrationWarning && Af(d.nodeValue, c, 0 !== (a2.mode & 1));
            }
          }
          f2 && (b.flags |= 4);
        } else d = (9 === c.nodeType ? c : c.ownerDocument).createTextNode(d), d[Of] = b, b.stateNode = d;
      }
      S(b);
      return null;
    case 13:
      E(L);
      d = b.memoizedState;
      if (null === a2 || null !== a2.memoizedState && null !== a2.memoizedState.dehydrated) {
        if (I && null !== yg && 0 !== (b.mode & 1) && 0 === (b.flags & 128)) Hg(), Ig(), b.flags |= 98560, f2 = false;
        else if (f2 = Gg(b), null !== d && null !== d.dehydrated) {
          if (null === a2) {
            if (!f2) throw Error(p$1(318));
            f2 = b.memoizedState;
            f2 = null !== f2 ? f2.dehydrated : null;
            if (!f2) throw Error(p$1(317));
            f2[Of] = b;
          } else Ig(), 0 === (b.flags & 128) && (b.memoizedState = null), b.flags |= 4;
          S(b);
          f2 = false;
        } else null !== zg && (Fj(zg), zg = null), f2 = true;
        if (!f2) return b.flags & 65536 ? b : null;
      }
      if (0 !== (b.flags & 128)) return b.lanes = c, b;
      d = null !== d;
      d !== (null !== a2 && null !== a2.memoizedState) && d && (b.child.flags |= 8192, 0 !== (b.mode & 1) && (null === a2 || 0 !== (L.current & 1) ? 0 === T && (T = 3) : tj()));
      null !== b.updateQueue && (b.flags |= 4);
      S(b);
      return null;
    case 4:
      return zh(), Aj(a2, b), null === a2 && sf(b.stateNode.containerInfo), S(b), null;
    case 10:
      return ah(b.type._context), S(b), null;
    case 17:
      return Zf(b.type) && $f(), S(b), null;
    case 19:
      E(L);
      f2 = b.memoizedState;
      if (null === f2) return S(b), null;
      d = 0 !== (b.flags & 128);
      g2 = f2.rendering;
      if (null === g2) if (d) Dj(f2, false);
      else {
        if (0 !== T || null !== a2 && 0 !== (a2.flags & 128)) for (a2 = b.child; null !== a2; ) {
          g2 = Ch(a2);
          if (null !== g2) {
            b.flags |= 128;
            Dj(f2, false);
            d = g2.updateQueue;
            null !== d && (b.updateQueue = d, b.flags |= 4);
            b.subtreeFlags = 0;
            d = c;
            for (c = b.child; null !== c; ) f2 = c, a2 = d, f2.flags &= 14680066, g2 = f2.alternate, null === g2 ? (f2.childLanes = 0, f2.lanes = a2, f2.child = null, f2.subtreeFlags = 0, f2.memoizedProps = null, f2.memoizedState = null, f2.updateQueue = null, f2.dependencies = null, f2.stateNode = null) : (f2.childLanes = g2.childLanes, f2.lanes = g2.lanes, f2.child = g2.child, f2.subtreeFlags = 0, f2.deletions = null, f2.memoizedProps = g2.memoizedProps, f2.memoizedState = g2.memoizedState, f2.updateQueue = g2.updateQueue, f2.type = g2.type, a2 = g2.dependencies, f2.dependencies = null === a2 ? null : { lanes: a2.lanes, firstContext: a2.firstContext }), c = c.sibling;
            G(L, L.current & 1 | 2);
            return b.child;
          }
          a2 = a2.sibling;
        }
        null !== f2.tail && B() > Gj && (b.flags |= 128, d = true, Dj(f2, false), b.lanes = 4194304);
      }
      else {
        if (!d) if (a2 = Ch(g2), null !== a2) {
          if (b.flags |= 128, d = true, c = a2.updateQueue, null !== c && (b.updateQueue = c, b.flags |= 4), Dj(f2, true), null === f2.tail && "hidden" === f2.tailMode && !g2.alternate && !I) return S(b), null;
        } else 2 * B() - f2.renderingStartTime > Gj && 1073741824 !== c && (b.flags |= 128, d = true, Dj(f2, false), b.lanes = 4194304);
        f2.isBackwards ? (g2.sibling = b.child, b.child = g2) : (c = f2.last, null !== c ? c.sibling = g2 : b.child = g2, f2.last = g2);
      }
      if (null !== f2.tail) return b = f2.tail, f2.rendering = b, f2.tail = b.sibling, f2.renderingStartTime = B(), b.sibling = null, c = L.current, G(L, d ? c & 1 | 2 : c & 1), b;
      S(b);
      return null;
    case 22:
    case 23:
      return Hj(), d = null !== b.memoizedState, null !== a2 && null !== a2.memoizedState !== d && (b.flags |= 8192), d && 0 !== (b.mode & 1) ? 0 !== (fj & 1073741824) && (S(b), b.subtreeFlags & 6 && (b.flags |= 8192)) : S(b), null;
    case 24:
      return null;
    case 25:
      return null;
  }
  throw Error(p$1(156, b.tag));
}
function Ij(a2, b) {
  wg(b);
  switch (b.tag) {
    case 1:
      return Zf(b.type) && $f(), a2 = b.flags, a2 & 65536 ? (b.flags = a2 & -65537 | 128, b) : null;
    case 3:
      return zh(), E(Wf), E(H), Eh(), a2 = b.flags, 0 !== (a2 & 65536) && 0 === (a2 & 128) ? (b.flags = a2 & -65537 | 128, b) : null;
    case 5:
      return Bh(b), null;
    case 13:
      E(L);
      a2 = b.memoizedState;
      if (null !== a2 && null !== a2.dehydrated) {
        if (null === b.alternate) throw Error(p$1(340));
        Ig();
      }
      a2 = b.flags;
      return a2 & 65536 ? (b.flags = a2 & -65537 | 128, b) : null;
    case 19:
      return E(L), null;
    case 4:
      return zh(), null;
    case 10:
      return ah(b.type._context), null;
    case 22:
    case 23:
      return Hj(), null;
    case 24:
      return null;
    default:
      return null;
  }
}
var Jj = false, U = false, Kj = "function" === typeof WeakSet ? WeakSet : Set, V = null;
function Lj(a2, b) {
  var c = a2.ref;
  if (null !== c) if ("function" === typeof c) try {
    c(null);
  } catch (d) {
    W(a2, b, d);
  }
  else c.current = null;
}
function Mj(a2, b, c) {
  try {
    c();
  } catch (d) {
    W(a2, b, d);
  }
}
var Nj = false;
function Oj(a2, b) {
  Cf = dd;
  a2 = Me();
  if (Ne(a2)) {
    if ("selectionStart" in a2) var c = { start: a2.selectionStart, end: a2.selectionEnd };
    else a: {
      c = (c = a2.ownerDocument) && c.defaultView || window;
      var d = c.getSelection && c.getSelection();
      if (d && 0 !== d.rangeCount) {
        c = d.anchorNode;
        var e = d.anchorOffset, f2 = d.focusNode;
        d = d.focusOffset;
        try {
          c.nodeType, f2.nodeType;
        } catch (F2) {
          c = null;
          break a;
        }
        var g2 = 0, h = -1, k2 = -1, l2 = 0, m2 = 0, q2 = a2, r2 = null;
        b: for (; ; ) {
          for (var y2; ; ) {
            q2 !== c || 0 !== e && 3 !== q2.nodeType || (h = g2 + e);
            q2 !== f2 || 0 !== d && 3 !== q2.nodeType || (k2 = g2 + d);
            3 === q2.nodeType && (g2 += q2.nodeValue.length);
            if (null === (y2 = q2.firstChild)) break;
            r2 = q2;
            q2 = y2;
          }
          for (; ; ) {
            if (q2 === a2) break b;
            r2 === c && ++l2 === e && (h = g2);
            r2 === f2 && ++m2 === d && (k2 = g2);
            if (null !== (y2 = q2.nextSibling)) break;
            q2 = r2;
            r2 = q2.parentNode;
          }
          q2 = y2;
        }
        c = -1 === h || -1 === k2 ? null : { start: h, end: k2 };
      } else c = null;
    }
    c = c || { start: 0, end: 0 };
  } else c = null;
  Df = { focusedElem: a2, selectionRange: c };
  dd = false;
  for (V = b; null !== V; ) if (b = V, a2 = b.child, 0 !== (b.subtreeFlags & 1028) && null !== a2) a2.return = b, V = a2;
  else for (; null !== V; ) {
    b = V;
    try {
      var n2 = b.alternate;
      if (0 !== (b.flags & 1024)) switch (b.tag) {
        case 0:
        case 11:
        case 15:
          break;
        case 1:
          if (null !== n2) {
            var t2 = n2.memoizedProps, J2 = n2.memoizedState, x2 = b.stateNode, w2 = x2.getSnapshotBeforeUpdate(b.elementType === b.type ? t2 : Ci(b.type, t2), J2);
            x2.__reactInternalSnapshotBeforeUpdate = w2;
          }
          break;
        case 3:
          var u2 = b.stateNode.containerInfo;
          1 === u2.nodeType ? u2.textContent = "" : 9 === u2.nodeType && u2.documentElement && u2.removeChild(u2.documentElement);
          break;
        case 5:
        case 6:
        case 4:
        case 17:
          break;
        default:
          throw Error(p$1(163));
      }
    } catch (F2) {
      W(b, b.return, F2);
    }
    a2 = b.sibling;
    if (null !== a2) {
      a2.return = b.return;
      V = a2;
      break;
    }
    V = b.return;
  }
  n2 = Nj;
  Nj = false;
  return n2;
}
function Pj(a2, b, c) {
  var d = b.updateQueue;
  d = null !== d ? d.lastEffect : null;
  if (null !== d) {
    var e = d = d.next;
    do {
      if ((e.tag & a2) === a2) {
        var f2 = e.destroy;
        e.destroy = void 0;
        void 0 !== f2 && Mj(b, c, f2);
      }
      e = e.next;
    } while (e !== d);
  }
}
function Qj(a2, b) {
  b = b.updateQueue;
  b = null !== b ? b.lastEffect : null;
  if (null !== b) {
    var c = b = b.next;
    do {
      if ((c.tag & a2) === a2) {
        var d = c.create;
        c.destroy = d();
      }
      c = c.next;
    } while (c !== b);
  }
}
function Rj(a2) {
  var b = a2.ref;
  if (null !== b) {
    var c = a2.stateNode;
    switch (a2.tag) {
      case 5:
        a2 = c;
        break;
      default:
        a2 = c;
    }
    "function" === typeof b ? b(a2) : b.current = a2;
  }
}
function Sj(a2) {
  var b = a2.alternate;
  null !== b && (a2.alternate = null, Sj(b));
  a2.child = null;
  a2.deletions = null;
  a2.sibling = null;
  5 === a2.tag && (b = a2.stateNode, null !== b && (delete b[Of], delete b[Pf], delete b[of], delete b[Qf], delete b[Rf]));
  a2.stateNode = null;
  a2.return = null;
  a2.dependencies = null;
  a2.memoizedProps = null;
  a2.memoizedState = null;
  a2.pendingProps = null;
  a2.stateNode = null;
  a2.updateQueue = null;
}
function Tj(a2) {
  return 5 === a2.tag || 3 === a2.tag || 4 === a2.tag;
}
function Uj(a2) {
  a: for (; ; ) {
    for (; null === a2.sibling; ) {
      if (null === a2.return || Tj(a2.return)) return null;
      a2 = a2.return;
    }
    a2.sibling.return = a2.return;
    for (a2 = a2.sibling; 5 !== a2.tag && 6 !== a2.tag && 18 !== a2.tag; ) {
      if (a2.flags & 2) continue a;
      if (null === a2.child || 4 === a2.tag) continue a;
      else a2.child.return = a2, a2 = a2.child;
    }
    if (!(a2.flags & 2)) return a2.stateNode;
  }
}
function Vj(a2, b, c) {
  var d = a2.tag;
  if (5 === d || 6 === d) a2 = a2.stateNode, b ? 8 === c.nodeType ? c.parentNode.insertBefore(a2, b) : c.insertBefore(a2, b) : (8 === c.nodeType ? (b = c.parentNode, b.insertBefore(a2, c)) : (b = c, b.appendChild(a2)), c = c._reactRootContainer, null !== c && void 0 !== c || null !== b.onclick || (b.onclick = Bf));
  else if (4 !== d && (a2 = a2.child, null !== a2)) for (Vj(a2, b, c), a2 = a2.sibling; null !== a2; ) Vj(a2, b, c), a2 = a2.sibling;
}
function Wj(a2, b, c) {
  var d = a2.tag;
  if (5 === d || 6 === d) a2 = a2.stateNode, b ? c.insertBefore(a2, b) : c.appendChild(a2);
  else if (4 !== d && (a2 = a2.child, null !== a2)) for (Wj(a2, b, c), a2 = a2.sibling; null !== a2; ) Wj(a2, b, c), a2 = a2.sibling;
}
var X = null, Xj = false;
function Yj(a2, b, c) {
  for (c = c.child; null !== c; ) Zj(a2, b, c), c = c.sibling;
}
function Zj(a2, b, c) {
  if (lc && "function" === typeof lc.onCommitFiberUnmount) try {
    lc.onCommitFiberUnmount(kc, c);
  } catch (h) {
  }
  switch (c.tag) {
    case 5:
      U || Lj(c, b);
    case 6:
      var d = X, e = Xj;
      X = null;
      Yj(a2, b, c);
      X = d;
      Xj = e;
      null !== X && (Xj ? (a2 = X, c = c.stateNode, 8 === a2.nodeType ? a2.parentNode.removeChild(c) : a2.removeChild(c)) : X.removeChild(c.stateNode));
      break;
    case 18:
      null !== X && (Xj ? (a2 = X, c = c.stateNode, 8 === a2.nodeType ? Kf(a2.parentNode, c) : 1 === a2.nodeType && Kf(a2, c), bd(a2)) : Kf(X, c.stateNode));
      break;
    case 4:
      d = X;
      e = Xj;
      X = c.stateNode.containerInfo;
      Xj = true;
      Yj(a2, b, c);
      X = d;
      Xj = e;
      break;
    case 0:
    case 11:
    case 14:
    case 15:
      if (!U && (d = c.updateQueue, null !== d && (d = d.lastEffect, null !== d))) {
        e = d = d.next;
        do {
          var f2 = e, g2 = f2.destroy;
          f2 = f2.tag;
          void 0 !== g2 && (0 !== (f2 & 2) ? Mj(c, b, g2) : 0 !== (f2 & 4) && Mj(c, b, g2));
          e = e.next;
        } while (e !== d);
      }
      Yj(a2, b, c);
      break;
    case 1:
      if (!U && (Lj(c, b), d = c.stateNode, "function" === typeof d.componentWillUnmount)) try {
        d.props = c.memoizedProps, d.state = c.memoizedState, d.componentWillUnmount();
      } catch (h) {
        W(c, b, h);
      }
      Yj(a2, b, c);
      break;
    case 21:
      Yj(a2, b, c);
      break;
    case 22:
      c.mode & 1 ? (U = (d = U) || null !== c.memoizedState, Yj(a2, b, c), U = d) : Yj(a2, b, c);
      break;
    default:
      Yj(a2, b, c);
  }
}
function ak(a2) {
  var b = a2.updateQueue;
  if (null !== b) {
    a2.updateQueue = null;
    var c = a2.stateNode;
    null === c && (c = a2.stateNode = new Kj());
    b.forEach(function(b2) {
      var d = bk.bind(null, a2, b2);
      c.has(b2) || (c.add(b2), b2.then(d, d));
    });
  }
}
function ck(a2, b) {
  var c = b.deletions;
  if (null !== c) for (var d = 0; d < c.length; d++) {
    var e = c[d];
    try {
      var f2 = a2, g2 = b, h = g2;
      a: for (; null !== h; ) {
        switch (h.tag) {
          case 5:
            X = h.stateNode;
            Xj = false;
            break a;
          case 3:
            X = h.stateNode.containerInfo;
            Xj = true;
            break a;
          case 4:
            X = h.stateNode.containerInfo;
            Xj = true;
            break a;
        }
        h = h.return;
      }
      if (null === X) throw Error(p$1(160));
      Zj(f2, g2, e);
      X = null;
      Xj = false;
      var k2 = e.alternate;
      null !== k2 && (k2.return = null);
      e.return = null;
    } catch (l2) {
      W(e, b, l2);
    }
  }
  if (b.subtreeFlags & 12854) for (b = b.child; null !== b; ) dk(b, a2), b = b.sibling;
}
function dk(a2, b) {
  var c = a2.alternate, d = a2.flags;
  switch (a2.tag) {
    case 0:
    case 11:
    case 14:
    case 15:
      ck(b, a2);
      ek(a2);
      if (d & 4) {
        try {
          Pj(3, a2, a2.return), Qj(3, a2);
        } catch (t2) {
          W(a2, a2.return, t2);
        }
        try {
          Pj(5, a2, a2.return);
        } catch (t2) {
          W(a2, a2.return, t2);
        }
      }
      break;
    case 1:
      ck(b, a2);
      ek(a2);
      d & 512 && null !== c && Lj(c, c.return);
      break;
    case 5:
      ck(b, a2);
      ek(a2);
      d & 512 && null !== c && Lj(c, c.return);
      if (a2.flags & 32) {
        var e = a2.stateNode;
        try {
          ob(e, "");
        } catch (t2) {
          W(a2, a2.return, t2);
        }
      }
      if (d & 4 && (e = a2.stateNode, null != e)) {
        var f2 = a2.memoizedProps, g2 = null !== c ? c.memoizedProps : f2, h = a2.type, k2 = a2.updateQueue;
        a2.updateQueue = null;
        if (null !== k2) try {
          "input" === h && "radio" === f2.type && null != f2.name && ab(e, f2);
          vb(h, g2);
          var l2 = vb(h, f2);
          for (g2 = 0; g2 < k2.length; g2 += 2) {
            var m2 = k2[g2], q2 = k2[g2 + 1];
            "style" === m2 ? sb(e, q2) : "dangerouslySetInnerHTML" === m2 ? nb(e, q2) : "children" === m2 ? ob(e, q2) : ta(e, m2, q2, l2);
          }
          switch (h) {
            case "input":
              bb(e, f2);
              break;
            case "textarea":
              ib(e, f2);
              break;
            case "select":
              var r2 = e._wrapperState.wasMultiple;
              e._wrapperState.wasMultiple = !!f2.multiple;
              var y2 = f2.value;
              null != y2 ? fb(e, !!f2.multiple, y2, false) : r2 !== !!f2.multiple && (null != f2.defaultValue ? fb(
                e,
                !!f2.multiple,
                f2.defaultValue,
                true
              ) : fb(e, !!f2.multiple, f2.multiple ? [] : "", false));
          }
          e[Pf] = f2;
        } catch (t2) {
          W(a2, a2.return, t2);
        }
      }
      break;
    case 6:
      ck(b, a2);
      ek(a2);
      if (d & 4) {
        if (null === a2.stateNode) throw Error(p$1(162));
        e = a2.stateNode;
        f2 = a2.memoizedProps;
        try {
          e.nodeValue = f2;
        } catch (t2) {
          W(a2, a2.return, t2);
        }
      }
      break;
    case 3:
      ck(b, a2);
      ek(a2);
      if (d & 4 && null !== c && c.memoizedState.isDehydrated) try {
        bd(b.containerInfo);
      } catch (t2) {
        W(a2, a2.return, t2);
      }
      break;
    case 4:
      ck(b, a2);
      ek(a2);
      break;
    case 13:
      ck(b, a2);
      ek(a2);
      e = a2.child;
      e.flags & 8192 && (f2 = null !== e.memoizedState, e.stateNode.isHidden = f2, !f2 || null !== e.alternate && null !== e.alternate.memoizedState || (fk = B()));
      d & 4 && ak(a2);
      break;
    case 22:
      m2 = null !== c && null !== c.memoizedState;
      a2.mode & 1 ? (U = (l2 = U) || m2, ck(b, a2), U = l2) : ck(b, a2);
      ek(a2);
      if (d & 8192) {
        l2 = null !== a2.memoizedState;
        if ((a2.stateNode.isHidden = l2) && !m2 && 0 !== (a2.mode & 1)) for (V = a2, m2 = a2.child; null !== m2; ) {
          for (q2 = V = m2; null !== V; ) {
            r2 = V;
            y2 = r2.child;
            switch (r2.tag) {
              case 0:
              case 11:
              case 14:
              case 15:
                Pj(4, r2, r2.return);
                break;
              case 1:
                Lj(r2, r2.return);
                var n2 = r2.stateNode;
                if ("function" === typeof n2.componentWillUnmount) {
                  d = r2;
                  c = r2.return;
                  try {
                    b = d, n2.props = b.memoizedProps, n2.state = b.memoizedState, n2.componentWillUnmount();
                  } catch (t2) {
                    W(d, c, t2);
                  }
                }
                break;
              case 5:
                Lj(r2, r2.return);
                break;
              case 22:
                if (null !== r2.memoizedState) {
                  gk(q2);
                  continue;
                }
            }
            null !== y2 ? (y2.return = r2, V = y2) : gk(q2);
          }
          m2 = m2.sibling;
        }
        a: for (m2 = null, q2 = a2; ; ) {
          if (5 === q2.tag) {
            if (null === m2) {
              m2 = q2;
              try {
                e = q2.stateNode, l2 ? (f2 = e.style, "function" === typeof f2.setProperty ? f2.setProperty("display", "none", "important") : f2.display = "none") : (h = q2.stateNode, k2 = q2.memoizedProps.style, g2 = void 0 !== k2 && null !== k2 && k2.hasOwnProperty("display") ? k2.display : null, h.style.display = rb("display", g2));
              } catch (t2) {
                W(a2, a2.return, t2);
              }
            }
          } else if (6 === q2.tag) {
            if (null === m2) try {
              q2.stateNode.nodeValue = l2 ? "" : q2.memoizedProps;
            } catch (t2) {
              W(a2, a2.return, t2);
            }
          } else if ((22 !== q2.tag && 23 !== q2.tag || null === q2.memoizedState || q2 === a2) && null !== q2.child) {
            q2.child.return = q2;
            q2 = q2.child;
            continue;
          }
          if (q2 === a2) break a;
          for (; null === q2.sibling; ) {
            if (null === q2.return || q2.return === a2) break a;
            m2 === q2 && (m2 = null);
            q2 = q2.return;
          }
          m2 === q2 && (m2 = null);
          q2.sibling.return = q2.return;
          q2 = q2.sibling;
        }
      }
      break;
    case 19:
      ck(b, a2);
      ek(a2);
      d & 4 && ak(a2);
      break;
    case 21:
      break;
    default:
      ck(
        b,
        a2
      ), ek(a2);
  }
}
function ek(a2) {
  var b = a2.flags;
  if (b & 2) {
    try {
      a: {
        for (var c = a2.return; null !== c; ) {
          if (Tj(c)) {
            var d = c;
            break a;
          }
          c = c.return;
        }
        throw Error(p$1(160));
      }
      switch (d.tag) {
        case 5:
          var e = d.stateNode;
          d.flags & 32 && (ob(e, ""), d.flags &= -33);
          var f2 = Uj(a2);
          Wj(a2, f2, e);
          break;
        case 3:
        case 4:
          var g2 = d.stateNode.containerInfo, h = Uj(a2);
          Vj(a2, h, g2);
          break;
        default:
          throw Error(p$1(161));
      }
    } catch (k2) {
      W(a2, a2.return, k2);
    }
    a2.flags &= -3;
  }
  b & 4096 && (a2.flags &= -4097);
}
function hk(a2, b, c) {
  V = a2;
  ik(a2);
}
function ik(a2, b, c) {
  for (var d = 0 !== (a2.mode & 1); null !== V; ) {
    var e = V, f2 = e.child;
    if (22 === e.tag && d) {
      var g2 = null !== e.memoizedState || Jj;
      if (!g2) {
        var h = e.alternate, k2 = null !== h && null !== h.memoizedState || U;
        h = Jj;
        var l2 = U;
        Jj = g2;
        if ((U = k2) && !l2) for (V = e; null !== V; ) g2 = V, k2 = g2.child, 22 === g2.tag && null !== g2.memoizedState ? jk(e) : null !== k2 ? (k2.return = g2, V = k2) : jk(e);
        for (; null !== f2; ) V = f2, ik(f2), f2 = f2.sibling;
        V = e;
        Jj = h;
        U = l2;
      }
      kk(a2);
    } else 0 !== (e.subtreeFlags & 8772) && null !== f2 ? (f2.return = e, V = f2) : kk(a2);
  }
}
function kk(a2) {
  for (; null !== V; ) {
    var b = V;
    if (0 !== (b.flags & 8772)) {
      var c = b.alternate;
      try {
        if (0 !== (b.flags & 8772)) switch (b.tag) {
          case 0:
          case 11:
          case 15:
            U || Qj(5, b);
            break;
          case 1:
            var d = b.stateNode;
            if (b.flags & 4 && !U) if (null === c) d.componentDidMount();
            else {
              var e = b.elementType === b.type ? c.memoizedProps : Ci(b.type, c.memoizedProps);
              d.componentDidUpdate(e, c.memoizedState, d.__reactInternalSnapshotBeforeUpdate);
            }
            var f2 = b.updateQueue;
            null !== f2 && sh(b, f2, d);
            break;
          case 3:
            var g2 = b.updateQueue;
            if (null !== g2) {
              c = null;
              if (null !== b.child) switch (b.child.tag) {
                case 5:
                  c = b.child.stateNode;
                  break;
                case 1:
                  c = b.child.stateNode;
              }
              sh(b, g2, c);
            }
            break;
          case 5:
            var h = b.stateNode;
            if (null === c && b.flags & 4) {
              c = h;
              var k2 = b.memoizedProps;
              switch (b.type) {
                case "button":
                case "input":
                case "select":
                case "textarea":
                  k2.autoFocus && c.focus();
                  break;
                case "img":
                  k2.src && (c.src = k2.src);
              }
            }
            break;
          case 6:
            break;
          case 4:
            break;
          case 12:
            break;
          case 13:
            if (null === b.memoizedState) {
              var l2 = b.alternate;
              if (null !== l2) {
                var m2 = l2.memoizedState;
                if (null !== m2) {
                  var q2 = m2.dehydrated;
                  null !== q2 && bd(q2);
                }
              }
            }
            break;
          case 19:
          case 17:
          case 21:
          case 22:
          case 23:
          case 25:
            break;
          default:
            throw Error(p$1(163));
        }
        U || b.flags & 512 && Rj(b);
      } catch (r2) {
        W(b, b.return, r2);
      }
    }
    if (b === a2) {
      V = null;
      break;
    }
    c = b.sibling;
    if (null !== c) {
      c.return = b.return;
      V = c;
      break;
    }
    V = b.return;
  }
}
function gk(a2) {
  for (; null !== V; ) {
    var b = V;
    if (b === a2) {
      V = null;
      break;
    }
    var c = b.sibling;
    if (null !== c) {
      c.return = b.return;
      V = c;
      break;
    }
    V = b.return;
  }
}
function jk(a2) {
  for (; null !== V; ) {
    var b = V;
    try {
      switch (b.tag) {
        case 0:
        case 11:
        case 15:
          var c = b.return;
          try {
            Qj(4, b);
          } catch (k2) {
            W(b, c, k2);
          }
          break;
        case 1:
          var d = b.stateNode;
          if ("function" === typeof d.componentDidMount) {
            var e = b.return;
            try {
              d.componentDidMount();
            } catch (k2) {
              W(b, e, k2);
            }
          }
          var f2 = b.return;
          try {
            Rj(b);
          } catch (k2) {
            W(b, f2, k2);
          }
          break;
        case 5:
          var g2 = b.return;
          try {
            Rj(b);
          } catch (k2) {
            W(b, g2, k2);
          }
      }
    } catch (k2) {
      W(b, b.return, k2);
    }
    if (b === a2) {
      V = null;
      break;
    }
    var h = b.sibling;
    if (null !== h) {
      h.return = b.return;
      V = h;
      break;
    }
    V = b.return;
  }
}
var lk = Math.ceil, mk = ua.ReactCurrentDispatcher, nk = ua.ReactCurrentOwner, ok = ua.ReactCurrentBatchConfig, K = 0, Q = null, Y = null, Z$1 = 0, fj = 0, ej = Uf(0), T = 0, pk = null, rh = 0, qk = 0, rk = 0, sk = null, tk = null, fk = 0, Gj = Infinity, uk = null, Oi = false, Pi = null, Ri = null, vk = false, wk = null, xk = 0, yk = 0, zk = null, Ak = -1, Bk = 0;
function R() {
  return 0 !== (K & 6) ? B() : -1 !== Ak ? Ak : Ak = B();
}
function yi(a2) {
  if (0 === (a2.mode & 1)) return 1;
  if (0 !== (K & 2) && 0 !== Z$1) return Z$1 & -Z$1;
  if (null !== Kg.transition) return 0 === Bk && (Bk = yc()), Bk;
  a2 = C;
  if (0 !== a2) return a2;
  a2 = window.event;
  a2 = void 0 === a2 ? 16 : jd(a2.type);
  return a2;
}
function gi(a2, b, c, d) {
  if (50 < yk) throw yk = 0, zk = null, Error(p$1(185));
  Ac(a2, c, d);
  if (0 === (K & 2) || a2 !== Q) a2 === Q && (0 === (K & 2) && (qk |= c), 4 === T && Ck(a2, Z$1)), Dk(a2, d), 1 === c && 0 === K && 0 === (b.mode & 1) && (Gj = B() + 500, fg && jg());
}
function Dk(a2, b) {
  var c = a2.callbackNode;
  wc(a2, b);
  var d = uc(a2, a2 === Q ? Z$1 : 0);
  if (0 === d) null !== c && bc(c), a2.callbackNode = null, a2.callbackPriority = 0;
  else if (b = d & -d, a2.callbackPriority !== b) {
    null != c && bc(c);
    if (1 === b) 0 === a2.tag ? ig(Ek.bind(null, a2)) : hg(Ek.bind(null, a2)), Jf(function() {
      0 === (K & 6) && jg();
    }), c = null;
    else {
      switch (Dc(d)) {
        case 1:
          c = fc;
          break;
        case 4:
          c = gc;
          break;
        case 16:
          c = hc;
          break;
        case 536870912:
          c = jc;
          break;
        default:
          c = hc;
      }
      c = Fk(c, Gk.bind(null, a2));
    }
    a2.callbackPriority = b;
    a2.callbackNode = c;
  }
}
function Gk(a2, b) {
  Ak = -1;
  Bk = 0;
  if (0 !== (K & 6)) throw Error(p$1(327));
  var c = a2.callbackNode;
  if (Hk() && a2.callbackNode !== c) return null;
  var d = uc(a2, a2 === Q ? Z$1 : 0);
  if (0 === d) return null;
  if (0 !== (d & 30) || 0 !== (d & a2.expiredLanes) || b) b = Ik(a2, d);
  else {
    b = d;
    var e = K;
    K |= 2;
    var f2 = Jk();
    if (Q !== a2 || Z$1 !== b) uk = null, Gj = B() + 500, Kk(a2, b);
    do
      try {
        Lk();
        break;
      } catch (h) {
        Mk(a2, h);
      }
    while (1);
    $g();
    mk.current = f2;
    K = e;
    null !== Y ? b = 0 : (Q = null, Z$1 = 0, b = T);
  }
  if (0 !== b) {
    2 === b && (e = xc(a2), 0 !== e && (d = e, b = Nk(a2, e)));
    if (1 === b) throw c = pk, Kk(a2, 0), Ck(a2, d), Dk(a2, B()), c;
    if (6 === b) Ck(a2, d);
    else {
      e = a2.current.alternate;
      if (0 === (d & 30) && !Ok(e) && (b = Ik(a2, d), 2 === b && (f2 = xc(a2), 0 !== f2 && (d = f2, b = Nk(a2, f2))), 1 === b)) throw c = pk, Kk(a2, 0), Ck(a2, d), Dk(a2, B()), c;
      a2.finishedWork = e;
      a2.finishedLanes = d;
      switch (b) {
        case 0:
        case 1:
          throw Error(p$1(345));
        case 2:
          Pk(a2, tk, uk);
          break;
        case 3:
          Ck(a2, d);
          if ((d & 130023424) === d && (b = fk + 500 - B(), 10 < b)) {
            if (0 !== uc(a2, 0)) break;
            e = a2.suspendedLanes;
            if ((e & d) !== d) {
              R();
              a2.pingedLanes |= a2.suspendedLanes & e;
              break;
            }
            a2.timeoutHandle = Ff(Pk.bind(null, a2, tk, uk), b);
            break;
          }
          Pk(a2, tk, uk);
          break;
        case 4:
          Ck(a2, d);
          if ((d & 4194240) === d) break;
          b = a2.eventTimes;
          for (e = -1; 0 < d; ) {
            var g2 = 31 - oc(d);
            f2 = 1 << g2;
            g2 = b[g2];
            g2 > e && (e = g2);
            d &= ~f2;
          }
          d = e;
          d = B() - d;
          d = (120 > d ? 120 : 480 > d ? 480 : 1080 > d ? 1080 : 1920 > d ? 1920 : 3e3 > d ? 3e3 : 4320 > d ? 4320 : 1960 * lk(d / 1960)) - d;
          if (10 < d) {
            a2.timeoutHandle = Ff(Pk.bind(null, a2, tk, uk), d);
            break;
          }
          Pk(a2, tk, uk);
          break;
        case 5:
          Pk(a2, tk, uk);
          break;
        default:
          throw Error(p$1(329));
      }
    }
  }
  Dk(a2, B());
  return a2.callbackNode === c ? Gk.bind(null, a2) : null;
}
function Nk(a2, b) {
  var c = sk;
  a2.current.memoizedState.isDehydrated && (Kk(a2, b).flags |= 256);
  a2 = Ik(a2, b);
  2 !== a2 && (b = tk, tk = c, null !== b && Fj(b));
  return a2;
}
function Fj(a2) {
  null === tk ? tk = a2 : tk.push.apply(tk, a2);
}
function Ok(a2) {
  for (var b = a2; ; ) {
    if (b.flags & 16384) {
      var c = b.updateQueue;
      if (null !== c && (c = c.stores, null !== c)) for (var d = 0; d < c.length; d++) {
        var e = c[d], f2 = e.getSnapshot;
        e = e.value;
        try {
          if (!He(f2(), e)) return false;
        } catch (g2) {
          return false;
        }
      }
    }
    c = b.child;
    if (b.subtreeFlags & 16384 && null !== c) c.return = b, b = c;
    else {
      if (b === a2) break;
      for (; null === b.sibling; ) {
        if (null === b.return || b.return === a2) return true;
        b = b.return;
      }
      b.sibling.return = b.return;
      b = b.sibling;
    }
  }
  return true;
}
function Ck(a2, b) {
  b &= ~rk;
  b &= ~qk;
  a2.suspendedLanes |= b;
  a2.pingedLanes &= ~b;
  for (a2 = a2.expirationTimes; 0 < b; ) {
    var c = 31 - oc(b), d = 1 << c;
    a2[c] = -1;
    b &= ~d;
  }
}
function Ek(a2) {
  if (0 !== (K & 6)) throw Error(p$1(327));
  Hk();
  var b = uc(a2, 0);
  if (0 === (b & 1)) return Dk(a2, B()), null;
  var c = Ik(a2, b);
  if (0 !== a2.tag && 2 === c) {
    var d = xc(a2);
    0 !== d && (b = d, c = Nk(a2, d));
  }
  if (1 === c) throw c = pk, Kk(a2, 0), Ck(a2, b), Dk(a2, B()), c;
  if (6 === c) throw Error(p$1(345));
  a2.finishedWork = a2.current.alternate;
  a2.finishedLanes = b;
  Pk(a2, tk, uk);
  Dk(a2, B());
  return null;
}
function Qk(a2, b) {
  var c = K;
  K |= 1;
  try {
    return a2(b);
  } finally {
    K = c, 0 === K && (Gj = B() + 500, fg && jg());
  }
}
function Rk(a2) {
  null !== wk && 0 === wk.tag && 0 === (K & 6) && Hk();
  var b = K;
  K |= 1;
  var c = ok.transition, d = C;
  try {
    if (ok.transition = null, C = 1, a2) return a2();
  } finally {
    C = d, ok.transition = c, K = b, 0 === (K & 6) && jg();
  }
}
function Hj() {
  fj = ej.current;
  E(ej);
}
function Kk(a2, b) {
  a2.finishedWork = null;
  a2.finishedLanes = 0;
  var c = a2.timeoutHandle;
  -1 !== c && (a2.timeoutHandle = -1, Gf(c));
  if (null !== Y) for (c = Y.return; null !== c; ) {
    var d = c;
    wg(d);
    switch (d.tag) {
      case 1:
        d = d.type.childContextTypes;
        null !== d && void 0 !== d && $f();
        break;
      case 3:
        zh();
        E(Wf);
        E(H);
        Eh();
        break;
      case 5:
        Bh(d);
        break;
      case 4:
        zh();
        break;
      case 13:
        E(L);
        break;
      case 19:
        E(L);
        break;
      case 10:
        ah(d.type._context);
        break;
      case 22:
      case 23:
        Hj();
    }
    c = c.return;
  }
  Q = a2;
  Y = a2 = Pg(a2.current, null);
  Z$1 = fj = b;
  T = 0;
  pk = null;
  rk = qk = rh = 0;
  tk = sk = null;
  if (null !== fh) {
    for (b = 0; b < fh.length; b++) if (c = fh[b], d = c.interleaved, null !== d) {
      c.interleaved = null;
      var e = d.next, f2 = c.pending;
      if (null !== f2) {
        var g2 = f2.next;
        f2.next = e;
        d.next = g2;
      }
      c.pending = d;
    }
    fh = null;
  }
  return a2;
}
function Mk(a2, b) {
  do {
    var c = Y;
    try {
      $g();
      Fh.current = Rh;
      if (Ih) {
        for (var d = M$1.memoizedState; null !== d; ) {
          var e = d.queue;
          null !== e && (e.pending = null);
          d = d.next;
        }
        Ih = false;
      }
      Hh = 0;
      O = N$1 = M$1 = null;
      Jh = false;
      Kh = 0;
      nk.current = null;
      if (null === c || null === c.return) {
        T = 1;
        pk = b;
        Y = null;
        break;
      }
      a: {
        var f2 = a2, g2 = c.return, h = c, k2 = b;
        b = Z$1;
        h.flags |= 32768;
        if (null !== k2 && "object" === typeof k2 && "function" === typeof k2.then) {
          var l2 = k2, m2 = h, q2 = m2.tag;
          if (0 === (m2.mode & 1) && (0 === q2 || 11 === q2 || 15 === q2)) {
            var r2 = m2.alternate;
            r2 ? (m2.updateQueue = r2.updateQueue, m2.memoizedState = r2.memoizedState, m2.lanes = r2.lanes) : (m2.updateQueue = null, m2.memoizedState = null);
          }
          var y2 = Ui(g2);
          if (null !== y2) {
            y2.flags &= -257;
            Vi(y2, g2, h, f2, b);
            y2.mode & 1 && Si(f2, l2, b);
            b = y2;
            k2 = l2;
            var n2 = b.updateQueue;
            if (null === n2) {
              var t2 = /* @__PURE__ */ new Set();
              t2.add(k2);
              b.updateQueue = t2;
            } else n2.add(k2);
            break a;
          } else {
            if (0 === (b & 1)) {
              Si(f2, l2, b);
              tj();
              break a;
            }
            k2 = Error(p$1(426));
          }
        } else if (I && h.mode & 1) {
          var J2 = Ui(g2);
          if (null !== J2) {
            0 === (J2.flags & 65536) && (J2.flags |= 256);
            Vi(J2, g2, h, f2, b);
            Jg(Ji(k2, h));
            break a;
          }
        }
        f2 = k2 = Ji(k2, h);
        4 !== T && (T = 2);
        null === sk ? sk = [f2] : sk.push(f2);
        f2 = g2;
        do {
          switch (f2.tag) {
            case 3:
              f2.flags |= 65536;
              b &= -b;
              f2.lanes |= b;
              var x2 = Ni(f2, k2, b);
              ph(f2, x2);
              break a;
            case 1:
              h = k2;
              var w2 = f2.type, u2 = f2.stateNode;
              if (0 === (f2.flags & 128) && ("function" === typeof w2.getDerivedStateFromError || null !== u2 && "function" === typeof u2.componentDidCatch && (null === Ri || !Ri.has(u2)))) {
                f2.flags |= 65536;
                b &= -b;
                f2.lanes |= b;
                var F2 = Qi(f2, h, b);
                ph(f2, F2);
                break a;
              }
          }
          f2 = f2.return;
        } while (null !== f2);
      }
      Sk(c);
    } catch (na) {
      b = na;
      Y === c && null !== c && (Y = c = c.return);
      continue;
    }
    break;
  } while (1);
}
function Jk() {
  var a2 = mk.current;
  mk.current = Rh;
  return null === a2 ? Rh : a2;
}
function tj() {
  if (0 === T || 3 === T || 2 === T) T = 4;
  null === Q || 0 === (rh & 268435455) && 0 === (qk & 268435455) || Ck(Q, Z$1);
}
function Ik(a2, b) {
  var c = K;
  K |= 2;
  var d = Jk();
  if (Q !== a2 || Z$1 !== b) uk = null, Kk(a2, b);
  do
    try {
      Tk();
      break;
    } catch (e) {
      Mk(a2, e);
    }
  while (1);
  $g();
  K = c;
  mk.current = d;
  if (null !== Y) throw Error(p$1(261));
  Q = null;
  Z$1 = 0;
  return T;
}
function Tk() {
  for (; null !== Y; ) Uk(Y);
}
function Lk() {
  for (; null !== Y && !cc(); ) Uk(Y);
}
function Uk(a2) {
  var b = Vk(a2.alternate, a2, fj);
  a2.memoizedProps = a2.pendingProps;
  null === b ? Sk(a2) : Y = b;
  nk.current = null;
}
function Sk(a2) {
  var b = a2;
  do {
    var c = b.alternate;
    a2 = b.return;
    if (0 === (b.flags & 32768)) {
      if (c = Ej(c, b, fj), null !== c) {
        Y = c;
        return;
      }
    } else {
      c = Ij(c, b);
      if (null !== c) {
        c.flags &= 32767;
        Y = c;
        return;
      }
      if (null !== a2) a2.flags |= 32768, a2.subtreeFlags = 0, a2.deletions = null;
      else {
        T = 6;
        Y = null;
        return;
      }
    }
    b = b.sibling;
    if (null !== b) {
      Y = b;
      return;
    }
    Y = b = a2;
  } while (null !== b);
  0 === T && (T = 5);
}
function Pk(a2, b, c) {
  var d = C, e = ok.transition;
  try {
    ok.transition = null, C = 1, Wk(a2, b, c, d);
  } finally {
    ok.transition = e, C = d;
  }
  return null;
}
function Wk(a2, b, c, d) {
  do
    Hk();
  while (null !== wk);
  if (0 !== (K & 6)) throw Error(p$1(327));
  c = a2.finishedWork;
  var e = a2.finishedLanes;
  if (null === c) return null;
  a2.finishedWork = null;
  a2.finishedLanes = 0;
  if (c === a2.current) throw Error(p$1(177));
  a2.callbackNode = null;
  a2.callbackPriority = 0;
  var f2 = c.lanes | c.childLanes;
  Bc(a2, f2);
  a2 === Q && (Y = Q = null, Z$1 = 0);
  0 === (c.subtreeFlags & 2064) && 0 === (c.flags & 2064) || vk || (vk = true, Fk(hc, function() {
    Hk();
    return null;
  }));
  f2 = 0 !== (c.flags & 15990);
  if (0 !== (c.subtreeFlags & 15990) || f2) {
    f2 = ok.transition;
    ok.transition = null;
    var g2 = C;
    C = 1;
    var h = K;
    K |= 4;
    nk.current = null;
    Oj(a2, c);
    dk(c, a2);
    Oe(Df);
    dd = !!Cf;
    Df = Cf = null;
    a2.current = c;
    hk(c);
    dc();
    K = h;
    C = g2;
    ok.transition = f2;
  } else a2.current = c;
  vk && (vk = false, wk = a2, xk = e);
  f2 = a2.pendingLanes;
  0 === f2 && (Ri = null);
  mc(c.stateNode);
  Dk(a2, B());
  if (null !== b) for (d = a2.onRecoverableError, c = 0; c < b.length; c++) e = b[c], d(e.value, { componentStack: e.stack, digest: e.digest });
  if (Oi) throw Oi = false, a2 = Pi, Pi = null, a2;
  0 !== (xk & 1) && 0 !== a2.tag && Hk();
  f2 = a2.pendingLanes;
  0 !== (f2 & 1) ? a2 === zk ? yk++ : (yk = 0, zk = a2) : yk = 0;
  jg();
  return null;
}
function Hk() {
  if (null !== wk) {
    var a2 = Dc(xk), b = ok.transition, c = C;
    try {
      ok.transition = null;
      C = 16 > a2 ? 16 : a2;
      if (null === wk) var d = false;
      else {
        a2 = wk;
        wk = null;
        xk = 0;
        if (0 !== (K & 6)) throw Error(p$1(331));
        var e = K;
        K |= 4;
        for (V = a2.current; null !== V; ) {
          var f2 = V, g2 = f2.child;
          if (0 !== (V.flags & 16)) {
            var h = f2.deletions;
            if (null !== h) {
              for (var k2 = 0; k2 < h.length; k2++) {
                var l2 = h[k2];
                for (V = l2; null !== V; ) {
                  var m2 = V;
                  switch (m2.tag) {
                    case 0:
                    case 11:
                    case 15:
                      Pj(8, m2, f2);
                  }
                  var q2 = m2.child;
                  if (null !== q2) q2.return = m2, V = q2;
                  else for (; null !== V; ) {
                    m2 = V;
                    var r2 = m2.sibling, y2 = m2.return;
                    Sj(m2);
                    if (m2 === l2) {
                      V = null;
                      break;
                    }
                    if (null !== r2) {
                      r2.return = y2;
                      V = r2;
                      break;
                    }
                    V = y2;
                  }
                }
              }
              var n2 = f2.alternate;
              if (null !== n2) {
                var t2 = n2.child;
                if (null !== t2) {
                  n2.child = null;
                  do {
                    var J2 = t2.sibling;
                    t2.sibling = null;
                    t2 = J2;
                  } while (null !== t2);
                }
              }
              V = f2;
            }
          }
          if (0 !== (f2.subtreeFlags & 2064) && null !== g2) g2.return = f2, V = g2;
          else b: for (; null !== V; ) {
            f2 = V;
            if (0 !== (f2.flags & 2048)) switch (f2.tag) {
              case 0:
              case 11:
              case 15:
                Pj(9, f2, f2.return);
            }
            var x2 = f2.sibling;
            if (null !== x2) {
              x2.return = f2.return;
              V = x2;
              break b;
            }
            V = f2.return;
          }
        }
        var w2 = a2.current;
        for (V = w2; null !== V; ) {
          g2 = V;
          var u2 = g2.child;
          if (0 !== (g2.subtreeFlags & 2064) && null !== u2) u2.return = g2, V = u2;
          else b: for (g2 = w2; null !== V; ) {
            h = V;
            if (0 !== (h.flags & 2048)) try {
              switch (h.tag) {
                case 0:
                case 11:
                case 15:
                  Qj(9, h);
              }
            } catch (na) {
              W(h, h.return, na);
            }
            if (h === g2) {
              V = null;
              break b;
            }
            var F2 = h.sibling;
            if (null !== F2) {
              F2.return = h.return;
              V = F2;
              break b;
            }
            V = h.return;
          }
        }
        K = e;
        jg();
        if (lc && "function" === typeof lc.onPostCommitFiberRoot) try {
          lc.onPostCommitFiberRoot(kc, a2);
        } catch (na) {
        }
        d = true;
      }
      return d;
    } finally {
      C = c, ok.transition = b;
    }
  }
  return false;
}
function Xk(a2, b, c) {
  b = Ji(c, b);
  b = Ni(a2, b, 1);
  a2 = nh(a2, b, 1);
  b = R();
  null !== a2 && (Ac(a2, 1, b), Dk(a2, b));
}
function W(a2, b, c) {
  if (3 === a2.tag) Xk(a2, a2, c);
  else for (; null !== b; ) {
    if (3 === b.tag) {
      Xk(b, a2, c);
      break;
    } else if (1 === b.tag) {
      var d = b.stateNode;
      if ("function" === typeof b.type.getDerivedStateFromError || "function" === typeof d.componentDidCatch && (null === Ri || !Ri.has(d))) {
        a2 = Ji(c, a2);
        a2 = Qi(b, a2, 1);
        b = nh(b, a2, 1);
        a2 = R();
        null !== b && (Ac(b, 1, a2), Dk(b, a2));
        break;
      }
    }
    b = b.return;
  }
}
function Ti(a2, b, c) {
  var d = a2.pingCache;
  null !== d && d.delete(b);
  b = R();
  a2.pingedLanes |= a2.suspendedLanes & c;
  Q === a2 && (Z$1 & c) === c && (4 === T || 3 === T && (Z$1 & 130023424) === Z$1 && 500 > B() - fk ? Kk(a2, 0) : rk |= c);
  Dk(a2, b);
}
function Yk(a2, b) {
  0 === b && (0 === (a2.mode & 1) ? b = 1 : (b = sc, sc <<= 1, 0 === (sc & 130023424) && (sc = 4194304)));
  var c = R();
  a2 = ih(a2, b);
  null !== a2 && (Ac(a2, b, c), Dk(a2, c));
}
function uj(a2) {
  var b = a2.memoizedState, c = 0;
  null !== b && (c = b.retryLane);
  Yk(a2, c);
}
function bk(a2, b) {
  var c = 0;
  switch (a2.tag) {
    case 13:
      var d = a2.stateNode;
      var e = a2.memoizedState;
      null !== e && (c = e.retryLane);
      break;
    case 19:
      d = a2.stateNode;
      break;
    default:
      throw Error(p$1(314));
  }
  null !== d && d.delete(b);
  Yk(a2, c);
}
var Vk;
Vk = function(a2, b, c) {
  if (null !== a2) if (a2.memoizedProps !== b.pendingProps || Wf.current) dh = true;
  else {
    if (0 === (a2.lanes & c) && 0 === (b.flags & 128)) return dh = false, yj(a2, b, c);
    dh = 0 !== (a2.flags & 131072) ? true : false;
  }
  else dh = false, I && 0 !== (b.flags & 1048576) && ug(b, ng, b.index);
  b.lanes = 0;
  switch (b.tag) {
    case 2:
      var d = b.type;
      ij(a2, b);
      a2 = b.pendingProps;
      var e = Yf(b, H.current);
      ch(b, c);
      e = Nh(null, b, d, a2, e, c);
      var f2 = Sh();
      b.flags |= 1;
      "object" === typeof e && null !== e && "function" === typeof e.render && void 0 === e.$$typeof ? (b.tag = 1, b.memoizedState = null, b.updateQueue = null, Zf(d) ? (f2 = true, cg(b)) : f2 = false, b.memoizedState = null !== e.state && void 0 !== e.state ? e.state : null, kh(b), e.updater = Ei, b.stateNode = e, e._reactInternals = b, Ii(b, d, a2, c), b = jj(null, b, d, true, f2, c)) : (b.tag = 0, I && f2 && vg(b), Xi(null, b, e, c), b = b.child);
      return b;
    case 16:
      d = b.elementType;
      a: {
        ij(a2, b);
        a2 = b.pendingProps;
        e = d._init;
        d = e(d._payload);
        b.type = d;
        e = b.tag = Zk(d);
        a2 = Ci(d, a2);
        switch (e) {
          case 0:
            b = cj(null, b, d, a2, c);
            break a;
          case 1:
            b = hj(null, b, d, a2, c);
            break a;
          case 11:
            b = Yi(null, b, d, a2, c);
            break a;
          case 14:
            b = $i(null, b, d, Ci(d.type, a2), c);
            break a;
        }
        throw Error(p$1(
          306,
          d,
          ""
        ));
      }
      return b;
    case 0:
      return d = b.type, e = b.pendingProps, e = b.elementType === d ? e : Ci(d, e), cj(a2, b, d, e, c);
    case 1:
      return d = b.type, e = b.pendingProps, e = b.elementType === d ? e : Ci(d, e), hj(a2, b, d, e, c);
    case 3:
      a: {
        kj(b);
        if (null === a2) throw Error(p$1(387));
        d = b.pendingProps;
        f2 = b.memoizedState;
        e = f2.element;
        lh(a2, b);
        qh(b, d, null, c);
        var g2 = b.memoizedState;
        d = g2.element;
        if (f2.isDehydrated) if (f2 = { element: d, isDehydrated: false, cache: g2.cache, pendingSuspenseBoundaries: g2.pendingSuspenseBoundaries, transitions: g2.transitions }, b.updateQueue.baseState = f2, b.memoizedState = f2, b.flags & 256) {
          e = Ji(Error(p$1(423)), b);
          b = lj(a2, b, d, c, e);
          break a;
        } else if (d !== e) {
          e = Ji(Error(p$1(424)), b);
          b = lj(a2, b, d, c, e);
          break a;
        } else for (yg = Lf(b.stateNode.containerInfo.firstChild), xg = b, I = true, zg = null, c = Vg(b, null, d, c), b.child = c; c; ) c.flags = c.flags & -3 | 4096, c = c.sibling;
        else {
          Ig();
          if (d === e) {
            b = Zi(a2, b, c);
            break a;
          }
          Xi(a2, b, d, c);
        }
        b = b.child;
      }
      return b;
    case 5:
      return Ah(b), null === a2 && Eg(b), d = b.type, e = b.pendingProps, f2 = null !== a2 ? a2.memoizedProps : null, g2 = e.children, Ef(d, e) ? g2 = null : null !== f2 && Ef(d, f2) && (b.flags |= 32), gj(a2, b), Xi(a2, b, g2, c), b.child;
    case 6:
      return null === a2 && Eg(b), null;
    case 13:
      return oj(a2, b, c);
    case 4:
      return yh(b, b.stateNode.containerInfo), d = b.pendingProps, null === a2 ? b.child = Ug(b, null, d, c) : Xi(a2, b, d, c), b.child;
    case 11:
      return d = b.type, e = b.pendingProps, e = b.elementType === d ? e : Ci(d, e), Yi(a2, b, d, e, c);
    case 7:
      return Xi(a2, b, b.pendingProps, c), b.child;
    case 8:
      return Xi(a2, b, b.pendingProps.children, c), b.child;
    case 12:
      return Xi(a2, b, b.pendingProps.children, c), b.child;
    case 10:
      a: {
        d = b.type._context;
        e = b.pendingProps;
        f2 = b.memoizedProps;
        g2 = e.value;
        G(Wg, d._currentValue);
        d._currentValue = g2;
        if (null !== f2) if (He(f2.value, g2)) {
          if (f2.children === e.children && !Wf.current) {
            b = Zi(a2, b, c);
            break a;
          }
        } else for (f2 = b.child, null !== f2 && (f2.return = b); null !== f2; ) {
          var h = f2.dependencies;
          if (null !== h) {
            g2 = f2.child;
            for (var k2 = h.firstContext; null !== k2; ) {
              if (k2.context === d) {
                if (1 === f2.tag) {
                  k2 = mh(-1, c & -c);
                  k2.tag = 2;
                  var l2 = f2.updateQueue;
                  if (null !== l2) {
                    l2 = l2.shared;
                    var m2 = l2.pending;
                    null === m2 ? k2.next = k2 : (k2.next = m2.next, m2.next = k2);
                    l2.pending = k2;
                  }
                }
                f2.lanes |= c;
                k2 = f2.alternate;
                null !== k2 && (k2.lanes |= c);
                bh(
                  f2.return,
                  c,
                  b
                );
                h.lanes |= c;
                break;
              }
              k2 = k2.next;
            }
          } else if (10 === f2.tag) g2 = f2.type === b.type ? null : f2.child;
          else if (18 === f2.tag) {
            g2 = f2.return;
            if (null === g2) throw Error(p$1(341));
            g2.lanes |= c;
            h = g2.alternate;
            null !== h && (h.lanes |= c);
            bh(g2, c, b);
            g2 = f2.sibling;
          } else g2 = f2.child;
          if (null !== g2) g2.return = f2;
          else for (g2 = f2; null !== g2; ) {
            if (g2 === b) {
              g2 = null;
              break;
            }
            f2 = g2.sibling;
            if (null !== f2) {
              f2.return = g2.return;
              g2 = f2;
              break;
            }
            g2 = g2.return;
          }
          f2 = g2;
        }
        Xi(a2, b, e.children, c);
        b = b.child;
      }
      return b;
    case 9:
      return e = b.type, d = b.pendingProps.children, ch(b, c), e = eh(e), d = d(e), b.flags |= 1, Xi(a2, b, d, c), b.child;
    case 14:
      return d = b.type, e = Ci(d, b.pendingProps), e = Ci(d.type, e), $i(a2, b, d, e, c);
    case 15:
      return bj(a2, b, b.type, b.pendingProps, c);
    case 17:
      return d = b.type, e = b.pendingProps, e = b.elementType === d ? e : Ci(d, e), ij(a2, b), b.tag = 1, Zf(d) ? (a2 = true, cg(b)) : a2 = false, ch(b, c), Gi(b, d, e), Ii(b, d, e, c), jj(null, b, d, true, a2, c);
    case 19:
      return xj(a2, b, c);
    case 22:
      return dj(a2, b, c);
  }
  throw Error(p$1(156, b.tag));
};
function Fk(a2, b) {
  return ac(a2, b);
}
function $k(a2, b, c, d) {
  this.tag = a2;
  this.key = c;
  this.sibling = this.child = this.return = this.stateNode = this.type = this.elementType = null;
  this.index = 0;
  this.ref = null;
  this.pendingProps = b;
  this.dependencies = this.memoizedState = this.updateQueue = this.memoizedProps = null;
  this.mode = d;
  this.subtreeFlags = this.flags = 0;
  this.deletions = null;
  this.childLanes = this.lanes = 0;
  this.alternate = null;
}
function Bg(a2, b, c, d) {
  return new $k(a2, b, c, d);
}
function aj(a2) {
  a2 = a2.prototype;
  return !(!a2 || !a2.isReactComponent);
}
function Zk(a2) {
  if ("function" === typeof a2) return aj(a2) ? 1 : 0;
  if (void 0 !== a2 && null !== a2) {
    a2 = a2.$$typeof;
    if (a2 === Da) return 11;
    if (a2 === Ga) return 14;
  }
  return 2;
}
function Pg(a2, b) {
  var c = a2.alternate;
  null === c ? (c = Bg(a2.tag, b, a2.key, a2.mode), c.elementType = a2.elementType, c.type = a2.type, c.stateNode = a2.stateNode, c.alternate = a2, a2.alternate = c) : (c.pendingProps = b, c.type = a2.type, c.flags = 0, c.subtreeFlags = 0, c.deletions = null);
  c.flags = a2.flags & 14680064;
  c.childLanes = a2.childLanes;
  c.lanes = a2.lanes;
  c.child = a2.child;
  c.memoizedProps = a2.memoizedProps;
  c.memoizedState = a2.memoizedState;
  c.updateQueue = a2.updateQueue;
  b = a2.dependencies;
  c.dependencies = null === b ? null : { lanes: b.lanes, firstContext: b.firstContext };
  c.sibling = a2.sibling;
  c.index = a2.index;
  c.ref = a2.ref;
  return c;
}
function Rg(a2, b, c, d, e, f2) {
  var g2 = 2;
  d = a2;
  if ("function" === typeof a2) aj(a2) && (g2 = 1);
  else if ("string" === typeof a2) g2 = 5;
  else a: switch (a2) {
    case ya:
      return Tg(c.children, e, f2, b);
    case za:
      g2 = 8;
      e |= 8;
      break;
    case Aa:
      return a2 = Bg(12, c, b, e | 2), a2.elementType = Aa, a2.lanes = f2, a2;
    case Ea:
      return a2 = Bg(13, c, b, e), a2.elementType = Ea, a2.lanes = f2, a2;
    case Fa:
      return a2 = Bg(19, c, b, e), a2.elementType = Fa, a2.lanes = f2, a2;
    case Ia:
      return pj(c, e, f2, b);
    default:
      if ("object" === typeof a2 && null !== a2) switch (a2.$$typeof) {
        case Ba:
          g2 = 10;
          break a;
        case Ca:
          g2 = 9;
          break a;
        case Da:
          g2 = 11;
          break a;
        case Ga:
          g2 = 14;
          break a;
        case Ha:
          g2 = 16;
          d = null;
          break a;
      }
      throw Error(p$1(130, null == a2 ? a2 : typeof a2, ""));
  }
  b = Bg(g2, c, b, e);
  b.elementType = a2;
  b.type = d;
  b.lanes = f2;
  return b;
}
function Tg(a2, b, c, d) {
  a2 = Bg(7, a2, d, b);
  a2.lanes = c;
  return a2;
}
function pj(a2, b, c, d) {
  a2 = Bg(22, a2, d, b);
  a2.elementType = Ia;
  a2.lanes = c;
  a2.stateNode = { isHidden: false };
  return a2;
}
function Qg(a2, b, c) {
  a2 = Bg(6, a2, null, b);
  a2.lanes = c;
  return a2;
}
function Sg(a2, b, c) {
  b = Bg(4, null !== a2.children ? a2.children : [], a2.key, b);
  b.lanes = c;
  b.stateNode = { containerInfo: a2.containerInfo, pendingChildren: null, implementation: a2.implementation };
  return b;
}
function al(a2, b, c, d, e) {
  this.tag = b;
  this.containerInfo = a2;
  this.finishedWork = this.pingCache = this.current = this.pendingChildren = null;
  this.timeoutHandle = -1;
  this.callbackNode = this.pendingContext = this.context = null;
  this.callbackPriority = 0;
  this.eventTimes = zc(0);
  this.expirationTimes = zc(-1);
  this.entangledLanes = this.finishedLanes = this.mutableReadLanes = this.expiredLanes = this.pingedLanes = this.suspendedLanes = this.pendingLanes = 0;
  this.entanglements = zc(0);
  this.identifierPrefix = d;
  this.onRecoverableError = e;
  this.mutableSourceEagerHydrationData = null;
}
function bl(a2, b, c, d, e, f2, g2, h, k2) {
  a2 = new al(a2, b, c, h, k2);
  1 === b ? (b = 1, true === f2 && (b |= 8)) : b = 0;
  f2 = Bg(3, null, null, b);
  a2.current = f2;
  f2.stateNode = a2;
  f2.memoizedState = { element: d, isDehydrated: c, cache: null, transitions: null, pendingSuspenseBoundaries: null };
  kh(f2);
  return a2;
}
function cl(a2, b, c) {
  var d = 3 < arguments.length && void 0 !== arguments[3] ? arguments[3] : null;
  return { $$typeof: wa, key: null == d ? null : "" + d, children: a2, containerInfo: b, implementation: c };
}
function dl(a2) {
  if (!a2) return Vf;
  a2 = a2._reactInternals;
  a: {
    if (Vb(a2) !== a2 || 1 !== a2.tag) throw Error(p$1(170));
    var b = a2;
    do {
      switch (b.tag) {
        case 3:
          b = b.stateNode.context;
          break a;
        case 1:
          if (Zf(b.type)) {
            b = b.stateNode.__reactInternalMemoizedMergedChildContext;
            break a;
          }
      }
      b = b.return;
    } while (null !== b);
    throw Error(p$1(171));
  }
  if (1 === a2.tag) {
    var c = a2.type;
    if (Zf(c)) return bg(a2, c, b);
  }
  return b;
}
function el(a2, b, c, d, e, f2, g2, h, k2) {
  a2 = bl(c, d, true, a2, e, f2, g2, h, k2);
  a2.context = dl(null);
  c = a2.current;
  d = R();
  e = yi(c);
  f2 = mh(d, e);
  f2.callback = void 0 !== b && null !== b ? b : null;
  nh(c, f2, e);
  a2.current.lanes = e;
  Ac(a2, e, d);
  Dk(a2, d);
  return a2;
}
function fl(a2, b, c, d) {
  var e = b.current, f2 = R(), g2 = yi(e);
  c = dl(c);
  null === b.context ? b.context = c : b.pendingContext = c;
  b = mh(f2, g2);
  b.payload = { element: a2 };
  d = void 0 === d ? null : d;
  null !== d && (b.callback = d);
  a2 = nh(e, b, g2);
  null !== a2 && (gi(a2, e, g2, f2), oh(a2, e, g2));
  return g2;
}
function gl(a2) {
  a2 = a2.current;
  if (!a2.child) return null;
  switch (a2.child.tag) {
    case 5:
      return a2.child.stateNode;
    default:
      return a2.child.stateNode;
  }
}
function hl(a2, b) {
  a2 = a2.memoizedState;
  if (null !== a2 && null !== a2.dehydrated) {
    var c = a2.retryLane;
    a2.retryLane = 0 !== c && c < b ? c : b;
  }
}
function il(a2, b) {
  hl(a2, b);
  (a2 = a2.alternate) && hl(a2, b);
}
function jl() {
  return null;
}
var kl = "function" === typeof reportError ? reportError : function(a2) {
  console.error(a2);
};
function ll(a2) {
  this._internalRoot = a2;
}
ml.prototype.render = ll.prototype.render = function(a2) {
  var b = this._internalRoot;
  if (null === b) throw Error(p$1(409));
  fl(a2, b, null, null);
};
ml.prototype.unmount = ll.prototype.unmount = function() {
  var a2 = this._internalRoot;
  if (null !== a2) {
    this._internalRoot = null;
    var b = a2.containerInfo;
    Rk(function() {
      fl(null, a2, null, null);
    });
    b[uf] = null;
  }
};
function ml(a2) {
  this._internalRoot = a2;
}
ml.prototype.unstable_scheduleHydration = function(a2) {
  if (a2) {
    var b = Hc();
    a2 = { blockedOn: null, target: a2, priority: b };
    for (var c = 0; c < Qc.length && 0 !== b && b < Qc[c].priority; c++) ;
    Qc.splice(c, 0, a2);
    0 === c && Vc(a2);
  }
};
function nl(a2) {
  return !(!a2 || 1 !== a2.nodeType && 9 !== a2.nodeType && 11 !== a2.nodeType);
}
function ol(a2) {
  return !(!a2 || 1 !== a2.nodeType && 9 !== a2.nodeType && 11 !== a2.nodeType && (8 !== a2.nodeType || " react-mount-point-unstable " !== a2.nodeValue));
}
function pl() {
}
function ql(a2, b, c, d, e) {
  if (e) {
    if ("function" === typeof d) {
      var f2 = d;
      d = function() {
        var a3 = gl(g2);
        f2.call(a3);
      };
    }
    var g2 = el(b, d, a2, 0, null, false, false, "", pl);
    a2._reactRootContainer = g2;
    a2[uf] = g2.current;
    sf(8 === a2.nodeType ? a2.parentNode : a2);
    Rk();
    return g2;
  }
  for (; e = a2.lastChild; ) a2.removeChild(e);
  if ("function" === typeof d) {
    var h = d;
    d = function() {
      var a3 = gl(k2);
      h.call(a3);
    };
  }
  var k2 = bl(a2, 0, false, null, null, false, false, "", pl);
  a2._reactRootContainer = k2;
  a2[uf] = k2.current;
  sf(8 === a2.nodeType ? a2.parentNode : a2);
  Rk(function() {
    fl(b, k2, c, d);
  });
  return k2;
}
function rl(a2, b, c, d, e) {
  var f2 = c._reactRootContainer;
  if (f2) {
    var g2 = f2;
    if ("function" === typeof e) {
      var h = e;
      e = function() {
        var a3 = gl(g2);
        h.call(a3);
      };
    }
    fl(b, g2, a2, e);
  } else g2 = ql(c, b, a2, e, d);
  return gl(g2);
}
Ec = function(a2) {
  switch (a2.tag) {
    case 3:
      var b = a2.stateNode;
      if (b.current.memoizedState.isDehydrated) {
        var c = tc(b.pendingLanes);
        0 !== c && (Cc(b, c | 1), Dk(b, B()), 0 === (K & 6) && (Gj = B() + 500, jg()));
      }
      break;
    case 13:
      Rk(function() {
        var b2 = ih(a2, 1);
        if (null !== b2) {
          var c2 = R();
          gi(b2, a2, 1, c2);
        }
      }), il(a2, 1);
  }
};
Fc = function(a2) {
  if (13 === a2.tag) {
    var b = ih(a2, 134217728);
    if (null !== b) {
      var c = R();
      gi(b, a2, 134217728, c);
    }
    il(a2, 134217728);
  }
};
Gc = function(a2) {
  if (13 === a2.tag) {
    var b = yi(a2), c = ih(a2, b);
    if (null !== c) {
      var d = R();
      gi(c, a2, b, d);
    }
    il(a2, b);
  }
};
Hc = function() {
  return C;
};
Ic = function(a2, b) {
  var c = C;
  try {
    return C = a2, b();
  } finally {
    C = c;
  }
};
yb = function(a2, b, c) {
  switch (b) {
    case "input":
      bb(a2, c);
      b = c.name;
      if ("radio" === c.type && null != b) {
        for (c = a2; c.parentNode; ) c = c.parentNode;
        c = c.querySelectorAll("input[name=" + JSON.stringify("" + b) + '][type="radio"]');
        for (b = 0; b < c.length; b++) {
          var d = c[b];
          if (d !== a2 && d.form === a2.form) {
            var e = Db(d);
            if (!e) throw Error(p$1(90));
            Wa(d);
            bb(d, e);
          }
        }
      }
      break;
    case "textarea":
      ib(a2, c);
      break;
    case "select":
      b = c.value, null != b && fb(a2, !!c.multiple, b, false);
  }
};
Gb = Qk;
Hb = Rk;
var sl = { usingClientEntryPoint: false, Events: [Cb, ue, Db, Eb, Fb, Qk] }, tl = { findFiberByHostInstance: Wc, bundleType: 0, version: "18.3.1", rendererPackageName: "react-dom" };
var ul = { bundleType: tl.bundleType, version: tl.version, rendererPackageName: tl.rendererPackageName, rendererConfig: tl.rendererConfig, overrideHookState: null, overrideHookStateDeletePath: null, overrideHookStateRenamePath: null, overrideProps: null, overridePropsDeletePath: null, overridePropsRenamePath: null, setErrorHandler: null, setSuspenseHandler: null, scheduleUpdate: null, currentDispatcherRef: ua.ReactCurrentDispatcher, findHostInstanceByFiber: function(a2) {
  a2 = Zb(a2);
  return null === a2 ? null : a2.stateNode;
}, findFiberByHostInstance: tl.findFiberByHostInstance || jl, findHostInstancesForRefresh: null, scheduleRefresh: null, scheduleRoot: null, setRefreshHandler: null, getCurrentFiber: null, reconcilerVersion: "18.3.1-next-f1338f8080-20240426" };
if ("undefined" !== typeof __REACT_DEVTOOLS_GLOBAL_HOOK__) {
  var vl = __REACT_DEVTOOLS_GLOBAL_HOOK__;
  if (!vl.isDisabled && vl.supportsFiber) try {
    kc = vl.inject(ul), lc = vl;
  } catch (a2) {
  }
}
reactDom_production_min.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED = sl;
reactDom_production_min.createPortal = function(a2, b) {
  var c = 2 < arguments.length && void 0 !== arguments[2] ? arguments[2] : null;
  if (!nl(b)) throw Error(p$1(200));
  return cl(a2, b, null, c);
};
reactDom_production_min.createRoot = function(a2, b) {
  if (!nl(a2)) throw Error(p$1(299));
  var c = false, d = "", e = kl;
  null !== b && void 0 !== b && (true === b.unstable_strictMode && (c = true), void 0 !== b.identifierPrefix && (d = b.identifierPrefix), void 0 !== b.onRecoverableError && (e = b.onRecoverableError));
  b = bl(a2, 1, false, null, null, c, false, d, e);
  a2[uf] = b.current;
  sf(8 === a2.nodeType ? a2.parentNode : a2);
  return new ll(b);
};
reactDom_production_min.findDOMNode = function(a2) {
  if (null == a2) return null;
  if (1 === a2.nodeType) return a2;
  var b = a2._reactInternals;
  if (void 0 === b) {
    if ("function" === typeof a2.render) throw Error(p$1(188));
    a2 = Object.keys(a2).join(",");
    throw Error(p$1(268, a2));
  }
  a2 = Zb(b);
  a2 = null === a2 ? null : a2.stateNode;
  return a2;
};
reactDom_production_min.flushSync = function(a2) {
  return Rk(a2);
};
reactDom_production_min.hydrate = function(a2, b, c) {
  if (!ol(b)) throw Error(p$1(200));
  return rl(null, a2, b, true, c);
};
reactDom_production_min.hydrateRoot = function(a2, b, c) {
  if (!nl(a2)) throw Error(p$1(405));
  var d = null != c && c.hydratedSources || null, e = false, f2 = "", g2 = kl;
  null !== c && void 0 !== c && (true === c.unstable_strictMode && (e = true), void 0 !== c.identifierPrefix && (f2 = c.identifierPrefix), void 0 !== c.onRecoverableError && (g2 = c.onRecoverableError));
  b = el(b, null, a2, 1, null != c ? c : null, e, false, f2, g2);
  a2[uf] = b.current;
  sf(a2);
  if (d) for (a2 = 0; a2 < d.length; a2++) c = d[a2], e = c._getVersion, e = e(c._source), null == b.mutableSourceEagerHydrationData ? b.mutableSourceEagerHydrationData = [c, e] : b.mutableSourceEagerHydrationData.push(
    c,
    e
  );
  return new ml(b);
};
reactDom_production_min.render = function(a2, b, c) {
  if (!ol(b)) throw Error(p$1(200));
  return rl(null, a2, b, false, c);
};
reactDom_production_min.unmountComponentAtNode = function(a2) {
  if (!ol(a2)) throw Error(p$1(40));
  return a2._reactRootContainer ? (Rk(function() {
    rl(null, null, a2, false, function() {
      a2._reactRootContainer = null;
      a2[uf] = null;
    });
  }), true) : false;
};
reactDom_production_min.unstable_batchedUpdates = Qk;
reactDom_production_min.unstable_renderSubtreeIntoContainer = function(a2, b, c, d) {
  if (!ol(c)) throw Error(p$1(200));
  if (null == a2 || void 0 === a2._reactInternals) throw Error(p$1(38));
  return rl(a2, b, c, false, d);
};
reactDom_production_min.version = "18.3.1-next-f1338f8080-20240426";
function checkDCE() {
  if (typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ === "undefined" || typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE !== "function") {
    return;
  }
  try {
    __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE(checkDCE);
  } catch (err) {
    console.error(err);
  }
}
{
  checkDCE();
  reactDom.exports = reactDom_production_min;
}
var reactDomExports = reactDom.exports;
const $1CM7W$reactdom = /* @__PURE__ */ getDefaultExportFromCjs(reactDomExports);
const ReactDOM = /* @__PURE__ */ _mergeNamespaces({
  __proto__: null,
  default: $1CM7W$reactdom
}, [reactDomExports]);
var createRoot;
var m$1 = reactDomExports;
{
  createRoot = m$1.createRoot;
  m$1.hydrateRoot;
}
function createContext2(options = {}) {
  const {
    strict = true,
    errorMessage = "useContext: `context` is undefined. Seems you forgot to wrap component within the Provider",
    name
  } = options;
  const Context = reactExports.createContext(void 0);
  Context.displayName = name;
  function useContext2() {
    var _a;
    const context = reactExports.useContext(Context);
    if (!context && strict) {
      const error = new Error(errorMessage);
      error.name = "ContextError";
      (_a = Error.captureStackTrace) == null ? void 0 : _a.call(Error, error, useContext2);
      throw error;
    }
    return context;
  }
  return [Context.Provider, useContext2, Context];
}
function createDOMRef(ref) {
  return {
    UNSAFE_getDOMNode() {
      return ref.current;
    }
  };
}
function useDOMRef(ref) {
  const domRef = reactExports.useRef(null);
  reactExports.useImperativeHandle(ref, () => domRef.current);
  return domRef;
}
function isArray$5(value) {
  return Array.isArray(value);
}
function isEmptyArray(value) {
  return isArray$5(value) && value.length === 0;
}
function isObject$6(value) {
  const type2 = typeof value;
  return value != null && (type2 === "object" || type2 === "function") && !isArray$5(value);
}
function isEmptyObject(value) {
  return isObject$6(value) && Object.keys(value).length === 0;
}
function isEmpty(value) {
  if (isArray$5(value))
    return isEmptyArray(value);
  if (isObject$6(value))
    return isEmptyObject(value);
  if (value == null || value === "")
    return true;
  return false;
}
function isFunction$3(value) {
  return typeof value === "function";
}
var dataAttr = (condition) => condition ? "true" : void 0;
var safeText = (text) => {
  if ((text == null ? void 0 : text.length) <= 4)
    return text;
  return text == null ? void 0 : text.slice(0, 3);
};
var safeAriaLabel = (...texts) => {
  let ariaLabel = " ";
  for (const text of texts) {
    if (typeof text === "string" && text.length > 0) {
      ariaLabel = text;
      break;
    }
  }
  return ariaLabel;
};
function toVal(mix2) {
  var k2, y2, str2 = "";
  if (typeof mix2 === "string" || typeof mix2 === "number") {
    str2 += mix2;
  } else if (typeof mix2 === "object") {
    if (Array.isArray(mix2)) {
      for (k2 = 0; k2 < mix2.length; k2++) {
        if (mix2[k2]) {
          if (y2 = toVal(mix2[k2])) {
            str2 && (str2 += " ");
            str2 += y2;
          }
        }
      }
    } else {
      for (k2 in mix2) {
        if (mix2[k2]) {
          str2 && (str2 += " ");
          str2 += k2;
        }
      }
    }
  }
  return str2;
}
function clsx$1(...args) {
  var i = 0, tmp, x2, str2 = "";
  while (i < args.length) {
    if (tmp = args[i++]) {
      if (x2 = toVal(tmp)) {
        str2 && (str2 += " ");
        str2 += x2;
      }
    }
  }
  return str2;
}
var define_process_env_default = {};
var warningStack = {};
function warn(message, component, ...args) {
  var _a;
  const tag = " ";
  const log = `[Next UI]${tag}: ${message}`;
  if (typeof console === "undefined")
    return;
  if (warningStack[log])
    return;
  warningStack[log] = true;
  if (((_a = process == null ? void 0 : define_process_env_default) == null ? void 0 : _a.NODE_ENV) !== "production") {
    return console.warn(log, args);
  }
}
function getUniqueID(prefix) {
  return `${prefix}-${Math.floor(Math.random() * 1e6)}`;
}
function removeEvents(input2) {
  for (const key in input2) {
    if (key.startsWith("on")) {
      delete input2[key];
    }
  }
  return input2;
}
function objectToDeps(obj) {
  if (!obj || typeof obj !== "object") {
    return "";
  }
  try {
    return JSON.stringify(obj);
  } catch (e) {
    return "";
  }
}
function clamp$1(value, min, max) {
  return Math.min(Math.max(value, min), max);
}
function clampPercentage(value, max = 100) {
  return Math.min(Math.max(value, 0), max);
}
function assignRef$1(ref, value) {
  if (ref == null)
    return;
  if (isFunction$3(ref)) {
    ref(value);
    return;
  }
  try {
    ref.current = value;
  } catch (error) {
    throw new Error(`Cannot assign value '${value}' to ref '${ref}'`);
  }
}
function mergeRefs(...refs) {
  return (node) => {
    refs.forEach((ref) => assignRef$1(ref, node));
  };
}
var pickChildren = (children, targetChild) => {
  var _a;
  let target = [];
  const withoutTargetChildren = (_a = reactExports.Children.map(children, (item) => {
    if (!reactExports.isValidElement(item))
      return item;
    if (item.type === targetChild) {
      target.push(item);
      return null;
    }
    return item;
  })) == null ? void 0 : _a.filter(Boolean);
  const targetChildren = target.length >= 0 ? target : void 0;
  return [withoutTargetChildren, targetChildren];
};
var DOMPropNames = /* @__PURE__ */ new Set([
  "id",
  "type",
  "style",
  "title",
  "role",
  "tabIndex",
  "htmlFor",
  "width",
  "height",
  "abbr",
  "accept",
  "acceptCharset",
  "accessKey",
  "action",
  "allowFullScreen",
  "allowTransparency",
  "alt",
  "async",
  "autoComplete",
  "autoFocus",
  "autoPlay",
  "cellPadding",
  "cellSpacing",
  "challenge",
  "charset",
  "checked",
  "cite",
  "class",
  "className",
  "cols",
  "colSpan",
  "command",
  "content",
  "contentEditable",
  "contextMenu",
  "controls",
  "coords",
  "crossOrigin",
  "data",
  "dateTime",
  "default",
  "defer",
  "dir",
  "disabled",
  "download",
  "draggable",
  "dropzone",
  "encType",
  "enterKeyHint",
  "for",
  "form",
  "formAction",
  "formEncType",
  "formMethod",
  "formNoValidate",
  "formTarget",
  "frameBorder",
  "headers",
  "hidden",
  "high",
  "href",
  "hrefLang",
  "httpEquiv",
  "icon",
  "inputMode",
  "isMap",
  "itemId",
  "itemProp",
  "itemRef",
  "itemScope",
  "itemType",
  "kind",
  "label",
  "lang",
  "list",
  "loop",
  "manifest",
  "max",
  "maxLength",
  "media",
  "mediaGroup",
  "method",
  "min",
  "minLength",
  "multiple",
  "muted",
  "name",
  "noValidate",
  "open",
  "optimum",
  "pattern",
  "ping",
  "placeholder",
  "poster",
  "preload",
  "radioGroup",
  "referrerPolicy",
  "readOnly",
  "rel",
  "required",
  "rows",
  "rowSpan",
  "sandbox",
  "scope",
  "scoped",
  "scrolling",
  "seamless",
  "selected",
  "shape",
  "size",
  "sizes",
  "slot",
  "sortable",
  "span",
  "spellCheck",
  "src",
  "srcDoc",
  "srcSet",
  "start",
  "step",
  "target",
  "translate",
  "typeMustMatch",
  "useMap",
  "value",
  "wmode",
  "wrap"
]);
var DOMEventNames = /* @__PURE__ */ new Set([
  "onCopy",
  "onCut",
  "onPaste",
  "onLoad",
  "onError",
  "onWheel",
  "onScroll",
  "onCompositionEnd",
  "onCompositionStart",
  "onCompositionUpdate",
  "onKeyDown",
  "onKeyPress",
  "onKeyUp",
  "onFocus",
  "onBlur",
  "onChange",
  "onInput",
  "onSubmit",
  "onClick",
  "onContextMenu",
  "onDoubleClick",
  "onDrag",
  "onDragEnd",
  "onDragEnter",
  "onDragExit",
  "onDragLeave",
  "onDragOver",
  "onDragStart",
  "onDrop",
  "onMouseDown",
  "onMouseEnter",
  "onMouseLeave",
  "onMouseMove",
  "onMouseOut",
  "onMouseOver",
  "onMouseUp",
  "onPointerDown",
  "onPointerEnter",
  "onPointerLeave",
  "onPointerUp",
  "onSelect",
  "onTouchCancel",
  "onTouchEnd",
  "onTouchMove",
  "onTouchStart",
  "onAnimationStart",
  "onAnimationEnd",
  "onAnimationIteration",
  "onTransitionEnd"
]);
var propRe = /^(data-.*)$/;
var ariaRe = /^(aria-.*)$/;
var funcRe = /^(on[A-Z].*)$/;
function filterDOMProps(props, opts = {}) {
  let {
    labelable = true,
    enabled = true,
    propNames,
    omitPropNames,
    omitEventNames,
    omitDataProps,
    omitEventProps
  } = opts;
  let filteredProps = {};
  if (!enabled) {
    return props;
  }
  for (const prop in props) {
    if (omitPropNames == null ? void 0 : omitPropNames.has(prop)) {
      continue;
    }
    if ((omitEventNames == null ? void 0 : omitEventNames.has(prop)) && funcRe.test(prop)) {
      continue;
    }
    if (funcRe.test(prop) && !DOMEventNames.has(prop)) {
      continue;
    }
    if (omitDataProps && propRe.test(prop)) {
      continue;
    }
    if (omitEventProps && funcRe.test(prop)) {
      continue;
    }
    if (Object.prototype.hasOwnProperty.call(props, prop) && (DOMPropNames.has(prop) || labelable && ariaRe.test(prop) || (propNames == null ? void 0 : propNames.has(prop)) || propRe.test(prop)) || funcRe.test(prop)) {
      filteredProps[prop] = props[prop];
    }
  }
  return filteredProps;
}
function renderFn({ Component, props, renderCustom }) {
  if (renderCustom && typeof renderCustom === "function") {
    return renderCustom(props);
  } else {
    return reactExports.createElement(Component, props);
  }
}
var [ProviderContext, useProviderContext] = createContext2({
  name: "ProviderContext",
  strict: false
});
const $148a7a147e38ea7f$var$RTL_SCRIPTS = /* @__PURE__ */ new Set([
  "Arab",
  "Syrc",
  "Samr",
  "Mand",
  "Thaa",
  "Mend",
  "Nkoo",
  "Adlm",
  "Rohg",
  "Hebr"
]);
const $148a7a147e38ea7f$var$RTL_LANGS = /* @__PURE__ */ new Set([
  "ae",
  "ar",
  "arc",
  "bcc",
  "bqi",
  "ckb",
  "dv",
  "fa",
  "glk",
  "he",
  "ku",
  "mzn",
  "nqo",
  "pnb",
  "ps",
  "sd",
  "ug",
  "ur",
  "yi"
]);
function $148a7a147e38ea7f$export$702d680b21cbd764(localeString) {
  if (Intl.Locale) {
    let locale = new Intl.Locale(localeString).maximize();
    let textInfo = typeof locale.getTextInfo === "function" ? locale.getTextInfo() : locale.textInfo;
    if (textInfo) return textInfo.direction === "rtl";
    if (locale.script) return $148a7a147e38ea7f$var$RTL_SCRIPTS.has(locale.script);
  }
  let lang = localeString.split("-")[0];
  return $148a7a147e38ea7f$var$RTL_LANGS.has(lang);
}
const $b5e257d569688ac6$var$defaultContext = {
  prefix: String(Math.round(Math.random() * 1e10)),
  current: 0
};
const $b5e257d569688ac6$var$SSRContext = /* @__PURE__ */ React$1.createContext($b5e257d569688ac6$var$defaultContext);
const $b5e257d569688ac6$var$IsSSRContext = /* @__PURE__ */ React$1.createContext(false);
let $b5e257d569688ac6$var$canUseDOM = Boolean(typeof window !== "undefined" && window.document && window.document.createElement);
let $b5e257d569688ac6$var$componentIds = /* @__PURE__ */ new WeakMap();
function $b5e257d569688ac6$var$useCounter(isDisabled = false) {
  let ctx = reactExports.useContext($b5e257d569688ac6$var$SSRContext);
  let ref = reactExports.useRef(null);
  if (ref.current === null && !isDisabled) {
    var _React___SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED_ReactCurrentOwner, _React___SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED;
    let currentOwner = (_React___SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED = React$1.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED) === null || _React___SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED === void 0 ? void 0 : (_React___SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED_ReactCurrentOwner = _React___SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED.ReactCurrentOwner) === null || _React___SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED_ReactCurrentOwner === void 0 ? void 0 : _React___SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED_ReactCurrentOwner.current;
    if (currentOwner) {
      let prevComponentValue = $b5e257d569688ac6$var$componentIds.get(currentOwner);
      if (prevComponentValue == null)
        $b5e257d569688ac6$var$componentIds.set(currentOwner, {
          id: ctx.current,
          state: currentOwner.memoizedState
        });
      else if (currentOwner.memoizedState !== prevComponentValue.state) {
        ctx.current = prevComponentValue.id;
        $b5e257d569688ac6$var$componentIds.delete(currentOwner);
      }
    }
    ref.current = ++ctx.current;
  }
  return ref.current;
}
function $b5e257d569688ac6$var$useLegacySSRSafeId(defaultId) {
  let ctx = reactExports.useContext($b5e257d569688ac6$var$SSRContext);
  if (ctx === $b5e257d569688ac6$var$defaultContext && !$b5e257d569688ac6$var$canUseDOM) console.warn("When server rendering, you must wrap your application in an <SSRProvider> to ensure consistent ids are generated between the client and server.");
  let counter = $b5e257d569688ac6$var$useCounter(!!defaultId);
  let prefix = ctx === $b5e257d569688ac6$var$defaultContext && false ? "react-aria" : `react-aria${ctx.prefix}`;
  return defaultId || `${prefix}-${counter}`;
}
function $b5e257d569688ac6$var$useModernSSRSafeId(defaultId) {
  let id2 = React$1.useId();
  let [didSSR] = reactExports.useState($b5e257d569688ac6$export$535bd6ca7f90a273());
  let prefix = didSSR || false ? "react-aria" : `react-aria${$b5e257d569688ac6$var$defaultContext.prefix}`;
  return defaultId || `${prefix}-${id2}`;
}
const $b5e257d569688ac6$export$619500959fc48b26 = typeof React$1["useId"] === "function" ? $b5e257d569688ac6$var$useModernSSRSafeId : $b5e257d569688ac6$var$useLegacySSRSafeId;
function $b5e257d569688ac6$var$getSnapshot() {
  return false;
}
function $b5e257d569688ac6$var$getServerSnapshot() {
  return true;
}
function $b5e257d569688ac6$var$subscribe(onStoreChange) {
  return () => {
  };
}
function $b5e257d569688ac6$export$535bd6ca7f90a273() {
  if (typeof React$1["useSyncExternalStore"] === "function") return React$1["useSyncExternalStore"]($b5e257d569688ac6$var$subscribe, $b5e257d569688ac6$var$getSnapshot, $b5e257d569688ac6$var$getServerSnapshot);
  return reactExports.useContext($b5e257d569688ac6$var$IsSSRContext);
}
const $1e5a04cdaf7d1af8$var$localeSymbol = Symbol.for("react-aria.i18n.locale");
function $1e5a04cdaf7d1af8$export$f09106e7c6677ec5() {
  let locale = typeof window !== "undefined" && window[$1e5a04cdaf7d1af8$var$localeSymbol] || typeof navigator !== "undefined" && (navigator.language || navigator.userLanguage) || "en-US";
  try {
    Intl.DateTimeFormat.supportedLocalesOf([
      locale
    ]);
  } catch (_err) {
    locale = "en-US";
  }
  return {
    locale,
    direction: $148a7a147e38ea7f$export$702d680b21cbd764(locale) ? "rtl" : "ltr"
  };
}
let $1e5a04cdaf7d1af8$var$currentLocale = $1e5a04cdaf7d1af8$export$f09106e7c6677ec5();
let $1e5a04cdaf7d1af8$var$listeners = /* @__PURE__ */ new Set();
function $1e5a04cdaf7d1af8$var$updateLocale() {
  $1e5a04cdaf7d1af8$var$currentLocale = $1e5a04cdaf7d1af8$export$f09106e7c6677ec5();
  for (let listener of $1e5a04cdaf7d1af8$var$listeners) listener($1e5a04cdaf7d1af8$var$currentLocale);
}
function $1e5a04cdaf7d1af8$export$188ec29ebc2bdc3a() {
  let isSSR = $b5e257d569688ac6$export$535bd6ca7f90a273();
  let [defaultLocale, setDefaultLocale] = reactExports.useState($1e5a04cdaf7d1af8$var$currentLocale);
  reactExports.useEffect(() => {
    if ($1e5a04cdaf7d1af8$var$listeners.size === 0) window.addEventListener("languagechange", $1e5a04cdaf7d1af8$var$updateLocale);
    $1e5a04cdaf7d1af8$var$listeners.add(setDefaultLocale);
    return () => {
      $1e5a04cdaf7d1af8$var$listeners.delete(setDefaultLocale);
      if ($1e5a04cdaf7d1af8$var$listeners.size === 0) window.removeEventListener("languagechange", $1e5a04cdaf7d1af8$var$updateLocale);
    };
  }, []);
  if (isSSR) return {
    locale: "en-US",
    direction: "ltr"
  };
  return defaultLocale;
}
const $18f2051aff69b9bf$var$I18nContext = /* @__PURE__ */ React$1.createContext(null);
function $18f2051aff69b9bf$export$a54013f0d02a8f82(props) {
  let { locale, children } = props;
  let defaultLocale = $1e5a04cdaf7d1af8$export$188ec29ebc2bdc3a();
  let value = React$1.useMemo(() => {
    if (!locale) return defaultLocale;
    return {
      locale,
      direction: $148a7a147e38ea7f$export$702d680b21cbd764(locale) ? "rtl" : "ltr"
    };
  }, [
    defaultLocale,
    locale
  ]);
  return /* @__PURE__ */ React$1.createElement($18f2051aff69b9bf$var$I18nContext.Provider, {
    value
  }, children);
}
function $18f2051aff69b9bf$export$43bb16f9c6d9e3f7() {
  let defaultLocale = $1e5a04cdaf7d1af8$export$188ec29ebc2bdc3a();
  let context = reactExports.useContext($18f2051aff69b9bf$var$I18nContext);
  return context || defaultLocale;
}
var __assign = function() {
  __assign = Object.assign || function __assign2(t2) {
    for (var s, i = 1, n2 = arguments.length; i < n2; i++) {
      s = arguments[i];
      for (var p2 in s) if (Object.prototype.hasOwnProperty.call(s, p2)) t2[p2] = s[p2];
    }
    return t2;
  };
  return __assign.apply(this, arguments);
};
function __rest(s, e) {
  var t2 = {};
  for (var p2 in s) if (Object.prototype.hasOwnProperty.call(s, p2) && e.indexOf(p2) < 0)
    t2[p2] = s[p2];
  if (s != null && typeof Object.getOwnPropertySymbols === "function")
    for (var i = 0, p2 = Object.getOwnPropertySymbols(s); i < p2.length; i++) {
      if (e.indexOf(p2[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p2[i]))
        t2[p2[i]] = s[p2[i]];
    }
  return t2;
}
function __spreadArray(to, from, pack) {
  if (pack || arguments.length === 2) for (var i = 0, l2 = from.length, ar; i < l2; i++) {
    if (ar || !(i in from)) {
      if (!ar) ar = Array.prototype.slice.call(from, 0, i);
      ar[i] = from[i];
    }
  }
  return to.concat(ar || Array.prototype.slice.call(from));
}
typeof SuppressedError === "function" ? SuppressedError : function(error, suppressed, message) {
  var e = new Error(message);
  return e.name = "SuppressedError", e.error = error, e.suppressed = suppressed, e;
};
const $5b160d28a433310d$var$localeSymbol = Symbol.for("react-aria.i18n.locale");
const $5b160d28a433310d$var$stringsSymbol = Symbol.for("react-aria.i18n.strings");
let $5b160d28a433310d$var$cachedGlobalStrings = void 0;
class $5b160d28a433310d$export$c17fa47878dc55b6 {
  /** Returns a localized string for the given key and locale. */
  getStringForLocale(key, locale) {
    let strings = this.getStringsForLocale(locale);
    let string = strings[key];
    if (!string) throw new Error(`Could not find intl message ${key} in ${locale} locale`);
    return string;
  }
  /** Returns all localized strings for the given locale. */
  getStringsForLocale(locale) {
    let strings = this.strings[locale];
    if (!strings) {
      strings = $5b160d28a433310d$var$getStringsForLocale(locale, this.strings, this.defaultLocale);
      this.strings[locale] = strings;
    }
    return strings;
  }
  static getGlobalDictionaryForPackage(packageName) {
    if (typeof window === "undefined") return null;
    let locale = window[$5b160d28a433310d$var$localeSymbol];
    if ($5b160d28a433310d$var$cachedGlobalStrings === void 0) {
      let globalStrings = window[$5b160d28a433310d$var$stringsSymbol];
      if (!globalStrings) return null;
      $5b160d28a433310d$var$cachedGlobalStrings = {};
      for (let pkg in globalStrings) $5b160d28a433310d$var$cachedGlobalStrings[pkg] = new $5b160d28a433310d$export$c17fa47878dc55b6({
        [locale]: globalStrings[pkg]
      }, locale);
    }
    let dictionary = $5b160d28a433310d$var$cachedGlobalStrings === null || $5b160d28a433310d$var$cachedGlobalStrings === void 0 ? void 0 : $5b160d28a433310d$var$cachedGlobalStrings[packageName];
    if (!dictionary) throw new Error(`Strings for package "${packageName}" were not included by LocalizedStringProvider. Please add it to the list passed to createLocalizedStringDictionary.`);
    return dictionary;
  }
  constructor(messages, defaultLocale = "en-US") {
    this.strings = Object.fromEntries(Object.entries(messages).filter(([, v2]) => v2));
    this.defaultLocale = defaultLocale;
  }
}
function $5b160d28a433310d$var$getStringsForLocale(locale, strings, defaultLocale = "en-US") {
  if (strings[locale]) return strings[locale];
  let language = $5b160d28a433310d$var$getLanguage(locale);
  if (strings[language]) return strings[language];
  for (let key in strings) {
    if (key.startsWith(language + "-")) return strings[key];
  }
  return strings[defaultLocale];
}
function $5b160d28a433310d$var$getLanguage(locale) {
  if (Intl.Locale)
    return new Intl.Locale(locale).language;
  return locale.split("-")[0];
}
const $6db58dc88e78b024$var$pluralRulesCache = /* @__PURE__ */ new Map();
const $6db58dc88e78b024$var$numberFormatCache = /* @__PURE__ */ new Map();
class $6db58dc88e78b024$export$2f817fcdc4b89ae0 {
  /** Formats a localized string for the given key with the provided variables. */
  format(key, variables) {
    let message = this.strings.getStringForLocale(key, this.locale);
    return typeof message === "function" ? message(variables, this) : message;
  }
  plural(count, options, type2 = "cardinal") {
    let opt = options["=" + count];
    if (opt) return typeof opt === "function" ? opt() : opt;
    let key = this.locale + ":" + type2;
    let pluralRules = $6db58dc88e78b024$var$pluralRulesCache.get(key);
    if (!pluralRules) {
      pluralRules = new Intl.PluralRules(this.locale, {
        type: type2
      });
      $6db58dc88e78b024$var$pluralRulesCache.set(key, pluralRules);
    }
    let selected = pluralRules.select(count);
    opt = options[selected] || options.other;
    return typeof opt === "function" ? opt() : opt;
  }
  number(value) {
    let numberFormat = $6db58dc88e78b024$var$numberFormatCache.get(this.locale);
    if (!numberFormat) {
      numberFormat = new Intl.NumberFormat(this.locale);
      $6db58dc88e78b024$var$numberFormatCache.set(this.locale, numberFormat);
    }
    return numberFormat.format(value);
  }
  select(options, value) {
    let opt = options[value] || options.other;
    return typeof opt === "function" ? opt() : opt;
  }
  constructor(locale, strings) {
    this.locale = locale;
    this.strings = strings;
  }
}
const $fca6afa0e843324b$var$cache = /* @__PURE__ */ new WeakMap();
function $fca6afa0e843324b$var$getCachedDictionary(strings) {
  let dictionary = $fca6afa0e843324b$var$cache.get(strings);
  if (!dictionary) {
    dictionary = new $5b160d28a433310d$export$c17fa47878dc55b6(strings);
    $fca6afa0e843324b$var$cache.set(strings, dictionary);
  }
  return dictionary;
}
function $fca6afa0e843324b$export$87b761675e8eaa10(strings, packageName) {
  return packageName && $5b160d28a433310d$export$c17fa47878dc55b6.getGlobalDictionaryForPackage(packageName) || $fca6afa0e843324b$var$getCachedDictionary(strings);
}
function $fca6afa0e843324b$export$f12b703ca79dfbb1(strings, packageName) {
  let { locale } = $18f2051aff69b9bf$export$43bb16f9c6d9e3f7();
  let dictionary = $fca6afa0e843324b$export$87b761675e8eaa10(strings, packageName);
  return reactExports.useMemo(() => new $6db58dc88e78b024$export$2f817fcdc4b89ae0(locale, dictionary), [
    locale,
    dictionary
  ]);
}
function _check_private_redeclaration(obj, privateCollection) {
  if (privateCollection.has(obj)) {
    throw new TypeError("Cannot initialize the same private elements twice on an object");
  }
}
function _class_private_field_init(obj, privateMap, value) {
  _check_private_redeclaration(obj, privateMap);
  privateMap.set(obj, value);
}
const $f0a04ccd8dbdd83b$export$e5c5a5f917a5871c = typeof document !== "undefined" ? React$1.useLayoutEffect : () => {
};
function $8ae05eaa5c114e9c$export$7f54fc3180508a52(fn) {
  const ref = reactExports.useRef(null);
  $f0a04ccd8dbdd83b$export$e5c5a5f917a5871c(() => {
    ref.current = fn;
  }, [
    fn
  ]);
  return reactExports.useCallback((...args) => {
    const f2 = ref.current;
    return f2 === null || f2 === void 0 ? void 0 : f2(...args);
  }, []);
}
function $1dbecbe27a04f9af$export$14d238f342723f25(defaultValue) {
  let [value, setValue] = reactExports.useState(defaultValue);
  let effect = reactExports.useRef(null);
  let nextRef = $8ae05eaa5c114e9c$export$7f54fc3180508a52(() => {
    if (!effect.current) return;
    let newValue = effect.current.next();
    if (newValue.done) {
      effect.current = null;
      return;
    }
    if (value === newValue.value) nextRef();
    else setValue(newValue.value);
  });
  $f0a04ccd8dbdd83b$export$e5c5a5f917a5871c(() => {
    if (effect.current) nextRef();
  });
  let queue = $8ae05eaa5c114e9c$export$7f54fc3180508a52((fn) => {
    effect.current = fn(value);
    nextRef();
  });
  return [
    value,
    queue
  ];
}
let $bdb11010cef70236$var$canUseDOM = Boolean(typeof window !== "undefined" && window.document && window.document.createElement);
let $bdb11010cef70236$var$idsUpdaterMap = /* @__PURE__ */ new Map();
function $bdb11010cef70236$export$f680877a34711e37(defaultId) {
  let [value, setValue] = reactExports.useState(defaultId);
  let nextId = reactExports.useRef(null);
  let res = $b5e257d569688ac6$export$619500959fc48b26(value);
  let updateValue = reactExports.useCallback((val) => {
    nextId.current = val;
  }, []);
  if ($bdb11010cef70236$var$canUseDOM) $bdb11010cef70236$var$idsUpdaterMap.set(res, updateValue);
  $f0a04ccd8dbdd83b$export$e5c5a5f917a5871c(() => {
    let r2 = res;
    return () => {
      $bdb11010cef70236$var$idsUpdaterMap.delete(r2);
    };
  }, [
    res
  ]);
  reactExports.useEffect(() => {
    let newId = nextId.current;
    if (newId) {
      nextId.current = null;
      setValue(newId);
    }
  });
  return res;
}
function $bdb11010cef70236$export$cd8c9cb68f842629(idA, idB) {
  if (idA === idB) return idA;
  let setIdA = $bdb11010cef70236$var$idsUpdaterMap.get(idA);
  if (setIdA) {
    setIdA(idB);
    return idB;
  }
  let setIdB = $bdb11010cef70236$var$idsUpdaterMap.get(idB);
  if (setIdB) {
    setIdB(idA);
    return idA;
  }
  return idB;
}
function $bdb11010cef70236$export$b4cc09c592e8fdb8(depArray = []) {
  let id2 = $bdb11010cef70236$export$f680877a34711e37();
  let [resolvedId, setResolvedId] = $1dbecbe27a04f9af$export$14d238f342723f25(id2);
  let updateId = reactExports.useCallback(() => {
    setResolvedId(function* () {
      yield id2;
      yield document.getElementById(id2) ? id2 : void 0;
    });
  }, [
    id2,
    setResolvedId
  ]);
  $f0a04ccd8dbdd83b$export$e5c5a5f917a5871c(updateId, [
    id2,
    updateId,
    ...depArray
  ]);
  return resolvedId;
}
function $ff5963eb1fccf552$export$e08e3b67e392101e(...callbacks2) {
  return (...args) => {
    for (let callback of callbacks2) if (typeof callback === "function") callback(...args);
  };
}
const $431fbd86ca7dc216$export$b204af158042fbac = (el2) => {
  var _el_ownerDocument;
  return (_el_ownerDocument = el2 === null || el2 === void 0 ? void 0 : el2.ownerDocument) !== null && _el_ownerDocument !== void 0 ? _el_ownerDocument : document;
};
const $431fbd86ca7dc216$export$f21a1ffae260145a = (el2) => {
  if (el2 && "window" in el2 && el2.window === el2) return el2;
  const doc = $431fbd86ca7dc216$export$b204af158042fbac(el2);
  return doc.defaultView || window;
};
function r(e) {
  var t2, f2, n2 = "";
  if ("string" == typeof e || "number" == typeof e) n2 += e;
  else if ("object" == typeof e) if (Array.isArray(e)) {
    var o = e.length;
    for (t2 = 0; t2 < o; t2++) e[t2] && (f2 = r(e[t2])) && (n2 && (n2 += " "), n2 += f2);
  } else for (f2 in e) e[f2] && (n2 && (n2 += " "), n2 += f2);
  return n2;
}
function clsx() {
  for (var e, t2, f2 = 0, n2 = "", o = arguments.length; f2 < o; f2++) (e = arguments[f2]) && (t2 = r(e)) && (n2 && (n2 += " "), n2 += t2);
  return n2;
}
function $3ef42575df84b30b$export$9d1611c77c2fe928(...args) {
  let result = {
    ...args[0]
  };
  for (let i = 1; i < args.length; i++) {
    let props = args[i];
    for (let key in props) {
      let a2 = result[key];
      let b = props[key];
      if (typeof a2 === "function" && typeof b === "function" && // This is a lot faster than a regex.
      key[0] === "o" && key[1] === "n" && key.charCodeAt(2) >= /* 'A' */
      65 && key.charCodeAt(2) <= /* 'Z' */
      90) result[key] = $ff5963eb1fccf552$export$e08e3b67e392101e(a2, b);
      else if ((key === "className" || key === "UNSAFE_className") && typeof a2 === "string" && typeof b === "string") result[key] = clsx(a2, b);
      else if (key === "id" && a2 && b) result.id = $bdb11010cef70236$export$cd8c9cb68f842629(a2, b);
      else result[key] = b !== void 0 ? b : a2;
    }
  }
  return result;
}
function $5dc95899b306f630$export$c9058316764c140e(...refs) {
  if (refs.length === 1) return refs[0];
  return (value) => {
    for (let ref of refs) {
      if (typeof ref === "function") ref(value);
      else if (ref != null) ref.current = value;
    }
  };
}
const $65484d02dcb7eb3e$var$DOMPropNames = /* @__PURE__ */ new Set([
  "id"
]);
const $65484d02dcb7eb3e$var$labelablePropNames = /* @__PURE__ */ new Set([
  "aria-label",
  "aria-labelledby",
  "aria-describedby",
  "aria-details"
]);
const $65484d02dcb7eb3e$var$linkPropNames = /* @__PURE__ */ new Set([
  "href",
  "hrefLang",
  "target",
  "rel",
  "download",
  "ping",
  "referrerPolicy"
]);
const $65484d02dcb7eb3e$var$propRe = /^(data-.*)$/;
function $65484d02dcb7eb3e$export$457c3d6518dd4c6f(props, opts = {}) {
  let { labelable, isLink, propNames } = opts;
  let filteredProps = {};
  for (const prop in props) if (Object.prototype.hasOwnProperty.call(props, prop) && ($65484d02dcb7eb3e$var$DOMPropNames.has(prop) || labelable && $65484d02dcb7eb3e$var$labelablePropNames.has(prop) || isLink && $65484d02dcb7eb3e$var$linkPropNames.has(prop) || (propNames === null || propNames === void 0 ? void 0 : propNames.has(prop)) || $65484d02dcb7eb3e$var$propRe.test(prop))) filteredProps[prop] = props[prop];
  return filteredProps;
}
function $7215afc6de606d6b$export$de79e2c695e052f3(element) {
  if ($7215afc6de606d6b$var$supportsPreventScroll()) element.focus({
    preventScroll: true
  });
  else {
    let scrollableElements = $7215afc6de606d6b$var$getScrollableElements(element);
    element.focus();
    $7215afc6de606d6b$var$restoreScrollPosition(scrollableElements);
  }
}
let $7215afc6de606d6b$var$supportsPreventScrollCached = null;
function $7215afc6de606d6b$var$supportsPreventScroll() {
  if ($7215afc6de606d6b$var$supportsPreventScrollCached == null) {
    $7215afc6de606d6b$var$supportsPreventScrollCached = false;
    try {
      let focusElem = document.createElement("div");
      focusElem.focus({
        get preventScroll() {
          $7215afc6de606d6b$var$supportsPreventScrollCached = true;
          return true;
        }
      });
    } catch (e) {
    }
  }
  return $7215afc6de606d6b$var$supportsPreventScrollCached;
}
function $7215afc6de606d6b$var$getScrollableElements(element) {
  let parent = element.parentNode;
  let scrollableElements = [];
  let rootScrollingElement = document.scrollingElement || document.documentElement;
  while (parent instanceof HTMLElement && parent !== rootScrollingElement) {
    if (parent.offsetHeight < parent.scrollHeight || parent.offsetWidth < parent.scrollWidth) scrollableElements.push({
      element: parent,
      scrollTop: parent.scrollTop,
      scrollLeft: parent.scrollLeft
    });
    parent = parent.parentNode;
  }
  if (rootScrollingElement instanceof HTMLElement) scrollableElements.push({
    element: rootScrollingElement,
    scrollTop: rootScrollingElement.scrollTop,
    scrollLeft: rootScrollingElement.scrollLeft
  });
  return scrollableElements;
}
function $7215afc6de606d6b$var$restoreScrollPosition(scrollableElements) {
  for (let { element, scrollTop, scrollLeft } of scrollableElements) {
    element.scrollTop = scrollTop;
    element.scrollLeft = scrollLeft;
  }
}
function $c87311424ea30a05$var$testUserAgent(re2) {
  var _window_navigator_userAgentData;
  if (typeof window === "undefined" || window.navigator == null) return false;
  return ((_window_navigator_userAgentData = window.navigator["userAgentData"]) === null || _window_navigator_userAgentData === void 0 ? void 0 : _window_navigator_userAgentData.brands.some((brand) => re2.test(brand.brand))) || re2.test(window.navigator.userAgent);
}
function $c87311424ea30a05$var$testPlatform(re2) {
  var _window_navigator_userAgentData;
  return typeof window !== "undefined" && window.navigator != null ? re2.test(((_window_navigator_userAgentData = window.navigator["userAgentData"]) === null || _window_navigator_userAgentData === void 0 ? void 0 : _window_navigator_userAgentData.platform) || window.navigator.platform) : false;
}
function $c87311424ea30a05$export$9ac100e40613ea10() {
  return $c87311424ea30a05$var$testPlatform(/^Mac/i);
}
function $c87311424ea30a05$export$186c6964ca17d99() {
  return $c87311424ea30a05$var$testPlatform(/^iPhone/i);
}
function $c87311424ea30a05$export$7bef049ce92e4224() {
  return $c87311424ea30a05$var$testPlatform(/^iPad/i) || // iPadOS 13 lies and says it's a Mac, but we can distinguish by detecting touch support.
  $c87311424ea30a05$export$9ac100e40613ea10() && navigator.maxTouchPoints > 1;
}
function $c87311424ea30a05$export$fedb369cb70207f1() {
  return $c87311424ea30a05$export$186c6964ca17d99() || $c87311424ea30a05$export$7bef049ce92e4224();
}
function $c87311424ea30a05$export$e1865c3bedcd822b() {
  return $c87311424ea30a05$export$9ac100e40613ea10() || $c87311424ea30a05$export$fedb369cb70207f1();
}
function $c87311424ea30a05$export$78551043582a6a98() {
  return $c87311424ea30a05$var$testUserAgent(/AppleWebKit/i) && !$c87311424ea30a05$export$6446a186d09e379e();
}
function $c87311424ea30a05$export$6446a186d09e379e() {
  return $c87311424ea30a05$var$testUserAgent(/Chrome/i);
}
function $c87311424ea30a05$export$a11b0059900ceec8() {
  return $c87311424ea30a05$var$testUserAgent(/Android/i);
}
function $c87311424ea30a05$export$b7d78993b74f766d() {
  return $c87311424ea30a05$var$testUserAgent(/Firefox/i);
}
const $ea8dcbcb9ea1b556$var$RouterContext = /* @__PURE__ */ reactExports.createContext({
  isNative: true,
  open: $ea8dcbcb9ea1b556$var$openSyntheticLink,
  useHref: (href) => href
});
function $ea8dcbcb9ea1b556$export$323e4fc2fa4753fb(props) {
  let { children, navigate, useHref } = props;
  let ctx = reactExports.useMemo(() => ({
    isNative: false,
    open: (target, modifiers, href, routerOptions) => {
      $ea8dcbcb9ea1b556$var$getSyntheticLink(target, (link2) => {
        if ($ea8dcbcb9ea1b556$export$efa8c9099e530235(link2, modifiers)) navigate(href, routerOptions);
        else $ea8dcbcb9ea1b556$export$95185d699e05d4d7(link2, modifiers);
      });
    },
    useHref: useHref || ((href) => href)
  }), [
    navigate,
    useHref
  ]);
  return /* @__PURE__ */ React$1.createElement($ea8dcbcb9ea1b556$var$RouterContext.Provider, {
    value: ctx
  }, children);
}
function $ea8dcbcb9ea1b556$export$9a302a45f65d0572() {
  return reactExports.useContext($ea8dcbcb9ea1b556$var$RouterContext);
}
function $ea8dcbcb9ea1b556$export$efa8c9099e530235(link2, modifiers) {
  let target = link2.getAttribute("target");
  return (!target || target === "_self") && link2.origin === location.origin && !link2.hasAttribute("download") && !modifiers.metaKey && // open in new tab (mac)
  !modifiers.ctrlKey && // open in new tab (windows)
  !modifiers.altKey && // download
  !modifiers.shiftKey;
}
function $ea8dcbcb9ea1b556$export$95185d699e05d4d7(target, modifiers, setOpening = true) {
  var _window_event_type, _window_event;
  let { metaKey, ctrlKey, altKey, shiftKey } = modifiers;
  if ($c87311424ea30a05$export$b7d78993b74f766d() && ((_window_event = window.event) === null || _window_event === void 0 ? void 0 : (_window_event_type = _window_event.type) === null || _window_event_type === void 0 ? void 0 : _window_event_type.startsWith("key")) && target.target === "_blank") {
    if ($c87311424ea30a05$export$9ac100e40613ea10()) metaKey = true;
    else ctrlKey = true;
  }
  let event = $c87311424ea30a05$export$78551043582a6a98() && $c87311424ea30a05$export$9ac100e40613ea10() && !$c87311424ea30a05$export$7bef049ce92e4224() && true ? new KeyboardEvent("keydown", {
    keyIdentifier: "Enter",
    metaKey,
    ctrlKey,
    altKey,
    shiftKey
  }) : new MouseEvent("click", {
    metaKey,
    ctrlKey,
    altKey,
    shiftKey,
    bubbles: true,
    cancelable: true
  });
  $ea8dcbcb9ea1b556$export$95185d699e05d4d7.isOpening = setOpening;
  $7215afc6de606d6b$export$de79e2c695e052f3(target);
  target.dispatchEvent(event);
  $ea8dcbcb9ea1b556$export$95185d699e05d4d7.isOpening = false;
}
$ea8dcbcb9ea1b556$export$95185d699e05d4d7.isOpening = false;
function $ea8dcbcb9ea1b556$var$getSyntheticLink(target, open) {
  if (target instanceof HTMLAnchorElement) open(target);
  else if (target.hasAttribute("data-href")) {
    let link2 = document.createElement("a");
    link2.href = target.getAttribute("data-href");
    if (target.hasAttribute("data-target")) link2.target = target.getAttribute("data-target");
    if (target.hasAttribute("data-rel")) link2.rel = target.getAttribute("data-rel");
    if (target.hasAttribute("data-download")) link2.download = target.getAttribute("data-download");
    if (target.hasAttribute("data-ping")) link2.ping = target.getAttribute("data-ping");
    if (target.hasAttribute("data-referrer-policy")) link2.referrerPolicy = target.getAttribute("data-referrer-policy");
    target.appendChild(link2);
    open(link2);
    target.removeChild(link2);
  }
}
function $ea8dcbcb9ea1b556$var$openSyntheticLink(target, modifiers) {
  $ea8dcbcb9ea1b556$var$getSyntheticLink(target, (link2) => $ea8dcbcb9ea1b556$export$95185d699e05d4d7(link2, modifiers));
}
function $ea8dcbcb9ea1b556$export$7e924b3091a3bd18(props) {
  let router2 = $ea8dcbcb9ea1b556$export$9a302a45f65d0572();
  return {
    href: (props === null || props === void 0 ? void 0 : props.href) ? router2.useHref(props === null || props === void 0 ? void 0 : props.href) : void 0,
    target: props === null || props === void 0 ? void 0 : props.target,
    rel: props === null || props === void 0 ? void 0 : props.rel,
    download: props === null || props === void 0 ? void 0 : props.download,
    ping: props === null || props === void 0 ? void 0 : props.ping,
    referrerPolicy: props === null || props === void 0 ? void 0 : props.referrerPolicy
  };
}
let $bbed8b41f857bcc0$var$transitionsByElement = /* @__PURE__ */ new Map();
let $bbed8b41f857bcc0$var$transitionCallbacks = /* @__PURE__ */ new Set();
function $bbed8b41f857bcc0$var$setupGlobalEvents() {
  if (typeof window === "undefined") return;
  function isTransitionEvent(event) {
    return "propertyName" in event;
  }
  let onTransitionStart = (e) => {
    if (!isTransitionEvent(e) || !e.target) return;
    let transitions = $bbed8b41f857bcc0$var$transitionsByElement.get(e.target);
    if (!transitions) {
      transitions = /* @__PURE__ */ new Set();
      $bbed8b41f857bcc0$var$transitionsByElement.set(e.target, transitions);
      e.target.addEventListener("transitioncancel", onTransitionEnd, {
        once: true
      });
    }
    transitions.add(e.propertyName);
  };
  let onTransitionEnd = (e) => {
    if (!isTransitionEvent(e) || !e.target) return;
    let properties = $bbed8b41f857bcc0$var$transitionsByElement.get(e.target);
    if (!properties) return;
    properties.delete(e.propertyName);
    if (properties.size === 0) {
      e.target.removeEventListener("transitioncancel", onTransitionEnd);
      $bbed8b41f857bcc0$var$transitionsByElement.delete(e.target);
    }
    if ($bbed8b41f857bcc0$var$transitionsByElement.size === 0) {
      for (let cb2 of $bbed8b41f857bcc0$var$transitionCallbacks) cb2();
      $bbed8b41f857bcc0$var$transitionCallbacks.clear();
    }
  };
  document.body.addEventListener("transitionrun", onTransitionStart);
  document.body.addEventListener("transitionend", onTransitionEnd);
}
if (typeof document !== "undefined") {
  if (document.readyState !== "loading") $bbed8b41f857bcc0$var$setupGlobalEvents();
  else document.addEventListener("DOMContentLoaded", $bbed8b41f857bcc0$var$setupGlobalEvents);
}
function $bbed8b41f857bcc0$export$24490316f764c430(fn) {
  requestAnimationFrame(() => {
    if ($bbed8b41f857bcc0$var$transitionsByElement.size === 0) fn();
    else $bbed8b41f857bcc0$var$transitionCallbacks.add(fn);
  });
}
function $03deb23ff14920c4$export$4eaf04e54aa8eed6() {
  let globalListeners = reactExports.useRef(/* @__PURE__ */ new Map());
  let addGlobalListener = reactExports.useCallback((eventTarget, type2, listener, options) => {
    let fn = (options === null || options === void 0 ? void 0 : options.once) ? (...args) => {
      globalListeners.current.delete(listener);
      listener(...args);
    } : listener;
    globalListeners.current.set(listener, {
      type: type2,
      eventTarget,
      fn,
      options
    });
    eventTarget.addEventListener(type2, listener, options);
  }, []);
  let removeGlobalListener = reactExports.useCallback((eventTarget, type2, listener, options) => {
    var _globalListeners_current_get;
    let fn = ((_globalListeners_current_get = globalListeners.current.get(listener)) === null || _globalListeners_current_get === void 0 ? void 0 : _globalListeners_current_get.fn) || listener;
    eventTarget.removeEventListener(type2, fn, options);
    globalListeners.current.delete(listener);
  }, []);
  let removeAllGlobalListeners = reactExports.useCallback(() => {
    globalListeners.current.forEach((value, key) => {
      removeGlobalListener(value.eventTarget, value.type, key, value.options);
    });
  }, [
    removeGlobalListener
  ]);
  reactExports.useEffect(() => {
    return removeAllGlobalListeners;
  }, [
    removeAllGlobalListeners
  ]);
  return {
    addGlobalListener,
    removeGlobalListener,
    removeAllGlobalListeners
  };
}
function $313b98861ee5dd6c$export$d6875122194c7b44(props, defaultLabel) {
  let { id: id2, "aria-label": label, "aria-labelledby": labelledBy } = props;
  id2 = $bdb11010cef70236$export$f680877a34711e37(id2);
  if (labelledBy && label) {
    let ids = /* @__PURE__ */ new Set([
      id2,
      ...labelledBy.trim().split(/\s+/)
    ]);
    labelledBy = [
      ...ids
    ].join(" ");
  } else if (labelledBy) labelledBy = labelledBy.trim().split(/\s+/).join(" ");
  if (!label && !labelledBy && defaultLabel) label = defaultLabel;
  return {
    id: id2,
    "aria-label": label,
    "aria-labelledby": labelledBy
  };
}
function $9daab02d461809db$var$hasResizeObserver() {
  return typeof window.ResizeObserver !== "undefined";
}
function $9daab02d461809db$export$683480f191c0e3ea(options) {
  const { ref, onResize } = options;
  reactExports.useEffect(() => {
    let element = ref === null || ref === void 0 ? void 0 : ref.current;
    if (!element) return;
    if (!$9daab02d461809db$var$hasResizeObserver()) {
      window.addEventListener("resize", onResize, false);
      return () => {
        window.removeEventListener("resize", onResize, false);
      };
    } else {
      const resizeObserverInstance = new window.ResizeObserver((entries) => {
        if (!entries.length) return;
        onResize();
      });
      resizeObserverInstance.observe(element);
      return () => {
        if (element) resizeObserverInstance.unobserve(element);
      };
    }
  }, [
    onResize,
    ref
  ]);
}
function $e7801be82b4b2a53$export$4debdb1a3f0fa79e(context, ref) {
  $f0a04ccd8dbdd83b$export$e5c5a5f917a5871c(() => {
    if (context && context.ref && ref) {
      context.ref.current = ref.current;
      return () => {
        if (context.ref) context.ref.current = null;
      };
    }
  });
}
function $cc38e7bd3fc7b213$export$2bb74740c4e19def(node, checkForOverflow) {
  let style = window.getComputedStyle(node);
  let isScrollable = /(auto|scroll)/.test(style.overflow + style.overflowX + style.overflowY);
  if (isScrollable && checkForOverflow) isScrollable = node.scrollHeight !== node.clientHeight || node.scrollWidth !== node.clientWidth;
  return isScrollable;
}
function $a40c673dc9f6d9c7$export$94ed1c92c7beeb22(node, checkForOverflow) {
  const scrollParents = [];
  while (node && node !== document.documentElement) {
    if ($cc38e7bd3fc7b213$export$2bb74740c4e19def(node, checkForOverflow)) scrollParents.push(node);
    node = node.parentElement;
  }
  return scrollParents;
}
let $ef06256079686ba0$var$descriptionId = 0;
const $ef06256079686ba0$var$descriptionNodes = /* @__PURE__ */ new Map();
function $ef06256079686ba0$export$f8aeda7b10753fa1(description) {
  let [id2, setId] = reactExports.useState();
  $f0a04ccd8dbdd83b$export$e5c5a5f917a5871c(() => {
    if (!description) return;
    let desc = $ef06256079686ba0$var$descriptionNodes.get(description);
    if (!desc) {
      let id3 = `react-aria-description-${$ef06256079686ba0$var$descriptionId++}`;
      setId(id3);
      let node = document.createElement("div");
      node.id = id3;
      node.style.display = "none";
      node.textContent = description;
      document.body.appendChild(node);
      desc = {
        refCount: 0,
        element: node
      };
      $ef06256079686ba0$var$descriptionNodes.set(description, desc);
    } else setId(desc.element.id);
    desc.refCount++;
    return () => {
      if (desc && --desc.refCount === 0) {
        desc.element.remove();
        $ef06256079686ba0$var$descriptionNodes.delete(description);
      }
    };
  }, [
    description
  ]);
  return {
    "aria-describedby": description ? id2 : void 0
  };
}
function $e9faafb641e167db$export$90fc3a17d93f704c(ref, event, handler, options) {
  let handleEvent = $8ae05eaa5c114e9c$export$7f54fc3180508a52(handler);
  let isDisabled = handler == null;
  reactExports.useEffect(() => {
    if (isDisabled || !ref.current) return;
    let element = ref.current;
    element.addEventListener(event, handleEvent, options);
    return () => {
      element.removeEventListener(event, handleEvent, options);
    };
  }, [
    ref,
    event,
    options,
    isDisabled,
    handleEvent
  ]);
}
function $2f04cbc44ee30ce0$export$53a0910f038337bd(scrollView, element) {
  let offsetX = $2f04cbc44ee30ce0$var$relativeOffset(scrollView, element, "left");
  let offsetY = $2f04cbc44ee30ce0$var$relativeOffset(scrollView, element, "top");
  let width = element.offsetWidth;
  let height = element.offsetHeight;
  let x2 = scrollView.scrollLeft;
  let y2 = scrollView.scrollTop;
  let { borderTopWidth, borderLeftWidth } = getComputedStyle(scrollView);
  let borderAdjustedX = scrollView.scrollLeft + parseInt(borderLeftWidth, 10);
  let borderAdjustedY = scrollView.scrollTop + parseInt(borderTopWidth, 10);
  let maxX = borderAdjustedX + scrollView.clientWidth;
  let maxY = borderAdjustedY + scrollView.clientHeight;
  if (offsetX <= x2) x2 = offsetX - parseInt(borderLeftWidth, 10);
  else if (offsetX + width > maxX) x2 += offsetX + width - maxX;
  if (offsetY <= borderAdjustedY) y2 = offsetY - parseInt(borderTopWidth, 10);
  else if (offsetY + height > maxY) y2 += offsetY + height - maxY;
  scrollView.scrollLeft = x2;
  scrollView.scrollTop = y2;
}
function $2f04cbc44ee30ce0$var$relativeOffset(ancestor, child, axis) {
  const prop = axis === "left" ? "offsetLeft" : "offsetTop";
  let sum = 0;
  while (child.offsetParent) {
    sum += child[prop];
    if (child.offsetParent === ancestor) break;
    else if (child.offsetParent.contains(ancestor)) {
      sum -= ancestor[prop];
      break;
    }
    child = child.offsetParent;
  }
  return sum;
}
function $2f04cbc44ee30ce0$export$c826860796309d1b(targetElement, opts) {
  if (document.contains(targetElement)) {
    let root2 = document.scrollingElement || document.documentElement;
    let isScrollPrevented = window.getComputedStyle(root2).overflow === "hidden";
    if (!isScrollPrevented) {
      var _targetElement_scrollIntoView;
      let { left: originalLeft, top: originalTop } = targetElement.getBoundingClientRect();
      targetElement === null || targetElement === void 0 ? void 0 : (_targetElement_scrollIntoView = targetElement.scrollIntoView) === null || _targetElement_scrollIntoView === void 0 ? void 0 : _targetElement_scrollIntoView.call(targetElement, {
        block: "nearest"
      });
      let { left: newLeft, top: newTop } = targetElement.getBoundingClientRect();
      if (Math.abs(originalLeft - newLeft) > 1 || Math.abs(originalTop - newTop) > 1) {
        var _opts_containingElement_scrollIntoView, _opts_containingElement, _targetElement_scrollIntoView1;
        opts === null || opts === void 0 ? void 0 : (_opts_containingElement = opts.containingElement) === null || _opts_containingElement === void 0 ? void 0 : (_opts_containingElement_scrollIntoView = _opts_containingElement.scrollIntoView) === null || _opts_containingElement_scrollIntoView === void 0 ? void 0 : _opts_containingElement_scrollIntoView.call(_opts_containingElement, {
          block: "center",
          inline: "center"
        });
        (_targetElement_scrollIntoView1 = targetElement.scrollIntoView) === null || _targetElement_scrollIntoView1 === void 0 ? void 0 : _targetElement_scrollIntoView1.call(targetElement, {
          block: "nearest"
        });
      }
    } else {
      let scrollParents = $a40c673dc9f6d9c7$export$94ed1c92c7beeb22(targetElement);
      for (let scrollParent of scrollParents) $2f04cbc44ee30ce0$export$53a0910f038337bd(scrollParent, targetElement);
    }
  }
}
function $6a7db85432448f7f$export$60278871457622de(event) {
  if (event.mozInputSource === 0 && event.isTrusted) return true;
  if ($c87311424ea30a05$export$a11b0059900ceec8() && event.pointerType) return event.type === "click" && event.buttons === 1;
  return event.detail === 0 && !event.pointerType;
}
function $6a7db85432448f7f$export$29bf1b5f2c56cf63(event) {
  return !$c87311424ea30a05$export$a11b0059900ceec8() && event.width === 0 && event.height === 0 || event.width === 1 && event.height === 1 && event.pressure === 0 && event.detail === 0 && event.pointerType === "mouse";
}
function $99facab73266f662$export$5add1d006293d136(ref, initialValue, onReset) {
  let resetValue = reactExports.useRef(initialValue);
  let handleReset = $8ae05eaa5c114e9c$export$7f54fc3180508a52(() => {
    if (onReset) onReset(resetValue.current);
  });
  reactExports.useEffect(() => {
    var _ref_current;
    let form = ref === null || ref === void 0 ? void 0 : (_ref_current = ref.current) === null || _ref_current === void 0 ? void 0 : _ref_current.form;
    form === null || form === void 0 ? void 0 : form.addEventListener("reset", handleReset);
    return () => {
      form === null || form === void 0 ? void 0 : form.removeEventListener("reset", handleReset);
    };
  }, [
    ref,
    handleReset
  ]);
}
function $458b0a5536c1a7cf$export$40bfa8c7b0832715$1(value, defaultValue, onChange) {
  let [stateValue, setStateValue] = reactExports.useState(value || defaultValue);
  let isControlledRef = reactExports.useRef(value !== void 0);
  let isControlled = value !== void 0;
  reactExports.useEffect(() => {
    let wasControlled = isControlledRef.current;
    if (wasControlled !== isControlled) console.warn(`WARN: A component changed from ${wasControlled ? "controlled" : "uncontrolled"} to ${isControlled ? "controlled" : "uncontrolled"}.`);
    isControlledRef.current = isControlled;
  }, [
    isControlled
  ]);
  let currentValue = isControlled ? value : stateValue;
  let setValue = reactExports.useCallback((value2, ...args) => {
    let onChangeCaller = (value3, ...onChangeArgs) => {
      if (onChange) {
        if (!Object.is(currentValue, value3)) onChange(value3, ...onChangeArgs);
      }
      if (!isControlled)
        currentValue = value3;
    };
    if (typeof value2 === "function") {
      console.warn("We can not support a function callback. See Github Issues for details https://github.com/adobe/react-spectrum/issues/2320");
      let updateFunction = (oldValue, ...functionArgs) => {
        let interceptedValue = value2(isControlled ? currentValue : oldValue, ...functionArgs);
        onChangeCaller(interceptedValue, ...args);
        if (!isControlled) return interceptedValue;
        return oldValue;
      };
      setStateValue(updateFunction);
    } else {
      if (!isControlled) setStateValue(value2);
      onChangeCaller(value2, ...args);
    }
  }, [
    isControlled,
    currentValue,
    onChange
  ]);
  return [
    currentValue,
    setValue
  ];
}
function $9446cca9a3875146$export$7d15b64cf5a3a4c4(value, min = -Infinity, max = Infinity) {
  let newValue = Math.min(Math.max(value, min), max);
  return newValue;
}
function $9446cca9a3875146$export$e1a7b8e69ef6c52f(value, step) {
  let roundedValue = value;
  let stepString = step.toString();
  let pointIndex = stepString.indexOf(".");
  let precision = pointIndex >= 0 ? stepString.length - pointIndex : 0;
  if (precision > 0) {
    let pow = Math.pow(10, precision);
    roundedValue = Math.round(roundedValue * pow) / pow;
  }
  return roundedValue;
}
function $9446cca9a3875146$export$cb6e0bb50bc19463(value, min, max, step) {
  min = Number(min);
  max = Number(max);
  let remainder = (value - (isNaN(min) ? 0 : min)) % step;
  let snappedValue = $9446cca9a3875146$export$e1a7b8e69ef6c52f(Math.abs(remainder) * 2 >= step ? value + Math.sign(remainder) * (step - Math.abs(remainder)) : value - remainder, step);
  if (!isNaN(min)) {
    if (snappedValue < min) snappedValue = min;
    else if (!isNaN(max) && snappedValue > max) snappedValue = min + Math.floor($9446cca9a3875146$export$e1a7b8e69ef6c52f((max - min) / step, step)) * step;
  } else if (!isNaN(max) && snappedValue > max) snappedValue = Math.floor($9446cca9a3875146$export$e1a7b8e69ef6c52f(max / step, step)) * step;
  snappedValue = $9446cca9a3875146$export$e1a7b8e69ef6c52f(snappedValue, step);
  return snappedValue;
}
let $488c6ddbf4ef74c2$var$formatterCache = /* @__PURE__ */ new Map();
let $488c6ddbf4ef74c2$var$supportsSignDisplay = false;
try {
  $488c6ddbf4ef74c2$var$supportsSignDisplay = new Intl.NumberFormat("de-DE", {
    signDisplay: "exceptZero"
  }).resolvedOptions().signDisplay === "exceptZero";
} catch (e) {
}
let $488c6ddbf4ef74c2$var$supportsUnit = false;
try {
  $488c6ddbf4ef74c2$var$supportsUnit = new Intl.NumberFormat("de-DE", {
    style: "unit",
    unit: "degree"
  }).resolvedOptions().style === "unit";
} catch (e) {
}
const $488c6ddbf4ef74c2$var$UNITS = {
  degree: {
    narrow: {
      default: "°",
      "ja-JP": " 度",
      "zh-TW": "度",
      "sl-SI": " °"
    }
  }
};
class $488c6ddbf4ef74c2$export$cc77c4ff7e8673c5 {
  /** Formats a number value as a string, according to the locale and options provided to the constructor. */
  format(value) {
    let res = "";
    if (!$488c6ddbf4ef74c2$var$supportsSignDisplay && this.options.signDisplay != null) res = $488c6ddbf4ef74c2$export$711b50b3c525e0f2(this.numberFormatter, this.options.signDisplay, value);
    else res = this.numberFormatter.format(value);
    if (this.options.style === "unit" && !$488c6ddbf4ef74c2$var$supportsUnit) {
      var _UNITS_unit;
      let { unit, unitDisplay = "short", locale } = this.resolvedOptions();
      if (!unit) return res;
      let values = (_UNITS_unit = $488c6ddbf4ef74c2$var$UNITS[unit]) === null || _UNITS_unit === void 0 ? void 0 : _UNITS_unit[unitDisplay];
      res += values[locale] || values.default;
    }
    return res;
  }
  /** Formats a number to an array of parts such as separators, digits, punctuation, and more. */
  formatToParts(value) {
    return this.numberFormatter.formatToParts(value);
  }
  /** Formats a number range as a string. */
  formatRange(start, end) {
    if (typeof this.numberFormatter.formatRange === "function")
      return this.numberFormatter.formatRange(start, end);
    if (end < start) throw new RangeError("End date must be >= start date");
    return `${this.format(start)} – ${this.format(end)}`;
  }
  /** Formats a number range as an array of parts. */
  formatRangeToParts(start, end) {
    if (typeof this.numberFormatter.formatRangeToParts === "function")
      return this.numberFormatter.formatRangeToParts(start, end);
    if (end < start) throw new RangeError("End date must be >= start date");
    let startParts = this.numberFormatter.formatToParts(start);
    let endParts = this.numberFormatter.formatToParts(end);
    return [
      ...startParts.map((p2) => ({
        ...p2,
        source: "startRange"
      })),
      {
        type: "literal",
        value: " – ",
        source: "shared"
      },
      ...endParts.map((p2) => ({
        ...p2,
        source: "endRange"
      }))
    ];
  }
  /** Returns the resolved formatting options based on the values passed to the constructor. */
  resolvedOptions() {
    let options = this.numberFormatter.resolvedOptions();
    if (!$488c6ddbf4ef74c2$var$supportsSignDisplay && this.options.signDisplay != null) options = {
      ...options,
      signDisplay: this.options.signDisplay
    };
    if (!$488c6ddbf4ef74c2$var$supportsUnit && this.options.style === "unit") options = {
      ...options,
      style: "unit",
      unit: this.options.unit,
      unitDisplay: this.options.unitDisplay
    };
    return options;
  }
  constructor(locale, options = {}) {
    this.numberFormatter = $488c6ddbf4ef74c2$var$getCachedNumberFormatter(locale, options);
    this.options = options;
  }
}
function $488c6ddbf4ef74c2$var$getCachedNumberFormatter(locale, options = {}) {
  let { numberingSystem } = options;
  if (numberingSystem && locale.includes("-nu-")) {
    if (!locale.includes("-u-")) locale += "-u-";
    locale += `-nu-${numberingSystem}`;
  }
  if (options.style === "unit" && !$488c6ddbf4ef74c2$var$supportsUnit) {
    var _UNITS_unit;
    let { unit, unitDisplay = "short" } = options;
    if (!unit) throw new Error('unit option must be provided with style: "unit"');
    if (!((_UNITS_unit = $488c6ddbf4ef74c2$var$UNITS[unit]) === null || _UNITS_unit === void 0 ? void 0 : _UNITS_unit[unitDisplay])) throw new Error(`Unsupported unit ${unit} with unitDisplay = ${unitDisplay}`);
    options = {
      ...options,
      style: "decimal"
    };
  }
  let cacheKey = locale + (options ? Object.entries(options).sort((a2, b) => a2[0] < b[0] ? -1 : 1).join() : "");
  if ($488c6ddbf4ef74c2$var$formatterCache.has(cacheKey)) return $488c6ddbf4ef74c2$var$formatterCache.get(cacheKey);
  let numberFormatter = new Intl.NumberFormat(locale, options);
  $488c6ddbf4ef74c2$var$formatterCache.set(cacheKey, numberFormatter);
  return numberFormatter;
}
function $488c6ddbf4ef74c2$export$711b50b3c525e0f2(numberFormat, signDisplay, num) {
  if (signDisplay === "auto") return numberFormat.format(num);
  else if (signDisplay === "never") return numberFormat.format(Math.abs(num));
  else {
    let needsPositiveSign = false;
    if (signDisplay === "always") needsPositiveSign = num > 0 || Object.is(num, 0);
    else if (signDisplay === "exceptZero") {
      if (Object.is(num, -0) || Object.is(num, 0)) num = Math.abs(num);
      else needsPositiveSign = num > 0;
    }
    if (needsPositiveSign) {
      let negative = numberFormat.format(-num);
      let noSign = numberFormat.format(num);
      let minus = negative.replace(noSign, "").replace(/\u200e|\u061C/, "");
      if ([
        ...minus
      ].length !== 1) console.warn("@react-aria/i18n polyfill for NumberFormat signDisplay: Unsupported case");
      let positive = negative.replace(noSign, "!!!").replace(minus, "+").replace("!!!", noSign);
      return positive;
    } else return numberFormat.format(num);
  }
}
function $a916eb452884faea$export$b7a616150fdb9f44(options = {}) {
  let { locale } = $18f2051aff69b9bf$export$43bb16f9c6d9e3f7();
  return reactExports.useMemo(() => new $488c6ddbf4ef74c2$export$cc77c4ff7e8673c5(locale, options), [
    locale,
    options
  ]);
}
let $325a3faab7a68acd$var$cache = /* @__PURE__ */ new Map();
function $325a3faab7a68acd$export$a16aca283550c30d(options) {
  let { locale } = $18f2051aff69b9bf$export$43bb16f9c6d9e3f7();
  let cacheKey = locale + (options ? Object.entries(options).sort((a2, b) => a2[0] < b[0] ? -1 : 1).join() : "");
  if ($325a3faab7a68acd$var$cache.has(cacheKey)) return $325a3faab7a68acd$var$cache.get(cacheKey);
  let formatter = new Intl.Collator(locale, options);
  $325a3faab7a68acd$var$cache.set(cacheKey, formatter);
  return formatter;
}
const $edcf132a9284368a$var$AXIS = {
  top: "top",
  bottom: "top",
  left: "left",
  right: "left"
};
const $edcf132a9284368a$var$FLIPPED_DIRECTION = {
  top: "bottom",
  bottom: "top",
  left: "right",
  right: "left"
};
const $edcf132a9284368a$var$CROSS_AXIS = {
  top: "left",
  left: "top"
};
const $edcf132a9284368a$var$AXIS_SIZE = {
  top: "height",
  left: "width"
};
const $edcf132a9284368a$var$TOTAL_SIZE = {
  width: "totalWidth",
  height: "totalHeight"
};
const $edcf132a9284368a$var$PARSED_PLACEMENT_CACHE = {};
let $edcf132a9284368a$var$visualViewport = typeof document !== "undefined" && window.visualViewport;
function $edcf132a9284368a$var$getContainerDimensions(containerNode) {
  let width = 0, height = 0, totalWidth = 0, totalHeight = 0, top = 0, left = 0;
  let scroll = {};
  let isPinchZoomedIn = ($edcf132a9284368a$var$visualViewport === null || $edcf132a9284368a$var$visualViewport === void 0 ? void 0 : $edcf132a9284368a$var$visualViewport.scale) > 1;
  if (containerNode.tagName === "BODY") {
    let documentElement = document.documentElement;
    totalWidth = documentElement.clientWidth;
    totalHeight = documentElement.clientHeight;
    var _visualViewport_width;
    width = (_visualViewport_width = $edcf132a9284368a$var$visualViewport === null || $edcf132a9284368a$var$visualViewport === void 0 ? void 0 : $edcf132a9284368a$var$visualViewport.width) !== null && _visualViewport_width !== void 0 ? _visualViewport_width : totalWidth;
    var _visualViewport_height;
    height = (_visualViewport_height = $edcf132a9284368a$var$visualViewport === null || $edcf132a9284368a$var$visualViewport === void 0 ? void 0 : $edcf132a9284368a$var$visualViewport.height) !== null && _visualViewport_height !== void 0 ? _visualViewport_height : totalHeight;
    scroll.top = documentElement.scrollTop || containerNode.scrollTop;
    scroll.left = documentElement.scrollLeft || containerNode.scrollLeft;
    if ($edcf132a9284368a$var$visualViewport) {
      top = $edcf132a9284368a$var$visualViewport.offsetTop;
      left = $edcf132a9284368a$var$visualViewport.offsetLeft;
    }
  } else {
    ({ width, height, top, left } = $edcf132a9284368a$var$getOffset(containerNode));
    scroll.top = containerNode.scrollTop;
    scroll.left = containerNode.scrollLeft;
    totalWidth = width;
    totalHeight = height;
  }
  if ($c87311424ea30a05$export$78551043582a6a98() && (containerNode.tagName === "BODY" || containerNode.tagName === "HTML") && isPinchZoomedIn) {
    scroll.top = 0;
    scroll.left = 0;
    top = $edcf132a9284368a$var$visualViewport.pageTop;
    left = $edcf132a9284368a$var$visualViewport.pageLeft;
  }
  return {
    width,
    height,
    totalWidth,
    totalHeight,
    scroll,
    top,
    left
  };
}
function $edcf132a9284368a$var$getScroll(node) {
  return {
    top: node.scrollTop,
    left: node.scrollLeft,
    width: node.scrollWidth,
    height: node.scrollHeight
  };
}
function $edcf132a9284368a$var$getDelta(axis, offset, size2, boundaryDimensions, containerDimensions, padding, containerOffsetWithBoundary) {
  let containerScroll = containerDimensions.scroll[axis];
  let boundarySize = boundaryDimensions[$edcf132a9284368a$var$AXIS_SIZE[axis]];
  let boundaryStartEdge = boundaryDimensions.scroll[$edcf132a9284368a$var$AXIS[axis]] + padding;
  let boundaryEndEdge = boundarySize + boundaryDimensions.scroll[$edcf132a9284368a$var$AXIS[axis]] - padding;
  let startEdgeOffset = offset - containerScroll + containerOffsetWithBoundary[axis] - boundaryDimensions[$edcf132a9284368a$var$AXIS[axis]];
  let endEdgeOffset = offset - containerScroll + size2 + containerOffsetWithBoundary[axis] - boundaryDimensions[$edcf132a9284368a$var$AXIS[axis]];
  if (startEdgeOffset < boundaryStartEdge) return boundaryStartEdge - startEdgeOffset;
  else if (endEdgeOffset > boundaryEndEdge) return Math.max(boundaryEndEdge - endEdgeOffset, boundaryStartEdge - startEdgeOffset);
  else return 0;
}
function $edcf132a9284368a$var$getMargins(node) {
  let style = window.getComputedStyle(node);
  return {
    top: parseInt(style.marginTop, 10) || 0,
    bottom: parseInt(style.marginBottom, 10) || 0,
    left: parseInt(style.marginLeft, 10) || 0,
    right: parseInt(style.marginRight, 10) || 0
  };
}
function $edcf132a9284368a$var$parsePlacement(input2) {
  if ($edcf132a9284368a$var$PARSED_PLACEMENT_CACHE[input2]) return $edcf132a9284368a$var$PARSED_PLACEMENT_CACHE[input2];
  let [placement, crossPlacement] = input2.split(" ");
  let axis = $edcf132a9284368a$var$AXIS[placement] || "right";
  let crossAxis = $edcf132a9284368a$var$CROSS_AXIS[axis];
  if (!$edcf132a9284368a$var$AXIS[crossPlacement]) crossPlacement = "center";
  let size2 = $edcf132a9284368a$var$AXIS_SIZE[axis];
  let crossSize = $edcf132a9284368a$var$AXIS_SIZE[crossAxis];
  $edcf132a9284368a$var$PARSED_PLACEMENT_CACHE[input2] = {
    placement,
    crossPlacement,
    axis,
    crossAxis,
    size: size2,
    crossSize
  };
  return $edcf132a9284368a$var$PARSED_PLACEMENT_CACHE[input2];
}
function $edcf132a9284368a$var$computePosition(childOffset, boundaryDimensions, overlaySize, placementInfo, offset, crossOffset, containerOffsetWithBoundary, isContainerPositioned, arrowSize, arrowBoundaryOffset) {
  let { placement, crossPlacement, axis, crossAxis, size: size2, crossSize } = placementInfo;
  let position = {};
  position[crossAxis] = childOffset[crossAxis];
  if (crossPlacement === "center")
    position[crossAxis] += (childOffset[crossSize] - overlaySize[crossSize]) / 2;
  else if (crossPlacement !== crossAxis)
    position[crossAxis] += childOffset[crossSize] - overlaySize[crossSize];
  position[crossAxis] += crossOffset;
  const minPosition = childOffset[crossAxis] - overlaySize[crossSize] + arrowSize + arrowBoundaryOffset;
  const maxPosition = childOffset[crossAxis] + childOffset[crossSize] - arrowSize - arrowBoundaryOffset;
  position[crossAxis] = $9446cca9a3875146$export$7d15b64cf5a3a4c4(position[crossAxis], minPosition, maxPosition);
  if (placement === axis) {
    const containerHeight = isContainerPositioned ? containerOffsetWithBoundary[size2] : boundaryDimensions[$edcf132a9284368a$var$TOTAL_SIZE[size2]];
    position[$edcf132a9284368a$var$FLIPPED_DIRECTION[axis]] = Math.floor(containerHeight - childOffset[axis] + offset);
  } else position[axis] = Math.floor(childOffset[axis] + childOffset[size2] + offset);
  return position;
}
function $edcf132a9284368a$var$getMaxHeight(position, boundaryDimensions, containerOffsetWithBoundary, isContainerPositioned, margins, padding, overlayHeight, heightGrowthDirection) {
  const containerHeight = isContainerPositioned ? containerOffsetWithBoundary.height : boundaryDimensions[$edcf132a9284368a$var$TOTAL_SIZE.height];
  let overlayTop = position.top != null ? containerOffsetWithBoundary.top + position.top : containerOffsetWithBoundary.top + (containerHeight - position.bottom - overlayHeight);
  let maxHeight = heightGrowthDirection !== "top" ? (
    // We want the distance between the top of the overlay to the bottom of the boundary
    Math.max(0, boundaryDimensions.height + boundaryDimensions.top + boundaryDimensions.scroll.top - overlayTop - (margins.top + margins.bottom + padding))
  ) : Math.max(0, overlayTop + overlayHeight - (boundaryDimensions.top + boundaryDimensions.scroll.top) - (margins.top + margins.bottom + padding));
  return Math.min(boundaryDimensions.height - padding * 2, maxHeight);
}
function $edcf132a9284368a$var$getAvailableSpace(boundaryDimensions, containerOffsetWithBoundary, childOffset, margins, padding, placementInfo) {
  let { placement, axis, size: size2 } = placementInfo;
  if (placement === axis) return Math.max(0, childOffset[axis] - boundaryDimensions[axis] - boundaryDimensions.scroll[axis] + containerOffsetWithBoundary[axis] - margins[axis] - margins[$edcf132a9284368a$var$FLIPPED_DIRECTION[axis]] - padding);
  return Math.max(0, boundaryDimensions[size2] + boundaryDimensions[axis] + boundaryDimensions.scroll[axis] - containerOffsetWithBoundary[axis] - childOffset[axis] - childOffset[size2] - margins[axis] - margins[$edcf132a9284368a$var$FLIPPED_DIRECTION[axis]] - padding);
}
function $edcf132a9284368a$export$6839422d1f33cee9(placementInput, childOffset, overlaySize, scrollSize, margins, padding, flip, boundaryDimensions, containerDimensions, containerOffsetWithBoundary, offset, crossOffset, isContainerPositioned, userSetMaxHeight, arrowSize, arrowBoundaryOffset) {
  let placementInfo = $edcf132a9284368a$var$parsePlacement(placementInput);
  let { size: size2, crossAxis, crossSize, placement, crossPlacement } = placementInfo;
  let position = $edcf132a9284368a$var$computePosition(childOffset, boundaryDimensions, overlaySize, placementInfo, offset, crossOffset, containerOffsetWithBoundary, isContainerPositioned, arrowSize, arrowBoundaryOffset);
  let normalizedOffset = offset;
  let space = $edcf132a9284368a$var$getAvailableSpace(boundaryDimensions, containerOffsetWithBoundary, childOffset, margins, padding + offset, placementInfo);
  if (flip && scrollSize[size2] > space) {
    let flippedPlacementInfo = $edcf132a9284368a$var$parsePlacement(`${$edcf132a9284368a$var$FLIPPED_DIRECTION[placement]} ${crossPlacement}`);
    let flippedPosition = $edcf132a9284368a$var$computePosition(childOffset, boundaryDimensions, overlaySize, flippedPlacementInfo, offset, crossOffset, containerOffsetWithBoundary, isContainerPositioned, arrowSize, arrowBoundaryOffset);
    let flippedSpace = $edcf132a9284368a$var$getAvailableSpace(boundaryDimensions, containerOffsetWithBoundary, childOffset, margins, padding + offset, flippedPlacementInfo);
    if (flippedSpace > space) {
      placementInfo = flippedPlacementInfo;
      position = flippedPosition;
      normalizedOffset = offset;
    }
  }
  let heightGrowthDirection = "bottom";
  if (placementInfo.axis === "top") {
    if (placementInfo.placement === "top") heightGrowthDirection = "top";
    else if (placementInfo.placement === "bottom") heightGrowthDirection = "bottom";
  } else if (placementInfo.crossAxis === "top") {
    if (placementInfo.crossPlacement === "top") heightGrowthDirection = "bottom";
    else if (placementInfo.crossPlacement === "bottom") heightGrowthDirection = "top";
  }
  let delta = $edcf132a9284368a$var$getDelta(crossAxis, position[crossAxis], overlaySize[crossSize], boundaryDimensions, containerDimensions, padding, containerOffsetWithBoundary);
  position[crossAxis] += delta;
  let maxHeight = $edcf132a9284368a$var$getMaxHeight(position, boundaryDimensions, containerOffsetWithBoundary, isContainerPositioned, margins, padding, overlaySize.height, heightGrowthDirection);
  if (userSetMaxHeight && userSetMaxHeight < maxHeight) maxHeight = userSetMaxHeight;
  overlaySize.height = Math.min(overlaySize.height, maxHeight);
  position = $edcf132a9284368a$var$computePosition(childOffset, boundaryDimensions, overlaySize, placementInfo, normalizedOffset, crossOffset, containerOffsetWithBoundary, isContainerPositioned, arrowSize, arrowBoundaryOffset);
  delta = $edcf132a9284368a$var$getDelta(crossAxis, position[crossAxis], overlaySize[crossSize], boundaryDimensions, containerDimensions, padding, containerOffsetWithBoundary);
  position[crossAxis] += delta;
  let arrowPosition = {};
  let preferredArrowPosition = childOffset[crossAxis] + 0.5 * childOffset[crossSize] - position[crossAxis];
  const arrowMinPosition = arrowSize / 2 + arrowBoundaryOffset;
  const arrowMaxPosition = overlaySize[crossSize] - arrowSize / 2 - arrowBoundaryOffset;
  const arrowOverlappingChildMinEdge = childOffset[crossAxis] - position[crossAxis] + arrowSize / 2;
  const arrowOverlappingChildMaxEdge = childOffset[crossAxis] + childOffset[crossSize] - position[crossAxis] - arrowSize / 2;
  const arrowPositionOverlappingChild = $9446cca9a3875146$export$7d15b64cf5a3a4c4(preferredArrowPosition, arrowOverlappingChildMinEdge, arrowOverlappingChildMaxEdge);
  arrowPosition[crossAxis] = $9446cca9a3875146$export$7d15b64cf5a3a4c4(arrowPositionOverlappingChild, arrowMinPosition, arrowMaxPosition);
  return {
    position,
    maxHeight,
    arrowOffsetLeft: arrowPosition.left,
    arrowOffsetTop: arrowPosition.top,
    placement: placementInfo.placement
  };
}
function $edcf132a9284368a$export$b3ceb0cbf1056d98(opts) {
  let { placement, targetNode, overlayNode, scrollNode, padding, shouldFlip, boundaryElement, offset, crossOffset, maxHeight, arrowSize = 0, arrowBoundaryOffset = 0 } = opts;
  let container = overlayNode instanceof HTMLElement ? $edcf132a9284368a$var$getContainingBlock(overlayNode) : document.documentElement;
  let isViewportContainer = container === document.documentElement;
  const containerPositionStyle = window.getComputedStyle(container).position;
  let isContainerPositioned = !!containerPositionStyle && containerPositionStyle !== "static";
  let childOffset = isViewportContainer ? $edcf132a9284368a$var$getOffset(targetNode) : $edcf132a9284368a$var$getPosition(targetNode, container);
  if (!isViewportContainer) {
    let { marginTop, marginLeft } = window.getComputedStyle(targetNode);
    childOffset.top += parseInt(marginTop, 10) || 0;
    childOffset.left += parseInt(marginLeft, 10) || 0;
  }
  let overlaySize = $edcf132a9284368a$var$getOffset(overlayNode);
  let margins = $edcf132a9284368a$var$getMargins(overlayNode);
  overlaySize.width += margins.left + margins.right;
  overlaySize.height += margins.top + margins.bottom;
  let scrollSize = $edcf132a9284368a$var$getScroll(scrollNode);
  let boundaryDimensions = $edcf132a9284368a$var$getContainerDimensions(boundaryElement);
  let containerDimensions = $edcf132a9284368a$var$getContainerDimensions(container);
  let containerOffsetWithBoundary = boundaryElement.tagName === "BODY" ? $edcf132a9284368a$var$getOffset(container) : $edcf132a9284368a$var$getPosition(container, boundaryElement);
  if (container.tagName === "HTML" && boundaryElement.tagName === "BODY") {
    containerDimensions.scroll.top = 0;
    containerDimensions.scroll.left = 0;
  }
  return $edcf132a9284368a$export$6839422d1f33cee9(placement, childOffset, overlaySize, scrollSize, margins, padding, shouldFlip, boundaryDimensions, containerDimensions, containerOffsetWithBoundary, offset, crossOffset, isContainerPositioned, maxHeight, arrowSize, arrowBoundaryOffset);
}
function $edcf132a9284368a$var$getOffset(node) {
  let { top, left, width, height } = node.getBoundingClientRect();
  let { scrollTop, scrollLeft, clientTop, clientLeft } = document.documentElement;
  return {
    top: top + scrollTop - clientTop,
    left: left + scrollLeft - clientLeft,
    width,
    height
  };
}
function $edcf132a9284368a$var$getPosition(node, parent) {
  let style = window.getComputedStyle(node);
  let offset;
  if (style.position === "fixed") {
    let { top, left, width, height } = node.getBoundingClientRect();
    offset = {
      top,
      left,
      width,
      height
    };
  } else {
    offset = $edcf132a9284368a$var$getOffset(node);
    let parentOffset = $edcf132a9284368a$var$getOffset(parent);
    let parentStyle = window.getComputedStyle(parent);
    parentOffset.top += (parseInt(parentStyle.borderTopWidth, 10) || 0) - parent.scrollTop;
    parentOffset.left += (parseInt(parentStyle.borderLeftWidth, 10) || 0) - parent.scrollLeft;
    offset.top -= parentOffset.top;
    offset.left -= parentOffset.left;
  }
  offset.top -= parseInt(style.marginTop, 10) || 0;
  offset.left -= parseInt(style.marginLeft, 10) || 0;
  return offset;
}
function $edcf132a9284368a$var$getContainingBlock(node) {
  let offsetParent = node.offsetParent;
  if (offsetParent && offsetParent === document.body && window.getComputedStyle(offsetParent).position === "static" && !$edcf132a9284368a$var$isContainingBlock(offsetParent)) offsetParent = document.documentElement;
  if (offsetParent == null) {
    offsetParent = node.parentElement;
    while (offsetParent && !$edcf132a9284368a$var$isContainingBlock(offsetParent)) offsetParent = offsetParent.parentElement;
  }
  return offsetParent || document.documentElement;
}
function $edcf132a9284368a$var$isContainingBlock(node) {
  let style = window.getComputedStyle(node);
  return style.transform !== "none" || /transform|perspective/.test(style.willChange) || style.filter !== "none" || style.contain === "paint" || // @ts-ignore
  "backdropFilter" in style && style.backdropFilter !== "none" || // @ts-ignore
  "WebkitBackdropFilter" in style && style.WebkitBackdropFilter !== "none";
}
const $dd149f63282afbbf$export$f6211563215e3b37 = /* @__PURE__ */ new WeakMap();
function $dd149f63282afbbf$export$18fc8428861184da(opts) {
  let { triggerRef, isOpen, onClose } = opts;
  reactExports.useEffect(() => {
    if (!isOpen || onClose === null) return;
    let onScroll = (e) => {
      let target = e.target;
      if (!triggerRef.current || target instanceof Node && !target.contains(triggerRef.current)) return;
      let onCloseHandler = onClose || $dd149f63282afbbf$export$f6211563215e3b37.get(triggerRef.current);
      if (onCloseHandler) onCloseHandler();
    };
    window.addEventListener("scroll", onScroll, true);
    return () => {
      window.removeEventListener("scroll", onScroll, true);
    };
  }, [
    isOpen,
    onClose,
    triggerRef
  ]);
}
let $2a41e45df1593e64$var$visualViewport = typeof document !== "undefined" && window.visualViewport;
function $2a41e45df1593e64$export$d39e1813b3bdd0e1(props) {
  let { direction } = $18f2051aff69b9bf$export$43bb16f9c6d9e3f7();
  let { arrowSize = 0, targetRef, overlayRef, scrollRef = overlayRef, placement = "bottom", containerPadding = 12, shouldFlip = true, boundaryElement = typeof document !== "undefined" ? document.body : null, offset = 0, crossOffset = 0, shouldUpdatePosition = true, isOpen = true, onClose, maxHeight, arrowBoundaryOffset = 0 } = props;
  let [position, setPosition] = reactExports.useState({
    position: {},
    arrowOffsetLeft: void 0,
    arrowOffsetTop: void 0,
    maxHeight: void 0,
    placement: void 0
  });
  let deps = [
    shouldUpdatePosition,
    placement,
    overlayRef.current,
    targetRef.current,
    scrollRef.current,
    containerPadding,
    shouldFlip,
    boundaryElement,
    offset,
    crossOffset,
    isOpen,
    direction,
    maxHeight,
    arrowBoundaryOffset,
    arrowSize
  ];
  let lastScale = reactExports.useRef($2a41e45df1593e64$var$visualViewport === null || $2a41e45df1593e64$var$visualViewport === void 0 ? void 0 : $2a41e45df1593e64$var$visualViewport.scale);
  reactExports.useEffect(() => {
    if (isOpen) lastScale.current = $2a41e45df1593e64$var$visualViewport === null || $2a41e45df1593e64$var$visualViewport === void 0 ? void 0 : $2a41e45df1593e64$var$visualViewport.scale;
  }, [
    isOpen
  ]);
  let updatePosition = reactExports.useCallback(() => {
    if (shouldUpdatePosition === false || !isOpen || !overlayRef.current || !targetRef.current || !scrollRef.current || !boundaryElement) return;
    if (($2a41e45df1593e64$var$visualViewport === null || $2a41e45df1593e64$var$visualViewport === void 0 ? void 0 : $2a41e45df1593e64$var$visualViewport.scale) !== lastScale.current) return;
    let overlay = overlayRef.current;
    if (!maxHeight && overlayRef.current) {
      var _window_visualViewport;
      overlay.style.top = "0px";
      overlay.style.bottom = "";
      var _window_visualViewport_height;
      overlay.style.maxHeight = ((_window_visualViewport_height = (_window_visualViewport = window.visualViewport) === null || _window_visualViewport === void 0 ? void 0 : _window_visualViewport.height) !== null && _window_visualViewport_height !== void 0 ? _window_visualViewport_height : window.innerHeight) + "px";
    }
    let position2 = $edcf132a9284368a$export$b3ceb0cbf1056d98({
      placement: $2a41e45df1593e64$var$translateRTL(placement, direction),
      overlayNode: overlayRef.current,
      targetNode: targetRef.current,
      scrollNode: scrollRef.current,
      padding: containerPadding,
      shouldFlip,
      boundaryElement,
      offset,
      crossOffset,
      maxHeight,
      arrowSize,
      arrowBoundaryOffset
    });
    overlay.style.top = "";
    overlay.style.bottom = "";
    Object.keys(position2.position).forEach((key) => overlay.style[key] = position2.position[key] + "px");
    overlay.style.maxHeight = position2.maxHeight != null ? position2.maxHeight + "px" : void 0;
    setPosition(position2);
  }, deps);
  $f0a04ccd8dbdd83b$export$e5c5a5f917a5871c(updatePosition, deps);
  $2a41e45df1593e64$var$useResize(updatePosition);
  $9daab02d461809db$export$683480f191c0e3ea({
    ref: overlayRef,
    onResize: updatePosition
  });
  let isResizing = reactExports.useRef(false);
  $f0a04ccd8dbdd83b$export$e5c5a5f917a5871c(() => {
    let timeout;
    let onResize = () => {
      isResizing.current = true;
      clearTimeout(timeout);
      timeout = setTimeout(() => {
        isResizing.current = false;
      }, 500);
      updatePosition();
    };
    let onScroll = () => {
      if (isResizing.current) onResize();
    };
    $2a41e45df1593e64$var$visualViewport === null || $2a41e45df1593e64$var$visualViewport === void 0 ? void 0 : $2a41e45df1593e64$var$visualViewport.addEventListener("resize", onResize);
    $2a41e45df1593e64$var$visualViewport === null || $2a41e45df1593e64$var$visualViewport === void 0 ? void 0 : $2a41e45df1593e64$var$visualViewport.addEventListener("scroll", onScroll);
    return () => {
      $2a41e45df1593e64$var$visualViewport === null || $2a41e45df1593e64$var$visualViewport === void 0 ? void 0 : $2a41e45df1593e64$var$visualViewport.removeEventListener("resize", onResize);
      $2a41e45df1593e64$var$visualViewport === null || $2a41e45df1593e64$var$visualViewport === void 0 ? void 0 : $2a41e45df1593e64$var$visualViewport.removeEventListener("scroll", onScroll);
    };
  }, [
    updatePosition
  ]);
  let close = reactExports.useCallback(() => {
    if (!isResizing.current) onClose();
  }, [
    onClose,
    isResizing
  ]);
  $dd149f63282afbbf$export$18fc8428861184da({
    triggerRef: targetRef,
    isOpen,
    onClose: onClose && close
  });
  return {
    overlayProps: {
      style: {
        position: "absolute",
        zIndex: 1e5,
        ...position.position,
        maxHeight: position.maxHeight
      }
    },
    placement: position.placement,
    arrowProps: {
      "aria-hidden": "true",
      role: "presentation",
      style: {
        left: position.arrowOffsetLeft,
        top: position.arrowOffsetTop
      }
    },
    updatePosition
  };
}
function $2a41e45df1593e64$var$useResize(onResize) {
  $f0a04ccd8dbdd83b$export$e5c5a5f917a5871c(() => {
    window.addEventListener("resize", onResize, false);
    return () => {
      window.removeEventListener("resize", onResize, false);
    };
  }, [
    onResize
  ]);
}
function $2a41e45df1593e64$var$translateRTL(position, direction) {
  if (direction === "rtl") return position.replace("start", "right").replace("end", "left");
  return position.replace("start", "left").replace("end", "right");
}
let $14c0b72509d70225$var$state = "default";
let $14c0b72509d70225$var$savedUserSelect = "";
let $14c0b72509d70225$var$modifiedElementMap = /* @__PURE__ */ new WeakMap();
function $14c0b72509d70225$export$16a4697467175487(target) {
  if ($c87311424ea30a05$export$fedb369cb70207f1()) {
    if ($14c0b72509d70225$var$state === "default") {
      const documentObject = $431fbd86ca7dc216$export$b204af158042fbac(target);
      $14c0b72509d70225$var$savedUserSelect = documentObject.documentElement.style.webkitUserSelect;
      documentObject.documentElement.style.webkitUserSelect = "none";
    }
    $14c0b72509d70225$var$state = "disabled";
  } else if (target instanceof HTMLElement || target instanceof SVGElement) {
    $14c0b72509d70225$var$modifiedElementMap.set(target, target.style.userSelect);
    target.style.userSelect = "none";
  }
}
function $14c0b72509d70225$export$b0d6fa1ab32e3295(target) {
  if ($c87311424ea30a05$export$fedb369cb70207f1()) {
    if ($14c0b72509d70225$var$state !== "disabled") return;
    $14c0b72509d70225$var$state = "restoring";
    setTimeout(() => {
      $bbed8b41f857bcc0$export$24490316f764c430(() => {
        if ($14c0b72509d70225$var$state === "restoring") {
          const documentObject = $431fbd86ca7dc216$export$b204af158042fbac(target);
          if (documentObject.documentElement.style.webkitUserSelect === "none") documentObject.documentElement.style.webkitUserSelect = $14c0b72509d70225$var$savedUserSelect || "";
          $14c0b72509d70225$var$savedUserSelect = "";
          $14c0b72509d70225$var$state = "default";
        }
      });
    }, 300);
  } else if (target instanceof HTMLElement || target instanceof SVGElement) {
    if (target && $14c0b72509d70225$var$modifiedElementMap.has(target)) {
      let targetOldUserSelect = $14c0b72509d70225$var$modifiedElementMap.get(target);
      if (target.style.userSelect === "none") target.style.userSelect = targetOldUserSelect;
      if (target.getAttribute("style") === "") target.removeAttribute("style");
      $14c0b72509d70225$var$modifiedElementMap.delete(target);
    }
  }
}
const $ae1eeba8b9eafd08$export$5165eccb35aaadb5 = React$1.createContext({
  register: () => {
  }
});
$ae1eeba8b9eafd08$export$5165eccb35aaadb5.displayName = "PressResponderContext";
function _class_apply_descriptor_get(receiver, descriptor) {
  if (descriptor.get) return descriptor.get.call(receiver);
  return descriptor.value;
}
function _class_extract_field_descriptor(receiver, privateMap, action) {
  if (!privateMap.has(receiver)) throw new TypeError("attempted to " + action + " private field on non-instance");
  return privateMap.get(receiver);
}
function _class_private_field_get(receiver, privateMap) {
  var descriptor = _class_extract_field_descriptor(receiver, privateMap, "get");
  return _class_apply_descriptor_get(receiver, descriptor);
}
function _class_apply_descriptor_set(receiver, descriptor, value) {
  if (descriptor.set) descriptor.set.call(receiver, value);
  else {
    if (!descriptor.writable) {
      throw new TypeError("attempted to set read only private field");
    }
    descriptor.value = value;
  }
}
function _class_private_field_set(receiver, privateMap, value) {
  var descriptor = _class_extract_field_descriptor(receiver, privateMap, "set");
  _class_apply_descriptor_set(receiver, descriptor, value);
  return value;
}
function $f6c31cce2adf654f$var$usePressResponderContext(props) {
  let context = reactExports.useContext($ae1eeba8b9eafd08$export$5165eccb35aaadb5);
  if (context) {
    let { register: register4, ...contextProps } = context;
    props = $3ef42575df84b30b$export$9d1611c77c2fe928(contextProps, props);
    register4();
  }
  $e7801be82b4b2a53$export$4debdb1a3f0fa79e(context, props.ref);
  return props;
}
var $f6c31cce2adf654f$var$_shouldStopPropagation = /* @__PURE__ */ new WeakMap();
class $f6c31cce2adf654f$var$PressEvent {
  continuePropagation() {
    _class_private_field_set(this, $f6c31cce2adf654f$var$_shouldStopPropagation, false);
  }
  get shouldStopPropagation() {
    return _class_private_field_get(this, $f6c31cce2adf654f$var$_shouldStopPropagation);
  }
  constructor(type2, pointerType, originalEvent) {
    _class_private_field_init(this, $f6c31cce2adf654f$var$_shouldStopPropagation, {
      writable: true,
      value: void 0
    });
    _class_private_field_set(this, $f6c31cce2adf654f$var$_shouldStopPropagation, true);
    this.type = type2;
    this.pointerType = pointerType;
    this.target = originalEvent.currentTarget;
    this.shiftKey = originalEvent.shiftKey;
    this.metaKey = originalEvent.metaKey;
    this.ctrlKey = originalEvent.ctrlKey;
    this.altKey = originalEvent.altKey;
  }
}
const $f6c31cce2adf654f$var$LINK_CLICKED = Symbol("linkClicked");
function $f6c31cce2adf654f$export$45712eceda6fad21(props) {
  let {
    onPress,
    onPressChange,
    onPressStart,
    onPressEnd,
    onPressUp,
    isDisabled,
    isPressed: isPressedProp,
    preventFocusOnPress,
    shouldCancelOnPointerExit,
    allowTextSelectionOnPress,
    // eslint-disable-next-line @typescript-eslint/no-unused-vars
    ref: _2,
    ...domProps
  } = $f6c31cce2adf654f$var$usePressResponderContext(props);
  let [isPressed, setPressed] = reactExports.useState(false);
  let ref = reactExports.useRef({
    isPressed: false,
    ignoreEmulatedMouseEvents: false,
    ignoreClickAfterPress: false,
    didFirePressStart: false,
    isTriggeringEvent: false,
    activePointerId: null,
    target: null,
    isOverTarget: false,
    pointerType: null
  });
  let { addGlobalListener, removeAllGlobalListeners } = $03deb23ff14920c4$export$4eaf04e54aa8eed6();
  let triggerPressStart = $8ae05eaa5c114e9c$export$7f54fc3180508a52((originalEvent, pointerType) => {
    let state = ref.current;
    if (isDisabled || state.didFirePressStart) return false;
    let shouldStopPropagation = true;
    state.isTriggeringEvent = true;
    if (onPressStart) {
      let event = new $f6c31cce2adf654f$var$PressEvent("pressstart", pointerType, originalEvent);
      onPressStart(event);
      shouldStopPropagation = event.shouldStopPropagation;
    }
    if (onPressChange) onPressChange(true);
    state.isTriggeringEvent = false;
    state.didFirePressStart = true;
    setPressed(true);
    return shouldStopPropagation;
  });
  let triggerPressEnd = $8ae05eaa5c114e9c$export$7f54fc3180508a52((originalEvent, pointerType, wasPressed = true) => {
    let state = ref.current;
    if (!state.didFirePressStart) return false;
    state.ignoreClickAfterPress = true;
    state.didFirePressStart = false;
    state.isTriggeringEvent = true;
    let shouldStopPropagation = true;
    if (onPressEnd) {
      let event = new $f6c31cce2adf654f$var$PressEvent("pressend", pointerType, originalEvent);
      onPressEnd(event);
      shouldStopPropagation = event.shouldStopPropagation;
    }
    if (onPressChange) onPressChange(false);
    setPressed(false);
    if (onPress && wasPressed && !isDisabled) {
      let event = new $f6c31cce2adf654f$var$PressEvent("press", pointerType, originalEvent);
      onPress(event);
      shouldStopPropagation && (shouldStopPropagation = event.shouldStopPropagation);
    }
    state.isTriggeringEvent = false;
    return shouldStopPropagation;
  });
  let triggerPressUp = $8ae05eaa5c114e9c$export$7f54fc3180508a52((originalEvent, pointerType) => {
    let state = ref.current;
    if (isDisabled) return false;
    if (onPressUp) {
      state.isTriggeringEvent = true;
      let event = new $f6c31cce2adf654f$var$PressEvent("pressup", pointerType, originalEvent);
      onPressUp(event);
      state.isTriggeringEvent = false;
      return event.shouldStopPropagation;
    }
    return true;
  });
  let cancel = $8ae05eaa5c114e9c$export$7f54fc3180508a52((e) => {
    let state = ref.current;
    if (state.isPressed && state.target) {
      if (state.isOverTarget && state.pointerType != null) triggerPressEnd($f6c31cce2adf654f$var$createEvent(state.target, e), state.pointerType, false);
      state.isPressed = false;
      state.isOverTarget = false;
      state.activePointerId = null;
      state.pointerType = null;
      removeAllGlobalListeners();
      if (!allowTextSelectionOnPress) $14c0b72509d70225$export$b0d6fa1ab32e3295(state.target);
    }
  });
  let cancelOnPointerExit = $8ae05eaa5c114e9c$export$7f54fc3180508a52((e) => {
    if (shouldCancelOnPointerExit) cancel(e);
  });
  let pressProps = reactExports.useMemo(() => {
    let state = ref.current;
    let pressProps2 = {
      onKeyDown(e) {
        if ($f6c31cce2adf654f$var$isValidKeyboardEvent(e.nativeEvent, e.currentTarget) && e.currentTarget.contains(e.target)) {
          var _state_metaKeyEvents;
          if ($f6c31cce2adf654f$var$shouldPreventDefaultKeyboard(e.target, e.key)) e.preventDefault();
          let shouldStopPropagation = true;
          if (!state.isPressed && !e.repeat) {
            state.target = e.currentTarget;
            state.isPressed = true;
            shouldStopPropagation = triggerPressStart(e, "keyboard");
            let originalTarget = e.currentTarget;
            let pressUp = (e2) => {
              if ($f6c31cce2adf654f$var$isValidKeyboardEvent(e2, originalTarget) && !e2.repeat && originalTarget.contains(e2.target) && state.target) triggerPressUp($f6c31cce2adf654f$var$createEvent(state.target, e2), "keyboard");
            };
            addGlobalListener($431fbd86ca7dc216$export$b204af158042fbac(e.currentTarget), "keyup", $ff5963eb1fccf552$export$e08e3b67e392101e(pressUp, onKeyUp), true);
          }
          if (shouldStopPropagation) e.stopPropagation();
          if (e.metaKey && $c87311424ea30a05$export$9ac100e40613ea10()) (_state_metaKeyEvents = state.metaKeyEvents) === null || _state_metaKeyEvents === void 0 ? void 0 : _state_metaKeyEvents.set(e.key, e.nativeEvent);
        } else if (e.key === "Meta") state.metaKeyEvents = /* @__PURE__ */ new Map();
      },
      onClick(e) {
        if (e && !e.currentTarget.contains(e.target)) return;
        if (e && e.button === 0 && !state.isTriggeringEvent && !$ea8dcbcb9ea1b556$export$95185d699e05d4d7.isOpening) {
          let shouldStopPropagation = true;
          if (isDisabled) e.preventDefault();
          if (!state.ignoreClickAfterPress && !state.ignoreEmulatedMouseEvents && !state.isPressed && (state.pointerType === "virtual" || $6a7db85432448f7f$export$60278871457622de(e.nativeEvent))) {
            if (!isDisabled && !preventFocusOnPress) $7215afc6de606d6b$export$de79e2c695e052f3(e.currentTarget);
            let stopPressStart = triggerPressStart(e, "virtual");
            let stopPressUp = triggerPressUp(e, "virtual");
            let stopPressEnd = triggerPressEnd(e, "virtual");
            shouldStopPropagation = stopPressStart && stopPressUp && stopPressEnd;
          }
          state.ignoreEmulatedMouseEvents = false;
          state.ignoreClickAfterPress = false;
          if (shouldStopPropagation) e.stopPropagation();
        }
      }
    };
    let onKeyUp = (e) => {
      var _state_metaKeyEvents;
      if (state.isPressed && state.target && $f6c31cce2adf654f$var$isValidKeyboardEvent(e, state.target)) {
        var _state_metaKeyEvents1;
        if ($f6c31cce2adf654f$var$shouldPreventDefaultKeyboard(e.target, e.key)) e.preventDefault();
        let target = e.target;
        triggerPressEnd($f6c31cce2adf654f$var$createEvent(state.target, e), "keyboard", state.target.contains(target));
        removeAllGlobalListeners();
        if (e.key !== "Enter" && $f6c31cce2adf654f$var$isHTMLAnchorLink(state.target) && state.target.contains(target) && !e[$f6c31cce2adf654f$var$LINK_CLICKED]) {
          e[$f6c31cce2adf654f$var$LINK_CLICKED] = true;
          $ea8dcbcb9ea1b556$export$95185d699e05d4d7(state.target, e, false);
        }
        state.isPressed = false;
        (_state_metaKeyEvents1 = state.metaKeyEvents) === null || _state_metaKeyEvents1 === void 0 ? void 0 : _state_metaKeyEvents1.delete(e.key);
      } else if (e.key === "Meta" && ((_state_metaKeyEvents = state.metaKeyEvents) === null || _state_metaKeyEvents === void 0 ? void 0 : _state_metaKeyEvents.size)) {
        var _state_target;
        let events2 = state.metaKeyEvents;
        state.metaKeyEvents = void 0;
        for (let event of events2.values()) (_state_target = state.target) === null || _state_target === void 0 ? void 0 : _state_target.dispatchEvent(new KeyboardEvent("keyup", event));
      }
    };
    if (typeof PointerEvent !== "undefined") {
      pressProps2.onPointerDown = (e) => {
        if (e.button !== 0 || !e.currentTarget.contains(e.target)) return;
        if ($6a7db85432448f7f$export$29bf1b5f2c56cf63(e.nativeEvent)) {
          state.pointerType = "virtual";
          return;
        }
        if ($f6c31cce2adf654f$var$shouldPreventDefault(e.currentTarget)) e.preventDefault();
        state.pointerType = e.pointerType;
        let shouldStopPropagation = true;
        if (!state.isPressed) {
          state.isPressed = true;
          state.isOverTarget = true;
          state.activePointerId = e.pointerId;
          state.target = e.currentTarget;
          if (!isDisabled && !preventFocusOnPress) $7215afc6de606d6b$export$de79e2c695e052f3(e.currentTarget);
          if (!allowTextSelectionOnPress) $14c0b72509d70225$export$16a4697467175487(state.target);
          shouldStopPropagation = triggerPressStart(e, state.pointerType);
          addGlobalListener($431fbd86ca7dc216$export$b204af158042fbac(e.currentTarget), "pointermove", onPointerMove, false);
          addGlobalListener($431fbd86ca7dc216$export$b204af158042fbac(e.currentTarget), "pointerup", onPointerUp, false);
          addGlobalListener($431fbd86ca7dc216$export$b204af158042fbac(e.currentTarget), "pointercancel", onPointerCancel, false);
        }
        if (shouldStopPropagation) e.stopPropagation();
      };
      pressProps2.onMouseDown = (e) => {
        if (!e.currentTarget.contains(e.target)) return;
        if (e.button === 0) {
          if ($f6c31cce2adf654f$var$shouldPreventDefault(e.currentTarget)) e.preventDefault();
          e.stopPropagation();
        }
      };
      pressProps2.onPointerUp = (e) => {
        if (!e.currentTarget.contains(e.target) || state.pointerType === "virtual") return;
        if (e.button === 0 && $f6c31cce2adf654f$var$isOverTarget(e, e.currentTarget)) triggerPressUp(e, state.pointerType || e.pointerType);
      };
      let onPointerMove = (e) => {
        if (e.pointerId !== state.activePointerId) return;
        if (state.target && $f6c31cce2adf654f$var$isOverTarget(e, state.target)) {
          if (!state.isOverTarget && state.pointerType != null) {
            state.isOverTarget = true;
            triggerPressStart($f6c31cce2adf654f$var$createEvent(state.target, e), state.pointerType);
          }
        } else if (state.target && state.isOverTarget && state.pointerType != null) {
          state.isOverTarget = false;
          triggerPressEnd($f6c31cce2adf654f$var$createEvent(state.target, e), state.pointerType, false);
          cancelOnPointerExit(e);
        }
      };
      let onPointerUp = (e) => {
        if (e.pointerId === state.activePointerId && state.isPressed && e.button === 0 && state.target) {
          if ($f6c31cce2adf654f$var$isOverTarget(e, state.target) && state.pointerType != null) triggerPressEnd($f6c31cce2adf654f$var$createEvent(state.target, e), state.pointerType);
          else if (state.isOverTarget && state.pointerType != null) triggerPressEnd($f6c31cce2adf654f$var$createEvent(state.target, e), state.pointerType, false);
          state.isPressed = false;
          state.isOverTarget = false;
          state.activePointerId = null;
          state.pointerType = null;
          removeAllGlobalListeners();
          if (!allowTextSelectionOnPress) $14c0b72509d70225$export$b0d6fa1ab32e3295(state.target);
        }
      };
      let onPointerCancel = (e) => {
        cancel(e);
      };
      pressProps2.onDragStart = (e) => {
        if (!e.currentTarget.contains(e.target)) return;
        cancel(e);
      };
    } else {
      pressProps2.onMouseDown = (e) => {
        if (e.button !== 0 || !e.currentTarget.contains(e.target)) return;
        if ($f6c31cce2adf654f$var$shouldPreventDefault(e.currentTarget)) e.preventDefault();
        if (state.ignoreEmulatedMouseEvents) {
          e.stopPropagation();
          return;
        }
        state.isPressed = true;
        state.isOverTarget = true;
        state.target = e.currentTarget;
        state.pointerType = $6a7db85432448f7f$export$60278871457622de(e.nativeEvent) ? "virtual" : "mouse";
        if (!isDisabled && !preventFocusOnPress) $7215afc6de606d6b$export$de79e2c695e052f3(e.currentTarget);
        let shouldStopPropagation = triggerPressStart(e, state.pointerType);
        if (shouldStopPropagation) e.stopPropagation();
        addGlobalListener($431fbd86ca7dc216$export$b204af158042fbac(e.currentTarget), "mouseup", onMouseUp, false);
      };
      pressProps2.onMouseEnter = (e) => {
        if (!e.currentTarget.contains(e.target)) return;
        let shouldStopPropagation = true;
        if (state.isPressed && !state.ignoreEmulatedMouseEvents && state.pointerType != null) {
          state.isOverTarget = true;
          shouldStopPropagation = triggerPressStart(e, state.pointerType);
        }
        if (shouldStopPropagation) e.stopPropagation();
      };
      pressProps2.onMouseLeave = (e) => {
        if (!e.currentTarget.contains(e.target)) return;
        let shouldStopPropagation = true;
        if (state.isPressed && !state.ignoreEmulatedMouseEvents && state.pointerType != null) {
          state.isOverTarget = false;
          shouldStopPropagation = triggerPressEnd(e, state.pointerType, false);
          cancelOnPointerExit(e);
        }
        if (shouldStopPropagation) e.stopPropagation();
      };
      pressProps2.onMouseUp = (e) => {
        if (!e.currentTarget.contains(e.target)) return;
        if (!state.ignoreEmulatedMouseEvents && e.button === 0) triggerPressUp(e, state.pointerType || "mouse");
      };
      let onMouseUp = (e) => {
        if (e.button !== 0) return;
        state.isPressed = false;
        removeAllGlobalListeners();
        if (state.ignoreEmulatedMouseEvents) {
          state.ignoreEmulatedMouseEvents = false;
          return;
        }
        if (state.target && $f6c31cce2adf654f$var$isOverTarget(e, state.target) && state.pointerType != null) triggerPressEnd($f6c31cce2adf654f$var$createEvent(state.target, e), state.pointerType);
        else if (state.target && state.isOverTarget && state.pointerType != null) triggerPressEnd($f6c31cce2adf654f$var$createEvent(state.target, e), state.pointerType, false);
        state.isOverTarget = false;
      };
      pressProps2.onTouchStart = (e) => {
        if (!e.currentTarget.contains(e.target)) return;
        let touch = $f6c31cce2adf654f$var$getTouchFromEvent(e.nativeEvent);
        if (!touch) return;
        state.activePointerId = touch.identifier;
        state.ignoreEmulatedMouseEvents = true;
        state.isOverTarget = true;
        state.isPressed = true;
        state.target = e.currentTarget;
        state.pointerType = "touch";
        if (!isDisabled && !preventFocusOnPress) $7215afc6de606d6b$export$de79e2c695e052f3(e.currentTarget);
        if (!allowTextSelectionOnPress) $14c0b72509d70225$export$16a4697467175487(state.target);
        let shouldStopPropagation = triggerPressStart(e, state.pointerType);
        if (shouldStopPropagation) e.stopPropagation();
        addGlobalListener($431fbd86ca7dc216$export$f21a1ffae260145a(e.currentTarget), "scroll", onScroll, true);
      };
      pressProps2.onTouchMove = (e) => {
        if (!e.currentTarget.contains(e.target)) return;
        if (!state.isPressed) {
          e.stopPropagation();
          return;
        }
        let touch = $f6c31cce2adf654f$var$getTouchById(e.nativeEvent, state.activePointerId);
        let shouldStopPropagation = true;
        if (touch && $f6c31cce2adf654f$var$isOverTarget(touch, e.currentTarget)) {
          if (!state.isOverTarget && state.pointerType != null) {
            state.isOverTarget = true;
            shouldStopPropagation = triggerPressStart(e, state.pointerType);
          }
        } else if (state.isOverTarget && state.pointerType != null) {
          state.isOverTarget = false;
          shouldStopPropagation = triggerPressEnd(e, state.pointerType, false);
          cancelOnPointerExit(e);
        }
        if (shouldStopPropagation) e.stopPropagation();
      };
      pressProps2.onTouchEnd = (e) => {
        if (!e.currentTarget.contains(e.target)) return;
        if (!state.isPressed) {
          e.stopPropagation();
          return;
        }
        let touch = $f6c31cce2adf654f$var$getTouchById(e.nativeEvent, state.activePointerId);
        let shouldStopPropagation = true;
        if (touch && $f6c31cce2adf654f$var$isOverTarget(touch, e.currentTarget) && state.pointerType != null) {
          triggerPressUp(e, state.pointerType);
          shouldStopPropagation = triggerPressEnd(e, state.pointerType);
        } else if (state.isOverTarget && state.pointerType != null) shouldStopPropagation = triggerPressEnd(e, state.pointerType, false);
        if (shouldStopPropagation) e.stopPropagation();
        state.isPressed = false;
        state.activePointerId = null;
        state.isOverTarget = false;
        state.ignoreEmulatedMouseEvents = true;
        if (state.target && !allowTextSelectionOnPress) $14c0b72509d70225$export$b0d6fa1ab32e3295(state.target);
        removeAllGlobalListeners();
      };
      pressProps2.onTouchCancel = (e) => {
        if (!e.currentTarget.contains(e.target)) return;
        e.stopPropagation();
        if (state.isPressed) cancel(e);
      };
      let onScroll = (e) => {
        if (state.isPressed && e.target.contains(state.target)) cancel({
          currentTarget: state.target,
          shiftKey: false,
          ctrlKey: false,
          metaKey: false,
          altKey: false
        });
      };
      pressProps2.onDragStart = (e) => {
        if (!e.currentTarget.contains(e.target)) return;
        cancel(e);
      };
    }
    return pressProps2;
  }, [
    addGlobalListener,
    isDisabled,
    preventFocusOnPress,
    removeAllGlobalListeners,
    allowTextSelectionOnPress,
    cancel,
    cancelOnPointerExit,
    triggerPressEnd,
    triggerPressStart,
    triggerPressUp
  ]);
  reactExports.useEffect(() => {
    return () => {
      var _ref_current_target;
      if (!allowTextSelectionOnPress)
        $14c0b72509d70225$export$b0d6fa1ab32e3295((_ref_current_target = ref.current.target) !== null && _ref_current_target !== void 0 ? _ref_current_target : void 0);
    };
  }, [
    allowTextSelectionOnPress
  ]);
  return {
    isPressed: isPressedProp || isPressed,
    pressProps: $3ef42575df84b30b$export$9d1611c77c2fe928(domProps, pressProps)
  };
}
function $f6c31cce2adf654f$var$isHTMLAnchorLink(target) {
  return target.tagName === "A" && target.hasAttribute("href");
}
function $f6c31cce2adf654f$var$isValidKeyboardEvent(event, currentTarget) {
  const { key, code } = event;
  const element = currentTarget;
  const role = element.getAttribute("role");
  return (key === "Enter" || key === " " || key === "Spacebar" || code === "Space") && !(element instanceof $431fbd86ca7dc216$export$f21a1ffae260145a(element).HTMLInputElement && !$f6c31cce2adf654f$var$isValidInputKey(element, key) || element instanceof $431fbd86ca7dc216$export$f21a1ffae260145a(element).HTMLTextAreaElement || element.isContentEditable) && // Links should only trigger with Enter key
  !((role === "link" || !role && $f6c31cce2adf654f$var$isHTMLAnchorLink(element)) && key !== "Enter");
}
function $f6c31cce2adf654f$var$getTouchFromEvent(event) {
  const { targetTouches } = event;
  if (targetTouches.length > 0) return targetTouches[0];
  return null;
}
function $f6c31cce2adf654f$var$getTouchById(event, pointerId) {
  const changedTouches = event.changedTouches;
  for (let i = 0; i < changedTouches.length; i++) {
    const touch = changedTouches[i];
    if (touch.identifier === pointerId) return touch;
  }
  return null;
}
function $f6c31cce2adf654f$var$createEvent(target, e) {
  return {
    currentTarget: target,
    shiftKey: e.shiftKey,
    ctrlKey: e.ctrlKey,
    metaKey: e.metaKey,
    altKey: e.altKey
  };
}
function $f6c31cce2adf654f$var$getPointClientRect(point) {
  let offsetX = 0;
  let offsetY = 0;
  if (point.width !== void 0) offsetX = point.width / 2;
  else if (point.radiusX !== void 0) offsetX = point.radiusX;
  if (point.height !== void 0) offsetY = point.height / 2;
  else if (point.radiusY !== void 0) offsetY = point.radiusY;
  return {
    top: point.clientY - offsetY,
    right: point.clientX + offsetX,
    bottom: point.clientY + offsetY,
    left: point.clientX - offsetX
  };
}
function $f6c31cce2adf654f$var$areRectanglesOverlapping(a2, b) {
  if (a2.left > b.right || b.left > a2.right) return false;
  if (a2.top > b.bottom || b.top > a2.bottom) return false;
  return true;
}
function $f6c31cce2adf654f$var$isOverTarget(point, target) {
  let rect = target.getBoundingClientRect();
  let pointRect = $f6c31cce2adf654f$var$getPointClientRect(point);
  return $f6c31cce2adf654f$var$areRectanglesOverlapping(rect, pointRect);
}
function $f6c31cce2adf654f$var$shouldPreventDefault(target) {
  return !(target instanceof HTMLElement) || !target.hasAttribute("draggable");
}
function $f6c31cce2adf654f$var$shouldPreventDefaultKeyboard(target, key) {
  if (target instanceof HTMLInputElement) return !$f6c31cce2adf654f$var$isValidInputKey(target, key);
  if (target instanceof HTMLButtonElement) return target.type !== "submit" && target.type !== "reset";
  if ($f6c31cce2adf654f$var$isHTMLAnchorLink(target)) return false;
  return true;
}
const $f6c31cce2adf654f$var$nonTextInputTypes = /* @__PURE__ */ new Set([
  "checkbox",
  "radio",
  "range",
  "color",
  "file",
  "image",
  "button",
  "submit",
  "reset"
]);
function $f6c31cce2adf654f$var$isValidInputKey(target, key) {
  return target.type === "checkbox" || target.type === "radio" ? key === " " : $f6c31cce2adf654f$var$nonTextInputTypes.has(target.type);
}
function $f1ab8c75478c6f73$export$cf75428e0b9ed1ea({ children }) {
  let context = reactExports.useMemo(() => ({
    register: () => {
    }
  }), []);
  return /* @__PURE__ */ React$1.createElement($ae1eeba8b9eafd08$export$5165eccb35aaadb5.Provider, {
    value: context
  }, children);
}
class $8a9cb279dc87e130$export$905e7fc544a71f36 {
  isDefaultPrevented() {
    return this.nativeEvent.defaultPrevented;
  }
  preventDefault() {
    this.defaultPrevented = true;
    this.nativeEvent.preventDefault();
  }
  stopPropagation() {
    this.nativeEvent.stopPropagation();
    this.isPropagationStopped = () => true;
  }
  isPropagationStopped() {
    return false;
  }
  persist() {
  }
  constructor(type2, nativeEvent) {
    this.nativeEvent = nativeEvent;
    this.target = nativeEvent.target;
    this.currentTarget = nativeEvent.currentTarget;
    this.relatedTarget = nativeEvent.relatedTarget;
    this.bubbles = nativeEvent.bubbles;
    this.cancelable = nativeEvent.cancelable;
    this.defaultPrevented = nativeEvent.defaultPrevented;
    this.eventPhase = nativeEvent.eventPhase;
    this.isTrusted = nativeEvent.isTrusted;
    this.timeStamp = nativeEvent.timeStamp;
    this.type = type2;
  }
}
function $8a9cb279dc87e130$export$715c682d09d639cc(onBlur) {
  let stateRef = reactExports.useRef({
    isFocused: false,
    observer: null
  });
  $f0a04ccd8dbdd83b$export$e5c5a5f917a5871c(() => {
    const state = stateRef.current;
    return () => {
      if (state.observer) {
        state.observer.disconnect();
        state.observer = null;
      }
    };
  }, []);
  let dispatchBlur = $8ae05eaa5c114e9c$export$7f54fc3180508a52((e) => {
    onBlur === null || onBlur === void 0 ? void 0 : onBlur(e);
  });
  return reactExports.useCallback((e) => {
    if (e.target instanceof HTMLButtonElement || e.target instanceof HTMLInputElement || e.target instanceof HTMLTextAreaElement || e.target instanceof HTMLSelectElement) {
      stateRef.current.isFocused = true;
      let target = e.target;
      let onBlurHandler = (e2) => {
        stateRef.current.isFocused = false;
        if (target.disabled)
          dispatchBlur(new $8a9cb279dc87e130$export$905e7fc544a71f36("blur", e2));
        if (stateRef.current.observer) {
          stateRef.current.observer.disconnect();
          stateRef.current.observer = null;
        }
      };
      target.addEventListener("focusout", onBlurHandler, {
        once: true
      });
      stateRef.current.observer = new MutationObserver(() => {
        if (stateRef.current.isFocused && target.disabled) {
          var _stateRef_current_observer;
          (_stateRef_current_observer = stateRef.current.observer) === null || _stateRef_current_observer === void 0 ? void 0 : _stateRef_current_observer.disconnect();
          let relatedTargetEl = target === document.activeElement ? null : document.activeElement;
          target.dispatchEvent(new FocusEvent("blur", {
            relatedTarget: relatedTargetEl
          }));
          target.dispatchEvent(new FocusEvent("focusout", {
            bubbles: true,
            relatedTarget: relatedTargetEl
          }));
        }
      });
      stateRef.current.observer.observe(target, {
        attributes: true,
        attributeFilter: [
          "disabled"
        ]
      });
    }
  }, [
    dispatchBlur
  ]);
}
function $a1ea59d68270f0dd$export$f8168d8dd8fd66e6(props) {
  let { isDisabled, onFocus: onFocusProp, onBlur: onBlurProp, onFocusChange } = props;
  const onBlur = reactExports.useCallback((e) => {
    if (e.target === e.currentTarget) {
      if (onBlurProp) onBlurProp(e);
      if (onFocusChange) onFocusChange(false);
      return true;
    }
  }, [
    onBlurProp,
    onFocusChange
  ]);
  const onSyntheticFocus = $8a9cb279dc87e130$export$715c682d09d639cc(onBlur);
  const onFocus = reactExports.useCallback((e) => {
    const ownerDocument = $431fbd86ca7dc216$export$b204af158042fbac(e.target);
    if (e.target === e.currentTarget && ownerDocument.activeElement === e.target) {
      if (onFocusProp) onFocusProp(e);
      if (onFocusChange) onFocusChange(true);
      onSyntheticFocus(e);
    }
  }, [
    onFocusChange,
    onFocusProp,
    onSyntheticFocus
  ]);
  return {
    focusProps: {
      onFocus: !isDisabled && (onFocusProp || onFocusChange || onBlurProp) ? onFocus : void 0,
      onBlur: !isDisabled && (onBlurProp || onFocusChange) ? onBlur : void 0
    }
  };
}
let $507fabe10e71c6fb$var$currentModality = null;
let $507fabe10e71c6fb$var$changeHandlers = /* @__PURE__ */ new Set();
let $507fabe10e71c6fb$export$d90243b58daecda7 = /* @__PURE__ */ new Map();
let $507fabe10e71c6fb$var$hasEventBeforeFocus = false;
let $507fabe10e71c6fb$var$hasBlurredWindowRecently = false;
const $507fabe10e71c6fb$var$FOCUS_VISIBLE_INPUT_KEYS = {
  Tab: true,
  Escape: true
};
function $507fabe10e71c6fb$var$triggerChangeHandlers(modality, e) {
  for (let handler of $507fabe10e71c6fb$var$changeHandlers) handler(modality, e);
}
function $507fabe10e71c6fb$var$isValidKey(e) {
  return !(e.metaKey || !$c87311424ea30a05$export$9ac100e40613ea10() && e.altKey || e.ctrlKey || e.key === "Control" || e.key === "Shift" || e.key === "Meta");
}
function $507fabe10e71c6fb$var$handleKeyboardEvent(e) {
  $507fabe10e71c6fb$var$hasEventBeforeFocus = true;
  if ($507fabe10e71c6fb$var$isValidKey(e)) {
    $507fabe10e71c6fb$var$currentModality = "keyboard";
    $507fabe10e71c6fb$var$triggerChangeHandlers("keyboard", e);
  }
}
function $507fabe10e71c6fb$var$handlePointerEvent(e) {
  $507fabe10e71c6fb$var$currentModality = "pointer";
  if (e.type === "mousedown" || e.type === "pointerdown") {
    $507fabe10e71c6fb$var$hasEventBeforeFocus = true;
    $507fabe10e71c6fb$var$triggerChangeHandlers("pointer", e);
  }
}
function $507fabe10e71c6fb$var$handleClickEvent(e) {
  if ($6a7db85432448f7f$export$60278871457622de(e)) {
    $507fabe10e71c6fb$var$hasEventBeforeFocus = true;
    $507fabe10e71c6fb$var$currentModality = "virtual";
  }
}
function $507fabe10e71c6fb$var$handleFocusEvent(e) {
  if (e.target === window || e.target === document) return;
  if (!$507fabe10e71c6fb$var$hasEventBeforeFocus && !$507fabe10e71c6fb$var$hasBlurredWindowRecently) {
    $507fabe10e71c6fb$var$currentModality = "virtual";
    $507fabe10e71c6fb$var$triggerChangeHandlers("virtual", e);
  }
  $507fabe10e71c6fb$var$hasEventBeforeFocus = false;
  $507fabe10e71c6fb$var$hasBlurredWindowRecently = false;
}
function $507fabe10e71c6fb$var$handleWindowBlur() {
  $507fabe10e71c6fb$var$hasEventBeforeFocus = false;
  $507fabe10e71c6fb$var$hasBlurredWindowRecently = true;
}
function $507fabe10e71c6fb$var$setupGlobalFocusEvents(element) {
  if (typeof window === "undefined" || $507fabe10e71c6fb$export$d90243b58daecda7.get($431fbd86ca7dc216$export$f21a1ffae260145a(element))) return;
  const windowObject2 = $431fbd86ca7dc216$export$f21a1ffae260145a(element);
  const documentObject = $431fbd86ca7dc216$export$b204af158042fbac(element);
  let focus = windowObject2.HTMLElement.prototype.focus;
  windowObject2.HTMLElement.prototype.focus = function() {
    $507fabe10e71c6fb$var$hasEventBeforeFocus = true;
    focus.apply(this, arguments);
  };
  documentObject.addEventListener("keydown", $507fabe10e71c6fb$var$handleKeyboardEvent, true);
  documentObject.addEventListener("keyup", $507fabe10e71c6fb$var$handleKeyboardEvent, true);
  documentObject.addEventListener("click", $507fabe10e71c6fb$var$handleClickEvent, true);
  windowObject2.addEventListener("focus", $507fabe10e71c6fb$var$handleFocusEvent, true);
  windowObject2.addEventListener("blur", $507fabe10e71c6fb$var$handleWindowBlur, false);
  if (typeof PointerEvent !== "undefined") {
    documentObject.addEventListener("pointerdown", $507fabe10e71c6fb$var$handlePointerEvent, true);
    documentObject.addEventListener("pointermove", $507fabe10e71c6fb$var$handlePointerEvent, true);
    documentObject.addEventListener("pointerup", $507fabe10e71c6fb$var$handlePointerEvent, true);
  } else {
    documentObject.addEventListener("mousedown", $507fabe10e71c6fb$var$handlePointerEvent, true);
    documentObject.addEventListener("mousemove", $507fabe10e71c6fb$var$handlePointerEvent, true);
    documentObject.addEventListener("mouseup", $507fabe10e71c6fb$var$handlePointerEvent, true);
  }
  windowObject2.addEventListener("beforeunload", () => {
    $507fabe10e71c6fb$var$tearDownWindowFocusTracking(element);
  }, {
    once: true
  });
  $507fabe10e71c6fb$export$d90243b58daecda7.set(windowObject2, {
    focus
  });
}
const $507fabe10e71c6fb$var$tearDownWindowFocusTracking = (element, loadListener) => {
  const windowObject2 = $431fbd86ca7dc216$export$f21a1ffae260145a(element);
  const documentObject = $431fbd86ca7dc216$export$b204af158042fbac(element);
  if (loadListener) documentObject.removeEventListener("DOMContentLoaded", loadListener);
  if (!$507fabe10e71c6fb$export$d90243b58daecda7.has(windowObject2)) return;
  windowObject2.HTMLElement.prototype.focus = $507fabe10e71c6fb$export$d90243b58daecda7.get(windowObject2).focus;
  documentObject.removeEventListener("keydown", $507fabe10e71c6fb$var$handleKeyboardEvent, true);
  documentObject.removeEventListener("keyup", $507fabe10e71c6fb$var$handleKeyboardEvent, true);
  documentObject.removeEventListener("click", $507fabe10e71c6fb$var$handleClickEvent, true);
  windowObject2.removeEventListener("focus", $507fabe10e71c6fb$var$handleFocusEvent, true);
  windowObject2.removeEventListener("blur", $507fabe10e71c6fb$var$handleWindowBlur, false);
  if (typeof PointerEvent !== "undefined") {
    documentObject.removeEventListener("pointerdown", $507fabe10e71c6fb$var$handlePointerEvent, true);
    documentObject.removeEventListener("pointermove", $507fabe10e71c6fb$var$handlePointerEvent, true);
    documentObject.removeEventListener("pointerup", $507fabe10e71c6fb$var$handlePointerEvent, true);
  } else {
    documentObject.removeEventListener("mousedown", $507fabe10e71c6fb$var$handlePointerEvent, true);
    documentObject.removeEventListener("mousemove", $507fabe10e71c6fb$var$handlePointerEvent, true);
    documentObject.removeEventListener("mouseup", $507fabe10e71c6fb$var$handlePointerEvent, true);
  }
  $507fabe10e71c6fb$export$d90243b58daecda7.delete(windowObject2);
};
function $507fabe10e71c6fb$export$2f1888112f558a7d(element) {
  const documentObject = $431fbd86ca7dc216$export$b204af158042fbac(element);
  let loadListener;
  if (documentObject.readyState !== "loading") $507fabe10e71c6fb$var$setupGlobalFocusEvents(element);
  else {
    loadListener = () => {
      $507fabe10e71c6fb$var$setupGlobalFocusEvents(element);
    };
    documentObject.addEventListener("DOMContentLoaded", loadListener);
  }
  return () => $507fabe10e71c6fb$var$tearDownWindowFocusTracking(element, loadListener);
}
if (typeof document !== "undefined") $507fabe10e71c6fb$export$2f1888112f558a7d();
function $507fabe10e71c6fb$export$b9b3dfddab17db27() {
  return $507fabe10e71c6fb$var$currentModality !== "pointer";
}
function $507fabe10e71c6fb$export$630ff653c5ada6a9() {
  return $507fabe10e71c6fb$var$currentModality;
}
function $507fabe10e71c6fb$export$8397ddfc504fdb9a(modality) {
  $507fabe10e71c6fb$var$currentModality = modality;
  $507fabe10e71c6fb$var$triggerChangeHandlers(modality, null);
}
const $507fabe10e71c6fb$var$nonTextInputTypes = /* @__PURE__ */ new Set([
  "checkbox",
  "radio",
  "range",
  "color",
  "file",
  "image",
  "button",
  "submit",
  "reset"
]);
function $507fabe10e71c6fb$var$isKeyboardFocusEvent(isTextInput, modality, e) {
  var _e_target;
  const IHTMLInputElement = typeof window !== "undefined" ? $431fbd86ca7dc216$export$f21a1ffae260145a(e === null || e === void 0 ? void 0 : e.target).HTMLInputElement : HTMLInputElement;
  const IHTMLTextAreaElement = typeof window !== "undefined" ? $431fbd86ca7dc216$export$f21a1ffae260145a(e === null || e === void 0 ? void 0 : e.target).HTMLTextAreaElement : HTMLTextAreaElement;
  const IHTMLElement = typeof window !== "undefined" ? $431fbd86ca7dc216$export$f21a1ffae260145a(e === null || e === void 0 ? void 0 : e.target).HTMLElement : HTMLElement;
  const IKeyboardEvent = typeof window !== "undefined" ? $431fbd86ca7dc216$export$f21a1ffae260145a(e === null || e === void 0 ? void 0 : e.target).KeyboardEvent : KeyboardEvent;
  isTextInput = isTextInput || (e === null || e === void 0 ? void 0 : e.target) instanceof IHTMLInputElement && !$507fabe10e71c6fb$var$nonTextInputTypes.has(e === null || e === void 0 ? void 0 : (_e_target = e.target) === null || _e_target === void 0 ? void 0 : _e_target.type) || (e === null || e === void 0 ? void 0 : e.target) instanceof IHTMLTextAreaElement || (e === null || e === void 0 ? void 0 : e.target) instanceof IHTMLElement && (e === null || e === void 0 ? void 0 : e.target.isContentEditable);
  return !(isTextInput && modality === "keyboard" && e instanceof IKeyboardEvent && !$507fabe10e71c6fb$var$FOCUS_VISIBLE_INPUT_KEYS[e.key]);
}
function $507fabe10e71c6fb$export$ec71b4b83ac08ec3(fn, deps, opts) {
  $507fabe10e71c6fb$var$setupGlobalFocusEvents();
  reactExports.useEffect(() => {
    let handler = (modality, e) => {
      if (!$507fabe10e71c6fb$var$isKeyboardFocusEvent(!!(opts === null || opts === void 0 ? void 0 : opts.isTextInput), modality, e)) return;
      fn($507fabe10e71c6fb$export$b9b3dfddab17db27());
    };
    $507fabe10e71c6fb$var$changeHandlers.add(handler);
    return () => {
      $507fabe10e71c6fb$var$changeHandlers.delete(handler);
    };
  }, deps);
}
function $9ab94262bd0047c7$export$420e68273165f4ec(props) {
  let { isDisabled, onBlurWithin, onFocusWithin, onFocusWithinChange } = props;
  let state = reactExports.useRef({
    isFocusWithin: false
  });
  let onBlur = reactExports.useCallback((e) => {
    if (state.current.isFocusWithin && !e.currentTarget.contains(e.relatedTarget)) {
      state.current.isFocusWithin = false;
      if (onBlurWithin) onBlurWithin(e);
      if (onFocusWithinChange) onFocusWithinChange(false);
    }
  }, [
    onBlurWithin,
    onFocusWithinChange,
    state
  ]);
  let onSyntheticFocus = $8a9cb279dc87e130$export$715c682d09d639cc(onBlur);
  let onFocus = reactExports.useCallback((e) => {
    if (!state.current.isFocusWithin && document.activeElement === e.target) {
      if (onFocusWithin) onFocusWithin(e);
      if (onFocusWithinChange) onFocusWithinChange(true);
      state.current.isFocusWithin = true;
      onSyntheticFocus(e);
    }
  }, [
    onFocusWithin,
    onFocusWithinChange,
    onSyntheticFocus
  ]);
  if (isDisabled) return {
    focusWithinProps: {
      // These should not have been null, that would conflict in mergeProps
      onFocus: void 0,
      onBlur: void 0
    }
  };
  return {
    focusWithinProps: {
      onFocus,
      onBlur
    }
  };
}
let $6179b936705e76d3$var$globalIgnoreEmulatedMouseEvents = false;
let $6179b936705e76d3$var$hoverCount = 0;
function $6179b936705e76d3$var$setGlobalIgnoreEmulatedMouseEvents() {
  $6179b936705e76d3$var$globalIgnoreEmulatedMouseEvents = true;
  setTimeout(() => {
    $6179b936705e76d3$var$globalIgnoreEmulatedMouseEvents = false;
  }, 50);
}
function $6179b936705e76d3$var$handleGlobalPointerEvent(e) {
  if (e.pointerType === "touch") $6179b936705e76d3$var$setGlobalIgnoreEmulatedMouseEvents();
}
function $6179b936705e76d3$var$setupGlobalTouchEvents() {
  if (typeof document === "undefined") return;
  if (typeof PointerEvent !== "undefined") document.addEventListener("pointerup", $6179b936705e76d3$var$handleGlobalPointerEvent);
  else document.addEventListener("touchend", $6179b936705e76d3$var$setGlobalIgnoreEmulatedMouseEvents);
  $6179b936705e76d3$var$hoverCount++;
  return () => {
    $6179b936705e76d3$var$hoverCount--;
    if ($6179b936705e76d3$var$hoverCount > 0) return;
    if (typeof PointerEvent !== "undefined") document.removeEventListener("pointerup", $6179b936705e76d3$var$handleGlobalPointerEvent);
    else document.removeEventListener("touchend", $6179b936705e76d3$var$setGlobalIgnoreEmulatedMouseEvents);
  };
}
function $6179b936705e76d3$export$ae780daf29e6d456(props) {
  let { onHoverStart, onHoverChange, onHoverEnd, isDisabled } = props;
  let [isHovered, setHovered] = reactExports.useState(false);
  let state = reactExports.useRef({
    isHovered: false,
    ignoreEmulatedMouseEvents: false,
    pointerType: "",
    target: null
  }).current;
  reactExports.useEffect($6179b936705e76d3$var$setupGlobalTouchEvents, []);
  let { hoverProps, triggerHoverEnd } = reactExports.useMemo(() => {
    let triggerHoverStart = (event, pointerType) => {
      state.pointerType = pointerType;
      if (isDisabled || pointerType === "touch" || state.isHovered || !event.currentTarget.contains(event.target)) return;
      state.isHovered = true;
      let target = event.currentTarget;
      state.target = target;
      if (onHoverStart) onHoverStart({
        type: "hoverstart",
        target,
        pointerType
      });
      if (onHoverChange) onHoverChange(true);
      setHovered(true);
    };
    let triggerHoverEnd2 = (event, pointerType) => {
      state.pointerType = "";
      state.target = null;
      if (pointerType === "touch" || !state.isHovered) return;
      state.isHovered = false;
      let target = event.currentTarget;
      if (onHoverEnd) onHoverEnd({
        type: "hoverend",
        target,
        pointerType
      });
      if (onHoverChange) onHoverChange(false);
      setHovered(false);
    };
    let hoverProps2 = {};
    if (typeof PointerEvent !== "undefined") {
      hoverProps2.onPointerEnter = (e) => {
        if ($6179b936705e76d3$var$globalIgnoreEmulatedMouseEvents && e.pointerType === "mouse") return;
        triggerHoverStart(e, e.pointerType);
      };
      hoverProps2.onPointerLeave = (e) => {
        if (!isDisabled && e.currentTarget.contains(e.target)) triggerHoverEnd2(e, e.pointerType);
      };
    } else {
      hoverProps2.onTouchStart = () => {
        state.ignoreEmulatedMouseEvents = true;
      };
      hoverProps2.onMouseEnter = (e) => {
        if (!state.ignoreEmulatedMouseEvents && !$6179b936705e76d3$var$globalIgnoreEmulatedMouseEvents) triggerHoverStart(e, "mouse");
        state.ignoreEmulatedMouseEvents = false;
      };
      hoverProps2.onMouseLeave = (e) => {
        if (!isDisabled && e.currentTarget.contains(e.target)) triggerHoverEnd2(e, "mouse");
      };
    }
    return {
      hoverProps: hoverProps2,
      triggerHoverEnd: triggerHoverEnd2
    };
  }, [
    onHoverStart,
    onHoverChange,
    onHoverEnd,
    isDisabled,
    state
  ]);
  reactExports.useEffect(() => {
    if (isDisabled) triggerHoverEnd({
      currentTarget: state.target
    }, state.pointerType);
  }, [
    isDisabled
  ]);
  return {
    hoverProps,
    isHovered
  };
}
function $e0b6e0b68ec7f50f$export$872b660ac5a1ff98(props) {
  let { ref, onInteractOutside, isDisabled, onInteractOutsideStart } = props;
  let stateRef = reactExports.useRef({
    isPointerDown: false,
    ignoreEmulatedMouseEvents: false
  });
  let onPointerDown = $8ae05eaa5c114e9c$export$7f54fc3180508a52((e) => {
    if (onInteractOutside && $e0b6e0b68ec7f50f$var$isValidEvent(e, ref)) {
      if (onInteractOutsideStart) onInteractOutsideStart(e);
      stateRef.current.isPointerDown = true;
    }
  });
  let triggerInteractOutside = $8ae05eaa5c114e9c$export$7f54fc3180508a52((e) => {
    if (onInteractOutside) onInteractOutside(e);
  });
  reactExports.useEffect(() => {
    let state = stateRef.current;
    if (isDisabled) return;
    const element = ref.current;
    const documentObject = $431fbd86ca7dc216$export$b204af158042fbac(element);
    if (typeof PointerEvent !== "undefined") {
      let onPointerUp = (e) => {
        if (state.isPointerDown && $e0b6e0b68ec7f50f$var$isValidEvent(e, ref)) triggerInteractOutside(e);
        state.isPointerDown = false;
      };
      documentObject.addEventListener("pointerdown", onPointerDown, true);
      documentObject.addEventListener("pointerup", onPointerUp, true);
      return () => {
        documentObject.removeEventListener("pointerdown", onPointerDown, true);
        documentObject.removeEventListener("pointerup", onPointerUp, true);
      };
    } else {
      let onMouseUp = (e) => {
        if (state.ignoreEmulatedMouseEvents) state.ignoreEmulatedMouseEvents = false;
        else if (state.isPointerDown && $e0b6e0b68ec7f50f$var$isValidEvent(e, ref)) triggerInteractOutside(e);
        state.isPointerDown = false;
      };
      let onTouchEnd = (e) => {
        state.ignoreEmulatedMouseEvents = true;
        if (state.isPointerDown && $e0b6e0b68ec7f50f$var$isValidEvent(e, ref)) triggerInteractOutside(e);
        state.isPointerDown = false;
      };
      documentObject.addEventListener("mousedown", onPointerDown, true);
      documentObject.addEventListener("mouseup", onMouseUp, true);
      documentObject.addEventListener("touchstart", onPointerDown, true);
      documentObject.addEventListener("touchend", onTouchEnd, true);
      return () => {
        documentObject.removeEventListener("mousedown", onPointerDown, true);
        documentObject.removeEventListener("mouseup", onMouseUp, true);
        documentObject.removeEventListener("touchstart", onPointerDown, true);
        documentObject.removeEventListener("touchend", onTouchEnd, true);
      };
    }
  }, [
    ref,
    isDisabled,
    onPointerDown,
    triggerInteractOutside
  ]);
}
function $e0b6e0b68ec7f50f$var$isValidEvent(event, ref) {
  if (event.button > 0) return false;
  if (event.target) {
    const ownerDocument = event.target.ownerDocument;
    if (!ownerDocument || !ownerDocument.documentElement.contains(event.target)) return false;
    if (event.target.closest("[data-react-aria-top-layer]")) return false;
  }
  return ref.current && !ref.current.contains(event.target);
}
function $93925083ecbb358c$export$48d1ea6320830260(handler) {
  if (!handler) return void 0;
  let shouldStopPropagation = true;
  return (e) => {
    let event = {
      ...e,
      preventDefault() {
        e.preventDefault();
      },
      isDefaultPrevented() {
        return e.isDefaultPrevented();
      },
      stopPropagation() {
        console.error("stopPropagation is now the default behavior for events in React Spectrum. You can use continuePropagation() to revert this behavior.");
      },
      continuePropagation() {
        shouldStopPropagation = false;
      }
    };
    handler(event);
    if (shouldStopPropagation) e.stopPropagation();
  };
}
function $46d819fcbaf35654$export$8f71654801c2f7cd(props) {
  return {
    keyboardProps: props.isDisabled ? {} : {
      onKeyDown: $93925083ecbb358c$export$48d1ea6320830260(props.onKeyDown),
      onKeyUp: $93925083ecbb358c$export$48d1ea6320830260(props.onKeyUp)
    }
  };
}
function $e8a7022cf87cba2a$export$36da96379f79f245(props) {
  let { onMoveStart, onMove, onMoveEnd } = props;
  let state = reactExports.useRef({
    didMove: false,
    lastPosition: null,
    id: null
  });
  let { addGlobalListener, removeGlobalListener } = $03deb23ff14920c4$export$4eaf04e54aa8eed6();
  let move = $8ae05eaa5c114e9c$export$7f54fc3180508a52((originalEvent, pointerType, deltaX, deltaY) => {
    if (deltaX === 0 && deltaY === 0) return;
    if (!state.current.didMove) {
      state.current.didMove = true;
      onMoveStart === null || onMoveStart === void 0 ? void 0 : onMoveStart({
        type: "movestart",
        pointerType,
        shiftKey: originalEvent.shiftKey,
        metaKey: originalEvent.metaKey,
        ctrlKey: originalEvent.ctrlKey,
        altKey: originalEvent.altKey
      });
    }
    onMove === null || onMove === void 0 ? void 0 : onMove({
      type: "move",
      pointerType,
      deltaX,
      deltaY,
      shiftKey: originalEvent.shiftKey,
      metaKey: originalEvent.metaKey,
      ctrlKey: originalEvent.ctrlKey,
      altKey: originalEvent.altKey
    });
  });
  let end = $8ae05eaa5c114e9c$export$7f54fc3180508a52((originalEvent, pointerType) => {
    $14c0b72509d70225$export$b0d6fa1ab32e3295();
    if (state.current.didMove) onMoveEnd === null || onMoveEnd === void 0 ? void 0 : onMoveEnd({
      type: "moveend",
      pointerType,
      shiftKey: originalEvent.shiftKey,
      metaKey: originalEvent.metaKey,
      ctrlKey: originalEvent.ctrlKey,
      altKey: originalEvent.altKey
    });
  });
  let moveProps = reactExports.useMemo(() => {
    let moveProps2 = {};
    let start = () => {
      $14c0b72509d70225$export$16a4697467175487();
      state.current.didMove = false;
    };
    if (typeof PointerEvent === "undefined") {
      let onMouseMove = (e) => {
        if (e.button === 0) {
          var _state_current_lastPosition, _state_current_lastPosition1;
          var _state_current_lastPosition_pageX, _state_current_lastPosition_pageY;
          move(e, "mouse", e.pageX - ((_state_current_lastPosition_pageX = (_state_current_lastPosition = state.current.lastPosition) === null || _state_current_lastPosition === void 0 ? void 0 : _state_current_lastPosition.pageX) !== null && _state_current_lastPosition_pageX !== void 0 ? _state_current_lastPosition_pageX : 0), e.pageY - ((_state_current_lastPosition_pageY = (_state_current_lastPosition1 = state.current.lastPosition) === null || _state_current_lastPosition1 === void 0 ? void 0 : _state_current_lastPosition1.pageY) !== null && _state_current_lastPosition_pageY !== void 0 ? _state_current_lastPosition_pageY : 0));
          state.current.lastPosition = {
            pageX: e.pageX,
            pageY: e.pageY
          };
        }
      };
      let onMouseUp = (e) => {
        if (e.button === 0) {
          end(e, "mouse");
          removeGlobalListener(window, "mousemove", onMouseMove, false);
          removeGlobalListener(window, "mouseup", onMouseUp, false);
        }
      };
      moveProps2.onMouseDown = (e) => {
        if (e.button === 0) {
          start();
          e.stopPropagation();
          e.preventDefault();
          state.current.lastPosition = {
            pageX: e.pageX,
            pageY: e.pageY
          };
          addGlobalListener(window, "mousemove", onMouseMove, false);
          addGlobalListener(window, "mouseup", onMouseUp, false);
        }
      };
      let onTouchMove = (e) => {
        let touch = [
          ...e.changedTouches
        ].findIndex(({ identifier }) => identifier === state.current.id);
        if (touch >= 0) {
          var _state_current_lastPosition, _state_current_lastPosition1;
          let { pageX, pageY } = e.changedTouches[touch];
          var _state_current_lastPosition_pageX, _state_current_lastPosition_pageY;
          move(e, "touch", pageX - ((_state_current_lastPosition_pageX = (_state_current_lastPosition = state.current.lastPosition) === null || _state_current_lastPosition === void 0 ? void 0 : _state_current_lastPosition.pageX) !== null && _state_current_lastPosition_pageX !== void 0 ? _state_current_lastPosition_pageX : 0), pageY - ((_state_current_lastPosition_pageY = (_state_current_lastPosition1 = state.current.lastPosition) === null || _state_current_lastPosition1 === void 0 ? void 0 : _state_current_lastPosition1.pageY) !== null && _state_current_lastPosition_pageY !== void 0 ? _state_current_lastPosition_pageY : 0));
          state.current.lastPosition = {
            pageX,
            pageY
          };
        }
      };
      let onTouchEnd = (e) => {
        let touch = [
          ...e.changedTouches
        ].findIndex(({ identifier }) => identifier === state.current.id);
        if (touch >= 0) {
          end(e, "touch");
          state.current.id = null;
          removeGlobalListener(window, "touchmove", onTouchMove);
          removeGlobalListener(window, "touchend", onTouchEnd);
          removeGlobalListener(window, "touchcancel", onTouchEnd);
        }
      };
      moveProps2.onTouchStart = (e) => {
        if (e.changedTouches.length === 0 || state.current.id != null) return;
        let { pageX, pageY, identifier } = e.changedTouches[0];
        start();
        e.stopPropagation();
        e.preventDefault();
        state.current.lastPosition = {
          pageX,
          pageY
        };
        state.current.id = identifier;
        addGlobalListener(window, "touchmove", onTouchMove, false);
        addGlobalListener(window, "touchend", onTouchEnd, false);
        addGlobalListener(window, "touchcancel", onTouchEnd, false);
      };
    } else {
      let onPointerMove = (e) => {
        if (e.pointerId === state.current.id) {
          var _state_current_lastPosition, _state_current_lastPosition1;
          let pointerType = e.pointerType || "mouse";
          var _state_current_lastPosition_pageX, _state_current_lastPosition_pageY;
          move(e, pointerType, e.pageX - ((_state_current_lastPosition_pageX = (_state_current_lastPosition = state.current.lastPosition) === null || _state_current_lastPosition === void 0 ? void 0 : _state_current_lastPosition.pageX) !== null && _state_current_lastPosition_pageX !== void 0 ? _state_current_lastPosition_pageX : 0), e.pageY - ((_state_current_lastPosition_pageY = (_state_current_lastPosition1 = state.current.lastPosition) === null || _state_current_lastPosition1 === void 0 ? void 0 : _state_current_lastPosition1.pageY) !== null && _state_current_lastPosition_pageY !== void 0 ? _state_current_lastPosition_pageY : 0));
          state.current.lastPosition = {
            pageX: e.pageX,
            pageY: e.pageY
          };
        }
      };
      let onPointerUp = (e) => {
        if (e.pointerId === state.current.id) {
          let pointerType = e.pointerType || "mouse";
          end(e, pointerType);
          state.current.id = null;
          removeGlobalListener(window, "pointermove", onPointerMove, false);
          removeGlobalListener(window, "pointerup", onPointerUp, false);
          removeGlobalListener(window, "pointercancel", onPointerUp, false);
        }
      };
      moveProps2.onPointerDown = (e) => {
        if (e.button === 0 && state.current.id == null) {
          start();
          e.stopPropagation();
          e.preventDefault();
          state.current.lastPosition = {
            pageX: e.pageX,
            pageY: e.pageY
          };
          state.current.id = e.pointerId;
          addGlobalListener(window, "pointermove", onPointerMove, false);
          addGlobalListener(window, "pointerup", onPointerUp, false);
          addGlobalListener(window, "pointercancel", onPointerUp, false);
        }
      };
    }
    let triggerKeyboardMove = (e, deltaX, deltaY) => {
      start();
      move(e, "keyboard", deltaX, deltaY);
      end(e, "keyboard");
    };
    moveProps2.onKeyDown = (e) => {
      switch (e.key) {
        case "Left":
        case "ArrowLeft":
          e.preventDefault();
          e.stopPropagation();
          triggerKeyboardMove(e, -1, 0);
          break;
        case "Right":
        case "ArrowRight":
          e.preventDefault();
          e.stopPropagation();
          triggerKeyboardMove(e, 1, 0);
          break;
        case "Up":
        case "ArrowUp":
          e.preventDefault();
          e.stopPropagation();
          triggerKeyboardMove(e, 0, -1);
          break;
        case "Down":
        case "ArrowDown":
          e.preventDefault();
          e.stopPropagation();
          triggerKeyboardMove(e, 0, 1);
          break;
      }
    };
    return moveProps2;
  }, [
    state,
    addGlobalListener,
    removeGlobalListener,
    move,
    end
  ]);
  return {
    moveProps
  };
}
const $8a26561d2877236e$var$DEFAULT_THRESHOLD = 500;
function $8a26561d2877236e$export$c24ed0104d07eab9(props) {
  let { isDisabled, onLongPressStart, onLongPressEnd, onLongPress, threshold = $8a26561d2877236e$var$DEFAULT_THRESHOLD, accessibilityDescription } = props;
  const timeRef = reactExports.useRef();
  let { addGlobalListener, removeGlobalListener } = $03deb23ff14920c4$export$4eaf04e54aa8eed6();
  let { pressProps } = $f6c31cce2adf654f$export$45712eceda6fad21({
    isDisabled,
    onPressStart(e) {
      e.continuePropagation();
      if (e.pointerType === "mouse" || e.pointerType === "touch") {
        if (onLongPressStart) onLongPressStart({
          ...e,
          type: "longpressstart"
        });
        timeRef.current = setTimeout(() => {
          e.target.dispatchEvent(new PointerEvent("pointercancel", {
            bubbles: true
          }));
          if (onLongPress) onLongPress({
            ...e,
            type: "longpress"
          });
          timeRef.current = void 0;
        }, threshold);
        if (e.pointerType === "touch") {
          let onContextMenu = (e2) => {
            e2.preventDefault();
          };
          addGlobalListener(e.target, "contextmenu", onContextMenu, {
            once: true
          });
          addGlobalListener(window, "pointerup", () => {
            setTimeout(() => {
              removeGlobalListener(e.target, "contextmenu", onContextMenu);
            }, 30);
          }, {
            once: true
          });
        }
      }
    },
    onPressEnd(e) {
      if (timeRef.current) clearTimeout(timeRef.current);
      if (onLongPressEnd && (e.pointerType === "mouse" || e.pointerType === "touch")) onLongPressEnd({
        ...e,
        type: "longpressend"
      });
    }
  });
  let descriptionProps = $ef06256079686ba0$export$f8aeda7b10753fa1(onLongPress && !isDisabled ? accessibilityDescription : void 0);
  return {
    longPressProps: $3ef42575df84b30b$export$9d1611c77c2fe928(pressProps, descriptionProps)
  };
}
function $6a99195332edec8b$export$80f3e147d781571c(element) {
  const ownerDocument = $431fbd86ca7dc216$export$b204af158042fbac(element);
  if ($507fabe10e71c6fb$export$630ff653c5ada6a9() === "virtual") {
    let lastFocusedElement = ownerDocument.activeElement;
    $bbed8b41f857bcc0$export$24490316f764c430(() => {
      if (ownerDocument.activeElement === lastFocusedElement && element.isConnected) $7215afc6de606d6b$export$de79e2c695e052f3(element);
    });
  } else $7215afc6de606d6b$export$de79e2c695e052f3(element);
}
function $645f2e67b85a24c9$var$isStyleVisible(element) {
  const windowObject2 = $431fbd86ca7dc216$export$f21a1ffae260145a(element);
  if (!(element instanceof windowObject2.HTMLElement) && !(element instanceof windowObject2.SVGElement)) return false;
  let { display, visibility } = element.style;
  let isVisible = display !== "none" && visibility !== "hidden" && visibility !== "collapse";
  if (isVisible) {
    const { getComputedStyle: getComputedStyle2 } = element.ownerDocument.defaultView;
    let { display: computedDisplay, visibility: computedVisibility } = getComputedStyle2(element);
    isVisible = computedDisplay !== "none" && computedVisibility !== "hidden" && computedVisibility !== "collapse";
  }
  return isVisible;
}
function $645f2e67b85a24c9$var$isAttributeVisible(element, childElement) {
  return !element.hasAttribute("hidden") && // Ignore HiddenSelect when tree walking.
  !element.hasAttribute("data-react-aria-prevent-focus") && (element.nodeName === "DETAILS" && childElement && childElement.nodeName !== "SUMMARY" ? element.hasAttribute("open") : true);
}
function $645f2e67b85a24c9$export$e989c0fffaa6b27a(element, childElement) {
  return element.nodeName !== "#comment" && $645f2e67b85a24c9$var$isStyleVisible(element) && $645f2e67b85a24c9$var$isAttributeVisible(element, childElement) && (!element.parentElement || $645f2e67b85a24c9$export$e989c0fffaa6b27a(element.parentElement, element));
}
const $9bf71ea28793e738$var$FocusContext = /* @__PURE__ */ React$1.createContext(null);
let $9bf71ea28793e738$var$activeScope = null;
function $9bf71ea28793e738$export$20e40289641fbbb6(props) {
  let { children, contain, restoreFocus, autoFocus } = props;
  let startRef = reactExports.useRef(null);
  let endRef = reactExports.useRef(null);
  let scopeRef = reactExports.useRef([]);
  let { parentNode } = reactExports.useContext($9bf71ea28793e738$var$FocusContext) || {};
  let node = reactExports.useMemo(() => new $9bf71ea28793e738$var$TreeNode({
    scopeRef
  }), [
    scopeRef
  ]);
  $f0a04ccd8dbdd83b$export$e5c5a5f917a5871c(() => {
    let parent = parentNode || $9bf71ea28793e738$export$d06fae2ee68b101e.root;
    if ($9bf71ea28793e738$export$d06fae2ee68b101e.getTreeNode(parent.scopeRef) && $9bf71ea28793e738$var$activeScope && !$9bf71ea28793e738$var$isAncestorScope($9bf71ea28793e738$var$activeScope, parent.scopeRef)) {
      let activeNode = $9bf71ea28793e738$export$d06fae2ee68b101e.getTreeNode($9bf71ea28793e738$var$activeScope);
      if (activeNode) parent = activeNode;
    }
    parent.addChild(node);
    $9bf71ea28793e738$export$d06fae2ee68b101e.addNode(node);
  }, [
    node,
    parentNode
  ]);
  $f0a04ccd8dbdd83b$export$e5c5a5f917a5871c(() => {
    let node2 = $9bf71ea28793e738$export$d06fae2ee68b101e.getTreeNode(scopeRef);
    if (node2) node2.contain = !!contain;
  }, [
    contain
  ]);
  $f0a04ccd8dbdd83b$export$e5c5a5f917a5871c(() => {
    var _startRef_current;
    let node2 = (_startRef_current = startRef.current) === null || _startRef_current === void 0 ? void 0 : _startRef_current.nextSibling;
    let nodes = [];
    while (node2 && node2 !== endRef.current) {
      nodes.push(node2);
      node2 = node2.nextSibling;
    }
    scopeRef.current = nodes;
  }, [
    children
  ]);
  $9bf71ea28793e738$var$useActiveScopeTracker(scopeRef, restoreFocus, contain);
  $9bf71ea28793e738$var$useFocusContainment(scopeRef, contain);
  $9bf71ea28793e738$var$useRestoreFocus(scopeRef, restoreFocus, contain);
  $9bf71ea28793e738$var$useAutoFocus(scopeRef, autoFocus);
  reactExports.useEffect(() => {
    const activeElement = $431fbd86ca7dc216$export$b204af158042fbac(scopeRef.current ? scopeRef.current[0] : void 0).activeElement;
    let scope = null;
    if ($9bf71ea28793e738$var$isElementInScope(activeElement, scopeRef.current)) {
      for (let node2 of $9bf71ea28793e738$export$d06fae2ee68b101e.traverse()) if (node2.scopeRef && $9bf71ea28793e738$var$isElementInScope(activeElement, node2.scopeRef.current)) scope = node2;
      if (scope === $9bf71ea28793e738$export$d06fae2ee68b101e.getTreeNode(scopeRef)) $9bf71ea28793e738$var$activeScope = scope.scopeRef;
    }
  }, [
    scopeRef
  ]);
  $f0a04ccd8dbdd83b$export$e5c5a5f917a5871c(() => {
    return () => {
      var _focusScopeTree_getTreeNode_parent, _focusScopeTree_getTreeNode;
      var _focusScopeTree_getTreeNode_parent_scopeRef;
      let parentScope = (_focusScopeTree_getTreeNode_parent_scopeRef = (_focusScopeTree_getTreeNode = $9bf71ea28793e738$export$d06fae2ee68b101e.getTreeNode(scopeRef)) === null || _focusScopeTree_getTreeNode === void 0 ? void 0 : (_focusScopeTree_getTreeNode_parent = _focusScopeTree_getTreeNode.parent) === null || _focusScopeTree_getTreeNode_parent === void 0 ? void 0 : _focusScopeTree_getTreeNode_parent.scopeRef) !== null && _focusScopeTree_getTreeNode_parent_scopeRef !== void 0 ? _focusScopeTree_getTreeNode_parent_scopeRef : null;
      if ((scopeRef === $9bf71ea28793e738$var$activeScope || $9bf71ea28793e738$var$isAncestorScope(scopeRef, $9bf71ea28793e738$var$activeScope)) && (!parentScope || $9bf71ea28793e738$export$d06fae2ee68b101e.getTreeNode(parentScope))) $9bf71ea28793e738$var$activeScope = parentScope;
      $9bf71ea28793e738$export$d06fae2ee68b101e.removeTreeNode(scopeRef);
    };
  }, [
    scopeRef
  ]);
  let focusManager = reactExports.useMemo(() => $9bf71ea28793e738$var$createFocusManagerForScope(scopeRef), []);
  let value = reactExports.useMemo(() => ({
    focusManager,
    parentNode: node
  }), [
    node,
    focusManager
  ]);
  return /* @__PURE__ */ React$1.createElement($9bf71ea28793e738$var$FocusContext.Provider, {
    value
  }, /* @__PURE__ */ React$1.createElement("span", {
    "data-focus-scope-start": true,
    hidden: true,
    ref: startRef
  }), children, /* @__PURE__ */ React$1.createElement("span", {
    "data-focus-scope-end": true,
    hidden: true,
    ref: endRef
  }));
}
function $9bf71ea28793e738$var$createFocusManagerForScope(scopeRef) {
  return {
    focusNext(opts = {}) {
      let scope = scopeRef.current;
      let { from, tabbable, wrap, accept } = opts;
      let node = from || $431fbd86ca7dc216$export$b204af158042fbac(scope[0]).activeElement;
      let sentinel = scope[0].previousElementSibling;
      let scopeRoot = $9bf71ea28793e738$var$getScopeRoot(scope);
      let walker = $9bf71ea28793e738$export$2d6ec8fc375ceafa(scopeRoot, {
        tabbable,
        accept
      }, scope);
      walker.currentNode = $9bf71ea28793e738$var$isElementInScope(node, scope) ? node : sentinel;
      let nextNode = walker.nextNode();
      if (!nextNode && wrap) {
        walker.currentNode = sentinel;
        nextNode = walker.nextNode();
      }
      if (nextNode) $9bf71ea28793e738$var$focusElement(nextNode, true);
      return nextNode;
    },
    focusPrevious(opts = {}) {
      let scope = scopeRef.current;
      let { from, tabbable, wrap, accept } = opts;
      let node = from || $431fbd86ca7dc216$export$b204af158042fbac(scope[0]).activeElement;
      let sentinel = scope[scope.length - 1].nextElementSibling;
      let scopeRoot = $9bf71ea28793e738$var$getScopeRoot(scope);
      let walker = $9bf71ea28793e738$export$2d6ec8fc375ceafa(scopeRoot, {
        tabbable,
        accept
      }, scope);
      walker.currentNode = $9bf71ea28793e738$var$isElementInScope(node, scope) ? node : sentinel;
      let previousNode = walker.previousNode();
      if (!previousNode && wrap) {
        walker.currentNode = sentinel;
        previousNode = walker.previousNode();
      }
      if (previousNode) $9bf71ea28793e738$var$focusElement(previousNode, true);
      return previousNode;
    },
    focusFirst(opts = {}) {
      let scope = scopeRef.current;
      let { tabbable, accept } = opts;
      let scopeRoot = $9bf71ea28793e738$var$getScopeRoot(scope);
      let walker = $9bf71ea28793e738$export$2d6ec8fc375ceafa(scopeRoot, {
        tabbable,
        accept
      }, scope);
      walker.currentNode = scope[0].previousElementSibling;
      let nextNode = walker.nextNode();
      if (nextNode) $9bf71ea28793e738$var$focusElement(nextNode, true);
      return nextNode;
    },
    focusLast(opts = {}) {
      let scope = scopeRef.current;
      let { tabbable, accept } = opts;
      let scopeRoot = $9bf71ea28793e738$var$getScopeRoot(scope);
      let walker = $9bf71ea28793e738$export$2d6ec8fc375ceafa(scopeRoot, {
        tabbable,
        accept
      }, scope);
      walker.currentNode = scope[scope.length - 1].nextElementSibling;
      let previousNode = walker.previousNode();
      if (previousNode) $9bf71ea28793e738$var$focusElement(previousNode, true);
      return previousNode;
    }
  };
}
const $9bf71ea28793e738$var$focusableElements = [
  "input:not([disabled]):not([type=hidden])",
  "select:not([disabled])",
  "textarea:not([disabled])",
  "button:not([disabled])",
  "a[href]",
  "area[href]",
  "summary",
  "iframe",
  "object",
  "embed",
  "audio[controls]",
  "video[controls]",
  "[contenteditable]"
];
const $9bf71ea28793e738$var$FOCUSABLE_ELEMENT_SELECTOR = $9bf71ea28793e738$var$focusableElements.join(":not([hidden]),") + ",[tabindex]:not([disabled]):not([hidden])";
$9bf71ea28793e738$var$focusableElements.push('[tabindex]:not([tabindex="-1"]):not([disabled])');
const $9bf71ea28793e738$var$TABBABLE_ELEMENT_SELECTOR = $9bf71ea28793e738$var$focusableElements.join(':not([hidden]):not([tabindex="-1"]),');
function $9bf71ea28793e738$var$getScopeRoot(scope) {
  return scope[0].parentElement;
}
function $9bf71ea28793e738$var$shouldContainFocus(scopeRef) {
  let scope = $9bf71ea28793e738$export$d06fae2ee68b101e.getTreeNode($9bf71ea28793e738$var$activeScope);
  while (scope && scope.scopeRef !== scopeRef) {
    if (scope.contain) return false;
    scope = scope.parent;
  }
  return true;
}
function $9bf71ea28793e738$var$useFocusContainment(scopeRef, contain) {
  let focusedNode = reactExports.useRef();
  let raf = reactExports.useRef();
  $f0a04ccd8dbdd83b$export$e5c5a5f917a5871c(() => {
    let scope = scopeRef.current;
    if (!contain) {
      if (raf.current) {
        cancelAnimationFrame(raf.current);
        raf.current = void 0;
      }
      return;
    }
    const ownerDocument = $431fbd86ca7dc216$export$b204af158042fbac(scope ? scope[0] : void 0);
    let onKeyDown = (e) => {
      if (e.key !== "Tab" || e.altKey || e.ctrlKey || e.metaKey || !$9bf71ea28793e738$var$shouldContainFocus(scopeRef) || e.isComposing) return;
      let focusedElement = ownerDocument.activeElement;
      let scope2 = scopeRef.current;
      if (!scope2 || !$9bf71ea28793e738$var$isElementInScope(focusedElement, scope2)) return;
      let scopeRoot = $9bf71ea28793e738$var$getScopeRoot(scope2);
      let walker = $9bf71ea28793e738$export$2d6ec8fc375ceafa(scopeRoot, {
        tabbable: true
      }, scope2);
      if (!focusedElement) return;
      walker.currentNode = focusedElement;
      let nextElement = e.shiftKey ? walker.previousNode() : walker.nextNode();
      if (!nextElement) {
        walker.currentNode = e.shiftKey ? scope2[scope2.length - 1].nextElementSibling : scope2[0].previousElementSibling;
        nextElement = e.shiftKey ? walker.previousNode() : walker.nextNode();
      }
      e.preventDefault();
      if (nextElement) $9bf71ea28793e738$var$focusElement(nextElement, true);
    };
    let onFocus = (e) => {
      if ((!$9bf71ea28793e738$var$activeScope || $9bf71ea28793e738$var$isAncestorScope($9bf71ea28793e738$var$activeScope, scopeRef)) && $9bf71ea28793e738$var$isElementInScope(e.target, scopeRef.current)) {
        $9bf71ea28793e738$var$activeScope = scopeRef;
        focusedNode.current = e.target;
      } else if ($9bf71ea28793e738$var$shouldContainFocus(scopeRef) && !$9bf71ea28793e738$var$isElementInChildScope(e.target, scopeRef)) {
        if (focusedNode.current) focusedNode.current.focus();
        else if ($9bf71ea28793e738$var$activeScope && $9bf71ea28793e738$var$activeScope.current) $9bf71ea28793e738$var$focusFirstInScope($9bf71ea28793e738$var$activeScope.current);
      } else if ($9bf71ea28793e738$var$shouldContainFocus(scopeRef)) focusedNode.current = e.target;
    };
    let onBlur = (e) => {
      if (raf.current) cancelAnimationFrame(raf.current);
      raf.current = requestAnimationFrame(() => {
        if (ownerDocument.activeElement && $9bf71ea28793e738$var$shouldContainFocus(scopeRef) && !$9bf71ea28793e738$var$isElementInChildScope(ownerDocument.activeElement, scopeRef)) {
          $9bf71ea28793e738$var$activeScope = scopeRef;
          if (ownerDocument.body.contains(e.target)) {
            var _focusedNode_current;
            focusedNode.current = e.target;
            (_focusedNode_current = focusedNode.current) === null || _focusedNode_current === void 0 ? void 0 : _focusedNode_current.focus();
          } else if ($9bf71ea28793e738$var$activeScope.current) $9bf71ea28793e738$var$focusFirstInScope($9bf71ea28793e738$var$activeScope.current);
        }
      });
    };
    ownerDocument.addEventListener("keydown", onKeyDown, false);
    ownerDocument.addEventListener("focusin", onFocus, false);
    scope === null || scope === void 0 ? void 0 : scope.forEach((element) => element.addEventListener("focusin", onFocus, false));
    scope === null || scope === void 0 ? void 0 : scope.forEach((element) => element.addEventListener("focusout", onBlur, false));
    return () => {
      ownerDocument.removeEventListener("keydown", onKeyDown, false);
      ownerDocument.removeEventListener("focusin", onFocus, false);
      scope === null || scope === void 0 ? void 0 : scope.forEach((element) => element.removeEventListener("focusin", onFocus, false));
      scope === null || scope === void 0 ? void 0 : scope.forEach((element) => element.removeEventListener("focusout", onBlur, false));
    };
  }, [
    scopeRef,
    contain
  ]);
  $f0a04ccd8dbdd83b$export$e5c5a5f917a5871c(() => {
    return () => {
      if (raf.current) cancelAnimationFrame(raf.current);
    };
  }, [
    raf
  ]);
}
function $9bf71ea28793e738$var$isElementInAnyScope(element) {
  return $9bf71ea28793e738$var$isElementInChildScope(element);
}
function $9bf71ea28793e738$var$isElementInScope(element, scope) {
  if (!element) return false;
  if (!scope) return false;
  return scope.some((node) => node.contains(element));
}
function $9bf71ea28793e738$var$isElementInChildScope(element, scope = null) {
  if (element instanceof Element && element.closest("[data-react-aria-top-layer]")) return true;
  for (let { scopeRef: s } of $9bf71ea28793e738$export$d06fae2ee68b101e.traverse($9bf71ea28793e738$export$d06fae2ee68b101e.getTreeNode(scope))) {
    if (s && $9bf71ea28793e738$var$isElementInScope(element, s.current)) return true;
  }
  return false;
}
function $9bf71ea28793e738$export$1258395f99bf9cbf(element) {
  return $9bf71ea28793e738$var$isElementInChildScope(element, $9bf71ea28793e738$var$activeScope);
}
function $9bf71ea28793e738$var$isAncestorScope(ancestor, scope) {
  var _focusScopeTree_getTreeNode;
  let parent = (_focusScopeTree_getTreeNode = $9bf71ea28793e738$export$d06fae2ee68b101e.getTreeNode(scope)) === null || _focusScopeTree_getTreeNode === void 0 ? void 0 : _focusScopeTree_getTreeNode.parent;
  while (parent) {
    if (parent.scopeRef === ancestor) return true;
    parent = parent.parent;
  }
  return false;
}
function $9bf71ea28793e738$var$focusElement(element, scroll = false) {
  if (element != null && !scroll) try {
    (0, $6a99195332edec8b$export$80f3e147d781571c)(element);
  } catch (err) {
  }
  else if (element != null) try {
    element.focus();
  } catch (err) {
  }
}
function $9bf71ea28793e738$var$focusFirstInScope(scope, tabbable = true) {
  let sentinel = scope[0].previousElementSibling;
  let scopeRoot = $9bf71ea28793e738$var$getScopeRoot(scope);
  let walker = $9bf71ea28793e738$export$2d6ec8fc375ceafa(scopeRoot, {
    tabbable
  }, scope);
  walker.currentNode = sentinel;
  let nextNode = walker.nextNode();
  if (tabbable && !nextNode) {
    scopeRoot = $9bf71ea28793e738$var$getScopeRoot(scope);
    walker = $9bf71ea28793e738$export$2d6ec8fc375ceafa(scopeRoot, {
      tabbable: false
    }, scope);
    walker.currentNode = sentinel;
    nextNode = walker.nextNode();
  }
  $9bf71ea28793e738$var$focusElement(nextNode);
}
function $9bf71ea28793e738$var$useAutoFocus(scopeRef, autoFocus) {
  const autoFocusRef = React$1.useRef(autoFocus);
  reactExports.useEffect(() => {
    if (autoFocusRef.current) {
      $9bf71ea28793e738$var$activeScope = scopeRef;
      const ownerDocument = $431fbd86ca7dc216$export$b204af158042fbac(scopeRef.current ? scopeRef.current[0] : void 0);
      if (!$9bf71ea28793e738$var$isElementInScope(ownerDocument.activeElement, $9bf71ea28793e738$var$activeScope.current) && scopeRef.current) $9bf71ea28793e738$var$focusFirstInScope(scopeRef.current);
    }
    autoFocusRef.current = false;
  }, [
    scopeRef
  ]);
}
function $9bf71ea28793e738$var$useActiveScopeTracker(scopeRef, restore, contain) {
  $f0a04ccd8dbdd83b$export$e5c5a5f917a5871c(() => {
    if (restore || contain) return;
    let scope = scopeRef.current;
    const ownerDocument = $431fbd86ca7dc216$export$b204af158042fbac(scope ? scope[0] : void 0);
    let onFocus = (e) => {
      let target = e.target;
      if ($9bf71ea28793e738$var$isElementInScope(target, scopeRef.current)) $9bf71ea28793e738$var$activeScope = scopeRef;
      else if (!$9bf71ea28793e738$var$isElementInAnyScope(target)) $9bf71ea28793e738$var$activeScope = null;
    };
    ownerDocument.addEventListener("focusin", onFocus, false);
    scope === null || scope === void 0 ? void 0 : scope.forEach((element) => element.addEventListener("focusin", onFocus, false));
    return () => {
      ownerDocument.removeEventListener("focusin", onFocus, false);
      scope === null || scope === void 0 ? void 0 : scope.forEach((element) => element.removeEventListener("focusin", onFocus, false));
    };
  }, [
    scopeRef,
    restore,
    contain
  ]);
}
function $9bf71ea28793e738$var$shouldRestoreFocus(scopeRef) {
  let scope = $9bf71ea28793e738$export$d06fae2ee68b101e.getTreeNode($9bf71ea28793e738$var$activeScope);
  while (scope && scope.scopeRef !== scopeRef) {
    if (scope.nodeToRestore) return false;
    scope = scope.parent;
  }
  return (scope === null || scope === void 0 ? void 0 : scope.scopeRef) === scopeRef;
}
function $9bf71ea28793e738$var$useRestoreFocus(scopeRef, restoreFocus, contain) {
  const nodeToRestoreRef = reactExports.useRef(typeof document !== "undefined" ? $431fbd86ca7dc216$export$b204af158042fbac(scopeRef.current ? scopeRef.current[0] : void 0).activeElement : null);
  $f0a04ccd8dbdd83b$export$e5c5a5f917a5871c(() => {
    let scope = scopeRef.current;
    const ownerDocument = $431fbd86ca7dc216$export$b204af158042fbac(scope ? scope[0] : void 0);
    if (!restoreFocus || contain) return;
    let onFocus = () => {
      if ((!$9bf71ea28793e738$var$activeScope || $9bf71ea28793e738$var$isAncestorScope($9bf71ea28793e738$var$activeScope, scopeRef)) && $9bf71ea28793e738$var$isElementInScope(ownerDocument.activeElement, scopeRef.current)) $9bf71ea28793e738$var$activeScope = scopeRef;
    };
    ownerDocument.addEventListener("focusin", onFocus, false);
    scope === null || scope === void 0 ? void 0 : scope.forEach((element) => element.addEventListener("focusin", onFocus, false));
    return () => {
      ownerDocument.removeEventListener("focusin", onFocus, false);
      scope === null || scope === void 0 ? void 0 : scope.forEach((element) => element.removeEventListener("focusin", onFocus, false));
    };
  }, [
    scopeRef,
    contain
  ]);
  $f0a04ccd8dbdd83b$export$e5c5a5f917a5871c(() => {
    const ownerDocument = $431fbd86ca7dc216$export$b204af158042fbac(scopeRef.current ? scopeRef.current[0] : void 0);
    if (!restoreFocus) return;
    let onKeyDown = (e) => {
      if (e.key !== "Tab" || e.altKey || e.ctrlKey || e.metaKey || !$9bf71ea28793e738$var$shouldContainFocus(scopeRef) || e.isComposing) return;
      let focusedElement = ownerDocument.activeElement;
      if (!$9bf71ea28793e738$var$isElementInScope(focusedElement, scopeRef.current)) return;
      let treeNode = $9bf71ea28793e738$export$d06fae2ee68b101e.getTreeNode(scopeRef);
      if (!treeNode) return;
      let nodeToRestore = treeNode.nodeToRestore;
      let walker = $9bf71ea28793e738$export$2d6ec8fc375ceafa(ownerDocument.body, {
        tabbable: true
      });
      walker.currentNode = focusedElement;
      let nextElement = e.shiftKey ? walker.previousNode() : walker.nextNode();
      if (!nodeToRestore || !ownerDocument.body.contains(nodeToRestore) || nodeToRestore === ownerDocument.body) {
        nodeToRestore = void 0;
        treeNode.nodeToRestore = void 0;
      }
      if ((!nextElement || !$9bf71ea28793e738$var$isElementInScope(nextElement, scopeRef.current)) && nodeToRestore) {
        walker.currentNode = nodeToRestore;
        do
          nextElement = e.shiftKey ? walker.previousNode() : walker.nextNode();
        while ($9bf71ea28793e738$var$isElementInScope(nextElement, scopeRef.current));
        e.preventDefault();
        e.stopPropagation();
        if (nextElement) $9bf71ea28793e738$var$focusElement(nextElement, true);
        else if (!$9bf71ea28793e738$var$isElementInAnyScope(nodeToRestore)) focusedElement.blur();
        else $9bf71ea28793e738$var$focusElement(nodeToRestore, true);
      }
    };
    if (!contain) ownerDocument.addEventListener("keydown", onKeyDown, true);
    return () => {
      if (!contain) ownerDocument.removeEventListener("keydown", onKeyDown, true);
    };
  }, [
    scopeRef,
    restoreFocus,
    contain
  ]);
  $f0a04ccd8dbdd83b$export$e5c5a5f917a5871c(() => {
    const ownerDocument = $431fbd86ca7dc216$export$b204af158042fbac(scopeRef.current ? scopeRef.current[0] : void 0);
    if (!restoreFocus) return;
    let treeNode = $9bf71ea28793e738$export$d06fae2ee68b101e.getTreeNode(scopeRef);
    if (!treeNode) return;
    var _nodeToRestoreRef_current;
    treeNode.nodeToRestore = (_nodeToRestoreRef_current = nodeToRestoreRef.current) !== null && _nodeToRestoreRef_current !== void 0 ? _nodeToRestoreRef_current : void 0;
    return () => {
      let treeNode2 = $9bf71ea28793e738$export$d06fae2ee68b101e.getTreeNode(scopeRef);
      if (!treeNode2) return;
      let nodeToRestore = treeNode2.nodeToRestore;
      if (restoreFocus && nodeToRestore && // eslint-disable-next-line react-hooks/exhaustive-deps
      ($9bf71ea28793e738$var$isElementInScope(ownerDocument.activeElement, scopeRef.current) || ownerDocument.activeElement === ownerDocument.body && $9bf71ea28793e738$var$shouldRestoreFocus(scopeRef))) {
        let clonedTree = $9bf71ea28793e738$export$d06fae2ee68b101e.clone();
        requestAnimationFrame(() => {
          if (ownerDocument.activeElement === ownerDocument.body) {
            let treeNode3 = clonedTree.getTreeNode(scopeRef);
            while (treeNode3) {
              if (treeNode3.nodeToRestore && treeNode3.nodeToRestore.isConnected) {
                $9bf71ea28793e738$var$focusElement(treeNode3.nodeToRestore);
                return;
              }
              treeNode3 = treeNode3.parent;
            }
            treeNode3 = clonedTree.getTreeNode(scopeRef);
            while (treeNode3) {
              if (treeNode3.scopeRef && treeNode3.scopeRef.current && $9bf71ea28793e738$export$d06fae2ee68b101e.getTreeNode(treeNode3.scopeRef)) {
                $9bf71ea28793e738$var$focusFirstInScope(treeNode3.scopeRef.current, true);
                return;
              }
              treeNode3 = treeNode3.parent;
            }
          }
        });
      }
    };
  }, [
    scopeRef,
    restoreFocus
  ]);
}
function $9bf71ea28793e738$export$2d6ec8fc375ceafa(root2, opts, scope) {
  let selector = (opts === null || opts === void 0 ? void 0 : opts.tabbable) ? $9bf71ea28793e738$var$TABBABLE_ELEMENT_SELECTOR : $9bf71ea28793e738$var$FOCUSABLE_ELEMENT_SELECTOR;
  let walker = $431fbd86ca7dc216$export$b204af158042fbac(root2).createTreeWalker(root2, NodeFilter.SHOW_ELEMENT, {
    acceptNode(node) {
      var _opts_from;
      if (opts === null || opts === void 0 ? void 0 : (_opts_from = opts.from) === null || _opts_from === void 0 ? void 0 : _opts_from.contains(node)) return NodeFilter.FILTER_REJECT;
      if (node.matches(selector) && $645f2e67b85a24c9$export$e989c0fffaa6b27a(node) && (!scope || $9bf71ea28793e738$var$isElementInScope(node, scope)) && (!(opts === null || opts === void 0 ? void 0 : opts.accept) || opts.accept(node))) return NodeFilter.FILTER_ACCEPT;
      return NodeFilter.FILTER_SKIP;
    }
  });
  if (opts === null || opts === void 0 ? void 0 : opts.from) walker.currentNode = opts.from;
  return walker;
}
class $9bf71ea28793e738$var$Tree {
  get size() {
    return this.fastMap.size;
  }
  getTreeNode(data) {
    return this.fastMap.get(data);
  }
  addTreeNode(scopeRef, parent, nodeToRestore) {
    let parentNode = this.fastMap.get(parent !== null && parent !== void 0 ? parent : null);
    if (!parentNode) return;
    let node = new $9bf71ea28793e738$var$TreeNode({
      scopeRef
    });
    parentNode.addChild(node);
    node.parent = parentNode;
    this.fastMap.set(scopeRef, node);
    if (nodeToRestore) node.nodeToRestore = nodeToRestore;
  }
  addNode(node) {
    this.fastMap.set(node.scopeRef, node);
  }
  removeTreeNode(scopeRef) {
    if (scopeRef === null) return;
    let node = this.fastMap.get(scopeRef);
    if (!node) return;
    let parentNode = node.parent;
    for (let current of this.traverse()) if (current !== node && node.nodeToRestore && current.nodeToRestore && node.scopeRef && node.scopeRef.current && $9bf71ea28793e738$var$isElementInScope(current.nodeToRestore, node.scopeRef.current)) current.nodeToRestore = node.nodeToRestore;
    let children = node.children;
    if (parentNode) {
      parentNode.removeChild(node);
      if (children.size > 0) children.forEach((child) => parentNode && parentNode.addChild(child));
    }
    this.fastMap.delete(node.scopeRef);
  }
  // Pre Order Depth First
  *traverse(node = this.root) {
    if (node.scopeRef != null) yield node;
    if (node.children.size > 0) for (let child of node.children) yield* this.traverse(child);
  }
  clone() {
    var _node_parent;
    let newTree = new $9bf71ea28793e738$var$Tree();
    var _node_parent_scopeRef;
    for (let node of this.traverse()) newTree.addTreeNode(node.scopeRef, (_node_parent_scopeRef = (_node_parent = node.parent) === null || _node_parent === void 0 ? void 0 : _node_parent.scopeRef) !== null && _node_parent_scopeRef !== void 0 ? _node_parent_scopeRef : null, node.nodeToRestore);
    return newTree;
  }
  constructor() {
    this.fastMap = /* @__PURE__ */ new Map();
    this.root = new $9bf71ea28793e738$var$TreeNode({
      scopeRef: null
    });
    this.fastMap.set(null, this.root);
  }
}
class $9bf71ea28793e738$var$TreeNode {
  addChild(node) {
    this.children.add(node);
    node.parent = this;
  }
  removeChild(node) {
    this.children.delete(node);
    node.parent = void 0;
  }
  constructor(props) {
    this.children = /* @__PURE__ */ new Set();
    this.contain = false;
    this.scopeRef = props.scopeRef;
  }
}
let $9bf71ea28793e738$export$d06fae2ee68b101e = new $9bf71ea28793e738$var$Tree();
function $f7dceffc5ad7768b$export$4e328f61c538687f(props = {}) {
  let { autoFocus = false, isTextInput, within } = props;
  let state = reactExports.useRef({
    isFocused: false,
    isFocusVisible: autoFocus || $507fabe10e71c6fb$export$b9b3dfddab17db27()
  });
  let [isFocused, setFocused] = reactExports.useState(false);
  let [isFocusVisibleState, setFocusVisible] = reactExports.useState(() => state.current.isFocused && state.current.isFocusVisible);
  let updateState = reactExports.useCallback(() => setFocusVisible(state.current.isFocused && state.current.isFocusVisible), []);
  let onFocusChange = reactExports.useCallback((isFocused2) => {
    state.current.isFocused = isFocused2;
    setFocused(isFocused2);
    updateState();
  }, [
    updateState
  ]);
  $507fabe10e71c6fb$export$ec71b4b83ac08ec3((isFocusVisible) => {
    state.current.isFocusVisible = isFocusVisible;
    updateState();
  }, [], {
    isTextInput
  });
  let { focusProps } = $a1ea59d68270f0dd$export$f8168d8dd8fd66e6({
    isDisabled: within,
    onFocusChange
  });
  let { focusWithinProps } = $9ab94262bd0047c7$export$420e68273165f4ec({
    isDisabled: !within,
    onFocusWithinChange: onFocusChange
  });
  return {
    isFocused,
    isFocusVisible: isFocusVisibleState,
    focusProps: within ? focusWithinProps : focusProps
  };
}
let $e6afbd83fe6ebbd2$var$FocusableContext = /* @__PURE__ */ React$1.createContext(null);
function $e6afbd83fe6ebbd2$var$useFocusableContext(ref) {
  let context = reactExports.useContext($e6afbd83fe6ebbd2$var$FocusableContext) || {};
  $e7801be82b4b2a53$export$4debdb1a3f0fa79e(context, ref);
  let { ref: _2, ...otherProps } = context;
  return otherProps;
}
function $e6afbd83fe6ebbd2$export$4c014de7c8940b4c(props, domRef) {
  let { focusProps } = $a1ea59d68270f0dd$export$f8168d8dd8fd66e6(props);
  let { keyboardProps } = $46d819fcbaf35654$export$8f71654801c2f7cd(props);
  let interactions = $3ef42575df84b30b$export$9d1611c77c2fe928(focusProps, keyboardProps);
  let domProps = $e6afbd83fe6ebbd2$var$useFocusableContext(domRef);
  let interactionProps = props.isDisabled ? {} : domProps;
  let autoFocusRef = reactExports.useRef(props.autoFocus);
  reactExports.useEffect(() => {
    if (autoFocusRef.current && domRef.current) $6a99195332edec8b$export$80f3e147d781571c(domRef.current);
    autoFocusRef.current = false;
  }, [
    domRef
  ]);
  return {
    focusableProps: $3ef42575df84b30b$export$9d1611c77c2fe928({
      ...interactions,
      tabIndex: props.excludeFromTabOrder && !props.isDisabled ? -1 : void 0
    }, interactionProps)
  };
}
const $a11501f3d1d39e6c$var$visibleOverlays = [];
function $a11501f3d1d39e6c$export$ea8f71083e90600f(props, ref) {
  let { onClose, shouldCloseOnBlur, isOpen, isDismissable = false, isKeyboardDismissDisabled = false, shouldCloseOnInteractOutside } = props;
  reactExports.useEffect(() => {
    if (isOpen) $a11501f3d1d39e6c$var$visibleOverlays.push(ref);
    return () => {
      let index = $a11501f3d1d39e6c$var$visibleOverlays.indexOf(ref);
      if (index >= 0) $a11501f3d1d39e6c$var$visibleOverlays.splice(index, 1);
    };
  }, [
    isOpen,
    ref
  ]);
  let onHide = () => {
    if ($a11501f3d1d39e6c$var$visibleOverlays[$a11501f3d1d39e6c$var$visibleOverlays.length - 1] === ref && onClose) onClose();
  };
  let onInteractOutsideStart = (e) => {
    if (!shouldCloseOnInteractOutside || shouldCloseOnInteractOutside(e.target)) {
      if ($a11501f3d1d39e6c$var$visibleOverlays[$a11501f3d1d39e6c$var$visibleOverlays.length - 1] === ref) {
        e.stopPropagation();
        e.preventDefault();
      }
    }
  };
  let onInteractOutside = (e) => {
    if (!shouldCloseOnInteractOutside || shouldCloseOnInteractOutside(e.target)) {
      if ($a11501f3d1d39e6c$var$visibleOverlays[$a11501f3d1d39e6c$var$visibleOverlays.length - 1] === ref) {
        e.stopPropagation();
        e.preventDefault();
      }
      onHide();
    }
  };
  let onKeyDown = (e) => {
    if (e.key === "Escape" && !isKeyboardDismissDisabled && !e.nativeEvent.isComposing) {
      e.stopPropagation();
      e.preventDefault();
      onHide();
    }
  };
  $e0b6e0b68ec7f50f$export$872b660ac5a1ff98({
    ref,
    onInteractOutside: isDismissable && isOpen ? onInteractOutside : null,
    onInteractOutsideStart
  });
  let { focusWithinProps } = $9ab94262bd0047c7$export$420e68273165f4ec({
    isDisabled: !shouldCloseOnBlur,
    onBlurWithin: (e) => {
      if (!e.relatedTarget || $9bf71ea28793e738$export$1258395f99bf9cbf(e.relatedTarget)) return;
      if (!shouldCloseOnInteractOutside || shouldCloseOnInteractOutside(e.relatedTarget)) onClose();
    }
  });
  let onPointerDownUnderlay = (e) => {
    if (e.target === e.currentTarget) e.preventDefault();
  };
  return {
    overlayProps: {
      onKeyDown,
      ...focusWithinProps
    },
    underlayProps: {
      onPointerDown: onPointerDownUnderlay
    }
  };
}
function $628037886ba31236$export$f9d5c8beee7d008d(props, state, ref) {
  let { type: type2 } = props;
  let { isOpen } = state;
  reactExports.useEffect(() => {
    if (ref && ref.current) $dd149f63282afbbf$export$f6211563215e3b37.set(ref.current, state.close);
  });
  let ariaHasPopup = void 0;
  if (type2 === "menu") ariaHasPopup = true;
  else if (type2 === "listbox") ariaHasPopup = "listbox";
  let overlayId = $bdb11010cef70236$export$f680877a34711e37();
  return {
    triggerProps: {
      "aria-haspopup": ariaHasPopup,
      "aria-expanded": isOpen,
      "aria-controls": isOpen ? overlayId : null,
      onPress: state.toggle
    },
    overlayProps: {
      id: overlayId
    }
  };
}
const $f57aed4a881a3485$var$Context = /* @__PURE__ */ React$1.createContext(null);
function $f57aed4a881a3485$export$178405afcd8c5eb(props) {
  let { children } = props;
  let parent = reactExports.useContext($f57aed4a881a3485$var$Context);
  let [modalCount, setModalCount] = reactExports.useState(0);
  let context = reactExports.useMemo(() => ({
    parent,
    modalCount,
    addModal() {
      setModalCount((count) => count + 1);
      if (parent) parent.addModal();
    },
    removeModal() {
      setModalCount((count) => count - 1);
      if (parent) parent.removeModal();
    }
  }), [
    parent,
    modalCount
  ]);
  return /* @__PURE__ */ React$1.createElement($f57aed4a881a3485$var$Context.Provider, {
    value: context
  }, children);
}
function $f57aed4a881a3485$export$d9aaed4c3ece1bc0() {
  let context = reactExports.useContext($f57aed4a881a3485$var$Context);
  return {
    modalProviderProps: {
      "aria-hidden": context && context.modalCount > 0 ? true : null
    }
  };
}
function $f57aed4a881a3485$var$OverlayContainerDOM(props) {
  let { modalProviderProps } = $f57aed4a881a3485$export$d9aaed4c3ece1bc0();
  return /* @__PURE__ */ React$1.createElement("div", {
    "data-overlay-container": true,
    ...props,
    ...modalProviderProps
  });
}
function $f57aed4a881a3485$export$bf688221f59024e5(props) {
  return /* @__PURE__ */ React$1.createElement($f57aed4a881a3485$export$178405afcd8c5eb, null, /* @__PURE__ */ React$1.createElement($f57aed4a881a3485$var$OverlayContainerDOM, props));
}
function $f57aed4a881a3485$export$b47c3594eab58386(props) {
  let isSSR = $b5e257d569688ac6$export$535bd6ca7f90a273();
  let { portalContainer = isSSR ? null : document.body, ...rest } = props;
  React$1.useEffect(() => {
    if (portalContainer === null || portalContainer === void 0 ? void 0 : portalContainer.closest("[data-overlay-container]")) throw new Error("An OverlayContainer must not be inside another container. Please change the portalContainer prop.");
  }, [
    portalContainer
  ]);
  if (!portalContainer) return null;
  let contents = /* @__PURE__ */ React$1.createElement($f57aed4a881a3485$export$bf688221f59024e5, rest);
  return /* @__PURE__ */ $1CM7W$reactdom.createPortal(contents, portalContainer);
}
var $773d5888b972f1cf$exports = {};
$773d5888b972f1cf$exports = {
  "dismiss": `تجاهل`
};
var $d11f19852b941573$exports = {};
$d11f19852b941573$exports = {
  "dismiss": `Отхвърляне`
};
var $b983974c2ee1efb3$exports = {};
$b983974c2ee1efb3$exports = {
  "dismiss": `Odstranit`
};
var $5809cc9d4e92de73$exports = {};
$5809cc9d4e92de73$exports = {
  "dismiss": `Luk`
};
var $c68c2e4fc74398d1$exports = {};
$c68c2e4fc74398d1$exports = {
  "dismiss": `Schließen`
};
var $0898b4c153db2b77$exports = {};
$0898b4c153db2b77$exports = {
  "dismiss": `Απόρριψη`
};
var $6d74810286a15183$exports = {};
$6d74810286a15183$exports = {
  "dismiss": `Dismiss`
};
var $309d73dc65f78055$exports = {};
$309d73dc65f78055$exports = {
  "dismiss": `Descartar`
};
var $44ad94f7205cf593$exports = {};
$44ad94f7205cf593$exports = {
  "dismiss": `Lõpeta`
};
var $7c28f5687f0779a9$exports = {};
$7c28f5687f0779a9$exports = {
  "dismiss": `Hylkää`
};
var $e6d75df4b68bd73a$exports = {};
$e6d75df4b68bd73a$exports = {
  "dismiss": `Rejeter`
};
var $87505c9dab186d0f$exports = {};
$87505c9dab186d0f$exports = {
  "dismiss": `התעלם`
};
var $553439c3ffb3e492$exports = {};
$553439c3ffb3e492$exports = {
  "dismiss": `Odbaci`
};
var $74cf411061b983a2$exports = {};
$74cf411061b983a2$exports = {
  "dismiss": `Elutasítás`
};
var $e933f298574dc435$exports = {};
$e933f298574dc435$exports = {
  "dismiss": `Ignora`
};
var $ac91fc9fe02f71f6$exports = {};
$ac91fc9fe02f71f6$exports = {
  "dismiss": `閉じる`
};
var $52b96f86422025af$exports = {};
$52b96f86422025af$exports = {
  "dismiss": `무시`
};
var $c0d724c3e51dafa6$exports = {};
$c0d724c3e51dafa6$exports = {
  "dismiss": `Atmesti`
};
var $c92899672a3fe72e$exports = {};
$c92899672a3fe72e$exports = {
  "dismiss": `Nerādīt`
};
var $9f576b39d8e7a9d6$exports = {};
$9f576b39d8e7a9d6$exports = {
  "dismiss": `Lukk`
};
var $9d025808aeec81a7$exports = {};
$9d025808aeec81a7$exports = {
  "dismiss": `Negeren`
};
var $fce709921e2c0fa6$exports = {};
$fce709921e2c0fa6$exports = {
  "dismiss": `Zignoruj`
};
var $2599cf0c4ab37f59$exports = {};
$2599cf0c4ab37f59$exports = {
  "dismiss": `Descartar`
};
var $3c220ae7ef8a35fd$exports = {};
$3c220ae7ef8a35fd$exports = {
  "dismiss": `Dispensar`
};
var $93562b5094072f54$exports = {};
$93562b5094072f54$exports = {
  "dismiss": `Revocare`
};
var $cd9e2abd0d06c7b4$exports = {};
$cd9e2abd0d06c7b4$exports = {
  "dismiss": `Пропустить`
};
var $45375701f409adf1$exports = {};
$45375701f409adf1$exports = {
  "dismiss": `Zrušiť`
};
var $27fab53a576de9dd$exports = {};
$27fab53a576de9dd$exports = {
  "dismiss": `Opusti`
};
var $4438748d9952e7c7$exports = {};
$4438748d9952e7c7$exports = {
  "dismiss": `Odbaci`
};
var $0936d7347ef4da4c$exports = {};
$0936d7347ef4da4c$exports = {
  "dismiss": `Avvisa`
};
var $29700c92185d38f8$exports = {};
$29700c92185d38f8$exports = {
  "dismiss": `Kapat`
};
var $662ccaf2be4c25b3$exports = {};
$662ccaf2be4c25b3$exports = {
  "dismiss": `Скасувати`
};
var $d80a27deda7cdb3c$exports = {};
$d80a27deda7cdb3c$exports = {
  "dismiss": `取消`
};
var $2b2734393847c884$exports = {};
$2b2734393847c884$exports = {
  "dismiss": `關閉`
};
var $a2f21f5f14f60553$exports = {};
$a2f21f5f14f60553$exports = {
  "ar-AE": $773d5888b972f1cf$exports,
  "bg-BG": $d11f19852b941573$exports,
  "cs-CZ": $b983974c2ee1efb3$exports,
  "da-DK": $5809cc9d4e92de73$exports,
  "de-DE": $c68c2e4fc74398d1$exports,
  "el-GR": $0898b4c153db2b77$exports,
  "en-US": $6d74810286a15183$exports,
  "es-ES": $309d73dc65f78055$exports,
  "et-EE": $44ad94f7205cf593$exports,
  "fi-FI": $7c28f5687f0779a9$exports,
  "fr-FR": $e6d75df4b68bd73a$exports,
  "he-IL": $87505c9dab186d0f$exports,
  "hr-HR": $553439c3ffb3e492$exports,
  "hu-HU": $74cf411061b983a2$exports,
  "it-IT": $e933f298574dc435$exports,
  "ja-JP": $ac91fc9fe02f71f6$exports,
  "ko-KR": $52b96f86422025af$exports,
  "lt-LT": $c0d724c3e51dafa6$exports,
  "lv-LV": $c92899672a3fe72e$exports,
  "nb-NO": $9f576b39d8e7a9d6$exports,
  "nl-NL": $9d025808aeec81a7$exports,
  "pl-PL": $fce709921e2c0fa6$exports,
  "pt-BR": $2599cf0c4ab37f59$exports,
  "pt-PT": $3c220ae7ef8a35fd$exports,
  "ro-RO": $93562b5094072f54$exports,
  "ru-RU": $cd9e2abd0d06c7b4$exports,
  "sk-SK": $45375701f409adf1$exports,
  "sl-SI": $27fab53a576de9dd$exports,
  "sr-SP": $4438748d9952e7c7$exports,
  "sv-SE": $0936d7347ef4da4c$exports,
  "tr-TR": $29700c92185d38f8$exports,
  "uk-UA": $662ccaf2be4c25b3$exports,
  "zh-CN": $d80a27deda7cdb3c$exports,
  "zh-TW": $2b2734393847c884$exports
};
const $5c3e21d68f1c4674$var$styles = {
  border: 0,
  clip: "rect(0 0 0 0)",
  clipPath: "inset(50%)",
  height: "1px",
  margin: "-1px",
  overflow: "hidden",
  padding: 0,
  position: "absolute",
  width: "1px",
  whiteSpace: "nowrap"
};
function $5c3e21d68f1c4674$export$a966af930f325cab(props = {}) {
  let { style, isFocusable } = props;
  let [isFocused, setFocused] = reactExports.useState(false);
  let { focusWithinProps } = $9ab94262bd0047c7$export$420e68273165f4ec({
    isDisabled: !isFocusable,
    onFocusWithinChange: (val) => setFocused(val)
  });
  let combinedStyles = reactExports.useMemo(() => {
    if (isFocused) return style;
    else if (style) return {
      ...$5c3e21d68f1c4674$var$styles,
      ...style
    };
    else return $5c3e21d68f1c4674$var$styles;
  }, [
    isFocused
  ]);
  return {
    visuallyHiddenProps: {
      ...focusWithinProps,
      style: combinedStyles
    }
  };
}
function $5c3e21d68f1c4674$export$439d29a4e110a164(props) {
  let { children, elementType: Element3 = "div", isFocusable, style, ...otherProps } = props;
  let { visuallyHiddenProps } = $5c3e21d68f1c4674$export$a966af930f325cab(props);
  return /* @__PURE__ */ React$1.createElement(Element3, $3ef42575df84b30b$export$9d1611c77c2fe928(otherProps, visuallyHiddenProps), children);
}
function $parcel$interopDefault$1(a2) {
  return a2 && a2.__esModule ? a2.default : a2;
}
function $86ea4cb521eb2e37$export$2317d149ed6f78c4(props) {
  let { onDismiss, ...otherProps } = props;
  let stringFormatter = $fca6afa0e843324b$export$f12b703ca79dfbb1($parcel$interopDefault$1($a2f21f5f14f60553$exports), "@react-aria/overlays");
  let labels = $313b98861ee5dd6c$export$d6875122194c7b44(otherProps, stringFormatter.format("dismiss"));
  let onClick = () => {
    if (onDismiss) onDismiss();
  };
  return /* @__PURE__ */ React$1.createElement($5c3e21d68f1c4674$export$439d29a4e110a164, null, /* @__PURE__ */ React$1.createElement("button", {
    ...labels,
    tabIndex: -1,
    onClick,
    style: {
      width: 1,
      height: 1
    }
  }));
}
let $5e3802645cc19319$var$refCountMap = /* @__PURE__ */ new WeakMap();
let $5e3802645cc19319$var$observerStack = [];
function $5e3802645cc19319$export$1c3ebcada18427bf(targets, root2 = document.body) {
  let visibleNodes = new Set(targets);
  let hiddenNodes = /* @__PURE__ */ new Set();
  let walk = (root3) => {
    for (let element of root3.querySelectorAll("[data-live-announcer], [data-react-aria-top-layer]")) visibleNodes.add(element);
    let acceptNode = (node) => {
      if (visibleNodes.has(node) || hiddenNodes.has(node.parentElement) && node.parentElement.getAttribute("role") !== "row") return NodeFilter.FILTER_REJECT;
      for (let target of visibleNodes) {
        if (node.contains(target)) return NodeFilter.FILTER_SKIP;
      }
      return NodeFilter.FILTER_ACCEPT;
    };
    let walker = document.createTreeWalker(root3, NodeFilter.SHOW_ELEMENT, {
      acceptNode
    });
    let acceptRoot = acceptNode(root3);
    if (acceptRoot === NodeFilter.FILTER_ACCEPT) hide(root3);
    if (acceptRoot !== NodeFilter.FILTER_REJECT) {
      let node = walker.nextNode();
      while (node != null) {
        hide(node);
        node = walker.nextNode();
      }
    }
  };
  let hide = (node) => {
    var _refCountMap_get;
    let refCount = (_refCountMap_get = $5e3802645cc19319$var$refCountMap.get(node)) !== null && _refCountMap_get !== void 0 ? _refCountMap_get : 0;
    if (node.getAttribute("aria-hidden") === "true" && refCount === 0) return;
    if (refCount === 0) node.setAttribute("aria-hidden", "true");
    hiddenNodes.add(node);
    $5e3802645cc19319$var$refCountMap.set(node, refCount + 1);
  };
  if ($5e3802645cc19319$var$observerStack.length) $5e3802645cc19319$var$observerStack[$5e3802645cc19319$var$observerStack.length - 1].disconnect();
  walk(root2);
  let observer = new MutationObserver((changes) => {
    for (let change of changes) {
      if (change.type !== "childList" || change.addedNodes.length === 0) continue;
      if (![
        ...visibleNodes,
        ...hiddenNodes
      ].some((node) => node.contains(change.target))) {
        for (let node of change.removedNodes) if (node instanceof Element) {
          visibleNodes.delete(node);
          hiddenNodes.delete(node);
        }
        for (let node of change.addedNodes) {
          if ((node instanceof HTMLElement || node instanceof SVGElement) && (node.dataset.liveAnnouncer === "true" || node.dataset.reactAriaTopLayer === "true")) visibleNodes.add(node);
          else if (node instanceof Element) walk(node);
        }
      }
    }
  });
  observer.observe(root2, {
    childList: true,
    subtree: true
  });
  let observerWrapper = {
    observe() {
      observer.observe(root2, {
        childList: true,
        subtree: true
      });
    },
    disconnect() {
      observer.disconnect();
    }
  };
  $5e3802645cc19319$var$observerStack.push(observerWrapper);
  return () => {
    observer.disconnect();
    for (let node of hiddenNodes) {
      let count = $5e3802645cc19319$var$refCountMap.get(node);
      if (count === 1) {
        node.removeAttribute("aria-hidden");
        $5e3802645cc19319$var$refCountMap.delete(node);
      } else $5e3802645cc19319$var$refCountMap.set(node, count - 1);
    }
    if (observerWrapper === $5e3802645cc19319$var$observerStack[$5e3802645cc19319$var$observerStack.length - 1]) {
      $5e3802645cc19319$var$observerStack.pop();
      if ($5e3802645cc19319$var$observerStack.length) $5e3802645cc19319$var$observerStack[$5e3802645cc19319$var$observerStack.length - 1].observe();
    } else $5e3802645cc19319$var$observerStack.splice($5e3802645cc19319$var$observerStack.indexOf(observerWrapper), 1);
  };
}
const $96b38030c423d352$export$60d741e20e0aa309 = /* @__PURE__ */ reactExports.createContext({});
function $96b38030c423d352$export$574e9b0fb070c3b0() {
  var _useContext;
  return (_useContext = reactExports.useContext($96b38030c423d352$export$60d741e20e0aa309)) !== null && _useContext !== void 0 ? _useContext : {};
}
const $337b884510726a0d$export$a2200b96afd16271 = /* @__PURE__ */ React$1.createContext(null);
function $337b884510726a0d$export$c6fdb837b070b4ff(props) {
  let isSSR = $b5e257d569688ac6$export$535bd6ca7f90a273();
  let { portalContainer = isSSR ? null : document.body, isExiting } = props;
  let [contain, setContain] = reactExports.useState(false);
  let contextValue = reactExports.useMemo(() => ({
    contain,
    setContain
  }), [
    contain,
    setContain
  ]);
  let { getContainer } = $96b38030c423d352$export$574e9b0fb070c3b0();
  if (!props.portalContainer && getContainer) portalContainer = getContainer();
  if (!portalContainer) return null;
  let contents = props.children;
  if (!props.disableFocusManagement) contents = /* @__PURE__ */ React$1.createElement($9bf71ea28793e738$export$20e40289641fbbb6, {
    restoreFocus: true,
    contain: contain && !isExiting
  }, contents);
  contents = /* @__PURE__ */ React$1.createElement($337b884510726a0d$export$a2200b96afd16271.Provider, {
    value: contextValue
  }, /* @__PURE__ */ React$1.createElement($f1ab8c75478c6f73$export$cf75428e0b9ed1ea, null, contents));
  return /* @__PURE__ */ $1CM7W$reactdom.createPortal(contents, portalContainer);
}
function $337b884510726a0d$export$14c98a7594375490() {
  let ctx = reactExports.useContext($337b884510726a0d$export$a2200b96afd16271);
  let setContain = ctx === null || ctx === void 0 ? void 0 : ctx.setContain;
  $f0a04ccd8dbdd83b$export$e5c5a5f917a5871c(() => {
    setContain === null || setContain === void 0 ? void 0 : setContain(true);
  }, [
    setContain
  ]);
}
function createDOMMotionComponentProxy(componentFactory) {
  if (typeof Proxy === "undefined") {
    return componentFactory;
  }
  const componentCache = /* @__PURE__ */ new Map();
  const deprecatedFactoryFunction = (...args) => {
    return componentFactory(...args);
  };
  return new Proxy(deprecatedFactoryFunction, {
    /**
     * Called when `motion` is referenced with a prop: `motion.div`, `motion.input` etc.
     * The prop name is passed through as `key` and we can use that to generate a `motion`
     * DOM component with that name.
     */
    get: (_target, key) => {
      if (key === "create")
        return componentFactory;
      if (!componentCache.has(key)) {
        componentCache.set(key, componentFactory(key));
      }
      return componentCache.get(key);
    }
  });
}
function isAnimationControls(v2) {
  return v2 !== null && typeof v2 === "object" && typeof v2.start === "function";
}
const isKeyframesTarget = (v2) => {
  return Array.isArray(v2);
};
function shallowCompare(next, prev) {
  if (!Array.isArray(prev))
    return false;
  const prevLength = prev.length;
  if (prevLength !== next.length)
    return false;
  for (let i = 0; i < prevLength; i++) {
    if (prev[i] !== next[i])
      return false;
  }
  return true;
}
function isVariantLabel(v2) {
  return typeof v2 === "string" || Array.isArray(v2);
}
function getValueState(visualElement) {
  const state = [{}, {}];
  visualElement === null || visualElement === void 0 ? void 0 : visualElement.values.forEach((value, key) => {
    state[0][key] = value.get();
    state[1][key] = value.getVelocity();
  });
  return state;
}
function resolveVariantFromProps(props, definition, custom, visualElement) {
  if (typeof definition === "function") {
    const [current, velocity] = getValueState(visualElement);
    definition = definition(custom !== void 0 ? custom : props.custom, current, velocity);
  }
  if (typeof definition === "string") {
    definition = props.variants && props.variants[definition];
  }
  if (typeof definition === "function") {
    const [current, velocity] = getValueState(visualElement);
    definition = definition(custom !== void 0 ? custom : props.custom, current, velocity);
  }
  return definition;
}
function resolveVariant(visualElement, definition, custom) {
  const props = visualElement.getProps();
  return resolveVariantFromProps(props, definition, custom !== void 0 ? custom : props.custom, visualElement);
}
const variantPriorityOrder = [
  "animate",
  "whileInView",
  "whileFocus",
  "whileHover",
  "whileTap",
  "whileDrag",
  "exit"
];
const variantProps = ["initial", ...variantPriorityOrder];
const transformPropOrder = [
  "transformPerspective",
  "x",
  "y",
  "z",
  "translateX",
  "translateY",
  "translateZ",
  "scale",
  "scaleX",
  "scaleY",
  "rotate",
  "rotateX",
  "rotateY",
  "rotateZ",
  "skew",
  "skewX",
  "skewY"
];
const transformProps = new Set(transformPropOrder);
const secondsToMilliseconds = (seconds) => seconds * 1e3;
const millisecondsToSeconds = (milliseconds) => milliseconds / 1e3;
const underDampedSpring = {
  type: "spring",
  stiffness: 500,
  damping: 25,
  restSpeed: 10
};
const criticallyDampedSpring = (target) => ({
  type: "spring",
  stiffness: 550,
  damping: target === 0 ? 2 * Math.sqrt(550) : 30,
  restSpeed: 10
});
const keyframesTransition = {
  type: "keyframes",
  duration: 0.8
};
const ease = {
  type: "keyframes",
  ease: [0.25, 0.1, 0.35, 1],
  duration: 0.3
};
const getDefaultTransition = (valueKey, { keyframes: keyframes2 }) => {
  if (keyframes2.length > 2) {
    return keyframesTransition;
  } else if (transformProps.has(valueKey)) {
    return valueKey.startsWith("scale") ? criticallyDampedSpring(keyframes2[1]) : underDampedSpring;
  }
  return ease;
};
function getValueTransition(transition, key) {
  return transition[key] || transition["default"] || transition;
}
const MotionGlobalConfig = {
  skipAnimations: false,
  useManualTiming: false
};
const isNotNull = (value) => value !== null;
function getFinalKeyframe(keyframes2, { repeat: repeat2, repeatType = "loop" }, finalKeyframe) {
  const resolvedKeyframes = keyframes2.filter(isNotNull);
  const index = repeat2 && repeatType !== "loop" && repeat2 % 2 === 1 ? 0 : resolvedKeyframes.length - 1;
  return !index || finalKeyframe === void 0 ? resolvedKeyframes[index] : finalKeyframe;
}
const noop = (any) => any;
function createRenderStep(runNextFrame) {
  let thisFrame = /* @__PURE__ */ new Set();
  let nextFrame = /* @__PURE__ */ new Set();
  let isProcessing = false;
  let flushNextFrame = false;
  const toKeepAlive = /* @__PURE__ */ new WeakSet();
  let latestFrameData = {
    delta: 0,
    timestamp: 0,
    isProcessing: false
  };
  function triggerCallback(callback) {
    if (toKeepAlive.has(callback)) {
      step.schedule(callback);
      runNextFrame();
    }
    callback(latestFrameData);
  }
  const step = {
    /**
     * Schedule a process to run on the next frame.
     */
    schedule: (callback, keepAlive = false, immediate = false) => {
      const addToCurrentFrame = immediate && isProcessing;
      const queue = addToCurrentFrame ? thisFrame : nextFrame;
      if (keepAlive)
        toKeepAlive.add(callback);
      if (!queue.has(callback))
        queue.add(callback);
      return callback;
    },
    /**
     * Cancel the provided callback from running on the next frame.
     */
    cancel: (callback) => {
      nextFrame.delete(callback);
      toKeepAlive.delete(callback);
    },
    /**
     * Execute all schedule callbacks.
     */
    process: (frameData2) => {
      latestFrameData = frameData2;
      if (isProcessing) {
        flushNextFrame = true;
        return;
      }
      isProcessing = true;
      [thisFrame, nextFrame] = [nextFrame, thisFrame];
      nextFrame.clear();
      thisFrame.forEach(triggerCallback);
      isProcessing = false;
      if (flushNextFrame) {
        flushNextFrame = false;
        step.process(frameData2);
      }
    }
  };
  return step;
}
const stepsOrder = [
  "read",
  // Read
  "resolveKeyframes",
  // Write/Read/Write/Read
  "update",
  // Compute
  "preRender",
  // Compute
  "render",
  // Write
  "postRender"
  // Compute
];
const maxElapsed = 40;
function createRenderBatcher(scheduleNextBatch, allowKeepAlive) {
  let runNextFrame = false;
  let useDefaultElapsed = true;
  const state = {
    delta: 0,
    timestamp: 0,
    isProcessing: false
  };
  const flagRunNextFrame = () => runNextFrame = true;
  const steps = stepsOrder.reduce((acc, key) => {
    acc[key] = createRenderStep(flagRunNextFrame);
    return acc;
  }, {});
  const { read, resolveKeyframes, update: update2, preRender, render, postRender } = steps;
  const processBatch = () => {
    const timestamp2 = performance.now();
    runNextFrame = false;
    state.delta = useDefaultElapsed ? 1e3 / 60 : Math.max(Math.min(timestamp2 - state.timestamp, maxElapsed), 1);
    state.timestamp = timestamp2;
    state.isProcessing = true;
    read.process(state);
    resolveKeyframes.process(state);
    update2.process(state);
    preRender.process(state);
    render.process(state);
    postRender.process(state);
    state.isProcessing = false;
    if (runNextFrame && allowKeepAlive) {
      useDefaultElapsed = false;
      scheduleNextBatch(processBatch);
    }
  };
  const wake = () => {
    runNextFrame = true;
    useDefaultElapsed = true;
    if (!state.isProcessing) {
      scheduleNextBatch(processBatch);
    }
  };
  const schedule = stepsOrder.reduce((acc, key) => {
    const step = steps[key];
    acc[key] = (process2, keepAlive = false, immediate = false) => {
      if (!runNextFrame)
        wake();
      return step.schedule(process2, keepAlive, immediate);
    };
    return acc;
  }, {});
  const cancel = (process2) => {
    for (let i = 0; i < stepsOrder.length; i++) {
      steps[stepsOrder[i]].cancel(process2);
    }
  };
  return { schedule, cancel, state, steps };
}
const { schedule: frame, cancel: cancelFrame$1, state: frameData, steps: frameSteps } = createRenderBatcher(typeof requestAnimationFrame !== "undefined" ? requestAnimationFrame : noop, true);
const calcBezier = (t2, a1, a2) => (((1 - 3 * a2 + 3 * a1) * t2 + (3 * a2 - 6 * a1)) * t2 + 3 * a1) * t2;
const subdivisionPrecision = 1e-7;
const subdivisionMaxIterations = 12;
function binarySubdivide(x2, lowerBound, upperBound, mX1, mX2) {
  let currentX;
  let currentT;
  let i = 0;
  do {
    currentT = lowerBound + (upperBound - lowerBound) / 2;
    currentX = calcBezier(currentT, mX1, mX2) - x2;
    if (currentX > 0) {
      upperBound = currentT;
    } else {
      lowerBound = currentT;
    }
  } while (Math.abs(currentX) > subdivisionPrecision && ++i < subdivisionMaxIterations);
  return currentT;
}
function cubicBezier(mX1, mY1, mX2, mY2) {
  if (mX1 === mY1 && mX2 === mY2)
    return noop;
  const getTForX = (aX) => binarySubdivide(aX, 0, 1, mX1, mX2);
  return (t2) => t2 === 0 || t2 === 1 ? t2 : calcBezier(getTForX(t2), mY1, mY2);
}
const mirrorEasing = (easing) => (p2) => p2 <= 0.5 ? easing(2 * p2) / 2 : (2 - easing(2 * (1 - p2))) / 2;
const reverseEasing = (easing) => (p2) => 1 - easing(1 - p2);
const backOut = /* @__PURE__ */ cubicBezier(0.33, 1.53, 0.69, 0.99);
const backIn = /* @__PURE__ */ reverseEasing(backOut);
const backInOut = /* @__PURE__ */ mirrorEasing(backIn);
const anticipate = (p2) => (p2 *= 2) < 1 ? 0.5 * backIn(p2) : 0.5 * (2 - Math.pow(2, -10 * (p2 - 1)));
const circIn = (p2) => 1 - Math.sin(Math.acos(p2));
const circOut = reverseEasing(circIn);
const circInOut = mirrorEasing(circIn);
const isZeroValueString = (v2) => /^0[^.\s]+$/u.test(v2);
function isNone(value) {
  if (typeof value === "number") {
    return value === 0;
  } else if (value !== null) {
    return value === "none" || value === "0" || isZeroValueString(value);
  } else {
    return true;
  }
}
let invariant$1 = noop;
const isNumericalString = (v2) => /^-?(?:\d+(?:\.\d+)?|\.\d+)$/u.test(v2);
const checkStringStartsWith = (token) => (key) => typeof key === "string" && key.startsWith(token);
const isCSSVariableName = /* @__PURE__ */ checkStringStartsWith("--");
const startsAsVariableToken = /* @__PURE__ */ checkStringStartsWith("var(--");
const isCSSVariableToken = (value) => {
  const startsWithToken = startsAsVariableToken(value);
  if (!startsWithToken)
    return false;
  return singleCssVariableRegex.test(value.split("/*")[0].trim());
};
const singleCssVariableRegex = /var\(--(?:[\w-]+\s*|[\w-]+\s*,(?:\s*[^)(\s]|\s*\((?:[^)(]|\([^)(]*\))*\))+\s*)\)$/iu;
const splitCSSVariableRegex = (
  // eslint-disable-next-line redos-detector/no-unsafe-regex -- false positive, as it can match a lot of words
  /^var\(--(?:([\w-]+)|([\w-]+), ?([a-zA-Z\d ()%#.,-]+))\)/u
);
function parseCSSVariable(current) {
  const match = splitCSSVariableRegex.exec(current);
  if (!match)
    return [,];
  const [, token1, token2, fallback] = match;
  return [`--${token1 !== null && token1 !== void 0 ? token1 : token2}`, fallback];
}
function getVariableValue(current, element, depth = 1) {
  const [token, fallback] = parseCSSVariable(current);
  if (!token)
    return;
  const resolved = window.getComputedStyle(element).getPropertyValue(token);
  if (resolved) {
    const trimmed = resolved.trim();
    return isNumericalString(trimmed) ? parseFloat(trimmed) : trimmed;
  }
  return isCSSVariableToken(fallback) ? getVariableValue(fallback, element, depth + 1) : fallback;
}
const clamp = (min, max, v2) => {
  if (v2 > max)
    return max;
  if (v2 < min)
    return min;
  return v2;
};
const number = {
  test: (v2) => typeof v2 === "number",
  parse: parseFloat,
  transform: (v2) => v2
};
const alpha = {
  ...number,
  transform: (v2) => clamp(0, 1, v2)
};
const scale = {
  ...number,
  default: 1
};
const createUnitType = (unit) => ({
  test: (v2) => typeof v2 === "string" && v2.endsWith(unit) && v2.split(" ").length === 1,
  parse: parseFloat,
  transform: (v2) => `${v2}${unit}`
});
const degrees = /* @__PURE__ */ createUnitType("deg");
const percent = /* @__PURE__ */ createUnitType("%");
const px = /* @__PURE__ */ createUnitType("px");
const vh = /* @__PURE__ */ createUnitType("vh");
const vw = /* @__PURE__ */ createUnitType("vw");
const progressPercentage = {
  ...percent,
  parse: (v2) => percent.parse(v2) / 100,
  transform: (v2) => percent.transform(v2 * 100)
};
const positionalKeys = /* @__PURE__ */ new Set([
  "width",
  "height",
  "top",
  "left",
  "right",
  "bottom",
  "x",
  "y",
  "translateX",
  "translateY"
]);
const isNumOrPxType = (v2) => v2 === number || v2 === px;
const getPosFromMatrix = (matrix, pos) => parseFloat(matrix.split(", ")[pos]);
const getTranslateFromMatrix = (pos2, pos3) => (_bbox, { transform }) => {
  if (transform === "none" || !transform)
    return 0;
  const matrix3d = transform.match(/^matrix3d\((.+)\)$/u);
  if (matrix3d) {
    return getPosFromMatrix(matrix3d[1], pos3);
  } else {
    const matrix = transform.match(/^matrix\((.+)\)$/u);
    if (matrix) {
      return getPosFromMatrix(matrix[1], pos2);
    } else {
      return 0;
    }
  }
};
const transformKeys = /* @__PURE__ */ new Set(["x", "y", "z"]);
const nonTranslationalTransformKeys = transformPropOrder.filter((key) => !transformKeys.has(key));
function removeNonTranslationalTransform(visualElement) {
  const removedTransforms = [];
  nonTranslationalTransformKeys.forEach((key) => {
    const value = visualElement.getValue(key);
    if (value !== void 0) {
      removedTransforms.push([key, value.get()]);
      value.set(key.startsWith("scale") ? 1 : 0);
    }
  });
  return removedTransforms;
}
const positionalValues = {
  // Dimensions
  width: ({ x: x2 }, { paddingLeft = "0", paddingRight = "0" }) => x2.max - x2.min - parseFloat(paddingLeft) - parseFloat(paddingRight),
  height: ({ y: y2 }, { paddingTop = "0", paddingBottom = "0" }) => y2.max - y2.min - parseFloat(paddingTop) - parseFloat(paddingBottom),
  top: (_bbox, { top }) => parseFloat(top),
  left: (_bbox, { left }) => parseFloat(left),
  bottom: ({ y: y2 }, { top }) => parseFloat(top) + (y2.max - y2.min),
  right: ({ x: x2 }, { left }) => parseFloat(left) + (x2.max - x2.min),
  // Transform
  x: getTranslateFromMatrix(4, 13),
  y: getTranslateFromMatrix(5, 14)
};
positionalValues.translateX = positionalValues.x;
positionalValues.translateY = positionalValues.y;
const testValueType = (v2) => (type2) => type2.test(v2);
const auto = {
  test: (v2) => v2 === "auto",
  parse: (v2) => v2
};
const dimensionValueTypes = [number, px, percent, degrees, vw, vh, auto];
const findDimensionValueType = (v2) => dimensionValueTypes.find(testValueType(v2));
const toResolve = /* @__PURE__ */ new Set();
let isScheduled = false;
let anyNeedsMeasurement = false;
function measureAllKeyframes() {
  if (anyNeedsMeasurement) {
    const resolversToMeasure = Array.from(toResolve).filter((resolver) => resolver.needsMeasurement);
    const elementsToMeasure = new Set(resolversToMeasure.map((resolver) => resolver.element));
    const transformsToRestore = /* @__PURE__ */ new Map();
    elementsToMeasure.forEach((element) => {
      const removedTransforms = removeNonTranslationalTransform(element);
      if (!removedTransforms.length)
        return;
      transformsToRestore.set(element, removedTransforms);
      element.render();
    });
    resolversToMeasure.forEach((resolver) => resolver.measureInitialState());
    elementsToMeasure.forEach((element) => {
      element.render();
      const restore = transformsToRestore.get(element);
      if (restore) {
        restore.forEach(([key, value]) => {
          var _a;
          (_a = element.getValue(key)) === null || _a === void 0 ? void 0 : _a.set(value);
        });
      }
    });
    resolversToMeasure.forEach((resolver) => resolver.measureEndState());
    resolversToMeasure.forEach((resolver) => {
      if (resolver.suspendedScrollY !== void 0) {
        window.scrollTo(0, resolver.suspendedScrollY);
      }
    });
  }
  anyNeedsMeasurement = false;
  isScheduled = false;
  toResolve.forEach((resolver) => resolver.complete());
  toResolve.clear();
}
function readAllKeyframes() {
  toResolve.forEach((resolver) => {
    resolver.readKeyframes();
    if (resolver.needsMeasurement) {
      anyNeedsMeasurement = true;
    }
  });
}
function flushKeyframeResolvers() {
  readAllKeyframes();
  measureAllKeyframes();
}
class KeyframeResolver {
  constructor(unresolvedKeyframes, onComplete, name, motionValue2, element, isAsync = false) {
    this.isComplete = false;
    this.isAsync = false;
    this.needsMeasurement = false;
    this.isScheduled = false;
    this.unresolvedKeyframes = [...unresolvedKeyframes];
    this.onComplete = onComplete;
    this.name = name;
    this.motionValue = motionValue2;
    this.element = element;
    this.isAsync = isAsync;
  }
  scheduleResolve() {
    this.isScheduled = true;
    if (this.isAsync) {
      toResolve.add(this);
      if (!isScheduled) {
        isScheduled = true;
        frame.read(readAllKeyframes);
        frame.resolveKeyframes(measureAllKeyframes);
      }
    } else {
      this.readKeyframes();
      this.complete();
    }
  }
  readKeyframes() {
    const { unresolvedKeyframes, name, element, motionValue: motionValue2 } = this;
    for (let i = 0; i < unresolvedKeyframes.length; i++) {
      if (unresolvedKeyframes[i] === null) {
        if (i === 0) {
          const currentValue = motionValue2 === null || motionValue2 === void 0 ? void 0 : motionValue2.get();
          const finalKeyframe = unresolvedKeyframes[unresolvedKeyframes.length - 1];
          if (currentValue !== void 0) {
            unresolvedKeyframes[0] = currentValue;
          } else if (element && name) {
            const valueAsRead = element.readValue(name, finalKeyframe);
            if (valueAsRead !== void 0 && valueAsRead !== null) {
              unresolvedKeyframes[0] = valueAsRead;
            }
          }
          if (unresolvedKeyframes[0] === void 0) {
            unresolvedKeyframes[0] = finalKeyframe;
          }
          if (motionValue2 && currentValue === void 0) {
            motionValue2.set(unresolvedKeyframes[0]);
          }
        } else {
          unresolvedKeyframes[i] = unresolvedKeyframes[i - 1];
        }
      }
    }
  }
  setFinalKeyframe() {
  }
  measureInitialState() {
  }
  renderEndStyles() {
  }
  measureEndState() {
  }
  complete() {
    this.isComplete = true;
    this.onComplete(this.unresolvedKeyframes, this.finalKeyframe);
    toResolve.delete(this);
  }
  cancel() {
    if (!this.isComplete) {
      this.isScheduled = false;
      toResolve.delete(this);
    }
  }
  resume() {
    if (!this.isComplete)
      this.scheduleResolve();
  }
}
const sanitize = (v2) => Math.round(v2 * 1e5) / 1e5;
const floatRegex = /-?(?:\d+(?:\.\d+)?|\.\d+)/gu;
function isNullish(v2) {
  return v2 == null;
}
const singleColorRegex = /^(?:#[\da-f]{3,8}|(?:rgb|hsl)a?\((?:-?[\d.]+%?[,\s]+){2}-?[\d.]+%?\s*(?:[,/]\s*)?(?:\b\d+(?:\.\d+)?|\.\d+)?%?\))$/iu;
const isColorString = (type2, testProp) => (v2) => {
  return Boolean(typeof v2 === "string" && singleColorRegex.test(v2) && v2.startsWith(type2) || testProp && !isNullish(v2) && Object.prototype.hasOwnProperty.call(v2, testProp));
};
const splitColor = (aName, bName, cName) => (v2) => {
  if (typeof v2 !== "string")
    return v2;
  const [a2, b, c, alpha2] = v2.match(floatRegex);
  return {
    [aName]: parseFloat(a2),
    [bName]: parseFloat(b),
    [cName]: parseFloat(c),
    alpha: alpha2 !== void 0 ? parseFloat(alpha2) : 1
  };
};
const clampRgbUnit = (v2) => clamp(0, 255, v2);
const rgbUnit = {
  ...number,
  transform: (v2) => Math.round(clampRgbUnit(v2))
};
const rgba = {
  test: /* @__PURE__ */ isColorString("rgb", "red"),
  parse: /* @__PURE__ */ splitColor("red", "green", "blue"),
  transform: ({ red, green, blue, alpha: alpha$1 = 1 }) => "rgba(" + rgbUnit.transform(red) + ", " + rgbUnit.transform(green) + ", " + rgbUnit.transform(blue) + ", " + sanitize(alpha.transform(alpha$1)) + ")"
};
function parseHex(v2) {
  let r2 = "";
  let g2 = "";
  let b = "";
  let a2 = "";
  if (v2.length > 5) {
    r2 = v2.substring(1, 3);
    g2 = v2.substring(3, 5);
    b = v2.substring(5, 7);
    a2 = v2.substring(7, 9);
  } else {
    r2 = v2.substring(1, 2);
    g2 = v2.substring(2, 3);
    b = v2.substring(3, 4);
    a2 = v2.substring(4, 5);
    r2 += r2;
    g2 += g2;
    b += b;
    a2 += a2;
  }
  return {
    red: parseInt(r2, 16),
    green: parseInt(g2, 16),
    blue: parseInt(b, 16),
    alpha: a2 ? parseInt(a2, 16) / 255 : 1
  };
}
const hex = {
  test: /* @__PURE__ */ isColorString("#"),
  parse: parseHex,
  transform: rgba.transform
};
const hsla = {
  test: /* @__PURE__ */ isColorString("hsl", "hue"),
  parse: /* @__PURE__ */ splitColor("hue", "saturation", "lightness"),
  transform: ({ hue, saturation, lightness, alpha: alpha$1 = 1 }) => {
    return "hsla(" + Math.round(hue) + ", " + percent.transform(sanitize(saturation)) + ", " + percent.transform(sanitize(lightness)) + ", " + sanitize(alpha.transform(alpha$1)) + ")";
  }
};
const color = {
  test: (v2) => rgba.test(v2) || hex.test(v2) || hsla.test(v2),
  parse: (v2) => {
    if (rgba.test(v2)) {
      return rgba.parse(v2);
    } else if (hsla.test(v2)) {
      return hsla.parse(v2);
    } else {
      return hex.parse(v2);
    }
  },
  transform: (v2) => {
    return typeof v2 === "string" ? v2 : v2.hasOwnProperty("red") ? rgba.transform(v2) : hsla.transform(v2);
  }
};
const colorRegex = /(?:#[\da-f]{3,8}|(?:rgb|hsl)a?\((?:-?[\d.]+%?[,\s]+){2}-?[\d.]+%?\s*(?:[,/]\s*)?(?:\b\d+(?:\.\d+)?|\.\d+)?%?\))/giu;
function test(v2) {
  var _a, _b;
  return isNaN(v2) && typeof v2 === "string" && (((_a = v2.match(floatRegex)) === null || _a === void 0 ? void 0 : _a.length) || 0) + (((_b = v2.match(colorRegex)) === null || _b === void 0 ? void 0 : _b.length) || 0) > 0;
}
const NUMBER_TOKEN = "number";
const COLOR_TOKEN = "color";
const VAR_TOKEN = "var";
const VAR_FUNCTION_TOKEN = "var(";
const SPLIT_TOKEN = "${}";
const complexRegex = /var\s*\(\s*--(?:[\w-]+\s*|[\w-]+\s*,(?:\s*[^)(\s]|\s*\((?:[^)(]|\([^)(]*\))*\))+\s*)\)|#[\da-f]{3,8}|(?:rgb|hsl)a?\((?:-?[\d.]+%?[,\s]+){2}-?[\d.]+%?\s*(?:[,/]\s*)?(?:\b\d+(?:\.\d+)?|\.\d+)?%?\)|-?(?:\d+(?:\.\d+)?|\.\d+)/giu;
function analyseComplexValue(value) {
  const originalValue = value.toString();
  const values = [];
  const indexes = {
    color: [],
    number: [],
    var: []
  };
  const types = [];
  let i = 0;
  const tokenised = originalValue.replace(complexRegex, (parsedValue) => {
    if (color.test(parsedValue)) {
      indexes.color.push(i);
      types.push(COLOR_TOKEN);
      values.push(color.parse(parsedValue));
    } else if (parsedValue.startsWith(VAR_FUNCTION_TOKEN)) {
      indexes.var.push(i);
      types.push(VAR_TOKEN);
      values.push(parsedValue);
    } else {
      indexes.number.push(i);
      types.push(NUMBER_TOKEN);
      values.push(parseFloat(parsedValue));
    }
    ++i;
    return SPLIT_TOKEN;
  });
  const split = tokenised.split(SPLIT_TOKEN);
  return { values, split, indexes, types };
}
function parseComplexValue(v2) {
  return analyseComplexValue(v2).values;
}
function createTransformer(source) {
  const { split, types } = analyseComplexValue(source);
  const numSections = split.length;
  return (v2) => {
    let output = "";
    for (let i = 0; i < numSections; i++) {
      output += split[i];
      if (v2[i] !== void 0) {
        const type2 = types[i];
        if (type2 === NUMBER_TOKEN) {
          output += sanitize(v2[i]);
        } else if (type2 === COLOR_TOKEN) {
          output += color.transform(v2[i]);
        } else {
          output += v2[i];
        }
      }
    }
    return output;
  };
}
const convertNumbersToZero = (v2) => typeof v2 === "number" ? 0 : v2;
function getAnimatableNone$1(v2) {
  const parsed = parseComplexValue(v2);
  const transformer = createTransformer(v2);
  return transformer(parsed.map(convertNumbersToZero));
}
const complex = {
  test,
  parse: parseComplexValue,
  createTransformer,
  getAnimatableNone: getAnimatableNone$1
};
const maxDefaults = /* @__PURE__ */ new Set(["brightness", "contrast", "saturate", "opacity"]);
function applyDefaultFilter(v2) {
  const [name, value] = v2.slice(0, -1).split("(");
  if (name === "drop-shadow")
    return v2;
  const [number2] = value.match(floatRegex) || [];
  if (!number2)
    return v2;
  const unit = value.replace(number2, "");
  let defaultValue = maxDefaults.has(name) ? 1 : 0;
  if (number2 !== value)
    defaultValue *= 100;
  return name + "(" + defaultValue + unit + ")";
}
const functionRegex = /\b([a-z-]*)\(.*?\)/gu;
const filter = {
  ...complex,
  getAnimatableNone: (v2) => {
    const functions = v2.match(functionRegex);
    return functions ? functions.map(applyDefaultFilter).join(" ") : v2;
  }
};
const browserNumberValueTypes = {
  // Border props
  borderWidth: px,
  borderTopWidth: px,
  borderRightWidth: px,
  borderBottomWidth: px,
  borderLeftWidth: px,
  borderRadius: px,
  radius: px,
  borderTopLeftRadius: px,
  borderTopRightRadius: px,
  borderBottomRightRadius: px,
  borderBottomLeftRadius: px,
  // Positioning props
  width: px,
  maxWidth: px,
  height: px,
  maxHeight: px,
  top: px,
  right: px,
  bottom: px,
  left: px,
  // Spacing props
  padding: px,
  paddingTop: px,
  paddingRight: px,
  paddingBottom: px,
  paddingLeft: px,
  margin: px,
  marginTop: px,
  marginRight: px,
  marginBottom: px,
  marginLeft: px,
  // Misc
  backgroundPositionX: px,
  backgroundPositionY: px
};
const transformValueTypes = {
  rotate: degrees,
  rotateX: degrees,
  rotateY: degrees,
  rotateZ: degrees,
  scale,
  scaleX: scale,
  scaleY: scale,
  scaleZ: scale,
  skew: degrees,
  skewX: degrees,
  skewY: degrees,
  distance: px,
  translateX: px,
  translateY: px,
  translateZ: px,
  x: px,
  y: px,
  z: px,
  perspective: px,
  transformPerspective: px,
  opacity: alpha,
  originX: progressPercentage,
  originY: progressPercentage,
  originZ: px
};
const int$1 = {
  ...number,
  transform: Math.round
};
const numberValueTypes = {
  ...browserNumberValueTypes,
  ...transformValueTypes,
  zIndex: int$1,
  size: px,
  // SVG
  fillOpacity: alpha,
  strokeOpacity: alpha,
  numOctaves: int$1
};
const defaultValueTypes = {
  ...numberValueTypes,
  // Color props
  color,
  backgroundColor: color,
  outlineColor: color,
  fill: color,
  stroke: color,
  // Border props
  borderColor: color,
  borderTopColor: color,
  borderRightColor: color,
  borderBottomColor: color,
  borderLeftColor: color,
  filter,
  WebkitFilter: filter
};
const getDefaultValueType = (key) => defaultValueTypes[key];
function getAnimatableNone(key, value) {
  let defaultValueType = getDefaultValueType(key);
  if (defaultValueType !== filter)
    defaultValueType = complex;
  return defaultValueType.getAnimatableNone ? defaultValueType.getAnimatableNone(value) : void 0;
}
const invalidTemplates = /* @__PURE__ */ new Set(["auto", "none", "0"]);
function makeNoneKeyframesAnimatable(unresolvedKeyframes, noneKeyframeIndexes, name) {
  let i = 0;
  let animatableTemplate = void 0;
  while (i < unresolvedKeyframes.length && !animatableTemplate) {
    const keyframe = unresolvedKeyframes[i];
    if (typeof keyframe === "string" && !invalidTemplates.has(keyframe) && analyseComplexValue(keyframe).values.length) {
      animatableTemplate = unresolvedKeyframes[i];
    }
    i++;
  }
  if (animatableTemplate && name) {
    for (const noneIndex of noneKeyframeIndexes) {
      unresolvedKeyframes[noneIndex] = getAnimatableNone(name, animatableTemplate);
    }
  }
}
class DOMKeyframesResolver extends KeyframeResolver {
  constructor(unresolvedKeyframes, onComplete, name, motionValue2, element) {
    super(unresolvedKeyframes, onComplete, name, motionValue2, element, true);
  }
  readKeyframes() {
    const { unresolvedKeyframes, element, name } = this;
    if (!element || !element.current)
      return;
    super.readKeyframes();
    for (let i = 0; i < unresolvedKeyframes.length; i++) {
      let keyframe = unresolvedKeyframes[i];
      if (typeof keyframe === "string") {
        keyframe = keyframe.trim();
        if (isCSSVariableToken(keyframe)) {
          const resolved = getVariableValue(keyframe, element.current);
          if (resolved !== void 0) {
            unresolvedKeyframes[i] = resolved;
          }
          if (i === unresolvedKeyframes.length - 1) {
            this.finalKeyframe = keyframe;
          }
        }
      }
    }
    this.resolveNoneKeyframes();
    if (!positionalKeys.has(name) || unresolvedKeyframes.length !== 2) {
      return;
    }
    const [origin, target] = unresolvedKeyframes;
    const originType = findDimensionValueType(origin);
    const targetType = findDimensionValueType(target);
    if (originType === targetType)
      return;
    if (isNumOrPxType(originType) && isNumOrPxType(targetType)) {
      for (let i = 0; i < unresolvedKeyframes.length; i++) {
        const value = unresolvedKeyframes[i];
        if (typeof value === "string") {
          unresolvedKeyframes[i] = parseFloat(value);
        }
      }
    } else {
      this.needsMeasurement = true;
    }
  }
  resolveNoneKeyframes() {
    const { unresolvedKeyframes, name } = this;
    const noneKeyframeIndexes = [];
    for (let i = 0; i < unresolvedKeyframes.length; i++) {
      if (isNone(unresolvedKeyframes[i])) {
        noneKeyframeIndexes.push(i);
      }
    }
    if (noneKeyframeIndexes.length) {
      makeNoneKeyframesAnimatable(unresolvedKeyframes, noneKeyframeIndexes, name);
    }
  }
  measureInitialState() {
    const { element, unresolvedKeyframes, name } = this;
    if (!element || !element.current)
      return;
    if (name === "height") {
      this.suspendedScrollY = window.pageYOffset;
    }
    this.measuredOrigin = positionalValues[name](element.measureViewportBox(), window.getComputedStyle(element.current));
    unresolvedKeyframes[0] = this.measuredOrigin;
    const measureKeyframe = unresolvedKeyframes[unresolvedKeyframes.length - 1];
    if (measureKeyframe !== void 0) {
      element.getValue(name, measureKeyframe).jump(measureKeyframe, false);
    }
  }
  measureEndState() {
    var _a;
    const { element, name, unresolvedKeyframes } = this;
    if (!element || !element.current)
      return;
    const value = element.getValue(name);
    value && value.jump(this.measuredOrigin, false);
    const finalKeyframeIndex = unresolvedKeyframes.length - 1;
    const finalKeyframe = unresolvedKeyframes[finalKeyframeIndex];
    unresolvedKeyframes[finalKeyframeIndex] = positionalValues[name](element.measureViewportBox(), window.getComputedStyle(element.current));
    if (finalKeyframe !== null && this.finalKeyframe === void 0) {
      this.finalKeyframe = finalKeyframe;
    }
    if ((_a = this.removedTransforms) === null || _a === void 0 ? void 0 : _a.length) {
      this.removedTransforms.forEach(([unsetTransformName, unsetTransformValue]) => {
        element.getValue(unsetTransformName).set(unsetTransformValue);
      });
    }
    this.resolveNoneKeyframes();
  }
}
function isGenerator(type2) {
  return typeof type2 === "function";
}
let now$2;
function clearTime() {
  now$2 = void 0;
}
const time = {
  now: () => {
    if (now$2 === void 0) {
      time.set(frameData.isProcessing || MotionGlobalConfig.useManualTiming ? frameData.timestamp : performance.now());
    }
    return now$2;
  },
  set: (newTime) => {
    now$2 = newTime;
    queueMicrotask(clearTime);
  }
};
const isAnimatable = (value, name) => {
  if (name === "zIndex")
    return false;
  if (typeof value === "number" || Array.isArray(value))
    return true;
  if (typeof value === "string" && // It's animatable if we have a string
  (complex.test(value) || value === "0") && // And it contains numbers and/or colors
  !value.startsWith("url(")) {
    return true;
  }
  return false;
};
function hasKeyframesChanged(keyframes2) {
  const current = keyframes2[0];
  if (keyframes2.length === 1)
    return true;
  for (let i = 0; i < keyframes2.length; i++) {
    if (keyframes2[i] !== current)
      return true;
  }
}
function canAnimate(keyframes2, name, type2, velocity) {
  const originKeyframe = keyframes2[0];
  if (originKeyframe === null)
    return false;
  if (name === "display" || name === "visibility")
    return true;
  const targetKeyframe = keyframes2[keyframes2.length - 1];
  const isOriginAnimatable = isAnimatable(originKeyframe, name);
  const isTargetAnimatable = isAnimatable(targetKeyframe, name);
  if (!isOriginAnimatable || !isTargetAnimatable) {
    return false;
  }
  return hasKeyframesChanged(keyframes2) || (type2 === "spring" || isGenerator(type2)) && velocity;
}
const MAX_RESOLVE_DELAY = 40;
class BaseAnimation {
  constructor({ autoplay = true, delay = 0, type: type2 = "keyframes", repeat: repeat2 = 0, repeatDelay = 0, repeatType = "loop", ...options }) {
    this.isStopped = false;
    this.hasAttemptedResolve = false;
    this.createdAt = time.now();
    this.options = {
      autoplay,
      delay,
      type: type2,
      repeat: repeat2,
      repeatDelay,
      repeatType,
      ...options
    };
    this.updateFinishedPromise();
  }
  /**
   * This method uses the createdAt and resolvedAt to calculate the
   * animation startTime. *Ideally*, we would use the createdAt time as t=0
   * as the following frame would then be the first frame of the animation in
   * progress, which would feel snappier.
   *
   * However, if there's a delay (main thread work) between the creation of
   * the animation and the first commited frame, we prefer to use resolvedAt
   * to avoid a sudden jump into the animation.
   */
  calcStartTime() {
    if (!this.resolvedAt)
      return this.createdAt;
    return this.resolvedAt - this.createdAt > MAX_RESOLVE_DELAY ? this.resolvedAt : this.createdAt;
  }
  /**
   * A getter for resolved data. If keyframes are not yet resolved, accessing
   * this.resolved will synchronously flush all pending keyframe resolvers.
   * This is a deoptimisation, but at its worst still batches read/writes.
   */
  get resolved() {
    if (!this._resolved && !this.hasAttemptedResolve) {
      flushKeyframeResolvers();
    }
    return this._resolved;
  }
  /**
   * A method to be called when the keyframes resolver completes. This method
   * will check if its possible to run the animation and, if not, skip it.
   * Otherwise, it will call initPlayback on the implementing class.
   */
  onKeyframesResolved(keyframes2, finalKeyframe) {
    this.resolvedAt = time.now();
    this.hasAttemptedResolve = true;
    const { name, type: type2, velocity, delay, onComplete, onUpdate, isGenerator: isGenerator2 } = this.options;
    if (!isGenerator2 && !canAnimate(keyframes2, name, type2, velocity)) {
      if (!delay) {
        onUpdate === null || onUpdate === void 0 ? void 0 : onUpdate(getFinalKeyframe(keyframes2, this.options, finalKeyframe));
        onComplete === null || onComplete === void 0 ? void 0 : onComplete();
        this.resolveFinishedPromise();
        return;
      } else {
        this.options.duration = 0;
      }
    }
    const resolvedAnimation = this.initPlayback(keyframes2, finalKeyframe);
    if (resolvedAnimation === false)
      return;
    this._resolved = {
      keyframes: keyframes2,
      finalKeyframe,
      ...resolvedAnimation
    };
    this.onPostResolved();
  }
  onPostResolved() {
  }
  /**
   * Allows the returned animation to be awaited or promise-chained. Currently
   * resolves when the animation finishes at all but in a future update could/should
   * reject if its cancels.
   */
  then(resolve, reject) {
    return this.currentFinishedPromise.then(resolve, reject);
  }
  updateFinishedPromise() {
    this.currentFinishedPromise = new Promise((resolve) => {
      this.resolveFinishedPromise = resolve;
    });
  }
}
function velocityPerSecond(velocity, frameDuration) {
  return frameDuration ? velocity * (1e3 / frameDuration) : 0;
}
const velocitySampleDuration = 5;
function calcGeneratorVelocity(resolveValue, t2, current) {
  const prevT = Math.max(t2 - velocitySampleDuration, 0);
  return velocityPerSecond(current - resolveValue(prevT), t2 - prevT);
}
const safeMin = 1e-3;
const minDuration = 0.01;
const maxDuration$1 = 10;
const minDamping = 0.05;
const maxDamping = 1;
function findSpring({ duration = 800, bounce = 0.25, velocity = 0, mass = 1 }) {
  let envelope;
  let derivative;
  let dampingRatio = 1 - bounce;
  dampingRatio = clamp(minDamping, maxDamping, dampingRatio);
  duration = clamp(minDuration, maxDuration$1, millisecondsToSeconds(duration));
  if (dampingRatio < 1) {
    envelope = (undampedFreq2) => {
      const exponentialDecay = undampedFreq2 * dampingRatio;
      const delta = exponentialDecay * duration;
      const a2 = exponentialDecay - velocity;
      const b = calcAngularFreq(undampedFreq2, dampingRatio);
      const c = Math.exp(-delta);
      return safeMin - a2 / b * c;
    };
    derivative = (undampedFreq2) => {
      const exponentialDecay = undampedFreq2 * dampingRatio;
      const delta = exponentialDecay * duration;
      const d = delta * velocity + velocity;
      const e = Math.pow(dampingRatio, 2) * Math.pow(undampedFreq2, 2) * duration;
      const f2 = Math.exp(-delta);
      const g2 = calcAngularFreq(Math.pow(undampedFreq2, 2), dampingRatio);
      const factor = -envelope(undampedFreq2) + safeMin > 0 ? -1 : 1;
      return factor * ((d - e) * f2) / g2;
    };
  } else {
    envelope = (undampedFreq2) => {
      const a2 = Math.exp(-undampedFreq2 * duration);
      const b = (undampedFreq2 - velocity) * duration + 1;
      return -safeMin + a2 * b;
    };
    derivative = (undampedFreq2) => {
      const a2 = Math.exp(-undampedFreq2 * duration);
      const b = (velocity - undampedFreq2) * (duration * duration);
      return a2 * b;
    };
  }
  const initialGuess = 5 / duration;
  const undampedFreq = approximateRoot(envelope, derivative, initialGuess);
  duration = secondsToMilliseconds(duration);
  if (isNaN(undampedFreq)) {
    return {
      stiffness: 100,
      damping: 10,
      duration
    };
  } else {
    const stiffness = Math.pow(undampedFreq, 2) * mass;
    return {
      stiffness,
      damping: dampingRatio * 2 * Math.sqrt(mass * stiffness),
      duration
    };
  }
}
const rootIterations = 12;
function approximateRoot(envelope, derivative, initialGuess) {
  let result = initialGuess;
  for (let i = 1; i < rootIterations; i++) {
    result = result - envelope(result) / derivative(result);
  }
  return result;
}
function calcAngularFreq(undampedFreq, dampingRatio) {
  return undampedFreq * Math.sqrt(1 - dampingRatio * dampingRatio);
}
const durationKeys = ["duration", "bounce"];
const physicsKeys = ["stiffness", "damping", "mass"];
function isSpringType(options, keys2) {
  return keys2.some((key) => options[key] !== void 0);
}
function getSpringOptions(options) {
  let springOptions = {
    velocity: 0,
    stiffness: 100,
    damping: 10,
    mass: 1,
    isResolvedFromDuration: false,
    ...options
  };
  if (!isSpringType(options, physicsKeys) && isSpringType(options, durationKeys)) {
    const derived = findSpring(options);
    springOptions = {
      ...springOptions,
      ...derived,
      mass: 1
    };
    springOptions.isResolvedFromDuration = true;
  }
  return springOptions;
}
function spring({ keyframes: keyframes2, restDelta, restSpeed, ...options }) {
  const origin = keyframes2[0];
  const target = keyframes2[keyframes2.length - 1];
  const state = { done: false, value: origin };
  const { stiffness, damping, mass, duration, velocity, isResolvedFromDuration } = getSpringOptions({
    ...options,
    velocity: -millisecondsToSeconds(options.velocity || 0)
  });
  const initialVelocity = velocity || 0;
  const dampingRatio = damping / (2 * Math.sqrt(stiffness * mass));
  const initialDelta = target - origin;
  const undampedAngularFreq = millisecondsToSeconds(Math.sqrt(stiffness / mass));
  const isGranularScale = Math.abs(initialDelta) < 5;
  restSpeed || (restSpeed = isGranularScale ? 0.01 : 2);
  restDelta || (restDelta = isGranularScale ? 5e-3 : 0.5);
  let resolveSpring;
  if (dampingRatio < 1) {
    const angularFreq = calcAngularFreq(undampedAngularFreq, dampingRatio);
    resolveSpring = (t2) => {
      const envelope = Math.exp(-dampingRatio * undampedAngularFreq * t2);
      return target - envelope * ((initialVelocity + dampingRatio * undampedAngularFreq * initialDelta) / angularFreq * Math.sin(angularFreq * t2) + initialDelta * Math.cos(angularFreq * t2));
    };
  } else if (dampingRatio === 1) {
    resolveSpring = (t2) => target - Math.exp(-undampedAngularFreq * t2) * (initialDelta + (initialVelocity + undampedAngularFreq * initialDelta) * t2);
  } else {
    const dampedAngularFreq = undampedAngularFreq * Math.sqrt(dampingRatio * dampingRatio - 1);
    resolveSpring = (t2) => {
      const envelope = Math.exp(-dampingRatio * undampedAngularFreq * t2);
      const freqForT = Math.min(dampedAngularFreq * t2, 300);
      return target - envelope * ((initialVelocity + dampingRatio * undampedAngularFreq * initialDelta) * Math.sinh(freqForT) + dampedAngularFreq * initialDelta * Math.cosh(freqForT)) / dampedAngularFreq;
    };
  }
  return {
    calculatedDuration: isResolvedFromDuration ? duration || null : null,
    next: (t2) => {
      const current = resolveSpring(t2);
      if (!isResolvedFromDuration) {
        let currentVelocity = 0;
        if (dampingRatio < 1) {
          currentVelocity = t2 === 0 ? secondsToMilliseconds(initialVelocity) : calcGeneratorVelocity(resolveSpring, t2, current);
        }
        const isBelowVelocityThreshold = Math.abs(currentVelocity) <= restSpeed;
        const isBelowDisplacementThreshold = Math.abs(target - current) <= restDelta;
        state.done = isBelowVelocityThreshold && isBelowDisplacementThreshold;
      } else {
        state.done = t2 >= duration;
      }
      state.value = state.done ? target : current;
      return state;
    }
  };
}
function inertia({ keyframes: keyframes2, velocity = 0, power = 0.8, timeConstant = 325, bounceDamping = 10, bounceStiffness = 500, modifyTarget, min, max, restDelta = 0.5, restSpeed }) {
  const origin = keyframes2[0];
  const state = {
    done: false,
    value: origin
  };
  const isOutOfBounds = (v2) => min !== void 0 && v2 < min || max !== void 0 && v2 > max;
  const nearestBoundary = (v2) => {
    if (min === void 0)
      return max;
    if (max === void 0)
      return min;
    return Math.abs(min - v2) < Math.abs(max - v2) ? min : max;
  };
  let amplitude = power * velocity;
  const ideal = origin + amplitude;
  const target = modifyTarget === void 0 ? ideal : modifyTarget(ideal);
  if (target !== ideal)
    amplitude = target - origin;
  const calcDelta = (t2) => -amplitude * Math.exp(-t2 / timeConstant);
  const calcLatest = (t2) => target + calcDelta(t2);
  const applyFriction = (t2) => {
    const delta = calcDelta(t2);
    const latest = calcLatest(t2);
    state.done = Math.abs(delta) <= restDelta;
    state.value = state.done ? target : latest;
  };
  let timeReachedBoundary;
  let spring$1;
  const checkCatchBoundary = (t2) => {
    if (!isOutOfBounds(state.value))
      return;
    timeReachedBoundary = t2;
    spring$1 = spring({
      keyframes: [state.value, nearestBoundary(state.value)],
      velocity: calcGeneratorVelocity(calcLatest, t2, state.value),
      // TODO: This should be passing * 1000
      damping: bounceDamping,
      stiffness: bounceStiffness,
      restDelta,
      restSpeed
    });
  };
  checkCatchBoundary(0);
  return {
    calculatedDuration: null,
    next: (t2) => {
      let hasUpdatedFrame = false;
      if (!spring$1 && timeReachedBoundary === void 0) {
        hasUpdatedFrame = true;
        applyFriction(t2);
        checkCatchBoundary(t2);
      }
      if (timeReachedBoundary !== void 0 && t2 >= timeReachedBoundary) {
        return spring$1.next(t2 - timeReachedBoundary);
      } else {
        !hasUpdatedFrame && applyFriction(t2);
        return state;
      }
    }
  };
}
const easeIn = /* @__PURE__ */ cubicBezier(0.42, 0, 1, 1);
const easeOut = /* @__PURE__ */ cubicBezier(0, 0, 0.58, 1);
const easeInOut = /* @__PURE__ */ cubicBezier(0.42, 0, 0.58, 1);
const isEasingArray = (ease2) => {
  return Array.isArray(ease2) && typeof ease2[0] !== "number";
};
const easingLookup = {
  linear: noop,
  easeIn,
  easeInOut,
  easeOut,
  circIn,
  circInOut,
  circOut,
  backIn,
  backInOut,
  backOut,
  anticipate
};
const easingDefinitionToFunction = (definition) => {
  if (Array.isArray(definition)) {
    invariant$1(definition.length === 4);
    const [x1, y1, x2, y2] = definition;
    return cubicBezier(x1, y1, x2, y2);
  } else if (typeof definition === "string") {
    invariant$1(easingLookup[definition] !== void 0);
    return easingLookup[definition];
  }
  return definition;
};
const combineFunctions = (a2, b) => (v2) => b(a2(v2));
const pipe = (...transformers) => transformers.reduce(combineFunctions);
const progress = (from, to, value) => {
  const toFromDifference = to - from;
  return toFromDifference === 0 ? 1 : (value - from) / toFromDifference;
};
const mixNumber$1 = (from, to, progress2) => {
  return from + (to - from) * progress2;
};
function hueToRgb(p2, q2, t2) {
  if (t2 < 0)
    t2 += 1;
  if (t2 > 1)
    t2 -= 1;
  if (t2 < 1 / 6)
    return p2 + (q2 - p2) * 6 * t2;
  if (t2 < 1 / 2)
    return q2;
  if (t2 < 2 / 3)
    return p2 + (q2 - p2) * (2 / 3 - t2) * 6;
  return p2;
}
function hslaToRgba({ hue, saturation, lightness, alpha: alpha2 }) {
  hue /= 360;
  saturation /= 100;
  lightness /= 100;
  let red = 0;
  let green = 0;
  let blue = 0;
  if (!saturation) {
    red = green = blue = lightness;
  } else {
    const q2 = lightness < 0.5 ? lightness * (1 + saturation) : lightness + saturation - lightness * saturation;
    const p2 = 2 * lightness - q2;
    red = hueToRgb(p2, q2, hue + 1 / 3);
    green = hueToRgb(p2, q2, hue);
    blue = hueToRgb(p2, q2, hue - 1 / 3);
  }
  return {
    red: Math.round(red * 255),
    green: Math.round(green * 255),
    blue: Math.round(blue * 255),
    alpha: alpha2
  };
}
function mixImmediate(a2, b) {
  return (p2) => p2 > 0 ? b : a2;
}
const mixLinearColor = (from, to, v2) => {
  const fromExpo = from * from;
  const expo = v2 * (to * to - fromExpo) + fromExpo;
  return expo < 0 ? 0 : Math.sqrt(expo);
};
const colorTypes = [hex, rgba, hsla];
const getColorType = (v2) => colorTypes.find((type2) => type2.test(v2));
function asRGBA(color2) {
  const type2 = getColorType(color2);
  if (!Boolean(type2))
    return false;
  let model = type2.parse(color2);
  if (type2 === hsla) {
    model = hslaToRgba(model);
  }
  return model;
}
const mixColor = (from, to) => {
  const fromRGBA = asRGBA(from);
  const toRGBA = asRGBA(to);
  if (!fromRGBA || !toRGBA) {
    return mixImmediate(from, to);
  }
  const blended = { ...fromRGBA };
  return (v2) => {
    blended.red = mixLinearColor(fromRGBA.red, toRGBA.red, v2);
    blended.green = mixLinearColor(fromRGBA.green, toRGBA.green, v2);
    blended.blue = mixLinearColor(fromRGBA.blue, toRGBA.blue, v2);
    blended.alpha = mixNumber$1(fromRGBA.alpha, toRGBA.alpha, v2);
    return rgba.transform(blended);
  };
};
const invisibleValues = /* @__PURE__ */ new Set(["none", "hidden"]);
function mixVisibility(origin, target) {
  if (invisibleValues.has(origin)) {
    return (p2) => p2 <= 0 ? origin : target;
  } else {
    return (p2) => p2 >= 1 ? target : origin;
  }
}
function mixNumber(a2, b) {
  return (p2) => mixNumber$1(a2, b, p2);
}
function getMixer(a2) {
  if (typeof a2 === "number") {
    return mixNumber;
  } else if (typeof a2 === "string") {
    return isCSSVariableToken(a2) ? mixImmediate : color.test(a2) ? mixColor : mixComplex;
  } else if (Array.isArray(a2)) {
    return mixArray;
  } else if (typeof a2 === "object") {
    return color.test(a2) ? mixColor : mixObject;
  }
  return mixImmediate;
}
function mixArray(a2, b) {
  const output = [...a2];
  const numValues = output.length;
  const blendValue = a2.map((v2, i) => getMixer(v2)(v2, b[i]));
  return (p2) => {
    for (let i = 0; i < numValues; i++) {
      output[i] = blendValue[i](p2);
    }
    return output;
  };
}
function mixObject(a2, b) {
  const output = { ...a2, ...b };
  const blendValue = {};
  for (const key in output) {
    if (a2[key] !== void 0 && b[key] !== void 0) {
      blendValue[key] = getMixer(a2[key])(a2[key], b[key]);
    }
  }
  return (v2) => {
    for (const key in blendValue) {
      output[key] = blendValue[key](v2);
    }
    return output;
  };
}
function matchOrder(origin, target) {
  var _a;
  const orderedOrigin = [];
  const pointers = { color: 0, var: 0, number: 0 };
  for (let i = 0; i < target.values.length; i++) {
    const type2 = target.types[i];
    const originIndex = origin.indexes[type2][pointers[type2]];
    const originValue = (_a = origin.values[originIndex]) !== null && _a !== void 0 ? _a : 0;
    orderedOrigin[i] = originValue;
    pointers[type2]++;
  }
  return orderedOrigin;
}
const mixComplex = (origin, target) => {
  const template = complex.createTransformer(target);
  const originStats = analyseComplexValue(origin);
  const targetStats = analyseComplexValue(target);
  const canInterpolate = originStats.indexes.var.length === targetStats.indexes.var.length && originStats.indexes.color.length === targetStats.indexes.color.length && originStats.indexes.number.length >= targetStats.indexes.number.length;
  if (canInterpolate) {
    if (invisibleValues.has(origin) && !targetStats.values.length || invisibleValues.has(target) && !originStats.values.length) {
      return mixVisibility(origin, target);
    }
    return pipe(mixArray(matchOrder(originStats, targetStats), targetStats.values), template);
  } else {
    return mixImmediate(origin, target);
  }
};
function mix(from, to, p2) {
  if (typeof from === "number" && typeof to === "number" && typeof p2 === "number") {
    return mixNumber$1(from, to, p2);
  }
  const mixer = getMixer(from);
  return mixer(from, to);
}
function createMixers(output, ease2, customMixer) {
  const mixers = [];
  const mixerFactory = customMixer || mix;
  const numMixers = output.length - 1;
  for (let i = 0; i < numMixers; i++) {
    let mixer = mixerFactory(output[i], output[i + 1]);
    if (ease2) {
      const easingFunction = Array.isArray(ease2) ? ease2[i] || noop : ease2;
      mixer = pipe(easingFunction, mixer);
    }
    mixers.push(mixer);
  }
  return mixers;
}
function interpolate(input2, output, { clamp: isClamp = true, ease: ease2, mixer } = {}) {
  const inputLength = input2.length;
  invariant$1(inputLength === output.length);
  if (inputLength === 1)
    return () => output[0];
  if (inputLength === 2 && input2[0] === input2[1])
    return () => output[1];
  if (input2[0] > input2[inputLength - 1]) {
    input2 = [...input2].reverse();
    output = [...output].reverse();
  }
  const mixers = createMixers(output, ease2, mixer);
  const numMixers = mixers.length;
  const interpolator = (v2) => {
    let i = 0;
    if (numMixers > 1) {
      for (; i < input2.length - 2; i++) {
        if (v2 < input2[i + 1])
          break;
      }
    }
    const progressInRange = progress(input2[i], input2[i + 1], v2);
    return mixers[i](progressInRange);
  };
  return isClamp ? (v2) => interpolator(clamp(input2[0], input2[inputLength - 1], v2)) : interpolator;
}
function fillOffset(offset, remaining) {
  const min = offset[offset.length - 1];
  for (let i = 1; i <= remaining; i++) {
    const offsetProgress = progress(0, remaining, i);
    offset.push(mixNumber$1(min, 1, offsetProgress));
  }
}
function defaultOffset(arr) {
  const offset = [0];
  fillOffset(offset, arr.length - 1);
  return offset;
}
function convertOffsetToTimes(offset, duration) {
  return offset.map((o) => o * duration);
}
function defaultEasing(values, easing) {
  return values.map(() => easing || easeInOut).splice(0, values.length - 1);
}
function keyframes({ duration = 300, keyframes: keyframeValues, times, ease: ease2 = "easeInOut" }) {
  const easingFunctions = isEasingArray(ease2) ? ease2.map(easingDefinitionToFunction) : easingDefinitionToFunction(ease2);
  const state = {
    done: false,
    value: keyframeValues[0]
  };
  const absoluteTimes = convertOffsetToTimes(
    // Only use the provided offsets if they're the correct length
    // TODO Maybe we should warn here if there's a length mismatch
    times && times.length === keyframeValues.length ? times : defaultOffset(keyframeValues),
    duration
  );
  const mapTimeToKeyframe = interpolate(absoluteTimes, keyframeValues, {
    ease: Array.isArray(easingFunctions) ? easingFunctions : defaultEasing(keyframeValues, easingFunctions)
  });
  return {
    calculatedDuration: duration,
    next: (t2) => {
      state.value = mapTimeToKeyframe(t2);
      state.done = t2 >= duration;
      return state;
    }
  };
}
const maxGeneratorDuration = 2e4;
function calcGeneratorDuration(generator) {
  let duration = 0;
  const timeStep = 50;
  let state = generator.next(duration);
  while (!state.done && duration < maxGeneratorDuration) {
    duration += timeStep;
    state = generator.next(duration);
  }
  return duration >= maxGeneratorDuration ? Infinity : duration;
}
const frameloopDriver = (update2) => {
  const passTimestamp = ({ timestamp: timestamp2 }) => update2(timestamp2);
  return {
    start: () => frame.update(passTimestamp, true),
    stop: () => cancelFrame$1(passTimestamp),
    /**
     * If we're processing this frame we can use the
     * framelocked timestamp to keep things in sync.
     */
    now: () => frameData.isProcessing ? frameData.timestamp : time.now()
  };
};
const generators = {
  decay: inertia,
  inertia,
  tween: keyframes,
  keyframes,
  spring
};
const percentToProgress = (percent2) => percent2 / 100;
class MainThreadAnimation extends BaseAnimation {
  constructor(options) {
    super(options);
    this.holdTime = null;
    this.cancelTime = null;
    this.currentTime = 0;
    this.playbackSpeed = 1;
    this.pendingPlayState = "running";
    this.startTime = null;
    this.state = "idle";
    this.stop = () => {
      this.resolver.cancel();
      this.isStopped = true;
      if (this.state === "idle")
        return;
      this.teardown();
      const { onStop } = this.options;
      onStop && onStop();
    };
    const { name, motionValue: motionValue2, element, keyframes: keyframes2 } = this.options;
    const KeyframeResolver$1 = (element === null || element === void 0 ? void 0 : element.KeyframeResolver) || KeyframeResolver;
    const onResolved = (resolvedKeyframes, finalKeyframe) => this.onKeyframesResolved(resolvedKeyframes, finalKeyframe);
    this.resolver = new KeyframeResolver$1(keyframes2, onResolved, name, motionValue2, element);
    this.resolver.scheduleResolve();
  }
  initPlayback(keyframes$1) {
    const { type: type2 = "keyframes", repeat: repeat2 = 0, repeatDelay = 0, repeatType, velocity = 0 } = this.options;
    const generatorFactory = isGenerator(type2) ? type2 : generators[type2] || keyframes;
    let mapPercentToKeyframes;
    let mirroredGenerator;
    if (generatorFactory !== keyframes && typeof keyframes$1[0] !== "number") {
      mapPercentToKeyframes = pipe(percentToProgress, mix(keyframes$1[0], keyframes$1[1]));
      keyframes$1 = [0, 100];
    }
    const generator = generatorFactory({ ...this.options, keyframes: keyframes$1 });
    if (repeatType === "mirror") {
      mirroredGenerator = generatorFactory({
        ...this.options,
        keyframes: [...keyframes$1].reverse(),
        velocity: -velocity
      });
    }
    if (generator.calculatedDuration === null) {
      generator.calculatedDuration = calcGeneratorDuration(generator);
    }
    const { calculatedDuration } = generator;
    const resolvedDuration = calculatedDuration + repeatDelay;
    const totalDuration = resolvedDuration * (repeat2 + 1) - repeatDelay;
    return {
      generator,
      mirroredGenerator,
      mapPercentToKeyframes,
      calculatedDuration,
      resolvedDuration,
      totalDuration
    };
  }
  onPostResolved() {
    const { autoplay = true } = this.options;
    this.play();
    if (this.pendingPlayState === "paused" || !autoplay) {
      this.pause();
    } else {
      this.state = this.pendingPlayState;
    }
  }
  tick(timestamp2, sample = false) {
    const { resolved } = this;
    if (!resolved) {
      const { keyframes: keyframes3 } = this.options;
      return { done: true, value: keyframes3[keyframes3.length - 1] };
    }
    const { finalKeyframe, generator, mirroredGenerator, mapPercentToKeyframes, keyframes: keyframes2, calculatedDuration, totalDuration, resolvedDuration } = resolved;
    if (this.startTime === null)
      return generator.next(0);
    const { delay, repeat: repeat2, repeatType, repeatDelay, onUpdate } = this.options;
    if (this.speed > 0) {
      this.startTime = Math.min(this.startTime, timestamp2);
    } else if (this.speed < 0) {
      this.startTime = Math.min(timestamp2 - totalDuration / this.speed, this.startTime);
    }
    if (sample) {
      this.currentTime = timestamp2;
    } else if (this.holdTime !== null) {
      this.currentTime = this.holdTime;
    } else {
      this.currentTime = Math.round(timestamp2 - this.startTime) * this.speed;
    }
    const timeWithoutDelay = this.currentTime - delay * (this.speed >= 0 ? 1 : -1);
    const isInDelayPhase = this.speed >= 0 ? timeWithoutDelay < 0 : timeWithoutDelay > totalDuration;
    this.currentTime = Math.max(timeWithoutDelay, 0);
    if (this.state === "finished" && this.holdTime === null) {
      this.currentTime = totalDuration;
    }
    let elapsed = this.currentTime;
    let frameGenerator = generator;
    if (repeat2) {
      const progress2 = Math.min(this.currentTime, totalDuration) / resolvedDuration;
      let currentIteration = Math.floor(progress2);
      let iterationProgress = progress2 % 1;
      if (!iterationProgress && progress2 >= 1) {
        iterationProgress = 1;
      }
      iterationProgress === 1 && currentIteration--;
      currentIteration = Math.min(currentIteration, repeat2 + 1);
      const isOddIteration = Boolean(currentIteration % 2);
      if (isOddIteration) {
        if (repeatType === "reverse") {
          iterationProgress = 1 - iterationProgress;
          if (repeatDelay) {
            iterationProgress -= repeatDelay / resolvedDuration;
          }
        } else if (repeatType === "mirror") {
          frameGenerator = mirroredGenerator;
        }
      }
      elapsed = clamp(0, 1, iterationProgress) * resolvedDuration;
    }
    const state = isInDelayPhase ? { done: false, value: keyframes2[0] } : frameGenerator.next(elapsed);
    if (mapPercentToKeyframes) {
      state.value = mapPercentToKeyframes(state.value);
    }
    let { done } = state;
    if (!isInDelayPhase && calculatedDuration !== null) {
      done = this.speed >= 0 ? this.currentTime >= totalDuration : this.currentTime <= 0;
    }
    const isAnimationFinished = this.holdTime === null && (this.state === "finished" || this.state === "running" && done);
    if (isAnimationFinished && finalKeyframe !== void 0) {
      state.value = getFinalKeyframe(keyframes2, this.options, finalKeyframe);
    }
    if (onUpdate) {
      onUpdate(state.value);
    }
    if (isAnimationFinished) {
      this.finish();
    }
    return state;
  }
  get duration() {
    const { resolved } = this;
    return resolved ? millisecondsToSeconds(resolved.calculatedDuration) : 0;
  }
  get time() {
    return millisecondsToSeconds(this.currentTime);
  }
  set time(newTime) {
    newTime = secondsToMilliseconds(newTime);
    this.currentTime = newTime;
    if (this.holdTime !== null || this.speed === 0) {
      this.holdTime = newTime;
    } else if (this.driver) {
      this.startTime = this.driver.now() - newTime / this.speed;
    }
  }
  get speed() {
    return this.playbackSpeed;
  }
  set speed(newSpeed) {
    const hasChanged = this.playbackSpeed !== newSpeed;
    this.playbackSpeed = newSpeed;
    if (hasChanged) {
      this.time = millisecondsToSeconds(this.currentTime);
    }
  }
  play() {
    if (!this.resolver.isScheduled) {
      this.resolver.resume();
    }
    if (!this._resolved) {
      this.pendingPlayState = "running";
      return;
    }
    if (this.isStopped)
      return;
    const { driver = frameloopDriver, onPlay, startTime } = this.options;
    if (!this.driver) {
      this.driver = driver((timestamp2) => this.tick(timestamp2));
    }
    onPlay && onPlay();
    const now2 = this.driver.now();
    if (this.holdTime !== null) {
      this.startTime = now2 - this.holdTime;
    } else if (!this.startTime) {
      this.startTime = startTime !== null && startTime !== void 0 ? startTime : this.calcStartTime();
    } else if (this.state === "finished") {
      this.startTime = now2;
    }
    if (this.state === "finished") {
      this.updateFinishedPromise();
    }
    this.cancelTime = this.startTime;
    this.holdTime = null;
    this.state = "running";
    this.driver.start();
  }
  pause() {
    var _a;
    if (!this._resolved) {
      this.pendingPlayState = "paused";
      return;
    }
    this.state = "paused";
    this.holdTime = (_a = this.currentTime) !== null && _a !== void 0 ? _a : 0;
  }
  complete() {
    if (this.state !== "running") {
      this.play();
    }
    this.pendingPlayState = this.state = "finished";
    this.holdTime = null;
  }
  finish() {
    this.teardown();
    this.state = "finished";
    const { onComplete } = this.options;
    onComplete && onComplete();
  }
  cancel() {
    if (this.cancelTime !== null) {
      this.tick(this.cancelTime);
    }
    this.teardown();
    this.updateFinishedPromise();
  }
  teardown() {
    this.state = "idle";
    this.stopDriver();
    this.resolveFinishedPromise();
    this.updateFinishedPromise();
    this.startTime = this.cancelTime = null;
    this.resolver.cancel();
  }
  stopDriver() {
    if (!this.driver)
      return;
    this.driver.stop();
    this.driver = void 0;
  }
  sample(time2) {
    this.startTime = 0;
    return this.tick(time2, true);
  }
}
const acceleratedValues = /* @__PURE__ */ new Set([
  "opacity",
  "clipPath",
  "filter",
  "transform"
  // TODO: Can be accelerated but currently disabled until https://issues.chromium.org/issues/41491098 is resolved
  // or until we implement support for linear() easing.
  // "background-color"
]);
const isBezierDefinition = (easing) => Array.isArray(easing) && typeof easing[0] === "number";
const resolution = 10;
const generateLinearEasing = (easing, duration) => {
  let points = "";
  const numPoints = Math.max(Math.round(duration / resolution), 2);
  for (let i = 0; i < numPoints; i++) {
    points += easing(progress(0, numPoints - 1, i)) + ", ";
  }
  return `linear(${points.substring(0, points.length - 2)})`;
};
function memo(callback) {
  let result;
  return () => {
    if (result === void 0)
      result = callback();
    return result;
  };
}
const supportsFlags = {
  linearEasing: void 0
};
function memoSupports(callback, supportsFlag) {
  const memoized = memo(callback);
  return () => {
    var _a;
    return (_a = supportsFlags[supportsFlag]) !== null && _a !== void 0 ? _a : memoized();
  };
}
const supportsLinearEasing = /* @__PURE__ */ memoSupports(() => {
  try {
    document.createElement("div").animate({ opacity: 0 }, { easing: "linear(0, 1)" });
  } catch (e) {
    return false;
  }
  return true;
}, "linearEasing");
function isWaapiSupportedEasing(easing) {
  return Boolean(typeof easing === "function" && supportsLinearEasing() || !easing || typeof easing === "string" && (easing in supportedWaapiEasing || supportsLinearEasing()) || isBezierDefinition(easing) || Array.isArray(easing) && easing.every(isWaapiSupportedEasing));
}
const cubicBezierAsString = ([a2, b, c, d]) => `cubic-bezier(${a2}, ${b}, ${c}, ${d})`;
const supportedWaapiEasing = {
  linear: "linear",
  ease: "ease",
  easeIn: "ease-in",
  easeOut: "ease-out",
  easeInOut: "ease-in-out",
  circIn: /* @__PURE__ */ cubicBezierAsString([0, 0.65, 0.55, 1]),
  circOut: /* @__PURE__ */ cubicBezierAsString([0.55, 0, 1, 0.45]),
  backIn: /* @__PURE__ */ cubicBezierAsString([0.31, 0.01, 0.66, -0.59]),
  backOut: /* @__PURE__ */ cubicBezierAsString([0.33, 1.53, 0.69, 0.99])
};
function mapEasingToNativeEasing(easing, duration) {
  if (!easing) {
    return void 0;
  } else if (typeof easing === "function" && supportsLinearEasing()) {
    return generateLinearEasing(easing, duration);
  } else if (isBezierDefinition(easing)) {
    return cubicBezierAsString(easing);
  } else if (Array.isArray(easing)) {
    return easing.map((segmentEasing) => mapEasingToNativeEasing(segmentEasing, duration) || supportedWaapiEasing.easeOut);
  } else {
    return supportedWaapiEasing[easing];
  }
}
function startWaapiAnimation(element, valueName, keyframes2, { delay = 0, duration = 300, repeat: repeat2 = 0, repeatType = "loop", ease: ease2, times } = {}) {
  const keyframeOptions = { [valueName]: keyframes2 };
  if (times)
    keyframeOptions.offset = times;
  const easing = mapEasingToNativeEasing(ease2, duration);
  if (Array.isArray(easing))
    keyframeOptions.easing = easing;
  return element.animate(keyframeOptions, {
    delay,
    duration,
    easing: !Array.isArray(easing) ? easing : "linear",
    fill: "both",
    iterations: repeat2 + 1,
    direction: repeatType === "reverse" ? "alternate" : "normal"
  });
}
function attachTimeline(animation, timeline) {
  animation.timeline = timeline;
  animation.onfinish = null;
}
const supportsWaapi = /* @__PURE__ */ memo(() => Object.hasOwnProperty.call(Element.prototype, "animate"));
const sampleDelta = 10;
const maxDuration = 2e4;
function requiresPregeneratedKeyframes(options) {
  return isGenerator(options.type) || options.type === "spring" || !isWaapiSupportedEasing(options.ease);
}
function pregenerateKeyframes(keyframes2, options) {
  const sampleAnimation = new MainThreadAnimation({
    ...options,
    keyframes: keyframes2,
    repeat: 0,
    delay: 0,
    isGenerator: true
  });
  let state = { done: false, value: keyframes2[0] };
  const pregeneratedKeyframes = [];
  let t2 = 0;
  while (!state.done && t2 < maxDuration) {
    state = sampleAnimation.sample(t2);
    pregeneratedKeyframes.push(state.value);
    t2 += sampleDelta;
  }
  return {
    times: void 0,
    keyframes: pregeneratedKeyframes,
    duration: t2 - sampleDelta,
    ease: "linear"
  };
}
const unsupportedEasingFunctions = {
  anticipate,
  backInOut,
  circInOut
};
function isUnsupportedEase(key) {
  return key in unsupportedEasingFunctions;
}
class AcceleratedAnimation extends BaseAnimation {
  constructor(options) {
    super(options);
    const { name, motionValue: motionValue2, element, keyframes: keyframes2 } = this.options;
    this.resolver = new DOMKeyframesResolver(keyframes2, (resolvedKeyframes, finalKeyframe) => this.onKeyframesResolved(resolvedKeyframes, finalKeyframe), name, motionValue2, element);
    this.resolver.scheduleResolve();
  }
  initPlayback(keyframes2, finalKeyframe) {
    var _a;
    let { duration = 300, times, ease: ease2, type: type2, motionValue: motionValue2, name, startTime } = this.options;
    if (!((_a = motionValue2.owner) === null || _a === void 0 ? void 0 : _a.current)) {
      return false;
    }
    if (typeof ease2 === "string" && supportsLinearEasing() && isUnsupportedEase(ease2)) {
      ease2 = unsupportedEasingFunctions[ease2];
    }
    if (requiresPregeneratedKeyframes(this.options)) {
      const { onComplete, onUpdate, motionValue: motionValue3, element, ...options } = this.options;
      const pregeneratedAnimation = pregenerateKeyframes(keyframes2, options);
      keyframes2 = pregeneratedAnimation.keyframes;
      if (keyframes2.length === 1) {
        keyframes2[1] = keyframes2[0];
      }
      duration = pregeneratedAnimation.duration;
      times = pregeneratedAnimation.times;
      ease2 = pregeneratedAnimation.ease;
      type2 = "keyframes";
    }
    const animation = startWaapiAnimation(motionValue2.owner.current, name, keyframes2, { ...this.options, duration, times, ease: ease2 });
    animation.startTime = startTime !== null && startTime !== void 0 ? startTime : this.calcStartTime();
    if (this.pendingTimeline) {
      attachTimeline(animation, this.pendingTimeline);
      this.pendingTimeline = void 0;
    } else {
      animation.onfinish = () => {
        const { onComplete } = this.options;
        motionValue2.set(getFinalKeyframe(keyframes2, this.options, finalKeyframe));
        onComplete && onComplete();
        this.cancel();
        this.resolveFinishedPromise();
      };
    }
    return {
      animation,
      duration,
      times,
      type: type2,
      ease: ease2,
      keyframes: keyframes2
    };
  }
  get duration() {
    const { resolved } = this;
    if (!resolved)
      return 0;
    const { duration } = resolved;
    return millisecondsToSeconds(duration);
  }
  get time() {
    const { resolved } = this;
    if (!resolved)
      return 0;
    const { animation } = resolved;
    return millisecondsToSeconds(animation.currentTime || 0);
  }
  set time(newTime) {
    const { resolved } = this;
    if (!resolved)
      return;
    const { animation } = resolved;
    animation.currentTime = secondsToMilliseconds(newTime);
  }
  get speed() {
    const { resolved } = this;
    if (!resolved)
      return 1;
    const { animation } = resolved;
    return animation.playbackRate;
  }
  set speed(newSpeed) {
    const { resolved } = this;
    if (!resolved)
      return;
    const { animation } = resolved;
    animation.playbackRate = newSpeed;
  }
  get state() {
    const { resolved } = this;
    if (!resolved)
      return "idle";
    const { animation } = resolved;
    return animation.playState;
  }
  get startTime() {
    const { resolved } = this;
    if (!resolved)
      return null;
    const { animation } = resolved;
    return animation.startTime;
  }
  /**
   * Replace the default DocumentTimeline with another AnimationTimeline.
   * Currently used for scroll animations.
   */
  attachTimeline(timeline) {
    if (!this._resolved) {
      this.pendingTimeline = timeline;
    } else {
      const { resolved } = this;
      if (!resolved)
        return noop;
      const { animation } = resolved;
      attachTimeline(animation, timeline);
    }
    return noop;
  }
  play() {
    if (this.isStopped)
      return;
    const { resolved } = this;
    if (!resolved)
      return;
    const { animation } = resolved;
    if (animation.playState === "finished") {
      this.updateFinishedPromise();
    }
    animation.play();
  }
  pause() {
    const { resolved } = this;
    if (!resolved)
      return;
    const { animation } = resolved;
    animation.pause();
  }
  stop() {
    this.resolver.cancel();
    this.isStopped = true;
    if (this.state === "idle")
      return;
    this.resolveFinishedPromise();
    this.updateFinishedPromise();
    const { resolved } = this;
    if (!resolved)
      return;
    const { animation, keyframes: keyframes2, duration, type: type2, ease: ease2, times } = resolved;
    if (animation.playState === "idle" || animation.playState === "finished") {
      return;
    }
    if (this.time) {
      const { motionValue: motionValue2, onUpdate, onComplete, element, ...options } = this.options;
      const sampleAnimation = new MainThreadAnimation({
        ...options,
        keyframes: keyframes2,
        duration,
        type: type2,
        ease: ease2,
        times,
        isGenerator: true
      });
      const sampleTime = secondsToMilliseconds(this.time);
      motionValue2.setWithVelocity(sampleAnimation.sample(sampleTime - sampleDelta).value, sampleAnimation.sample(sampleTime).value, sampleDelta);
    }
    const { onStop } = this.options;
    onStop && onStop();
    this.cancel();
  }
  complete() {
    const { resolved } = this;
    if (!resolved)
      return;
    resolved.animation.finish();
  }
  cancel() {
    const { resolved } = this;
    if (!resolved)
      return;
    resolved.animation.cancel();
  }
  static supports(options) {
    const { motionValue: motionValue2, name, repeatDelay, repeatType, damping, type: type2 } = options;
    return supportsWaapi() && name && acceleratedValues.has(name) && motionValue2 && motionValue2.owner && motionValue2.owner.current instanceof HTMLElement && /**
     * If we're outputting values to onUpdate then we can't use WAAPI as there's
     * no way to read the value from WAAPI every frame.
     */
    !motionValue2.owner.getProps().onUpdate && !repeatDelay && repeatType !== "mirror" && damping !== 0 && type2 !== "inertia";
  }
}
const supportsScrollTimeline = memo(() => window.ScrollTimeline !== void 0);
class GroupPlaybackControls {
  constructor(animations2) {
    this.stop = () => this.runAll("stop");
    this.animations = animations2.filter(Boolean);
  }
  then(onResolve, onReject) {
    return Promise.all(this.animations).then(onResolve).catch(onReject);
  }
  /**
   * TODO: Filter out cancelled or stopped animations before returning
   */
  getAll(propName) {
    return this.animations[0][propName];
  }
  setAll(propName, newValue) {
    for (let i = 0; i < this.animations.length; i++) {
      this.animations[i][propName] = newValue;
    }
  }
  attachTimeline(timeline, fallback) {
    const subscriptions = this.animations.map((animation) => {
      if (supportsScrollTimeline() && animation.attachTimeline) {
        return animation.attachTimeline(timeline);
      } else {
        return fallback(animation);
      }
    });
    return () => {
      subscriptions.forEach((cancel, i) => {
        cancel && cancel();
        this.animations[i].stop();
      });
    };
  }
  get time() {
    return this.getAll("time");
  }
  set time(time2) {
    this.setAll("time", time2);
  }
  get speed() {
    return this.getAll("speed");
  }
  set speed(speed) {
    this.setAll("speed", speed);
  }
  get startTime() {
    return this.getAll("startTime");
  }
  get duration() {
    let max = 0;
    for (let i = 0; i < this.animations.length; i++) {
      max = Math.max(max, this.animations[i].duration);
    }
    return max;
  }
  runAll(methodName) {
    this.animations.forEach((controls) => controls[methodName]());
  }
  play() {
    this.runAll("play");
  }
  pause() {
    this.runAll("pause");
  }
  cancel() {
    this.runAll("cancel");
  }
  complete() {
    this.runAll("complete");
  }
}
function isTransitionDefined({ when, delay: _delay, delayChildren, staggerChildren, staggerDirection, repeat: repeat2, repeatType, repeatDelay, from, elapsed, ...transition }) {
  return !!Object.keys(transition).length;
}
const animateMotionValue = (name, value, target, transition = {}, element, isHandoff) => (onComplete) => {
  const valueTransition = getValueTransition(transition, name) || {};
  const delay = valueTransition.delay || transition.delay || 0;
  let { elapsed = 0 } = transition;
  elapsed = elapsed - secondsToMilliseconds(delay);
  let options = {
    keyframes: Array.isArray(target) ? target : [null, target],
    ease: "easeOut",
    velocity: value.getVelocity(),
    ...valueTransition,
    delay: -elapsed,
    onUpdate: (v2) => {
      value.set(v2);
      valueTransition.onUpdate && valueTransition.onUpdate(v2);
    },
    onComplete: () => {
      onComplete();
      valueTransition.onComplete && valueTransition.onComplete();
    },
    name,
    motionValue: value,
    element: isHandoff ? void 0 : element
  };
  if (!isTransitionDefined(valueTransition)) {
    options = {
      ...options,
      ...getDefaultTransition(name, options)
    };
  }
  if (options.duration) {
    options.duration = secondsToMilliseconds(options.duration);
  }
  if (options.repeatDelay) {
    options.repeatDelay = secondsToMilliseconds(options.repeatDelay);
  }
  if (options.from !== void 0) {
    options.keyframes[0] = options.from;
  }
  let shouldSkip = false;
  if (options.type === false || options.duration === 0 && !options.repeatDelay) {
    options.duration = 0;
    if (options.delay === 0) {
      shouldSkip = true;
    }
  }
  if (MotionGlobalConfig.skipAnimations) {
    shouldSkip = true;
    options.duration = 0;
    options.delay = 0;
  }
  if (shouldSkip && !isHandoff && value.get() !== void 0) {
    const finalKeyframe = getFinalKeyframe(options.keyframes, valueTransition);
    if (finalKeyframe !== void 0) {
      frame.update(() => {
        options.onUpdate(finalKeyframe);
        options.onComplete();
      });
      return new GroupPlaybackControls([]);
    }
  }
  if (!isHandoff && AcceleratedAnimation.supports(options)) {
    return new AcceleratedAnimation(options);
  } else {
    return new MainThreadAnimation(options);
  }
};
const isCustomValue = (v2) => {
  return Boolean(v2 && typeof v2 === "object" && v2.mix && v2.toValue);
};
const resolveFinalValueInKeyframes = (v2) => {
  return isKeyframesTarget(v2) ? v2[v2.length - 1] || 0 : v2;
};
function addUniqueItem(arr, item) {
  if (arr.indexOf(item) === -1)
    arr.push(item);
}
function removeItem(arr, item) {
  const index = arr.indexOf(item);
  if (index > -1)
    arr.splice(index, 1);
}
class SubscriptionManager {
  constructor() {
    this.subscriptions = [];
  }
  add(handler) {
    addUniqueItem(this.subscriptions, handler);
    return () => removeItem(this.subscriptions, handler);
  }
  notify(a2, b, c) {
    const numSubscriptions = this.subscriptions.length;
    if (!numSubscriptions)
      return;
    if (numSubscriptions === 1) {
      this.subscriptions[0](a2, b, c);
    } else {
      for (let i = 0; i < numSubscriptions; i++) {
        const handler = this.subscriptions[i];
        handler && handler(a2, b, c);
      }
    }
  }
  getSize() {
    return this.subscriptions.length;
  }
  clear() {
    this.subscriptions.length = 0;
  }
}
const MAX_VELOCITY_DELTA = 30;
const isFloat$1 = (value) => {
  return !isNaN(parseFloat(value));
};
class MotionValue {
  /**
   * @param init - The initiating value
   * @param config - Optional configuration options
   *
   * -  `transformer`: A function to transform incoming values with.
   *
   * @internal
   */
  constructor(init, options = {}) {
    this.version = "11.9.0";
    this.canTrackVelocity = null;
    this.events = {};
    this.updateAndNotify = (v2, render = true) => {
      const currentTime = time.now();
      if (this.updatedAt !== currentTime) {
        this.setPrevFrameValue();
      }
      this.prev = this.current;
      this.setCurrent(v2);
      if (this.current !== this.prev && this.events.change) {
        this.events.change.notify(this.current);
      }
      if (render && this.events.renderRequest) {
        this.events.renderRequest.notify(this.current);
      }
    };
    this.hasAnimated = false;
    this.setCurrent(init);
    this.owner = options.owner;
  }
  setCurrent(current) {
    this.current = current;
    this.updatedAt = time.now();
    if (this.canTrackVelocity === null && current !== void 0) {
      this.canTrackVelocity = isFloat$1(this.current);
    }
  }
  setPrevFrameValue(prevFrameValue = this.current) {
    this.prevFrameValue = prevFrameValue;
    this.prevUpdatedAt = this.updatedAt;
  }
  /**
   * Adds a function that will be notified when the `MotionValue` is updated.
   *
   * It returns a function that, when called, will cancel the subscription.
   *
   * When calling `onChange` inside a React component, it should be wrapped with the
   * `useEffect` hook. As it returns an unsubscribe function, this should be returned
   * from the `useEffect` function to ensure you don't add duplicate subscribers..
   *
   * ```jsx
   * export const MyComponent = () => {
   *   const x = useMotionValue(0)
   *   const y = useMotionValue(0)
   *   const opacity = useMotionValue(1)
   *
   *   useEffect(() => {
   *     function updateOpacity() {
   *       const maxXY = Math.max(x.get(), y.get())
   *       const newOpacity = transform(maxXY, [0, 100], [1, 0])
   *       opacity.set(newOpacity)
   *     }
   *
   *     const unsubscribeX = x.on("change", updateOpacity)
   *     const unsubscribeY = y.on("change", updateOpacity)
   *
   *     return () => {
   *       unsubscribeX()
   *       unsubscribeY()
   *     }
   *   }, [])
   *
   *   return <motion.div style={{ x }} />
   * }
   * ```
   *
   * @param subscriber - A function that receives the latest value.
   * @returns A function that, when called, will cancel this subscription.
   *
   * @deprecated
   */
  onChange(subscription) {
    return this.on("change", subscription);
  }
  on(eventName, callback) {
    if (!this.events[eventName]) {
      this.events[eventName] = new SubscriptionManager();
    }
    const unsubscribe = this.events[eventName].add(callback);
    if (eventName === "change") {
      return () => {
        unsubscribe();
        frame.read(() => {
          if (!this.events.change.getSize()) {
            this.stop();
          }
        });
      };
    }
    return unsubscribe;
  }
  clearListeners() {
    for (const eventManagers in this.events) {
      this.events[eventManagers].clear();
    }
  }
  /**
   * Attaches a passive effect to the `MotionValue`.
   *
   * @internal
   */
  attach(passiveEffect, stopPassiveEffect) {
    this.passiveEffect = passiveEffect;
    this.stopPassiveEffect = stopPassiveEffect;
  }
  /**
   * Sets the state of the `MotionValue`.
   *
   * @remarks
   *
   * ```jsx
   * const x = useMotionValue(0)
   * x.set(10)
   * ```
   *
   * @param latest - Latest value to set.
   * @param render - Whether to notify render subscribers. Defaults to `true`
   *
   * @public
   */
  set(v2, render = true) {
    if (!render || !this.passiveEffect) {
      this.updateAndNotify(v2, render);
    } else {
      this.passiveEffect(v2, this.updateAndNotify);
    }
  }
  setWithVelocity(prev, current, delta) {
    this.set(current);
    this.prev = void 0;
    this.prevFrameValue = prev;
    this.prevUpdatedAt = this.updatedAt - delta;
  }
  /**
   * Set the state of the `MotionValue`, stopping any active animations,
   * effects, and resets velocity to `0`.
   */
  jump(v2, endAnimation = true) {
    this.updateAndNotify(v2);
    this.prev = v2;
    this.prevUpdatedAt = this.prevFrameValue = void 0;
    endAnimation && this.stop();
    if (this.stopPassiveEffect)
      this.stopPassiveEffect();
  }
  /**
   * Returns the latest state of `MotionValue`
   *
   * @returns - The latest state of `MotionValue`
   *
   * @public
   */
  get() {
    return this.current;
  }
  /**
   * @public
   */
  getPrevious() {
    return this.prev;
  }
  /**
   * Returns the latest velocity of `MotionValue`
   *
   * @returns - The latest velocity of `MotionValue`. Returns `0` if the state is non-numerical.
   *
   * @public
   */
  getVelocity() {
    const currentTime = time.now();
    if (!this.canTrackVelocity || this.prevFrameValue === void 0 || currentTime - this.updatedAt > MAX_VELOCITY_DELTA) {
      return 0;
    }
    const delta = Math.min(this.updatedAt - this.prevUpdatedAt, MAX_VELOCITY_DELTA);
    return velocityPerSecond(parseFloat(this.current) - parseFloat(this.prevFrameValue), delta);
  }
  /**
   * Registers a new animation to control this `MotionValue`. Only one
   * animation can drive a `MotionValue` at one time.
   *
   * ```jsx
   * value.start()
   * ```
   *
   * @param animation - A function that starts the provided animation
   *
   * @internal
   */
  start(startAnimation) {
    this.stop();
    return new Promise((resolve) => {
      this.hasAnimated = true;
      this.animation = startAnimation(resolve);
      if (this.events.animationStart) {
        this.events.animationStart.notify();
      }
    }).then(() => {
      if (this.events.animationComplete) {
        this.events.animationComplete.notify();
      }
      this.clearAnimation();
    });
  }
  /**
   * Stop the currently active animation.
   *
   * @public
   */
  stop() {
    if (this.animation) {
      this.animation.stop();
      if (this.events.animationCancel) {
        this.events.animationCancel.notify();
      }
    }
    this.clearAnimation();
  }
  /**
   * Returns `true` if this value is currently animating.
   *
   * @public
   */
  isAnimating() {
    return !!this.animation;
  }
  clearAnimation() {
    delete this.animation;
  }
  /**
   * Destroy and clean up subscribers to this `MotionValue`.
   *
   * The `MotionValue` hooks like `useMotionValue` and `useTransform` automatically
   * handle the lifecycle of the returned `MotionValue`, so this method is only necessary if you've manually
   * created a `MotionValue` via the `motionValue` function.
   *
   * @public
   */
  destroy() {
    this.clearListeners();
    this.stop();
    if (this.stopPassiveEffect) {
      this.stopPassiveEffect();
    }
  }
}
function motionValue(init, options) {
  return new MotionValue(init, options);
}
function setMotionValue(visualElement, key, value) {
  if (visualElement.hasValue(key)) {
    visualElement.getValue(key).set(value);
  } else {
    visualElement.addValue(key, motionValue(value));
  }
}
function setTarget(visualElement, definition) {
  const resolved = resolveVariant(visualElement, definition);
  let { transitionEnd = {}, transition = {}, ...target } = resolved || {};
  target = { ...target, ...transitionEnd };
  for (const key in target) {
    const value = resolveFinalValueInKeyframes(target[key]);
    setMotionValue(visualElement, key, value);
  }
}
const camelToDash = (str2) => str2.replace(/([a-z])([A-Z])/gu, "$1-$2").toLowerCase();
const optimizedAppearDataId = "framerAppearId";
const optimizedAppearDataAttribute = "data-" + camelToDash(optimizedAppearDataId);
function getOptimisedAppearId(visualElement) {
  return visualElement.props[optimizedAppearDataAttribute];
}
function getWillChangeName(name) {
  if (transformProps.has(name)) {
    return "transform";
  } else if (acceleratedValues.has(name)) {
    return camelToDash(name);
  }
}
class WillChangeMotionValue extends MotionValue {
  constructor() {
    super(...arguments);
    this.values = [];
  }
  add(name) {
    const styleName = getWillChangeName(name);
    if (styleName) {
      addUniqueItem(this.values, styleName);
      this.update();
    }
  }
  update() {
    this.set(this.values.length ? this.values.join(", ") : "auto");
  }
}
const isMotionValue = (value) => Boolean(value && value.getVelocity);
function isWillChangeMotionValue(value) {
  return Boolean(isMotionValue(value) && value.add);
}
function addValueToWillChange(visualElement, key) {
  var _a;
  if (!visualElement.applyWillChange)
    return;
  let willChange = visualElement.getValue("willChange");
  if (!willChange && !((_a = visualElement.props.style) === null || _a === void 0 ? void 0 : _a.willChange)) {
    willChange = new WillChangeMotionValue("auto");
    visualElement.addValue("willChange", willChange);
  }
  if (isWillChangeMotionValue(willChange)) {
    return willChange.add(key);
  }
}
function shouldBlockAnimation({ protectedKeys, needsAnimating }, key) {
  const shouldBlock = protectedKeys.hasOwnProperty(key) && needsAnimating[key] !== true;
  needsAnimating[key] = false;
  return shouldBlock;
}
function animateTarget(visualElement, targetAndTransition, { delay = 0, transitionOverride, type: type2 } = {}) {
  var _a;
  let { transition = visualElement.getDefaultTransition(), transitionEnd, ...target } = targetAndTransition;
  if (transitionOverride)
    transition = transitionOverride;
  const animations2 = [];
  const animationTypeState = type2 && visualElement.animationState && visualElement.animationState.getState()[type2];
  for (const key in target) {
    const value = visualElement.getValue(key, (_a = visualElement.latestValues[key]) !== null && _a !== void 0 ? _a : null);
    const valueTarget = target[key];
    if (valueTarget === void 0 || animationTypeState && shouldBlockAnimation(animationTypeState, key)) {
      continue;
    }
    const valueTransition = {
      delay,
      ...getValueTransition(transition || {}, key)
    };
    let isHandoff = false;
    if (window.MotionHandoffAnimation) {
      const appearId = getOptimisedAppearId(visualElement);
      if (appearId) {
        const startTime = window.MotionHandoffAnimation(appearId, key, frame);
        if (startTime !== null) {
          valueTransition.startTime = startTime;
          isHandoff = true;
        }
      }
    }
    addValueToWillChange(visualElement, key);
    value.start(animateMotionValue(key, value, valueTarget, visualElement.shouldReduceMotion && transformProps.has(key) ? { type: false } : valueTransition, visualElement, isHandoff));
    const animation = value.animation;
    if (animation) {
      animations2.push(animation);
    }
  }
  if (transitionEnd) {
    Promise.all(animations2).then(() => {
      frame.update(() => {
        transitionEnd && setTarget(visualElement, transitionEnd);
      });
    });
  }
  return animations2;
}
function animateVariant(visualElement, variant, options = {}) {
  var _a;
  const resolved = resolveVariant(visualElement, variant, options.type === "exit" ? (_a = visualElement.presenceContext) === null || _a === void 0 ? void 0 : _a.custom : void 0);
  let { transition = visualElement.getDefaultTransition() || {} } = resolved || {};
  if (options.transitionOverride) {
    transition = options.transitionOverride;
  }
  const getAnimation = resolved ? () => Promise.all(animateTarget(visualElement, resolved, options)) : () => Promise.resolve();
  const getChildAnimations = visualElement.variantChildren && visualElement.variantChildren.size ? (forwardDelay = 0) => {
    const { delayChildren = 0, staggerChildren, staggerDirection } = transition;
    return animateChildren(visualElement, variant, delayChildren + forwardDelay, staggerChildren, staggerDirection, options);
  } : () => Promise.resolve();
  const { when } = transition;
  if (when) {
    const [first, last] = when === "beforeChildren" ? [getAnimation, getChildAnimations] : [getChildAnimations, getAnimation];
    return first().then(() => last());
  } else {
    return Promise.all([getAnimation(), getChildAnimations(options.delay)]);
  }
}
function animateChildren(visualElement, variant, delayChildren = 0, staggerChildren = 0, staggerDirection = 1, options) {
  const animations2 = [];
  const maxStaggerDuration = (visualElement.variantChildren.size - 1) * staggerChildren;
  const generateStaggerDuration = staggerDirection === 1 ? (i = 0) => i * staggerChildren : (i = 0) => maxStaggerDuration - i * staggerChildren;
  Array.from(visualElement.variantChildren).sort(sortByTreeOrder).forEach((child, i) => {
    child.notify("AnimationStart", variant);
    animations2.push(animateVariant(child, variant, {
      ...options,
      delay: delayChildren + generateStaggerDuration(i)
    }).then(() => child.notify("AnimationComplete", variant)));
  });
  return Promise.all(animations2);
}
function sortByTreeOrder(a2, b) {
  return a2.sortNodePosition(b);
}
function animateVisualElement(visualElement, definition, options = {}) {
  visualElement.notify("AnimationStart", definition);
  let animation;
  if (Array.isArray(definition)) {
    const animations2 = definition.map((variant) => animateVariant(visualElement, variant, options));
    animation = Promise.all(animations2);
  } else if (typeof definition === "string") {
    animation = animateVariant(visualElement, definition, options);
  } else {
    const resolvedDefinition = typeof definition === "function" ? resolveVariant(visualElement, definition, options.custom) : definition;
    animation = Promise.all(animateTarget(visualElement, resolvedDefinition, options));
  }
  return animation.then(() => {
    visualElement.notify("AnimationComplete", definition);
  });
}
const numVariantProps = variantProps.length;
function getVariantContext(visualElement) {
  if (!visualElement)
    return void 0;
  if (!visualElement.isControllingVariants) {
    const context2 = visualElement.parent ? getVariantContext(visualElement.parent) || {} : {};
    if (visualElement.props.initial !== void 0) {
      context2.initial = visualElement.props.initial;
    }
    return context2;
  }
  const context = {};
  for (let i = 0; i < numVariantProps; i++) {
    const name = variantProps[i];
    const prop = visualElement.props[name];
    if (isVariantLabel(prop) || prop === false) {
      context[name] = prop;
    }
  }
  return context;
}
const reversePriorityOrder = [...variantPriorityOrder].reverse();
const numAnimationTypes = variantPriorityOrder.length;
function animateList(visualElement) {
  return (animations2) => Promise.all(animations2.map(({ animation, options }) => animateVisualElement(visualElement, animation, options)));
}
function createAnimationState(visualElement) {
  let animate = animateList(visualElement);
  let state = createState();
  let isInitialRender = true;
  const buildResolvedTypeValues = (type2) => (acc, definition) => {
    var _a;
    const resolved = resolveVariant(visualElement, definition, type2 === "exit" ? (_a = visualElement.presenceContext) === null || _a === void 0 ? void 0 : _a.custom : void 0);
    if (resolved) {
      const { transition, transitionEnd, ...target } = resolved;
      acc = { ...acc, ...target, ...transitionEnd };
    }
    return acc;
  };
  function setAnimateFunction(makeAnimator) {
    animate = makeAnimator(visualElement);
  }
  function animateChanges(changedActiveType) {
    const { props } = visualElement;
    const context = getVariantContext(visualElement.parent) || {};
    const animations2 = [];
    const removedKeys = /* @__PURE__ */ new Set();
    let encounteredKeys = {};
    let removedVariantIndex = Infinity;
    for (let i = 0; i < numAnimationTypes; i++) {
      const type2 = reversePriorityOrder[i];
      const typeState = state[type2];
      const prop = props[type2] !== void 0 ? props[type2] : context[type2];
      const propIsVariant = isVariantLabel(prop);
      const activeDelta = type2 === changedActiveType ? typeState.isActive : null;
      if (activeDelta === false)
        removedVariantIndex = i;
      let isInherited = prop === context[type2] && prop !== props[type2] && propIsVariant;
      if (isInherited && isInitialRender && visualElement.manuallyAnimateOnMount) {
        isInherited = false;
      }
      typeState.protectedKeys = { ...encounteredKeys };
      if (
        // If it isn't active and hasn't *just* been set as inactive
        !typeState.isActive && activeDelta === null || // If we didn't and don't have any defined prop for this animation type
        !prop && !typeState.prevProp || // Or if the prop doesn't define an animation
        isAnimationControls(prop) || typeof prop === "boolean"
      ) {
        continue;
      }
      const variantDidChange = checkVariantsDidChange(typeState.prevProp, prop);
      let shouldAnimateType = variantDidChange || // If we're making this variant active, we want to always make it active
      type2 === changedActiveType && typeState.isActive && !isInherited && propIsVariant || // If we removed a higher-priority variant (i is in reverse order)
      i > removedVariantIndex && propIsVariant;
      let handledRemovedValues = false;
      const definitionList = Array.isArray(prop) ? prop : [prop];
      let resolvedValues = definitionList.reduce(buildResolvedTypeValues(type2), {});
      if (activeDelta === false)
        resolvedValues = {};
      const { prevResolvedValues = {} } = typeState;
      const allKeys = {
        ...prevResolvedValues,
        ...resolvedValues
      };
      const markToAnimate = (key) => {
        shouldAnimateType = true;
        if (removedKeys.has(key)) {
          handledRemovedValues = true;
          removedKeys.delete(key);
        }
        typeState.needsAnimating[key] = true;
        const motionValue2 = visualElement.getValue(key);
        if (motionValue2)
          motionValue2.liveStyle = false;
      };
      for (const key in allKeys) {
        const next = resolvedValues[key];
        const prev = prevResolvedValues[key];
        if (encounteredKeys.hasOwnProperty(key))
          continue;
        let valueHasChanged = false;
        if (isKeyframesTarget(next) && isKeyframesTarget(prev)) {
          valueHasChanged = !shallowCompare(next, prev);
        } else {
          valueHasChanged = next !== prev;
        }
        if (valueHasChanged) {
          if (next !== void 0 && next !== null) {
            markToAnimate(key);
          } else {
            removedKeys.add(key);
          }
        } else if (next !== void 0 && removedKeys.has(key)) {
          markToAnimate(key);
        } else {
          typeState.protectedKeys[key] = true;
        }
      }
      typeState.prevProp = prop;
      typeState.prevResolvedValues = resolvedValues;
      if (typeState.isActive) {
        encounteredKeys = { ...encounteredKeys, ...resolvedValues };
      }
      if (isInitialRender && visualElement.blockInitialAnimation) {
        shouldAnimateType = false;
      }
      const willAnimateViaParent = isInherited && variantDidChange;
      const needsAnimating = !willAnimateViaParent || handledRemovedValues;
      if (shouldAnimateType && needsAnimating) {
        animations2.push(...definitionList.map((animation) => ({
          animation,
          options: { type: type2 }
        })));
      }
    }
    if (removedKeys.size) {
      const fallbackAnimation = {};
      removedKeys.forEach((key) => {
        const fallbackTarget = visualElement.getBaseTarget(key);
        const motionValue2 = visualElement.getValue(key);
        if (motionValue2)
          motionValue2.liveStyle = true;
        fallbackAnimation[key] = fallbackTarget !== null && fallbackTarget !== void 0 ? fallbackTarget : null;
      });
      animations2.push({ animation: fallbackAnimation });
    }
    let shouldAnimate = Boolean(animations2.length);
    if (isInitialRender && (props.initial === false || props.initial === props.animate) && !visualElement.manuallyAnimateOnMount) {
      shouldAnimate = false;
    }
    isInitialRender = false;
    return shouldAnimate ? animate(animations2) : Promise.resolve();
  }
  function setActive(type2, isActive2) {
    var _a;
    if (state[type2].isActive === isActive2)
      return Promise.resolve();
    (_a = visualElement.variantChildren) === null || _a === void 0 ? void 0 : _a.forEach((child) => {
      var _a2;
      return (_a2 = child.animationState) === null || _a2 === void 0 ? void 0 : _a2.setActive(type2, isActive2);
    });
    state[type2].isActive = isActive2;
    const animations2 = animateChanges(type2);
    for (const key in state) {
      state[key].protectedKeys = {};
    }
    return animations2;
  }
  return {
    animateChanges,
    setActive,
    setAnimateFunction,
    getState: () => state,
    reset: () => {
      state = createState();
      isInitialRender = true;
    }
  };
}
function checkVariantsDidChange(prev, next) {
  if (typeof next === "string") {
    return next !== prev;
  } else if (Array.isArray(next)) {
    return !shallowCompare(next, prev);
  }
  return false;
}
function createTypeState(isActive2 = false) {
  return {
    isActive: isActive2,
    protectedKeys: {},
    needsAnimating: {},
    prevResolvedValues: {}
  };
}
function createState() {
  return {
    animate: createTypeState(true),
    whileInView: createTypeState(),
    whileHover: createTypeState(),
    whileTap: createTypeState(),
    whileDrag: createTypeState(),
    whileFocus: createTypeState(),
    exit: createTypeState()
  };
}
class Feature {
  constructor(node) {
    this.isMounted = false;
    this.node = node;
  }
  update() {
  }
}
class AnimationFeature extends Feature {
  /**
   * We dynamically generate the AnimationState manager as it contains a reference
   * to the underlying animation library. We only want to load that if we load this,
   * so people can optionally code split it out using the `m` component.
   */
  constructor(node) {
    super(node);
    node.animationState || (node.animationState = createAnimationState(node));
  }
  updateAnimationControlsSubscription() {
    const { animate } = this.node.getProps();
    if (isAnimationControls(animate)) {
      this.unmountControls = animate.subscribe(this.node);
    }
  }
  /**
   * Subscribe any provided AnimationControls to the component's VisualElement
   */
  mount() {
    this.updateAnimationControlsSubscription();
  }
  update() {
    const { animate } = this.node.getProps();
    const { animate: prevAnimate } = this.node.prevProps || {};
    if (animate !== prevAnimate) {
      this.updateAnimationControlsSubscription();
    }
  }
  unmount() {
    var _a;
    this.node.animationState.reset();
    (_a = this.unmountControls) === null || _a === void 0 ? void 0 : _a.call(this);
  }
}
let id = 0;
class ExitAnimationFeature extends Feature {
  constructor() {
    super(...arguments);
    this.id = id++;
  }
  update() {
    if (!this.node.presenceContext)
      return;
    const { isPresent, onExitComplete } = this.node.presenceContext;
    const { isPresent: prevIsPresent } = this.node.prevPresenceContext || {};
    if (!this.node.animationState || isPresent === prevIsPresent) {
      return;
    }
    const exitAnimation = this.node.animationState.setActive("exit", !isPresent);
    if (onExitComplete && !isPresent) {
      exitAnimation.then(() => onExitComplete(this.id));
    }
  }
  mount() {
    const { register: register4 } = this.node.presenceContext || {};
    if (register4) {
      this.unmount = register4(this.id);
    }
  }
  unmount() {
  }
}
const animations = {
  animation: {
    Feature: AnimationFeature
  },
  exit: {
    Feature: ExitAnimationFeature
  }
};
const isPrimaryPointer = (event) => {
  if (event.pointerType === "mouse") {
    return typeof event.button !== "number" || event.button <= 0;
  } else {
    return event.isPrimary !== false;
  }
};
function extractEventInfo(event, pointType = "page") {
  return {
    point: {
      x: event[`${pointType}X`],
      y: event[`${pointType}Y`]
    }
  };
}
const addPointerInfo = (handler) => {
  return (event) => isPrimaryPointer(event) && handler(event, extractEventInfo(event));
};
function addDomEvent(target, eventName, handler, options = { passive: true }) {
  target.addEventListener(eventName, handler, options);
  return () => target.removeEventListener(eventName, handler);
}
function addPointerEvent(target, eventName, handler, options) {
  return addDomEvent(target, eventName, addPointerInfo(handler), options);
}
function createLock(name) {
  let lock = null;
  return () => {
    const openLock = () => {
      lock = null;
    };
    if (lock === null) {
      lock = name;
      return openLock;
    }
    return false;
  };
}
const globalHorizontalLock = createLock("dragHorizontal");
const globalVerticalLock = createLock("dragVertical");
function getGlobalLock(drag) {
  let lock = false;
  {
    const openHorizontal = globalHorizontalLock();
    const openVertical = globalVerticalLock();
    if (openHorizontal && openVertical) {
      lock = () => {
        openHorizontal();
        openVertical();
      };
    } else {
      if (openHorizontal)
        openHorizontal();
      if (openVertical)
        openVertical();
    }
  }
  return lock;
}
function isDragActive() {
  const openGestureLock = getGlobalLock();
  if (!openGestureLock)
    return true;
  openGestureLock();
  return false;
}
function isRefObject(ref) {
  return ref && typeof ref === "object" && Object.prototype.hasOwnProperty.call(ref, "current");
}
const createAxis = () => ({ min: 0, max: 0 });
const createBox = () => ({
  x: createAxis(),
  y: createAxis()
});
function convertBoundingBoxToBox({ top, left, right, bottom }) {
  return {
    x: { min: left, max: right },
    y: { min: top, max: bottom }
  };
}
function transformBoxPoints(point, transformPoint) {
  if (!transformPoint)
    return point;
  const topLeft = transformPoint({ x: point.left, y: point.top });
  const bottomRight = transformPoint({ x: point.right, y: point.bottom });
  return {
    top: topLeft.y,
    left: topLeft.x,
    bottom: bottomRight.y,
    right: bottomRight.x
  };
}
function measureViewportBox(instance, transformPoint) {
  return convertBoundingBoxToBox(transformBoxPoints(instance.getBoundingClientRect(), transformPoint));
}
const PresenceContext = reactExports.createContext(null);
const LayoutGroupContext = reactExports.createContext({});
const SwitchLayoutGroupContext = reactExports.createContext({});
const scaleCorrectors = {};
const { schedule: microtask, cancel: cancelMicrotask } = createRenderBatcher(queueMicrotask, false);
function resolveMotionValue(value) {
  const unwrappedValue = isMotionValue(value) ? value.get() : value;
  return isCustomValue(unwrappedValue) ? unwrappedValue.toValue() : unwrappedValue;
}
function addHoverEvent(node, isActive2) {
  const eventName = isActive2 ? "pointerenter" : "pointerleave";
  const callbackName = isActive2 ? "onHoverStart" : "onHoverEnd";
  const handleEvent = (event, info) => {
    if (event.pointerType === "touch" || isDragActive())
      return;
    const props = node.getProps();
    if (node.animationState && props.whileHover) {
      node.animationState.setActive("whileHover", isActive2);
    }
    const callback = props[callbackName];
    if (callback) {
      frame.postRender(() => callback(event, info));
    }
  };
  return addPointerEvent(node.current, eventName, handleEvent, {
    passive: !node.getProps()[callbackName]
  });
}
class HoverGesture extends Feature {
  mount() {
    this.unmount = pipe(addHoverEvent(this.node, true), addHoverEvent(this.node, false));
  }
  unmount() {
  }
}
class FocusGesture extends Feature {
  constructor() {
    super(...arguments);
    this.isActive = false;
  }
  onFocus() {
    let isFocusVisible = false;
    try {
      isFocusVisible = this.node.current.matches(":focus-visible");
    } catch (e) {
      isFocusVisible = true;
    }
    if (!isFocusVisible || !this.node.animationState)
      return;
    this.node.animationState.setActive("whileFocus", true);
    this.isActive = true;
  }
  onBlur() {
    if (!this.isActive || !this.node.animationState)
      return;
    this.node.animationState.setActive("whileFocus", false);
    this.isActive = false;
  }
  mount() {
    this.unmount = pipe(addDomEvent(this.node.current, "focus", () => this.onFocus()), addDomEvent(this.node.current, "blur", () => this.onBlur()));
  }
  unmount() {
  }
}
const isNodeOrChild = (parent, child) => {
  if (!child) {
    return false;
  } else if (parent === child) {
    return true;
  } else {
    return isNodeOrChild(parent, child.parentElement);
  }
};
function fireSyntheticPointerEvent(name, handler) {
  if (!handler)
    return;
  const syntheticPointerEvent = new PointerEvent("pointer" + name);
  handler(syntheticPointerEvent, extractEventInfo(syntheticPointerEvent));
}
class PressGesture extends Feature {
  constructor() {
    super(...arguments);
    this.removeStartListeners = noop;
    this.removeEndListeners = noop;
    this.removeAccessibleListeners = noop;
    this.startPointerPress = (startEvent, startInfo) => {
      if (this.isPressing)
        return;
      this.removeEndListeners();
      const props = this.node.getProps();
      const endPointerPress = (endEvent, endInfo) => {
        if (!this.checkPressEnd())
          return;
        const { onTap, onTapCancel, globalTapTarget } = this.node.getProps();
        const handler = !globalTapTarget && !isNodeOrChild(this.node.current, endEvent.target) ? onTapCancel : onTap;
        if (handler) {
          frame.update(() => handler(endEvent, endInfo));
        }
      };
      const removePointerUpListener = addPointerEvent(window, "pointerup", endPointerPress, {
        passive: !(props.onTap || props["onPointerUp"])
      });
      const removePointerCancelListener = addPointerEvent(window, "pointercancel", (cancelEvent, cancelInfo) => this.cancelPress(cancelEvent, cancelInfo), {
        passive: !(props.onTapCancel || props["onPointerCancel"])
      });
      this.removeEndListeners = pipe(removePointerUpListener, removePointerCancelListener);
      this.startPress(startEvent, startInfo);
    };
    this.startAccessiblePress = () => {
      const handleKeydown = (keydownEvent) => {
        if (keydownEvent.key !== "Enter" || this.isPressing)
          return;
        const handleKeyup = (keyupEvent) => {
          if (keyupEvent.key !== "Enter" || !this.checkPressEnd())
            return;
          fireSyntheticPointerEvent("up", (event, info) => {
            const { onTap } = this.node.getProps();
            if (onTap) {
              frame.postRender(() => onTap(event, info));
            }
          });
        };
        this.removeEndListeners();
        this.removeEndListeners = addDomEvent(this.node.current, "keyup", handleKeyup);
        fireSyntheticPointerEvent("down", (event, info) => {
          this.startPress(event, info);
        });
      };
      const removeKeydownListener = addDomEvent(this.node.current, "keydown", handleKeydown);
      const handleBlur = () => {
        if (!this.isPressing)
          return;
        fireSyntheticPointerEvent("cancel", (cancelEvent, cancelInfo) => this.cancelPress(cancelEvent, cancelInfo));
      };
      const removeBlurListener = addDomEvent(this.node.current, "blur", handleBlur);
      this.removeAccessibleListeners = pipe(removeKeydownListener, removeBlurListener);
    };
  }
  startPress(event, info) {
    this.isPressing = true;
    const { onTapStart, whileTap } = this.node.getProps();
    if (whileTap && this.node.animationState) {
      this.node.animationState.setActive("whileTap", true);
    }
    if (onTapStart) {
      frame.postRender(() => onTapStart(event, info));
    }
  }
  checkPressEnd() {
    this.removeEndListeners();
    this.isPressing = false;
    const props = this.node.getProps();
    if (props.whileTap && this.node.animationState) {
      this.node.animationState.setActive("whileTap", false);
    }
    return !isDragActive();
  }
  cancelPress(event, info) {
    if (!this.checkPressEnd())
      return;
    const { onTapCancel } = this.node.getProps();
    if (onTapCancel) {
      frame.postRender(() => onTapCancel(event, info));
    }
  }
  mount() {
    const props = this.node.getProps();
    const removePointerListener = addPointerEvent(props.globalTapTarget ? window : this.node.current, "pointerdown", this.startPointerPress, {
      passive: !(props.onTapStart || props["onPointerStart"])
    });
    const removeFocusListener = addDomEvent(this.node.current, "focus", this.startAccessiblePress);
    this.removeStartListeners = pipe(removePointerListener, removeFocusListener);
  }
  unmount() {
    this.removeStartListeners();
    this.removeEndListeners();
    this.removeAccessibleListeners();
  }
}
const observerCallbacks = /* @__PURE__ */ new WeakMap();
const observers = /* @__PURE__ */ new WeakMap();
const fireObserverCallback = (entry) => {
  const callback = observerCallbacks.get(entry.target);
  callback && callback(entry);
};
const fireAllObserverCallbacks = (entries) => {
  entries.forEach(fireObserverCallback);
};
function initIntersectionObserver({ root: root2, ...options }) {
  const lookupRoot = root2 || document;
  if (!observers.has(lookupRoot)) {
    observers.set(lookupRoot, {});
  }
  const rootObservers = observers.get(lookupRoot);
  const key = JSON.stringify(options);
  if (!rootObservers[key]) {
    rootObservers[key] = new IntersectionObserver(fireAllObserverCallbacks, { root: root2, ...options });
  }
  return rootObservers[key];
}
function observeIntersection(element, options, callback) {
  const rootInteresectionObserver = initIntersectionObserver(options);
  observerCallbacks.set(element, callback);
  rootInteresectionObserver.observe(element);
  return () => {
    observerCallbacks.delete(element);
    rootInteresectionObserver.unobserve(element);
  };
}
const thresholdNames = {
  some: 0,
  all: 1
};
class InViewFeature extends Feature {
  constructor() {
    super(...arguments);
    this.hasEnteredView = false;
    this.isInView = false;
  }
  startObserver() {
    this.unmount();
    const { viewport = {} } = this.node.getProps();
    const { root: root2, margin: rootMargin, amount = "some", once } = viewport;
    const options = {
      root: root2 ? root2.current : void 0,
      rootMargin,
      threshold: typeof amount === "number" ? amount : thresholdNames[amount]
    };
    const onIntersectionUpdate = (entry) => {
      const { isIntersecting } = entry;
      if (this.isInView === isIntersecting)
        return;
      this.isInView = isIntersecting;
      if (once && !isIntersecting && this.hasEnteredView) {
        return;
      } else if (isIntersecting) {
        this.hasEnteredView = true;
      }
      if (this.node.animationState) {
        this.node.animationState.setActive("whileInView", isIntersecting);
      }
      const { onViewportEnter, onViewportLeave } = this.node.getProps();
      const callback = isIntersecting ? onViewportEnter : onViewportLeave;
      callback && callback(entry);
    };
    return observeIntersection(this.node.current, options, onIntersectionUpdate);
  }
  mount() {
    this.startObserver();
  }
  update() {
    if (typeof IntersectionObserver === "undefined")
      return;
    const { props, prevProps } = this.node;
    const hasOptionsChanged = ["amount", "margin", "root"].some(hasViewportOptionChanged(props, prevProps));
    if (hasOptionsChanged) {
      this.startObserver();
    }
  }
  unmount() {
  }
}
function hasViewportOptionChanged({ viewport = {} }, { viewport: prevViewport = {} } = {}) {
  return (name) => viewport[name] !== prevViewport[name];
}
const gestureAnimations = {
  inView: {
    Feature: InViewFeature
  },
  tap: {
    Feature: PressGesture
  },
  focus: {
    Feature: FocusGesture
  },
  hover: {
    Feature: HoverGesture
  }
};
const MotionConfigContext = reactExports.createContext({
  transformPagePoint: (p2) => p2,
  isStatic: false,
  reducedMotion: "never"
});
const MotionContext = reactExports.createContext({});
const isBrowser$1 = typeof window !== "undefined";
const useIsomorphicLayoutEffect$3 = isBrowser$1 ? reactExports.useLayoutEffect : reactExports.useEffect;
const LazyContext = reactExports.createContext({ strict: false });
let scheduleHandoffComplete = false;
function useVisualElement(Component, visualState, props, createVisualElement, ProjectionNodeConstructor) {
  var _a;
  const { visualElement: parent } = reactExports.useContext(MotionContext);
  const lazyContext = reactExports.useContext(LazyContext);
  const presenceContext = reactExports.useContext(PresenceContext);
  const reducedMotionConfig = reactExports.useContext(MotionConfigContext).reducedMotion;
  const visualElementRef = reactExports.useRef();
  createVisualElement = createVisualElement || lazyContext.renderer;
  if (!visualElementRef.current && createVisualElement) {
    visualElementRef.current = createVisualElement(Component, {
      visualState,
      parent,
      props,
      presenceContext,
      blockInitialAnimation: presenceContext ? presenceContext.initial === false : false,
      reducedMotionConfig
    });
  }
  const visualElement = visualElementRef.current;
  const initialLayoutGroupConfig = reactExports.useContext(SwitchLayoutGroupContext);
  if (visualElement && !visualElement.projection && ProjectionNodeConstructor && (visualElement.type === "html" || visualElement.type === "svg")) {
    createProjectionNode(visualElementRef.current, props, ProjectionNodeConstructor, initialLayoutGroupConfig);
  }
  reactExports.useInsertionEffect(() => {
    visualElement && visualElement.update(props, presenceContext);
  });
  const optimisedAppearId = props[optimizedAppearDataAttribute];
  const wantsHandoff = reactExports.useRef(Boolean(optimisedAppearId) && !window.MotionHandoffIsComplete && ((_a = window.MotionHasOptimisedAnimation) === null || _a === void 0 ? void 0 : _a.call(window, optimisedAppearId)));
  useIsomorphicLayoutEffect$3(() => {
    if (!visualElement)
      return;
    visualElement.updateFeatures();
    microtask.render(visualElement.render);
    if (wantsHandoff.current && visualElement.animationState) {
      visualElement.animationState.animateChanges();
    }
  });
  reactExports.useEffect(() => {
    if (!visualElement)
      return;
    if (!wantsHandoff.current && visualElement.animationState) {
      visualElement.animationState.animateChanges();
    }
    wantsHandoff.current = false;
    if (!scheduleHandoffComplete) {
      scheduleHandoffComplete = true;
      queueMicrotask(completeHandoff);
    }
  });
  return visualElement;
}
function completeHandoff() {
  window.MotionHandoffIsComplete = true;
}
function createProjectionNode(visualElement, props, ProjectionNodeConstructor, initialPromotionConfig) {
  const { layoutId, layout, drag, dragConstraints, layoutScroll, layoutRoot } = props;
  visualElement.projection = new ProjectionNodeConstructor(visualElement.latestValues, props["data-framer-portal-id"] ? void 0 : getClosestProjectingNode(visualElement.parent));
  visualElement.projection.setOptions({
    layoutId,
    layout,
    alwaysMeasureLayout: Boolean(drag) || dragConstraints && isRefObject(dragConstraints),
    visualElement,
    /**
     * TODO: Update options in an effect. This could be tricky as it'll be too late
     * to update by the time layout animations run.
     * We also need to fix this safeToRemove by linking it up to the one returned by usePresence,
     * ensuring it gets called if there's no potential layout animations.
     *
     */
    animationType: typeof layout === "string" ? layout : "both",
    initialPromotionConfig,
    layoutScroll,
    layoutRoot
  });
}
function getClosestProjectingNode(visualElement) {
  if (!visualElement)
    return void 0;
  return visualElement.options.allowProjection !== false ? visualElement.projection : getClosestProjectingNode(visualElement.parent);
}
function useMotionRef(visualState, visualElement, externalRef) {
  return reactExports.useCallback(
    (instance) => {
      instance && visualState.mount && visualState.mount(instance);
      if (visualElement) {
        if (instance) {
          visualElement.mount(instance);
        } else {
          visualElement.unmount();
        }
      }
      if (externalRef) {
        if (typeof externalRef === "function") {
          externalRef(instance);
        } else if (isRefObject(externalRef)) {
          externalRef.current = instance;
        }
      }
    },
    /**
     * Only pass a new ref callback to React if we've received a visual element
     * factory. Otherwise we'll be mounting/remounting every time externalRef
     * or other dependencies change.
     */
    [visualElement]
  );
}
function isControllingVariants(props) {
  return isAnimationControls(props.animate) || variantProps.some((name) => isVariantLabel(props[name]));
}
function isVariantNode(props) {
  return Boolean(isControllingVariants(props) || props.variants);
}
function getCurrentTreeVariants(props, context) {
  if (isControllingVariants(props)) {
    const { initial, animate } = props;
    return {
      initial: initial === false || isVariantLabel(initial) ? initial : void 0,
      animate: isVariantLabel(animate) ? animate : void 0
    };
  }
  return props.inherit !== false ? context : {};
}
function useCreateMotionContext(props) {
  const { initial, animate } = getCurrentTreeVariants(props, reactExports.useContext(MotionContext));
  return reactExports.useMemo(() => ({ initial, animate }), [variantLabelsAsDependency(initial), variantLabelsAsDependency(animate)]);
}
function variantLabelsAsDependency(prop) {
  return Array.isArray(prop) ? prop.join(" ") : prop;
}
const featureProps = {
  animation: [
    "animate",
    "variants",
    "whileHover",
    "whileTap",
    "exit",
    "whileInView",
    "whileFocus",
    "whileDrag"
  ],
  exit: ["exit"],
  drag: ["drag", "dragControls"],
  focus: ["whileFocus"],
  hover: ["whileHover", "onHoverStart", "onHoverEnd"],
  tap: ["whileTap", "onTap", "onTapStart", "onTapCancel"],
  pan: ["onPan", "onPanStart", "onPanSessionStart", "onPanEnd"],
  inView: ["whileInView", "onViewportEnter", "onViewportLeave"],
  layout: ["layout", "layoutId"]
};
const featureDefinitions = {};
for (const key in featureProps) {
  featureDefinitions[key] = {
    isEnabled: (props) => featureProps[key].some((name) => !!props[name])
  };
}
function loadFeatures(features) {
  for (const key in features) {
    featureDefinitions[key] = {
      ...featureDefinitions[key],
      ...features[key]
    };
  }
}
const motionComponentSymbol = Symbol.for("motionComponentSymbol");
function createRendererMotionComponent({ preloadedFeatures, createVisualElement, useRender, useVisualState, Component }) {
  preloadedFeatures && loadFeatures(preloadedFeatures);
  function MotionComponent(props, externalRef) {
    let MeasureLayout;
    const configAndProps = {
      ...reactExports.useContext(MotionConfigContext),
      ...props,
      layoutId: useLayoutId(props)
    };
    const { isStatic } = configAndProps;
    const context = useCreateMotionContext(props);
    const visualState = useVisualState(props, isStatic);
    if (!isStatic && isBrowser$1) {
      useStrictMode();
      const layoutProjection = getProjectionFunctionality(configAndProps);
      MeasureLayout = layoutProjection.MeasureLayout;
      context.visualElement = useVisualElement(Component, visualState, configAndProps, createVisualElement, layoutProjection.ProjectionNode);
    }
    return jsxRuntimeExports.jsxs(MotionContext.Provider, { value: context, children: [MeasureLayout && context.visualElement ? jsxRuntimeExports.jsx(MeasureLayout, { visualElement: context.visualElement, ...configAndProps }) : null, useRender(Component, props, useMotionRef(visualState, context.visualElement, externalRef), visualState, isStatic, context.visualElement)] });
  }
  const ForwardRefMotionComponent = reactExports.forwardRef(MotionComponent);
  ForwardRefMotionComponent[motionComponentSymbol] = Component;
  return ForwardRefMotionComponent;
}
function useLayoutId({ layoutId }) {
  const layoutGroupId = reactExports.useContext(LayoutGroupContext).id;
  return layoutGroupId && layoutId !== void 0 ? layoutGroupId + "-" + layoutId : layoutId;
}
function useStrictMode(configAndProps, preloadedFeatures) {
  reactExports.useContext(LazyContext).strict;
}
function getProjectionFunctionality(props) {
  const { drag, layout } = featureDefinitions;
  if (!drag && !layout)
    return {};
  const combined = { ...drag, ...layout };
  return {
    MeasureLayout: (drag === null || drag === void 0 ? void 0 : drag.isEnabled(props)) || (layout === null || layout === void 0 ? void 0 : layout.isEnabled(props)) ? combined.MeasureLayout : void 0,
    ProjectionNode: combined.ProjectionNode
  };
}
const lowercaseSVGElements = [
  "animate",
  "circle",
  "defs",
  "desc",
  "ellipse",
  "g",
  "image",
  "line",
  "filter",
  "marker",
  "mask",
  "metadata",
  "path",
  "pattern",
  "polygon",
  "polyline",
  "rect",
  "stop",
  "switch",
  "symbol",
  "svg",
  "text",
  "tspan",
  "use",
  "view"
];
function isSVGComponent(Component) {
  if (
    /**
     * If it's not a string, it's a custom React component. Currently we only support
     * HTML custom React components.
     */
    typeof Component !== "string" || /**
     * If it contains a dash, the element is a custom HTML webcomponent.
     */
    Component.includes("-")
  ) {
    return false;
  } else if (
    /**
     * If it's in our list of lowercase SVG tags, it's an SVG component
     */
    lowercaseSVGElements.indexOf(Component) > -1 || /**
     * If it contains a capital letter, it's an SVG component
     */
    /[A-Z]/u.test(Component)
  ) {
    return true;
  }
  return false;
}
function renderHTML(element, { style, vars }, styleProp, projection) {
  Object.assign(element.style, style, projection && projection.getProjectionStyles(styleProp));
  for (const key in vars) {
    element.style.setProperty(key, vars[key]);
  }
}
const camelCaseAttributes = /* @__PURE__ */ new Set([
  "baseFrequency",
  "diffuseConstant",
  "kernelMatrix",
  "kernelUnitLength",
  "keySplines",
  "keyTimes",
  "limitingConeAngle",
  "markerHeight",
  "markerWidth",
  "numOctaves",
  "targetX",
  "targetY",
  "surfaceScale",
  "specularConstant",
  "specularExponent",
  "stdDeviation",
  "tableValues",
  "viewBox",
  "gradientTransform",
  "pathLength",
  "startOffset",
  "textLength",
  "lengthAdjust"
]);
function renderSVG(element, renderState, _styleProp, projection) {
  renderHTML(element, renderState, void 0, projection);
  for (const key in renderState.attrs) {
    element.setAttribute(!camelCaseAttributes.has(key) ? camelToDash(key) : key, renderState.attrs[key]);
  }
}
function isForcedMotionValue(key, { layout, layoutId }) {
  return transformProps.has(key) || key.startsWith("origin") || (layout || layoutId !== void 0) && (!!scaleCorrectors[key] || key === "opacity");
}
function scrapeMotionValuesFromProps$1(props, prevProps, visualElement) {
  var _a;
  const { style } = props;
  const newValues = {};
  for (const key in style) {
    if (isMotionValue(style[key]) || prevProps.style && isMotionValue(prevProps.style[key]) || isForcedMotionValue(key, props) || ((_a = visualElement === null || visualElement === void 0 ? void 0 : visualElement.getValue(key)) === null || _a === void 0 ? void 0 : _a.liveStyle) !== void 0) {
      newValues[key] = style[key];
    }
  }
  if (visualElement && style && typeof style.willChange === "string") {
    visualElement.applyWillChange = false;
  }
  return newValues;
}
function scrapeMotionValuesFromProps(props, prevProps, visualElement) {
  const newValues = scrapeMotionValuesFromProps$1(props, prevProps, visualElement);
  for (const key in props) {
    if (isMotionValue(props[key]) || isMotionValue(prevProps[key])) {
      const targetKey = transformPropOrder.indexOf(key) !== -1 ? "attr" + key.charAt(0).toUpperCase() + key.substring(1) : key;
      newValues[targetKey] = props[key];
    }
  }
  return newValues;
}
function useConstant(init) {
  const ref = reactExports.useRef(null);
  if (ref.current === null) {
    ref.current = init();
  }
  return ref.current;
}
function makeState({ applyWillChange = false, scrapeMotionValuesFromProps: scrapeMotionValuesFromProps2, createRenderState, onMount }, props, context, presenceContext, isStatic) {
  const state = {
    latestValues: makeLatestValues(props, context, presenceContext, isStatic ? false : applyWillChange, scrapeMotionValuesFromProps2),
    renderState: createRenderState()
  };
  if (onMount) {
    state.mount = (instance) => onMount(props, instance, state);
  }
  return state;
}
const makeUseVisualState = (config) => (props, isStatic) => {
  const context = reactExports.useContext(MotionContext);
  const presenceContext = reactExports.useContext(PresenceContext);
  const make = () => makeState(config, props, context, presenceContext, isStatic);
  return isStatic ? make() : useConstant(make);
};
function addWillChange(willChange, name) {
  const memberName = getWillChangeName(name);
  if (memberName) {
    addUniqueItem(willChange, memberName);
  }
}
function forEachDefinition(props, definition, callback) {
  const list = Array.isArray(definition) ? definition : [definition];
  for (let i = 0; i < list.length; i++) {
    const resolved = resolveVariantFromProps(props, list[i]);
    if (resolved) {
      const { transitionEnd, transition, ...target } = resolved;
      callback(target, transitionEnd);
    }
  }
}
function makeLatestValues(props, context, presenceContext, shouldApplyWillChange, scrapeMotionValues) {
  var _a;
  const values = {};
  const willChange = [];
  const applyWillChange = shouldApplyWillChange && ((_a = props.style) === null || _a === void 0 ? void 0 : _a.willChange) === void 0;
  const motionValues = scrapeMotionValues(props, {});
  for (const key in motionValues) {
    values[key] = resolveMotionValue(motionValues[key]);
  }
  let { initial, animate } = props;
  const isControllingVariants$1 = isControllingVariants(props);
  const isVariantNode$1 = isVariantNode(props);
  if (context && isVariantNode$1 && !isControllingVariants$1 && props.inherit !== false) {
    if (initial === void 0)
      initial = context.initial;
    if (animate === void 0)
      animate = context.animate;
  }
  let isInitialAnimationBlocked = presenceContext ? presenceContext.initial === false : false;
  isInitialAnimationBlocked = isInitialAnimationBlocked || initial === false;
  const variantToSet = isInitialAnimationBlocked ? animate : initial;
  if (variantToSet && typeof variantToSet !== "boolean" && !isAnimationControls(variantToSet)) {
    forEachDefinition(props, variantToSet, (target, transitionEnd) => {
      for (const key in target) {
        let valueTarget = target[key];
        if (Array.isArray(valueTarget)) {
          const index = isInitialAnimationBlocked ? valueTarget.length - 1 : 0;
          valueTarget = valueTarget[index];
        }
        if (valueTarget !== null) {
          values[key] = valueTarget;
        }
      }
      for (const key in transitionEnd) {
        values[key] = transitionEnd[key];
      }
    });
  }
  if (applyWillChange) {
    if (animate && initial !== false && !isAnimationControls(animate)) {
      forEachDefinition(props, animate, (target) => {
        for (const key in target) {
          addWillChange(willChange, key);
        }
      });
    }
    if (willChange.length) {
      values.willChange = willChange.join(",");
    }
  }
  return values;
}
const createHtmlRenderState = () => ({
  style: {},
  transform: {},
  transformOrigin: {},
  vars: {}
});
const createSvgRenderState = () => ({
  ...createHtmlRenderState(),
  attrs: {}
});
const getValueAsType = (value, type2) => {
  return type2 && typeof value === "number" ? type2.transform(value) : value;
};
const translateAlias = {
  x: "translateX",
  y: "translateY",
  z: "translateZ",
  transformPerspective: "perspective"
};
const numTransforms = transformPropOrder.length;
function buildTransform(latestValues, transform, transformTemplate) {
  let transformString = "";
  let transformIsDefault = true;
  for (let i = 0; i < numTransforms; i++) {
    const key = transformPropOrder[i];
    const value = latestValues[key];
    if (value === void 0)
      continue;
    let valueIsDefault = true;
    if (typeof value === "number") {
      valueIsDefault = value === (key.startsWith("scale") ? 1 : 0);
    } else {
      valueIsDefault = parseFloat(value) === 0;
    }
    if (!valueIsDefault || transformTemplate) {
      const valueAsType = getValueAsType(value, numberValueTypes[key]);
      if (!valueIsDefault) {
        transformIsDefault = false;
        const transformName = translateAlias[key] || key;
        transformString += `${transformName}(${valueAsType}) `;
      }
      if (transformTemplate) {
        transform[key] = valueAsType;
      }
    }
  }
  transformString = transformString.trim();
  if (transformTemplate) {
    transformString = transformTemplate(transform, transformIsDefault ? "" : transformString);
  } else if (transformIsDefault) {
    transformString = "none";
  }
  return transformString;
}
function buildHTMLStyles(state, latestValues, transformTemplate) {
  const { style, vars, transformOrigin } = state;
  let hasTransform = false;
  let hasTransformOrigin = false;
  for (const key in latestValues) {
    const value = latestValues[key];
    if (transformProps.has(key)) {
      hasTransform = true;
      continue;
    } else if (isCSSVariableName(key)) {
      vars[key] = value;
      continue;
    } else {
      const valueAsType = getValueAsType(value, numberValueTypes[key]);
      if (key.startsWith("origin")) {
        hasTransformOrigin = true;
        transformOrigin[key] = valueAsType;
      } else {
        style[key] = valueAsType;
      }
    }
  }
  if (!latestValues.transform) {
    if (hasTransform || transformTemplate) {
      style.transform = buildTransform(latestValues, state.transform, transformTemplate);
    } else if (style.transform) {
      style.transform = "none";
    }
  }
  if (hasTransformOrigin) {
    const { originX = "50%", originY = "50%", originZ = 0 } = transformOrigin;
    style.transformOrigin = `${originX} ${originY} ${originZ}`;
  }
}
function calcOrigin(origin, offset, size2) {
  return typeof origin === "string" ? origin : px.transform(offset + size2 * origin);
}
function calcSVGTransformOrigin(dimensions, originX, originY) {
  const pxOriginX = calcOrigin(originX, dimensions.x, dimensions.width);
  const pxOriginY = calcOrigin(originY, dimensions.y, dimensions.height);
  return `${pxOriginX} ${pxOriginY}`;
}
const dashKeys = {
  offset: "stroke-dashoffset",
  array: "stroke-dasharray"
};
const camelKeys = {
  offset: "strokeDashoffset",
  array: "strokeDasharray"
};
function buildSVGPath(attrs, length, spacing = 1, offset = 0, useDashCase = true) {
  attrs.pathLength = 1;
  const keys2 = useDashCase ? dashKeys : camelKeys;
  attrs[keys2.offset] = px.transform(-offset);
  const pathLength = px.transform(length);
  const pathSpacing = px.transform(spacing);
  attrs[keys2.array] = `${pathLength} ${pathSpacing}`;
}
function buildSVGAttrs(state, {
  attrX,
  attrY,
  attrScale,
  originX,
  originY,
  pathLength,
  pathSpacing = 1,
  pathOffset = 0,
  // This is object creation, which we try to avoid per-frame.
  ...latest
}, isSVGTag2, transformTemplate) {
  buildHTMLStyles(state, latest, transformTemplate);
  if (isSVGTag2) {
    if (state.style.viewBox) {
      state.attrs.viewBox = state.style.viewBox;
    }
    return;
  }
  state.attrs = state.style;
  state.style = {};
  const { attrs, style, dimensions } = state;
  if (attrs.transform) {
    if (dimensions)
      style.transform = attrs.transform;
    delete attrs.transform;
  }
  if (dimensions && (originX !== void 0 || originY !== void 0 || style.transform)) {
    style.transformOrigin = calcSVGTransformOrigin(dimensions, originX !== void 0 ? originX : 0.5, originY !== void 0 ? originY : 0.5);
  }
  if (attrX !== void 0)
    attrs.x = attrX;
  if (attrY !== void 0)
    attrs.y = attrY;
  if (attrScale !== void 0)
    attrs.scale = attrScale;
  if (pathLength !== void 0) {
    buildSVGPath(attrs, pathLength, pathSpacing, pathOffset, false);
  }
}
const isSVGTag = (tag) => typeof tag === "string" && tag.toLowerCase() === "svg";
const svgMotionConfig = {
  useVisualState: makeUseVisualState({
    scrapeMotionValuesFromProps,
    createRenderState: createSvgRenderState,
    onMount: (props, instance, { renderState, latestValues }) => {
      frame.read(() => {
        try {
          renderState.dimensions = typeof instance.getBBox === "function" ? instance.getBBox() : instance.getBoundingClientRect();
        } catch (e) {
          renderState.dimensions = {
            x: 0,
            y: 0,
            width: 0,
            height: 0
          };
        }
      });
      frame.render(() => {
        buildSVGAttrs(renderState, latestValues, isSVGTag(instance.tagName), props.transformTemplate);
        renderSVG(instance, renderState);
      });
    }
  })
};
const htmlMotionConfig = {
  useVisualState: makeUseVisualState({
    applyWillChange: true,
    scrapeMotionValuesFromProps: scrapeMotionValuesFromProps$1,
    createRenderState: createHtmlRenderState
  })
};
function copyRawValuesOnly(target, source, props) {
  for (const key in source) {
    if (!isMotionValue(source[key]) && !isForcedMotionValue(key, props)) {
      target[key] = source[key];
    }
  }
}
function useInitialMotionValues({ transformTemplate }, visualState) {
  return reactExports.useMemo(() => {
    const state = createHtmlRenderState();
    buildHTMLStyles(state, visualState, transformTemplate);
    return Object.assign({}, state.vars, state.style);
  }, [visualState]);
}
function useStyle(props, visualState) {
  const styleProp = props.style || {};
  const style = {};
  copyRawValuesOnly(style, styleProp, props);
  Object.assign(style, useInitialMotionValues(props, visualState));
  return style;
}
function useHTMLProps(props, visualState) {
  const htmlProps = {};
  const style = useStyle(props, visualState);
  if (props.drag && props.dragListener !== false) {
    htmlProps.draggable = false;
    style.userSelect = style.WebkitUserSelect = style.WebkitTouchCallout = "none";
    style.touchAction = props.drag === true ? "none" : `pan-${props.drag === "x" ? "y" : "x"}`;
  }
  if (props.tabIndex === void 0 && (props.onTap || props.onTapStart || props.whileTap)) {
    htmlProps.tabIndex = 0;
  }
  htmlProps.style = style;
  return htmlProps;
}
const validMotionProps = /* @__PURE__ */ new Set([
  "animate",
  "exit",
  "variants",
  "initial",
  "style",
  "values",
  "variants",
  "transition",
  "transformTemplate",
  "custom",
  "inherit",
  "onBeforeLayoutMeasure",
  "onAnimationStart",
  "onAnimationComplete",
  "onUpdate",
  "onDragStart",
  "onDrag",
  "onDragEnd",
  "onMeasureDragConstraints",
  "onDirectionLock",
  "onDragTransitionEnd",
  "_dragX",
  "_dragY",
  "onHoverStart",
  "onHoverEnd",
  "onViewportEnter",
  "onViewportLeave",
  "globalTapTarget",
  "ignoreStrict",
  "viewport"
]);
function isValidMotionProp(key) {
  return key.startsWith("while") || key.startsWith("drag") && key !== "draggable" || key.startsWith("layout") || key.startsWith("onTap") || key.startsWith("onPan") || key.startsWith("onLayout") || validMotionProps.has(key);
}
let shouldForward = (key) => !isValidMotionProp(key);
function loadExternalIsValidProp(isValidProp) {
  if (!isValidProp)
    return;
  shouldForward = (key) => key.startsWith("on") ? !isValidMotionProp(key) : isValidProp(key);
}
try {
  loadExternalIsValidProp(require("@emotion/is-prop-valid").default);
} catch (_a) {
}
function filterProps(props, isDom, forwardMotionProps) {
  const filteredProps = {};
  for (const key in props) {
    if (key === "values" && typeof props.values === "object")
      continue;
    if (shouldForward(key) || forwardMotionProps === true && isValidMotionProp(key) || !isDom && !isValidMotionProp(key) || // If trying to use native HTML drag events, forward drag listeners
    props["draggable"] && key.startsWith("onDrag")) {
      filteredProps[key] = props[key];
    }
  }
  return filteredProps;
}
function useSVGProps(props, visualState, _isStatic, Component) {
  const visualProps = reactExports.useMemo(() => {
    const state = createSvgRenderState();
    buildSVGAttrs(state, visualState, isSVGTag(Component), props.transformTemplate);
    return {
      ...state.attrs,
      style: { ...state.style }
    };
  }, [visualState]);
  if (props.style) {
    const rawStyles = {};
    copyRawValuesOnly(rawStyles, props.style, props);
    visualProps.style = { ...rawStyles, ...visualProps.style };
  }
  return visualProps;
}
function createUseRender(forwardMotionProps = false) {
  const useRender = (Component, props, ref, { latestValues }, isStatic) => {
    const useVisualProps = isSVGComponent(Component) ? useSVGProps : useHTMLProps;
    const visualProps = useVisualProps(props, latestValues, isStatic, Component);
    const filteredProps = filterProps(props, typeof Component === "string", forwardMotionProps);
    const elementProps = Component !== reactExports.Fragment ? { ...filteredProps, ...visualProps, ref } : {};
    const { children } = props;
    const renderedChildren = reactExports.useMemo(() => isMotionValue(children) ? children.get() : children, [children]);
    return reactExports.createElement(Component, {
      ...elementProps,
      children: renderedChildren
    });
  };
  return useRender;
}
function createMotionComponentFactory(preloadedFeatures, createVisualElement) {
  return function createMotionComponent(Component, { forwardMotionProps } = { forwardMotionProps: false }) {
    const baseConfig = isSVGComponent(Component) ? svgMotionConfig : htmlMotionConfig;
    const config = {
      ...baseConfig,
      preloadedFeatures,
      useRender: createUseRender(forwardMotionProps),
      createVisualElement,
      Component
    };
    return createRendererMotionComponent(config);
  };
}
const prefersReducedMotion = { current: null };
const hasReducedMotionListener = { current: false };
function initPrefersReducedMotion() {
  hasReducedMotionListener.current = true;
  if (!isBrowser$1)
    return;
  if (window.matchMedia) {
    const motionMediaQuery = window.matchMedia("(prefers-reduced-motion)");
    const setReducedMotionPreferences = () => prefersReducedMotion.current = motionMediaQuery.matches;
    motionMediaQuery.addListener(setReducedMotionPreferences);
    setReducedMotionPreferences();
  } else {
    prefersReducedMotion.current = false;
  }
}
function updateMotionValuesFromProps(element, next, prev) {
  for (const key in next) {
    const nextValue = next[key];
    const prevValue = prev[key];
    if (isMotionValue(nextValue)) {
      element.addValue(key, nextValue);
    } else if (isMotionValue(prevValue)) {
      element.addValue(key, motionValue(nextValue, { owner: element }));
    } else if (prevValue !== nextValue) {
      if (element.hasValue(key)) {
        const existingValue = element.getValue(key);
        if (existingValue.liveStyle === true) {
          existingValue.jump(nextValue);
        } else if (!existingValue.hasAnimated) {
          existingValue.set(nextValue);
        }
      } else {
        const latestValue = element.getStaticValue(key);
        element.addValue(key, motionValue(latestValue !== void 0 ? latestValue : nextValue, { owner: element }));
      }
    }
  }
  for (const key in prev) {
    if (next[key] === void 0)
      element.removeValue(key);
  }
  return next;
}
const visualElementStore = /* @__PURE__ */ new WeakMap();
const valueTypes = [...dimensionValueTypes, color, complex];
const findValueType = (v2) => valueTypes.find(testValueType(v2));
const propEventHandlers = [
  "AnimationStart",
  "AnimationComplete",
  "Update",
  "BeforeLayoutMeasure",
  "LayoutMeasure",
  "LayoutAnimationStart",
  "LayoutAnimationComplete"
];
class VisualElement {
  /**
   * This method takes React props and returns found MotionValues. For example, HTML
   * MotionValues will be found within the style prop, whereas for Three.js within attribute arrays.
   *
   * This isn't an abstract method as it needs calling in the constructor, but it is
   * intended to be one.
   */
  scrapeMotionValuesFromProps(_props, _prevProps, _visualElement) {
    return {};
  }
  constructor({ parent, props, presenceContext, reducedMotionConfig, blockInitialAnimation, visualState }, options = {}) {
    this.applyWillChange = false;
    this.current = null;
    this.children = /* @__PURE__ */ new Set();
    this.isVariantNode = false;
    this.isControllingVariants = false;
    this.shouldReduceMotion = null;
    this.values = /* @__PURE__ */ new Map();
    this.KeyframeResolver = KeyframeResolver;
    this.features = {};
    this.valueSubscriptions = /* @__PURE__ */ new Map();
    this.prevMotionValues = {};
    this.events = {};
    this.propEventSubscriptions = {};
    this.notifyUpdate = () => this.notify("Update", this.latestValues);
    this.render = () => {
      if (!this.current)
        return;
      this.triggerBuild();
      this.renderInstance(this.current, this.renderState, this.props.style, this.projection);
    };
    this.renderScheduledAt = 0;
    this.scheduleRender = () => {
      const now2 = time.now();
      if (this.renderScheduledAt < now2) {
        this.renderScheduledAt = now2;
        frame.render(this.render, false, true);
      }
    };
    const { latestValues, renderState } = visualState;
    this.latestValues = latestValues;
    this.baseTarget = { ...latestValues };
    this.initialValues = props.initial ? { ...latestValues } : {};
    this.renderState = renderState;
    this.parent = parent;
    this.props = props;
    this.presenceContext = presenceContext;
    this.depth = parent ? parent.depth + 1 : 0;
    this.reducedMotionConfig = reducedMotionConfig;
    this.options = options;
    this.blockInitialAnimation = Boolean(blockInitialAnimation);
    this.isControllingVariants = isControllingVariants(props);
    this.isVariantNode = isVariantNode(props);
    if (this.isVariantNode) {
      this.variantChildren = /* @__PURE__ */ new Set();
    }
    this.manuallyAnimateOnMount = Boolean(parent && parent.current);
    const { willChange, ...initialMotionValues } = this.scrapeMotionValuesFromProps(props, {}, this);
    for (const key in initialMotionValues) {
      const value = initialMotionValues[key];
      if (latestValues[key] !== void 0 && isMotionValue(value)) {
        value.set(latestValues[key], false);
      }
    }
  }
  mount(instance) {
    this.current = instance;
    visualElementStore.set(instance, this);
    if (this.projection && !this.projection.instance) {
      this.projection.mount(instance);
    }
    if (this.parent && this.isVariantNode && !this.isControllingVariants) {
      this.removeFromVariantTree = this.parent.addVariantChild(this);
    }
    this.values.forEach((value, key) => this.bindToMotionValue(key, value));
    if (!hasReducedMotionListener.current) {
      initPrefersReducedMotion();
    }
    this.shouldReduceMotion = this.reducedMotionConfig === "never" ? false : this.reducedMotionConfig === "always" ? true : prefersReducedMotion.current;
    if (this.parent)
      this.parent.children.add(this);
    this.update(this.props, this.presenceContext);
  }
  unmount() {
    visualElementStore.delete(this.current);
    this.projection && this.projection.unmount();
    cancelFrame$1(this.notifyUpdate);
    cancelFrame$1(this.render);
    this.valueSubscriptions.forEach((remove2) => remove2());
    this.valueSubscriptions.clear();
    this.removeFromVariantTree && this.removeFromVariantTree();
    this.parent && this.parent.children.delete(this);
    for (const key in this.events) {
      this.events[key].clear();
    }
    for (const key in this.features) {
      const feature = this.features[key];
      if (feature) {
        feature.unmount();
        feature.isMounted = false;
      }
    }
    this.current = null;
  }
  bindToMotionValue(key, value) {
    if (this.valueSubscriptions.has(key)) {
      this.valueSubscriptions.get(key)();
    }
    const valueIsTransform = transformProps.has(key);
    const removeOnChange = value.on("change", (latestValue) => {
      this.latestValues[key] = latestValue;
      this.props.onUpdate && frame.preRender(this.notifyUpdate);
      if (valueIsTransform && this.projection) {
        this.projection.isTransformDirty = true;
      }
    });
    const removeOnRenderRequest = value.on("renderRequest", this.scheduleRender);
    let removeSyncCheck;
    if (window.MotionCheckAppearSync) {
      removeSyncCheck = window.MotionCheckAppearSync(this, key, value);
    }
    this.valueSubscriptions.set(key, () => {
      removeOnChange();
      removeOnRenderRequest();
      if (removeSyncCheck)
        removeSyncCheck();
      if (value.owner)
        value.stop();
    });
  }
  sortNodePosition(other) {
    if (!this.current || !this.sortInstanceNodePosition || this.type !== other.type) {
      return 0;
    }
    return this.sortInstanceNodePosition(this.current, other.current);
  }
  updateFeatures() {
    let key = "animation";
    for (key in featureDefinitions) {
      const featureDefinition = featureDefinitions[key];
      if (!featureDefinition)
        continue;
      const { isEnabled, Feature: FeatureConstructor } = featureDefinition;
      if (!this.features[key] && FeatureConstructor && isEnabled(this.props)) {
        this.features[key] = new FeatureConstructor(this);
      }
      if (this.features[key]) {
        const feature = this.features[key];
        if (feature.isMounted) {
          feature.update();
        } else {
          feature.mount();
          feature.isMounted = true;
        }
      }
    }
  }
  triggerBuild() {
    this.build(this.renderState, this.latestValues, this.props);
  }
  /**
   * Measure the current viewport box with or without transforms.
   * Only measures axis-aligned boxes, rotate and skew must be manually
   * removed with a re-render to work.
   */
  measureViewportBox() {
    return this.current ? this.measureInstanceViewportBox(this.current, this.props) : createBox();
  }
  getStaticValue(key) {
    return this.latestValues[key];
  }
  setStaticValue(key, value) {
    this.latestValues[key] = value;
  }
  /**
   * Update the provided props. Ensure any newly-added motion values are
   * added to our map, old ones removed, and listeners updated.
   */
  update(props, presenceContext) {
    if (props.transformTemplate || this.props.transformTemplate) {
      this.scheduleRender();
    }
    this.prevProps = this.props;
    this.props = props;
    this.prevPresenceContext = this.presenceContext;
    this.presenceContext = presenceContext;
    for (let i = 0; i < propEventHandlers.length; i++) {
      const key = propEventHandlers[i];
      if (this.propEventSubscriptions[key]) {
        this.propEventSubscriptions[key]();
        delete this.propEventSubscriptions[key];
      }
      const listenerName = "on" + key;
      const listener = props[listenerName];
      if (listener) {
        this.propEventSubscriptions[key] = this.on(key, listener);
      }
    }
    this.prevMotionValues = updateMotionValuesFromProps(this, this.scrapeMotionValuesFromProps(props, this.prevProps, this), this.prevMotionValues);
    if (this.handleChildMotionValue) {
      this.handleChildMotionValue();
    }
  }
  getProps() {
    return this.props;
  }
  /**
   * Returns the variant definition with a given name.
   */
  getVariant(name) {
    return this.props.variants ? this.props.variants[name] : void 0;
  }
  /**
   * Returns the defined default transition on this component.
   */
  getDefaultTransition() {
    return this.props.transition;
  }
  getTransformPagePoint() {
    return this.props.transformPagePoint;
  }
  getClosestVariantNode() {
    return this.isVariantNode ? this : this.parent ? this.parent.getClosestVariantNode() : void 0;
  }
  /**
   * Add a child visual element to our set of children.
   */
  addVariantChild(child) {
    const closestVariantNode = this.getClosestVariantNode();
    if (closestVariantNode) {
      closestVariantNode.variantChildren && closestVariantNode.variantChildren.add(child);
      return () => closestVariantNode.variantChildren.delete(child);
    }
  }
  /**
   * Add a motion value and bind it to this visual element.
   */
  addValue(key, value) {
    const existingValue = this.values.get(key);
    if (value !== existingValue) {
      if (existingValue)
        this.removeValue(key);
      this.bindToMotionValue(key, value);
      this.values.set(key, value);
      this.latestValues[key] = value.get();
    }
  }
  /**
   * Remove a motion value and unbind any active subscriptions.
   */
  removeValue(key) {
    this.values.delete(key);
    const unsubscribe = this.valueSubscriptions.get(key);
    if (unsubscribe) {
      unsubscribe();
      this.valueSubscriptions.delete(key);
    }
    delete this.latestValues[key];
    this.removeValueFromRenderState(key, this.renderState);
  }
  /**
   * Check whether we have a motion value for this key
   */
  hasValue(key) {
    return this.values.has(key);
  }
  getValue(key, defaultValue) {
    if (this.props.values && this.props.values[key]) {
      return this.props.values[key];
    }
    let value = this.values.get(key);
    if (value === void 0 && defaultValue !== void 0) {
      value = motionValue(defaultValue === null ? void 0 : defaultValue, { owner: this });
      this.addValue(key, value);
    }
    return value;
  }
  /**
   * If we're trying to animate to a previously unencountered value,
   * we need to check for it in our state and as a last resort read it
   * directly from the instance (which might have performance implications).
   */
  readValue(key, target) {
    var _a;
    let value = this.latestValues[key] !== void 0 || !this.current ? this.latestValues[key] : (_a = this.getBaseTargetFromProps(this.props, key)) !== null && _a !== void 0 ? _a : this.readValueFromInstance(this.current, key, this.options);
    if (value !== void 0 && value !== null) {
      if (typeof value === "string" && (isNumericalString(value) || isZeroValueString(value))) {
        value = parseFloat(value);
      } else if (!findValueType(value) && complex.test(target)) {
        value = getAnimatableNone(key, target);
      }
      this.setBaseTarget(key, isMotionValue(value) ? value.get() : value);
    }
    return isMotionValue(value) ? value.get() : value;
  }
  /**
   * Set the base target to later animate back to. This is currently
   * only hydrated on creation and when we first read a value.
   */
  setBaseTarget(key, value) {
    this.baseTarget[key] = value;
  }
  /**
   * Find the base target for a value thats been removed from all animation
   * props.
   */
  getBaseTarget(key) {
    var _a;
    const { initial } = this.props;
    let valueFromInitial;
    if (typeof initial === "string" || typeof initial === "object") {
      const variant = resolveVariantFromProps(this.props, initial, (_a = this.presenceContext) === null || _a === void 0 ? void 0 : _a.custom);
      if (variant) {
        valueFromInitial = variant[key];
      }
    }
    if (initial && valueFromInitial !== void 0) {
      return valueFromInitial;
    }
    const target = this.getBaseTargetFromProps(this.props, key);
    if (target !== void 0 && !isMotionValue(target))
      return target;
    return this.initialValues[key] !== void 0 && valueFromInitial === void 0 ? void 0 : this.baseTarget[key];
  }
  on(eventName, callback) {
    if (!this.events[eventName]) {
      this.events[eventName] = new SubscriptionManager();
    }
    return this.events[eventName].add(callback);
  }
  notify(eventName, ...args) {
    if (this.events[eventName]) {
      this.events[eventName].notify(...args);
    }
  }
}
class DOMVisualElement extends VisualElement {
  constructor() {
    super(...arguments);
    this.KeyframeResolver = DOMKeyframesResolver;
  }
  sortInstanceNodePosition(a2, b) {
    return a2.compareDocumentPosition(b) & 2 ? 1 : -1;
  }
  getBaseTargetFromProps(props, key) {
    return props.style ? props.style[key] : void 0;
  }
  removeValueFromRenderState(key, { vars, style }) {
    delete vars[key];
    delete style[key];
  }
}
function getComputedStyle$1(element) {
  return window.getComputedStyle(element);
}
class HTMLVisualElement extends DOMVisualElement {
  constructor() {
    super(...arguments);
    this.type = "html";
    this.applyWillChange = true;
    this.renderInstance = renderHTML;
  }
  readValueFromInstance(instance, key) {
    if (transformProps.has(key)) {
      const defaultType = getDefaultValueType(key);
      return defaultType ? defaultType.default || 0 : 0;
    } else {
      const computedStyle = getComputedStyle$1(instance);
      const value = (isCSSVariableName(key) ? computedStyle.getPropertyValue(key) : computedStyle[key]) || 0;
      return typeof value === "string" ? value.trim() : value;
    }
  }
  measureInstanceViewportBox(instance, { transformPagePoint }) {
    return measureViewportBox(instance, transformPagePoint);
  }
  build(renderState, latestValues, props) {
    buildHTMLStyles(renderState, latestValues, props.transformTemplate);
  }
  scrapeMotionValuesFromProps(props, prevProps, visualElement) {
    return scrapeMotionValuesFromProps$1(props, prevProps, visualElement);
  }
  handleChildMotionValue() {
    if (this.childSubscription) {
      this.childSubscription();
      delete this.childSubscription;
    }
    const { children } = this.props;
    if (isMotionValue(children)) {
      this.childSubscription = children.on("change", (latest) => {
        if (this.current)
          this.current.textContent = `${latest}`;
      });
    }
  }
}
class SVGVisualElement extends DOMVisualElement {
  constructor() {
    super(...arguments);
    this.type = "svg";
    this.isSVGTag = false;
    this.measureInstanceViewportBox = createBox;
  }
  getBaseTargetFromProps(props, key) {
    return props[key];
  }
  readValueFromInstance(instance, key) {
    if (transformProps.has(key)) {
      const defaultType = getDefaultValueType(key);
      return defaultType ? defaultType.default || 0 : 0;
    }
    key = !camelCaseAttributes.has(key) ? camelToDash(key) : key;
    return instance.getAttribute(key);
  }
  scrapeMotionValuesFromProps(props, prevProps, visualElement) {
    return scrapeMotionValuesFromProps(props, prevProps, visualElement);
  }
  build(renderState, latestValues, props) {
    buildSVGAttrs(renderState, latestValues, this.isSVGTag, props.transformTemplate);
  }
  renderInstance(instance, renderState, styleProp, projection) {
    renderSVG(instance, renderState, styleProp, projection);
  }
  mount(instance) {
    this.isSVGTag = isSVGTag(instance.tagName);
    super.mount(instance);
  }
}
const createDomVisualElement = (Component, options) => {
  return isSVGComponent(Component) ? new SVGVisualElement(options) : new HTMLVisualElement(options, {
    allowProjection: Component !== reactExports.Fragment
  });
};
const createMinimalMotionComponent = /* @__PURE__ */ createMotionComponentFactory();
const m = /* @__PURE__ */ createDOMMotionComponentProxy(createMinimalMotionComponent);
class PopChildMeasure extends reactExports.Component {
  getSnapshotBeforeUpdate(prevProps) {
    const element = this.props.childRef.current;
    if (element && prevProps.isPresent && !this.props.isPresent) {
      const size2 = this.props.sizeRef.current;
      size2.height = element.offsetHeight || 0;
      size2.width = element.offsetWidth || 0;
      size2.top = element.offsetTop;
      size2.left = element.offsetLeft;
    }
    return null;
  }
  /**
   * Required with getSnapshotBeforeUpdate to stop React complaining.
   */
  componentDidUpdate() {
  }
  render() {
    return this.props.children;
  }
}
function PopChild({ children, isPresent }) {
  const id2 = reactExports.useId();
  const ref = reactExports.useRef(null);
  const size2 = reactExports.useRef({
    width: 0,
    height: 0,
    top: 0,
    left: 0
  });
  const { nonce } = reactExports.useContext(MotionConfigContext);
  reactExports.useInsertionEffect(() => {
    const { width, height, top, left } = size2.current;
    if (isPresent || !ref.current || !width || !height)
      return;
    ref.current.dataset.motionPopId = id2;
    const style = document.createElement("style");
    if (nonce)
      style.nonce = nonce;
    document.head.appendChild(style);
    if (style.sheet) {
      style.sheet.insertRule(`
          [data-motion-pop-id="${id2}"] {
            position: absolute !important;
            width: ${width}px !important;
            height: ${height}px !important;
            top: ${top}px !important;
            left: ${left}px !important;
          }
        `);
    }
    return () => {
      document.head.removeChild(style);
    };
  }, [isPresent]);
  return jsxRuntimeExports.jsx(PopChildMeasure, { isPresent, childRef: ref, sizeRef: size2, children: reactExports.cloneElement(children, { ref }) });
}
const PresenceChild = ({ children, initial, isPresent, onExitComplete, custom, presenceAffectsLayout, mode }) => {
  const presenceChildren = useConstant(newChildrenMap);
  const id2 = reactExports.useId();
  const context = reactExports.useMemo(
    () => ({
      id: id2,
      initial,
      isPresent,
      custom,
      onExitComplete: (childId) => {
        presenceChildren.set(childId, true);
        for (const isComplete of presenceChildren.values()) {
          if (!isComplete)
            return;
        }
        onExitComplete && onExitComplete();
      },
      register: (childId) => {
        presenceChildren.set(childId, false);
        return () => presenceChildren.delete(childId);
      }
    }),
    /**
     * If the presence of a child affects the layout of the components around it,
     * we want to make a new context value to ensure they get re-rendered
     * so they can detect that layout change.
     */
    presenceAffectsLayout ? [Math.random()] : [isPresent]
  );
  reactExports.useMemo(() => {
    presenceChildren.forEach((_2, key) => presenceChildren.set(key, false));
  }, [isPresent]);
  reactExports.useEffect(() => {
    !isPresent && !presenceChildren.size && onExitComplete && onExitComplete();
  }, [isPresent]);
  if (mode === "popLayout") {
    children = jsxRuntimeExports.jsx(PopChild, { isPresent, children });
  }
  return jsxRuntimeExports.jsx(PresenceContext.Provider, { value: context, children });
};
function newChildrenMap() {
  return /* @__PURE__ */ new Map();
}
const getChildKey = (child) => child.key || "";
function onlyElements(children) {
  const filtered = [];
  reactExports.Children.forEach(children, (child) => {
    if (reactExports.isValidElement(child))
      filtered.push(child);
  });
  return filtered;
}
const AnimatePresence = ({ children, exitBeforeEnter, custom, initial = true, onExitComplete, presenceAffectsLayout = true, mode = "sync" }) => {
  const presentChildren = reactExports.useMemo(() => onlyElements(children), [children]);
  const presentKeys = presentChildren.map(getChildKey);
  const isInitialRender = reactExports.useRef(true);
  const pendingPresentChildren = reactExports.useRef(presentChildren);
  const exitComplete = useConstant(() => /* @__PURE__ */ new Map());
  const [diffedChildren, setDiffedChildren] = reactExports.useState(presentChildren);
  const [renderedChildren, setRenderedChildren] = reactExports.useState(presentChildren);
  useIsomorphicLayoutEffect$3(() => {
    isInitialRender.current = false;
    pendingPresentChildren.current = presentChildren;
    for (let i = 0; i < renderedChildren.length; i++) {
      const key = getChildKey(renderedChildren[i]);
      if (!presentKeys.includes(key)) {
        if (exitComplete.get(key) !== true) {
          exitComplete.set(key, false);
        }
      } else {
        exitComplete.delete(key);
      }
    }
  }, [renderedChildren, presentKeys.length, presentKeys.join("-")]);
  const exitingChildren = [];
  if (presentChildren !== diffedChildren) {
    let nextChildren = [...presentChildren];
    for (let i = 0; i < renderedChildren.length; i++) {
      const child = renderedChildren[i];
      const key = getChildKey(child);
      if (!presentKeys.includes(key)) {
        nextChildren.splice(i, 0, child);
        exitingChildren.push(child);
      }
    }
    if (mode === "wait" && exitingChildren.length) {
      nextChildren = exitingChildren;
    }
    setRenderedChildren(onlyElements(nextChildren));
    setDiffedChildren(presentChildren);
    return;
  }
  const { forceRender } = reactExports.useContext(LayoutGroupContext);
  return jsxRuntimeExports.jsx(jsxRuntimeExports.Fragment, { children: renderedChildren.map((child) => {
    const key = getChildKey(child);
    const isPresent = presentChildren === renderedChildren || presentKeys.includes(key);
    const onExit = () => {
      if (exitComplete.has(key)) {
        exitComplete.set(key, true);
      } else {
        return;
      }
      let isEveryExitComplete = true;
      exitComplete.forEach((isExitComplete) => {
        if (!isExitComplete)
          isEveryExitComplete = false;
      });
      if (isEveryExitComplete) {
        forceRender === null || forceRender === void 0 ? void 0 : forceRender();
        setRenderedChildren(pendingPresentChildren.current);
        onExitComplete && onExitComplete();
      }
    };
    return jsxRuntimeExports.jsx(PresenceChild, { isPresent, initial: !isInitialRender.current || initial ? void 0 : false, custom: isPresent ? void 0 : custom, presenceAffectsLayout, mode, onExitComplete: isPresent ? void 0 : onExit, children: child }, key);
  }) });
};
function LazyMotion({ children, features, strict = false }) {
  const [, setIsLoaded] = reactExports.useState(!isLazyBundle(features));
  const loadedRenderer = reactExports.useRef(void 0);
  if (!isLazyBundle(features)) {
    const { renderer, ...loadedFeatures } = features;
    loadedRenderer.current = renderer;
    loadFeatures(loadedFeatures);
  }
  reactExports.useEffect(() => {
    if (isLazyBundle(features)) {
      features().then(({ renderer, ...loadedFeatures }) => {
        loadFeatures(loadedFeatures);
        loadedRenderer.current = renderer;
        setIsLoaded(true);
      });
    }
  }, []);
  return jsxRuntimeExports.jsx(LazyContext.Provider, { value: { renderer: loadedRenderer.current, strict }, children });
}
function isLazyBundle(features) {
  return typeof features === "function";
}
const domAnimation = {
  renderer: createDomVisualElement,
  ...animations,
  ...gestureAnimations
};
var NextUIProvider = ({
  children,
  navigate,
  useHref,
  disableAnimation = false,
  disableRipple = false,
  skipFramerMotionAnimations = disableAnimation,
  validationBehavior = "aria",
  locale = "en-US",
  defaultDates,
  createCalendar,
  ...otherProps
}) => {
  let contents = children;
  if (navigate) {
    contents = /* @__PURE__ */ jsxRuntimeExports.jsx($ea8dcbcb9ea1b556$export$323e4fc2fa4753fb, { navigate, useHref, children: contents });
  }
  const context = reactExports.useMemo(() => {
    if (disableAnimation && skipFramerMotionAnimations) {
      MotionGlobalConfig.skipAnimations = true;
    }
    return {
      createCalendar,
      defaultDates,
      disableAnimation,
      disableRipple,
      validationBehavior
    };
  }, [
    createCalendar,
    defaultDates == null ? void 0 : defaultDates.maxDate,
    defaultDates == null ? void 0 : defaultDates.minDate,
    disableAnimation,
    disableRipple,
    validationBehavior
  ]);
  return /* @__PURE__ */ jsxRuntimeExports.jsx(ProviderContext, { value: context, children: /* @__PURE__ */ jsxRuntimeExports.jsx($18f2051aff69b9bf$export$a54013f0d02a8f82, { locale, children: /* @__PURE__ */ jsxRuntimeExports.jsx($f57aed4a881a3485$export$bf688221f59024e5, { ...otherProps, children: contents }) }) });
};
function forwardRef(component) {
  return reactExports.forwardRef(component);
}
var mapPropsVariants = (props, variantKeys, removeVariantProps = true) => {
  if (!variantKeys) {
    return [props, {}];
  }
  const picked = variantKeys.reduce((acc, key) => {
    if (key in props) {
      return { ...acc, [key]: props[key] };
    } else {
      return acc;
    }
  }, {});
  if (removeVariantProps) {
    const omitted = Object.keys(props).filter((key) => !variantKeys.includes(key)).reduce((acc, key) => ({ ...acc, [key]: props[key] }), {});
    return [omitted, picked];
  } else {
    return [props, picked];
  }
};
var solid = {
  default: "bg-default text-default-foreground",
  primary: "bg-primary text-primary-foreground",
  secondary: "bg-secondary text-secondary-foreground",
  success: "bg-success text-success-foreground",
  warning: "bg-warning text-warning-foreground",
  danger: "bg-danger text-danger-foreground",
  foreground: "bg-foreground text-background"
};
var shadow = {
  default: "shadow-lg shadow-default/50 bg-default text-default-foreground",
  primary: "shadow-lg shadow-primary/40 bg-primary text-primary-foreground",
  secondary: "shadow-lg shadow-secondary/40 bg-secondary text-secondary-foreground",
  success: "shadow-lg shadow-success/40 bg-success text-success-foreground",
  warning: "shadow-lg shadow-warning/40 bg-warning text-warning-foreground",
  danger: "shadow-lg shadow-danger/40 bg-danger text-danger-foreground",
  foreground: "shadow-lg shadow-foreground/40 bg-foreground text-background"
};
var bordered = {
  default: "bg-transparent border-default text-foreground",
  primary: "bg-transparent border-primary text-primary",
  secondary: "bg-transparent border-secondary text-secondary",
  success: "bg-transparent border-success text-success",
  warning: "bg-transparent border-warning text-warning",
  danger: "bg-transparent border-danger text-danger",
  foreground: "bg-transparent border-foreground text-foreground"
};
var flat = {
  default: "bg-default/40 text-default-700",
  primary: "bg-primary/20 text-primary-700",
  secondary: "bg-secondary/20 text-secondary-700",
  success: "bg-success/20 text-success-800 dark:text-success",
  warning: "bg-warning/20 text-warning-800 dark:text-warning",
  danger: "bg-danger/20 text-danger-800 dark:text-danger-500",
  foreground: "bg-foreground/10 text-foreground"
};
var faded = {
  default: "border-default bg-default-100 text-default-foreground",
  primary: "border-default bg-default-100 text-primary",
  secondary: "border-default bg-default-100 text-secondary",
  success: "border-default bg-default-100 text-success",
  warning: "border-default bg-default-100 text-warning",
  danger: "border-default bg-default-100 text-danger",
  foreground: "border-default bg-default-100 text-foreground"
};
var light = {
  default: "bg-transparent text-default-foreground",
  primary: "bg-transparent text-primary",
  secondary: "bg-transparent text-secondary",
  success: "bg-transparent text-success",
  warning: "bg-transparent text-warning",
  danger: "bg-transparent text-danger",
  foreground: "bg-transparent text-foreground"
};
var ghost = {
  default: "border-default text-default-foreground",
  primary: "border-primary text-primary",
  secondary: "border-secondary text-secondary",
  success: "border-success text-success",
  warning: "border-warning text-warning",
  danger: "border-danger text-danger",
  foreground: "border-foreground text-foreground hover:!bg-foreground"
};
var colorVariants = {
  solid,
  shadow,
  bordered,
  flat,
  faded,
  light,
  ghost
};
var COMMON_UNITS = ["small", "medium", "large"];
var twMergeConfig = {
  theme: {
    opacity: ["disabled"],
    spacing: ["divider"],
    borderWidth: COMMON_UNITS,
    borderRadius: COMMON_UNITS
  },
  classGroups: {
    shadow: [{ shadow: COMMON_UNITS }],
    "font-size": [{ text: ["tiny", ...COMMON_UNITS] }],
    "bg-image": ["bg-stripe-gradient"]
  }
};
var l = (e) => typeof e == "boolean" ? `${e}` : e === 0 ? "0" : e, u = (e) => !e || typeof e != "object" || Object.keys(e).length === 0, x = (e, o) => JSON.stringify(e) === JSON.stringify(o);
function i$1(e, o) {
  e.forEach(function(r2) {
    Array.isArray(r2) ? i$1(r2, o) : o.push(r2);
  });
}
function y(e) {
  let o = [];
  return i$1(e, o), o;
}
var a = (...e) => y(e).filter(Boolean), p = (e, o) => {
  let r2 = {}, c = Object.keys(e), f2 = Object.keys(o);
  for (let t2 of c) if (f2.includes(t2)) {
    let s = e[t2], n2 = o[t2];
    typeof s == "object" && typeof n2 == "object" ? r2[t2] = p(s, n2) : Array.isArray(s) || Array.isArray(n2) ? r2[t2] = a(n2, s) : r2[t2] = n2 + " " + s;
  } else r2[t2] = e[t2];
  for (let t2 of f2) c.includes(t2) || (r2[t2] = o[t2]);
  return r2;
}, g = (e) => !e || typeof e != "string" ? e : e.replace(/\s+/g, " ").trim();
function twJoin() {
  var index = 0;
  var argument;
  var resolvedValue;
  var string = "";
  while (index < arguments.length) {
    if (argument = arguments[index++]) {
      if (resolvedValue = toValue(argument)) {
        string && (string += " ");
        string += resolvedValue;
      }
    }
  }
  return string;
}
function toValue(mix2) {
  if (typeof mix2 === "string") {
    return mix2;
  }
  var resolvedValue;
  var string = "";
  for (var k2 = 0; k2 < mix2.length; k2++) {
    if (mix2[k2]) {
      if (resolvedValue = toValue(mix2[k2])) {
        string && (string += " ");
        string += resolvedValue;
      }
    }
  }
  return string;
}
var CLASS_PART_SEPARATOR = "-";
function createClassUtils(config) {
  var classMap = createClassMap(config);
  var conflictingClassGroups = config.conflictingClassGroups, _config$conflictingCl = config.conflictingClassGroupModifiers, conflictingClassGroupModifiers = _config$conflictingCl === void 0 ? {} : _config$conflictingCl;
  function getClassGroupId(className) {
    var classParts = className.split(CLASS_PART_SEPARATOR);
    if (classParts[0] === "" && classParts.length !== 1) {
      classParts.shift();
    }
    return getGroupRecursive(classParts, classMap) || getGroupIdForArbitraryProperty(className);
  }
  function getConflictingClassGroupIds(classGroupId, hasPostfixModifier) {
    var conflicts = conflictingClassGroups[classGroupId] || [];
    if (hasPostfixModifier && conflictingClassGroupModifiers[classGroupId]) {
      return [].concat(conflicts, conflictingClassGroupModifiers[classGroupId]);
    }
    return conflicts;
  }
  return {
    getClassGroupId,
    getConflictingClassGroupIds
  };
}
function getGroupRecursive(classParts, classPartObject) {
  var _a;
  if (classParts.length === 0) {
    return classPartObject.classGroupId;
  }
  var currentClassPart = classParts[0];
  var nextClassPartObject = classPartObject.nextPart.get(currentClassPart);
  var classGroupFromNextClassPart = nextClassPartObject ? getGroupRecursive(classParts.slice(1), nextClassPartObject) : void 0;
  if (classGroupFromNextClassPart) {
    return classGroupFromNextClassPart;
  }
  if (classPartObject.validators.length === 0) {
    return void 0;
  }
  var classRest = classParts.join(CLASS_PART_SEPARATOR);
  return (_a = classPartObject.validators.find(function(_ref) {
    var validator = _ref.validator;
    return validator(classRest);
  })) == null ? void 0 : _a.classGroupId;
}
var arbitraryPropertyRegex = /^\[(.+)\]$/;
function getGroupIdForArbitraryProperty(className) {
  if (arbitraryPropertyRegex.test(className)) {
    var arbitraryPropertyClassName = arbitraryPropertyRegex.exec(className)[1];
    var property = arbitraryPropertyClassName == null ? void 0 : arbitraryPropertyClassName.substring(0, arbitraryPropertyClassName.indexOf(":"));
    if (property) {
      return "arbitrary.." + property;
    }
  }
}
function createClassMap(config) {
  var theme = config.theme, prefix = config.prefix;
  var classMap = {
    nextPart: /* @__PURE__ */ new Map(),
    validators: []
  };
  var prefixedClassGroupEntries = getPrefixedClassGroupEntries(Object.entries(config.classGroups), prefix);
  prefixedClassGroupEntries.forEach(function(_ref2) {
    var classGroupId = _ref2[0], classGroup = _ref2[1];
    processClassesRecursively(classGroup, classMap, classGroupId, theme);
  });
  return classMap;
}
function processClassesRecursively(classGroup, classPartObject, classGroupId, theme) {
  classGroup.forEach(function(classDefinition) {
    if (typeof classDefinition === "string") {
      var classPartObjectToEdit = classDefinition === "" ? classPartObject : getPart(classPartObject, classDefinition);
      classPartObjectToEdit.classGroupId = classGroupId;
      return;
    }
    if (typeof classDefinition === "function") {
      if (isThemeGetter(classDefinition)) {
        processClassesRecursively(classDefinition(theme), classPartObject, classGroupId, theme);
        return;
      }
      classPartObject.validators.push({
        validator: classDefinition,
        classGroupId
      });
      return;
    }
    Object.entries(classDefinition).forEach(function(_ref3) {
      var key = _ref3[0], classGroup2 = _ref3[1];
      processClassesRecursively(classGroup2, getPart(classPartObject, key), classGroupId, theme);
    });
  });
}
function getPart(classPartObject, path) {
  var currentClassPartObject = classPartObject;
  path.split(CLASS_PART_SEPARATOR).forEach(function(pathPart) {
    if (!currentClassPartObject.nextPart.has(pathPart)) {
      currentClassPartObject.nextPart.set(pathPart, {
        nextPart: /* @__PURE__ */ new Map(),
        validators: []
      });
    }
    currentClassPartObject = currentClassPartObject.nextPart.get(pathPart);
  });
  return currentClassPartObject;
}
function isThemeGetter(func) {
  return func.isThemeGetter;
}
function getPrefixedClassGroupEntries(classGroupEntries, prefix) {
  if (!prefix) {
    return classGroupEntries;
  }
  return classGroupEntries.map(function(_ref4) {
    var classGroupId = _ref4[0], classGroup = _ref4[1];
    var prefixedClassGroup = classGroup.map(function(classDefinition) {
      if (typeof classDefinition === "string") {
        return prefix + classDefinition;
      }
      if (typeof classDefinition === "object") {
        return Object.fromEntries(Object.entries(classDefinition).map(function(_ref5) {
          var key = _ref5[0], value = _ref5[1];
          return [prefix + key, value];
        }));
      }
      return classDefinition;
    });
    return [classGroupId, prefixedClassGroup];
  });
}
function createLruCache(maxCacheSize) {
  if (maxCacheSize < 1) {
    return {
      get: function get3() {
        return void 0;
      },
      set: function set2() {
      }
    };
  }
  var cacheSize = 0;
  var cache = /* @__PURE__ */ new Map();
  var previousCache = /* @__PURE__ */ new Map();
  function update2(key, value) {
    cache.set(key, value);
    cacheSize++;
    if (cacheSize > maxCacheSize) {
      cacheSize = 0;
      previousCache = cache;
      cache = /* @__PURE__ */ new Map();
    }
  }
  return {
    get: function get3(key) {
      var value = cache.get(key);
      if (value !== void 0) {
        return value;
      }
      if ((value = previousCache.get(key)) !== void 0) {
        update2(key, value);
        return value;
      }
    },
    set: function set2(key, value) {
      if (cache.has(key)) {
        cache.set(key, value);
      } else {
        update2(key, value);
      }
    }
  };
}
var IMPORTANT_MODIFIER = "!";
function createSplitModifiers(config) {
  var separator = config.separator || ":";
  var isSeparatorSingleCharacter = separator.length === 1;
  var firstSeparatorCharacter = separator[0];
  var separatorLength = separator.length;
  return function splitModifiers(className) {
    var modifiers = [];
    var bracketDepth = 0;
    var modifierStart = 0;
    var postfixModifierPosition;
    for (var index = 0; index < className.length; index++) {
      var currentCharacter = className[index];
      if (bracketDepth === 0) {
        if (currentCharacter === firstSeparatorCharacter && (isSeparatorSingleCharacter || className.slice(index, index + separatorLength) === separator)) {
          modifiers.push(className.slice(modifierStart, index));
          modifierStart = index + separatorLength;
          continue;
        }
        if (currentCharacter === "/") {
          postfixModifierPosition = index;
          continue;
        }
      }
      if (currentCharacter === "[") {
        bracketDepth++;
      } else if (currentCharacter === "]") {
        bracketDepth--;
      }
    }
    var baseClassNameWithImportantModifier = modifiers.length === 0 ? className : className.substring(modifierStart);
    var hasImportantModifier = baseClassNameWithImportantModifier.startsWith(IMPORTANT_MODIFIER);
    var baseClassName = hasImportantModifier ? baseClassNameWithImportantModifier.substring(1) : baseClassNameWithImportantModifier;
    var maybePostfixModifierPosition = postfixModifierPosition && postfixModifierPosition > modifierStart ? postfixModifierPosition - modifierStart : void 0;
    return {
      modifiers,
      hasImportantModifier,
      baseClassName,
      maybePostfixModifierPosition
    };
  };
}
function sortModifiers(modifiers) {
  if (modifiers.length <= 1) {
    return modifiers;
  }
  var sortedModifiers = [];
  var unsortedModifiers = [];
  modifiers.forEach(function(modifier) {
    var isArbitraryVariant = modifier[0] === "[";
    if (isArbitraryVariant) {
      sortedModifiers.push.apply(sortedModifiers, unsortedModifiers.sort().concat([modifier]));
      unsortedModifiers = [];
    } else {
      unsortedModifiers.push(modifier);
    }
  });
  sortedModifiers.push.apply(sortedModifiers, unsortedModifiers.sort());
  return sortedModifiers;
}
function createConfigUtils(config) {
  return {
    cache: createLruCache(config.cacheSize),
    splitModifiers: createSplitModifiers(config),
    ...createClassUtils(config)
  };
}
var SPLIT_CLASSES_REGEX = /\s+/;
function mergeClassList(classList, configUtils) {
  var splitModifiers = configUtils.splitModifiers, getClassGroupId = configUtils.getClassGroupId, getConflictingClassGroupIds = configUtils.getConflictingClassGroupIds;
  var classGroupsInConflict = /* @__PURE__ */ new Set();
  return classList.trim().split(SPLIT_CLASSES_REGEX).map(function(originalClassName) {
    var _splitModifiers = splitModifiers(originalClassName), modifiers = _splitModifiers.modifiers, hasImportantModifier = _splitModifiers.hasImportantModifier, baseClassName = _splitModifiers.baseClassName, maybePostfixModifierPosition = _splitModifiers.maybePostfixModifierPosition;
    var classGroupId = getClassGroupId(maybePostfixModifierPosition ? baseClassName.substring(0, maybePostfixModifierPosition) : baseClassName);
    var hasPostfixModifier = Boolean(maybePostfixModifierPosition);
    if (!classGroupId) {
      if (!maybePostfixModifierPosition) {
        return {
          isTailwindClass: false,
          originalClassName
        };
      }
      classGroupId = getClassGroupId(baseClassName);
      if (!classGroupId) {
        return {
          isTailwindClass: false,
          originalClassName
        };
      }
      hasPostfixModifier = false;
    }
    var variantModifier = sortModifiers(modifiers).join(":");
    var modifierId = hasImportantModifier ? variantModifier + IMPORTANT_MODIFIER : variantModifier;
    return {
      isTailwindClass: true,
      modifierId,
      classGroupId,
      originalClassName,
      hasPostfixModifier
    };
  }).reverse().filter(function(parsed) {
    if (!parsed.isTailwindClass) {
      return true;
    }
    var modifierId = parsed.modifierId, classGroupId = parsed.classGroupId, hasPostfixModifier = parsed.hasPostfixModifier;
    var classId = modifierId + classGroupId;
    if (classGroupsInConflict.has(classId)) {
      return false;
    }
    classGroupsInConflict.add(classId);
    getConflictingClassGroupIds(classGroupId, hasPostfixModifier).forEach(function(group) {
      return classGroupsInConflict.add(modifierId + group);
    });
    return true;
  }).reverse().map(function(parsed) {
    return parsed.originalClassName;
  }).join(" ");
}
function createTailwindMerge() {
  for (var _len = arguments.length, createConfig = new Array(_len), _key = 0; _key < _len; _key++) {
    createConfig[_key] = arguments[_key];
  }
  var configUtils;
  var cacheGet;
  var cacheSet;
  var functionToCall = initTailwindMerge;
  function initTailwindMerge(classList) {
    var firstCreateConfig = createConfig[0], restCreateConfig = createConfig.slice(1);
    var config = restCreateConfig.reduce(function(previousConfig, createConfigCurrent) {
      return createConfigCurrent(previousConfig);
    }, firstCreateConfig());
    configUtils = createConfigUtils(config);
    cacheGet = configUtils.cache.get;
    cacheSet = configUtils.cache.set;
    functionToCall = tailwindMerge;
    return tailwindMerge(classList);
  }
  function tailwindMerge(classList) {
    var cachedResult = cacheGet(classList);
    if (cachedResult) {
      return cachedResult;
    }
    var result = mergeClassList(classList, configUtils);
    cacheSet(classList, result);
    return result;
  }
  return function callTailwindMerge() {
    return functionToCall(twJoin.apply(null, arguments));
  };
}
function fromTheme(key) {
  var themeGetter = function themeGetter2(theme) {
    return theme[key] || [];
  };
  themeGetter.isThemeGetter = true;
  return themeGetter;
}
var arbitraryValueRegex = /^\[(?:([a-z-]+):)?(.+)\]$/i;
var fractionRegex = /^\d+\/\d+$/;
var stringLengths = /* @__PURE__ */ new Set(["px", "full", "screen"]);
var tshirtUnitRegex = /^(\d+(\.\d+)?)?(xs|sm|md|lg|xl)$/;
var lengthUnitRegex = /\d+(%|px|r?em|[sdl]?v([hwib]|min|max)|pt|pc|in|cm|mm|cap|ch|ex|r?lh|cq(w|h|i|b|min|max))|\b(calc|min|max|clamp)\(.+\)|^0$/;
var shadowRegex = /^-?((\d+)?\.?(\d+)[a-z]+|0)_-?((\d+)?\.?(\d+)[a-z]+|0)/;
function isLength$3(value) {
  return isNumber$1(value) || stringLengths.has(value) || fractionRegex.test(value) || isArbitraryLength(value);
}
function isArbitraryLength(value) {
  return getIsArbitraryValue(value, "length", isLengthOnly);
}
function isArbitrarySize(value) {
  return getIsArbitraryValue(value, "size", isNever);
}
function isArbitraryPosition(value) {
  return getIsArbitraryValue(value, "position", isNever);
}
function isArbitraryUrl(value) {
  return getIsArbitraryValue(value, "url", isUrl);
}
function isArbitraryNumber(value) {
  return getIsArbitraryValue(value, "number", isNumber$1);
}
function isNumber$1(value) {
  return !Number.isNaN(Number(value));
}
function isPercent(value) {
  return value.endsWith("%") && isNumber$1(value.slice(0, -1));
}
function isInteger$1(value) {
  return isIntegerOnly(value) || getIsArbitraryValue(value, "number", isIntegerOnly);
}
function isArbitraryValue(value) {
  return arbitraryValueRegex.test(value);
}
function isAny() {
  return true;
}
function isTshirtSize(value) {
  return tshirtUnitRegex.test(value);
}
function isArbitraryShadow(value) {
  return getIsArbitraryValue(value, "", isShadow);
}
function getIsArbitraryValue(value, label, testValue) {
  var result = arbitraryValueRegex.exec(value);
  if (result) {
    if (result[1]) {
      return result[1] === label;
    }
    return testValue(result[2]);
  }
  return false;
}
function isLengthOnly(value) {
  return lengthUnitRegex.test(value);
}
function isNever() {
  return false;
}
function isUrl(value) {
  return value.startsWith("url(");
}
function isIntegerOnly(value) {
  return Number.isInteger(Number(value));
}
function isShadow(value) {
  return shadowRegex.test(value);
}
function getDefaultConfig() {
  var colors = fromTheme("colors");
  var spacing = fromTheme("spacing");
  var blur = fromTheme("blur");
  var brightness = fromTheme("brightness");
  var borderColor = fromTheme("borderColor");
  var borderRadius = fromTheme("borderRadius");
  var borderSpacing = fromTheme("borderSpacing");
  var borderWidth = fromTheme("borderWidth");
  var contrast = fromTheme("contrast");
  var grayscale = fromTheme("grayscale");
  var hueRotate = fromTheme("hueRotate");
  var invert = fromTheme("invert");
  var gap = fromTheme("gap");
  var gradientColorStops = fromTheme("gradientColorStops");
  var gradientColorStopPositions = fromTheme("gradientColorStopPositions");
  var inset = fromTheme("inset");
  var margin = fromTheme("margin");
  var opacity = fromTheme("opacity");
  var padding = fromTheme("padding");
  var saturate = fromTheme("saturate");
  var scale2 = fromTheme("scale");
  var sepia = fromTheme("sepia");
  var skew = fromTheme("skew");
  var space = fromTheme("space");
  var translate = fromTheme("translate");
  var getOverscroll = function getOverscroll2() {
    return ["auto", "contain", "none"];
  };
  var getOverflow = function getOverflow2() {
    return ["auto", "hidden", "clip", "visible", "scroll"];
  };
  var getSpacingWithAutoAndArbitrary = function getSpacingWithAutoAndArbitrary2() {
    return ["auto", isArbitraryValue, spacing];
  };
  var getSpacingWithArbitrary = function getSpacingWithArbitrary2() {
    return [isArbitraryValue, spacing];
  };
  var getLengthWithEmpty = function getLengthWithEmpty2() {
    return ["", isLength$3];
  };
  var getNumberWithAutoAndArbitrary = function getNumberWithAutoAndArbitrary2() {
    return ["auto", isNumber$1, isArbitraryValue];
  };
  var getPositions = function getPositions2() {
    return ["bottom", "center", "left", "left-bottom", "left-top", "right", "right-bottom", "right-top", "top"];
  };
  var getLineStyles = function getLineStyles2() {
    return ["solid", "dashed", "dotted", "double", "none"];
  };
  var getBlendModes = function getBlendModes2() {
    return ["normal", "multiply", "screen", "overlay", "darken", "lighten", "color-dodge", "color-burn", "hard-light", "soft-light", "difference", "exclusion", "hue", "saturation", "color", "luminosity", "plus-lighter"];
  };
  var getAlign = function getAlign2() {
    return ["start", "end", "center", "between", "around", "evenly", "stretch"];
  };
  var getZeroAndEmpty = function getZeroAndEmpty2() {
    return ["", "0", isArbitraryValue];
  };
  var getBreaks = function getBreaks2() {
    return ["auto", "avoid", "all", "avoid-page", "page", "left", "right", "column"];
  };
  var getNumber = function getNumber2() {
    return [isNumber$1, isArbitraryNumber];
  };
  var getNumberAndArbitrary = function getNumberAndArbitrary2() {
    return [isNumber$1, isArbitraryValue];
  };
  return {
    cacheSize: 500,
    theme: {
      colors: [isAny],
      spacing: [isLength$3],
      blur: ["none", "", isTshirtSize, isArbitraryValue],
      brightness: getNumber(),
      borderColor: [colors],
      borderRadius: ["none", "", "full", isTshirtSize, isArbitraryValue],
      borderSpacing: getSpacingWithArbitrary(),
      borderWidth: getLengthWithEmpty(),
      contrast: getNumber(),
      grayscale: getZeroAndEmpty(),
      hueRotate: getNumberAndArbitrary(),
      invert: getZeroAndEmpty(),
      gap: getSpacingWithArbitrary(),
      gradientColorStops: [colors],
      gradientColorStopPositions: [isPercent, isArbitraryLength],
      inset: getSpacingWithAutoAndArbitrary(),
      margin: getSpacingWithAutoAndArbitrary(),
      opacity: getNumber(),
      padding: getSpacingWithArbitrary(),
      saturate: getNumber(),
      scale: getNumber(),
      sepia: getZeroAndEmpty(),
      skew: getNumberAndArbitrary(),
      space: getSpacingWithArbitrary(),
      translate: getSpacingWithArbitrary()
    },
    classGroups: {
      // Layout
      /**
       * Aspect Ratio
       * @see https://tailwindcss.com/docs/aspect-ratio
       */
      aspect: [{
        aspect: ["auto", "square", "video", isArbitraryValue]
      }],
      /**
       * Container
       * @see https://tailwindcss.com/docs/container
       */
      container: ["container"],
      /**
       * Columns
       * @see https://tailwindcss.com/docs/columns
       */
      columns: [{
        columns: [isTshirtSize]
      }],
      /**
       * Break After
       * @see https://tailwindcss.com/docs/break-after
       */
      "break-after": [{
        "break-after": getBreaks()
      }],
      /**
       * Break Before
       * @see https://tailwindcss.com/docs/break-before
       */
      "break-before": [{
        "break-before": getBreaks()
      }],
      /**
       * Break Inside
       * @see https://tailwindcss.com/docs/break-inside
       */
      "break-inside": [{
        "break-inside": ["auto", "avoid", "avoid-page", "avoid-column"]
      }],
      /**
       * Box Decoration Break
       * @see https://tailwindcss.com/docs/box-decoration-break
       */
      "box-decoration": [{
        "box-decoration": ["slice", "clone"]
      }],
      /**
       * Box Sizing
       * @see https://tailwindcss.com/docs/box-sizing
       */
      box: [{
        box: ["border", "content"]
      }],
      /**
       * Display
       * @see https://tailwindcss.com/docs/display
       */
      display: ["block", "inline-block", "inline", "flex", "inline-flex", "table", "inline-table", "table-caption", "table-cell", "table-column", "table-column-group", "table-footer-group", "table-header-group", "table-row-group", "table-row", "flow-root", "grid", "inline-grid", "contents", "list-item", "hidden"],
      /**
       * Floats
       * @see https://tailwindcss.com/docs/float
       */
      "float": [{
        "float": ["right", "left", "none"]
      }],
      /**
       * Clear
       * @see https://tailwindcss.com/docs/clear
       */
      clear: [{
        clear: ["left", "right", "both", "none"]
      }],
      /**
       * Isolation
       * @see https://tailwindcss.com/docs/isolation
       */
      isolation: ["isolate", "isolation-auto"],
      /**
       * Object Fit
       * @see https://tailwindcss.com/docs/object-fit
       */
      "object-fit": [{
        object: ["contain", "cover", "fill", "none", "scale-down"]
      }],
      /**
       * Object Position
       * @see https://tailwindcss.com/docs/object-position
       */
      "object-position": [{
        object: [].concat(getPositions(), [isArbitraryValue])
      }],
      /**
       * Overflow
       * @see https://tailwindcss.com/docs/overflow
       */
      overflow: [{
        overflow: getOverflow()
      }],
      /**
       * Overflow X
       * @see https://tailwindcss.com/docs/overflow
       */
      "overflow-x": [{
        "overflow-x": getOverflow()
      }],
      /**
       * Overflow Y
       * @see https://tailwindcss.com/docs/overflow
       */
      "overflow-y": [{
        "overflow-y": getOverflow()
      }],
      /**
       * Overscroll Behavior
       * @see https://tailwindcss.com/docs/overscroll-behavior
       */
      overscroll: [{
        overscroll: getOverscroll()
      }],
      /**
       * Overscroll Behavior X
       * @see https://tailwindcss.com/docs/overscroll-behavior
       */
      "overscroll-x": [{
        "overscroll-x": getOverscroll()
      }],
      /**
       * Overscroll Behavior Y
       * @see https://tailwindcss.com/docs/overscroll-behavior
       */
      "overscroll-y": [{
        "overscroll-y": getOverscroll()
      }],
      /**
       * Position
       * @see https://tailwindcss.com/docs/position
       */
      position: ["static", "fixed", "absolute", "relative", "sticky"],
      /**
       * Top / Right / Bottom / Left
       * @see https://tailwindcss.com/docs/top-right-bottom-left
       */
      inset: [{
        inset: [inset]
      }],
      /**
       * Right / Left
       * @see https://tailwindcss.com/docs/top-right-bottom-left
       */
      "inset-x": [{
        "inset-x": [inset]
      }],
      /**
       * Top / Bottom
       * @see https://tailwindcss.com/docs/top-right-bottom-left
       */
      "inset-y": [{
        "inset-y": [inset]
      }],
      /**
       * Start
       * @see https://tailwindcss.com/docs/top-right-bottom-left
       */
      start: [{
        start: [inset]
      }],
      /**
       * End
       * @see https://tailwindcss.com/docs/top-right-bottom-left
       */
      end: [{
        end: [inset]
      }],
      /**
       * Top
       * @see https://tailwindcss.com/docs/top-right-bottom-left
       */
      top: [{
        top: [inset]
      }],
      /**
       * Right
       * @see https://tailwindcss.com/docs/top-right-bottom-left
       */
      right: [{
        right: [inset]
      }],
      /**
       * Bottom
       * @see https://tailwindcss.com/docs/top-right-bottom-left
       */
      bottom: [{
        bottom: [inset]
      }],
      /**
       * Left
       * @see https://tailwindcss.com/docs/top-right-bottom-left
       */
      left: [{
        left: [inset]
      }],
      /**
       * Visibility
       * @see https://tailwindcss.com/docs/visibility
       */
      visibility: ["visible", "invisible", "collapse"],
      /**
       * Z-Index
       * @see https://tailwindcss.com/docs/z-index
       */
      z: [{
        z: ["auto", isInteger$1]
      }],
      // Flexbox and Grid
      /**
       * Flex Basis
       * @see https://tailwindcss.com/docs/flex-basis
       */
      basis: [{
        basis: getSpacingWithAutoAndArbitrary()
      }],
      /**
       * Flex Direction
       * @see https://tailwindcss.com/docs/flex-direction
       */
      "flex-direction": [{
        flex: ["row", "row-reverse", "col", "col-reverse"]
      }],
      /**
       * Flex Wrap
       * @see https://tailwindcss.com/docs/flex-wrap
       */
      "flex-wrap": [{
        flex: ["wrap", "wrap-reverse", "nowrap"]
      }],
      /**
       * Flex
       * @see https://tailwindcss.com/docs/flex
       */
      flex: [{
        flex: ["1", "auto", "initial", "none", isArbitraryValue]
      }],
      /**
       * Flex Grow
       * @see https://tailwindcss.com/docs/flex-grow
       */
      grow: [{
        grow: getZeroAndEmpty()
      }],
      /**
       * Flex Shrink
       * @see https://tailwindcss.com/docs/flex-shrink
       */
      shrink: [{
        shrink: getZeroAndEmpty()
      }],
      /**
       * Order
       * @see https://tailwindcss.com/docs/order
       */
      order: [{
        order: ["first", "last", "none", isInteger$1]
      }],
      /**
       * Grid Template Columns
       * @see https://tailwindcss.com/docs/grid-template-columns
       */
      "grid-cols": [{
        "grid-cols": [isAny]
      }],
      /**
       * Grid Column Start / End
       * @see https://tailwindcss.com/docs/grid-column
       */
      "col-start-end": [{
        col: ["auto", {
          span: ["full", isInteger$1]
        }, isArbitraryValue]
      }],
      /**
       * Grid Column Start
       * @see https://tailwindcss.com/docs/grid-column
       */
      "col-start": [{
        "col-start": getNumberWithAutoAndArbitrary()
      }],
      /**
       * Grid Column End
       * @see https://tailwindcss.com/docs/grid-column
       */
      "col-end": [{
        "col-end": getNumberWithAutoAndArbitrary()
      }],
      /**
       * Grid Template Rows
       * @see https://tailwindcss.com/docs/grid-template-rows
       */
      "grid-rows": [{
        "grid-rows": [isAny]
      }],
      /**
       * Grid Row Start / End
       * @see https://tailwindcss.com/docs/grid-row
       */
      "row-start-end": [{
        row: ["auto", {
          span: [isInteger$1]
        }, isArbitraryValue]
      }],
      /**
       * Grid Row Start
       * @see https://tailwindcss.com/docs/grid-row
       */
      "row-start": [{
        "row-start": getNumberWithAutoAndArbitrary()
      }],
      /**
       * Grid Row End
       * @see https://tailwindcss.com/docs/grid-row
       */
      "row-end": [{
        "row-end": getNumberWithAutoAndArbitrary()
      }],
      /**
       * Grid Auto Flow
       * @see https://tailwindcss.com/docs/grid-auto-flow
       */
      "grid-flow": [{
        "grid-flow": ["row", "col", "dense", "row-dense", "col-dense"]
      }],
      /**
       * Grid Auto Columns
       * @see https://tailwindcss.com/docs/grid-auto-columns
       */
      "auto-cols": [{
        "auto-cols": ["auto", "min", "max", "fr", isArbitraryValue]
      }],
      /**
       * Grid Auto Rows
       * @see https://tailwindcss.com/docs/grid-auto-rows
       */
      "auto-rows": [{
        "auto-rows": ["auto", "min", "max", "fr", isArbitraryValue]
      }],
      /**
       * Gap
       * @see https://tailwindcss.com/docs/gap
       */
      gap: [{
        gap: [gap]
      }],
      /**
       * Gap X
       * @see https://tailwindcss.com/docs/gap
       */
      "gap-x": [{
        "gap-x": [gap]
      }],
      /**
       * Gap Y
       * @see https://tailwindcss.com/docs/gap
       */
      "gap-y": [{
        "gap-y": [gap]
      }],
      /**
       * Justify Content
       * @see https://tailwindcss.com/docs/justify-content
       */
      "justify-content": [{
        justify: ["normal"].concat(getAlign())
      }],
      /**
       * Justify Items
       * @see https://tailwindcss.com/docs/justify-items
       */
      "justify-items": [{
        "justify-items": ["start", "end", "center", "stretch"]
      }],
      /**
       * Justify Self
       * @see https://tailwindcss.com/docs/justify-self
       */
      "justify-self": [{
        "justify-self": ["auto", "start", "end", "center", "stretch"]
      }],
      /**
       * Align Content
       * @see https://tailwindcss.com/docs/align-content
       */
      "align-content": [{
        content: ["normal"].concat(getAlign(), ["baseline"])
      }],
      /**
       * Align Items
       * @see https://tailwindcss.com/docs/align-items
       */
      "align-items": [{
        items: ["start", "end", "center", "baseline", "stretch"]
      }],
      /**
       * Align Self
       * @see https://tailwindcss.com/docs/align-self
       */
      "align-self": [{
        self: ["auto", "start", "end", "center", "stretch", "baseline"]
      }],
      /**
       * Place Content
       * @see https://tailwindcss.com/docs/place-content
       */
      "place-content": [{
        "place-content": [].concat(getAlign(), ["baseline"])
      }],
      /**
       * Place Items
       * @see https://tailwindcss.com/docs/place-items
       */
      "place-items": [{
        "place-items": ["start", "end", "center", "baseline", "stretch"]
      }],
      /**
       * Place Self
       * @see https://tailwindcss.com/docs/place-self
       */
      "place-self": [{
        "place-self": ["auto", "start", "end", "center", "stretch"]
      }],
      // Spacing
      /**
       * Padding
       * @see https://tailwindcss.com/docs/padding
       */
      p: [{
        p: [padding]
      }],
      /**
       * Padding X
       * @see https://tailwindcss.com/docs/padding
       */
      px: [{
        px: [padding]
      }],
      /**
       * Padding Y
       * @see https://tailwindcss.com/docs/padding
       */
      py: [{
        py: [padding]
      }],
      /**
       * Padding Start
       * @see https://tailwindcss.com/docs/padding
       */
      ps: [{
        ps: [padding]
      }],
      /**
       * Padding End
       * @see https://tailwindcss.com/docs/padding
       */
      pe: [{
        pe: [padding]
      }],
      /**
       * Padding Top
       * @see https://tailwindcss.com/docs/padding
       */
      pt: [{
        pt: [padding]
      }],
      /**
       * Padding Right
       * @see https://tailwindcss.com/docs/padding
       */
      pr: [{
        pr: [padding]
      }],
      /**
       * Padding Bottom
       * @see https://tailwindcss.com/docs/padding
       */
      pb: [{
        pb: [padding]
      }],
      /**
       * Padding Left
       * @see https://tailwindcss.com/docs/padding
       */
      pl: [{
        pl: [padding]
      }],
      /**
       * Margin
       * @see https://tailwindcss.com/docs/margin
       */
      m: [{
        m: [margin]
      }],
      /**
       * Margin X
       * @see https://tailwindcss.com/docs/margin
       */
      mx: [{
        mx: [margin]
      }],
      /**
       * Margin Y
       * @see https://tailwindcss.com/docs/margin
       */
      my: [{
        my: [margin]
      }],
      /**
       * Margin Start
       * @see https://tailwindcss.com/docs/margin
       */
      ms: [{
        ms: [margin]
      }],
      /**
       * Margin End
       * @see https://tailwindcss.com/docs/margin
       */
      me: [{
        me: [margin]
      }],
      /**
       * Margin Top
       * @see https://tailwindcss.com/docs/margin
       */
      mt: [{
        mt: [margin]
      }],
      /**
       * Margin Right
       * @see https://tailwindcss.com/docs/margin
       */
      mr: [{
        mr: [margin]
      }],
      /**
       * Margin Bottom
       * @see https://tailwindcss.com/docs/margin
       */
      mb: [{
        mb: [margin]
      }],
      /**
       * Margin Left
       * @see https://tailwindcss.com/docs/margin
       */
      ml: [{
        ml: [margin]
      }],
      /**
       * Space Between X
       * @see https://tailwindcss.com/docs/space
       */
      "space-x": [{
        "space-x": [space]
      }],
      /**
       * Space Between X Reverse
       * @see https://tailwindcss.com/docs/space
       */
      "space-x-reverse": ["space-x-reverse"],
      /**
       * Space Between Y
       * @see https://tailwindcss.com/docs/space
       */
      "space-y": [{
        "space-y": [space]
      }],
      /**
       * Space Between Y Reverse
       * @see https://tailwindcss.com/docs/space
       */
      "space-y-reverse": ["space-y-reverse"],
      // Sizing
      /**
       * Width
       * @see https://tailwindcss.com/docs/width
       */
      w: [{
        w: ["auto", "min", "max", "fit", isArbitraryValue, spacing]
      }],
      /**
       * Min-Width
       * @see https://tailwindcss.com/docs/min-width
       */
      "min-w": [{
        "min-w": ["min", "max", "fit", isArbitraryValue, isLength$3]
      }],
      /**
       * Max-Width
       * @see https://tailwindcss.com/docs/max-width
       */
      "max-w": [{
        "max-w": ["0", "none", "full", "min", "max", "fit", "prose", {
          screen: [isTshirtSize]
        }, isTshirtSize, isArbitraryValue]
      }],
      /**
       * Height
       * @see https://tailwindcss.com/docs/height
       */
      h: [{
        h: [isArbitraryValue, spacing, "auto", "min", "max", "fit"]
      }],
      /**
       * Min-Height
       * @see https://tailwindcss.com/docs/min-height
       */
      "min-h": [{
        "min-h": ["min", "max", "fit", isArbitraryValue, isLength$3]
      }],
      /**
       * Max-Height
       * @see https://tailwindcss.com/docs/max-height
       */
      "max-h": [{
        "max-h": [isArbitraryValue, spacing, "min", "max", "fit"]
      }],
      // Typography
      /**
       * Font Size
       * @see https://tailwindcss.com/docs/font-size
       */
      "font-size": [{
        text: ["base", isTshirtSize, isArbitraryLength]
      }],
      /**
       * Font Smoothing
       * @see https://tailwindcss.com/docs/font-smoothing
       */
      "font-smoothing": ["antialiased", "subpixel-antialiased"],
      /**
       * Font Style
       * @see https://tailwindcss.com/docs/font-style
       */
      "font-style": ["italic", "not-italic"],
      /**
       * Font Weight
       * @see https://tailwindcss.com/docs/font-weight
       */
      "font-weight": [{
        font: ["thin", "extralight", "light", "normal", "medium", "semibold", "bold", "extrabold", "black", isArbitraryNumber]
      }],
      /**
       * Font Family
       * @see https://tailwindcss.com/docs/font-family
       */
      "font-family": [{
        font: [isAny]
      }],
      /**
       * Font Variant Numeric
       * @see https://tailwindcss.com/docs/font-variant-numeric
       */
      "fvn-normal": ["normal-nums"],
      /**
       * Font Variant Numeric
       * @see https://tailwindcss.com/docs/font-variant-numeric
       */
      "fvn-ordinal": ["ordinal"],
      /**
       * Font Variant Numeric
       * @see https://tailwindcss.com/docs/font-variant-numeric
       */
      "fvn-slashed-zero": ["slashed-zero"],
      /**
       * Font Variant Numeric
       * @see https://tailwindcss.com/docs/font-variant-numeric
       */
      "fvn-figure": ["lining-nums", "oldstyle-nums"],
      /**
       * Font Variant Numeric
       * @see https://tailwindcss.com/docs/font-variant-numeric
       */
      "fvn-spacing": ["proportional-nums", "tabular-nums"],
      /**
       * Font Variant Numeric
       * @see https://tailwindcss.com/docs/font-variant-numeric
       */
      "fvn-fraction": ["diagonal-fractions", "stacked-fractons"],
      /**
       * Letter Spacing
       * @see https://tailwindcss.com/docs/letter-spacing
       */
      tracking: [{
        tracking: ["tighter", "tight", "normal", "wide", "wider", "widest", isArbitraryValue]
      }],
      /**
       * Line Clamp
       * @see https://tailwindcss.com/docs/line-clamp
       */
      "line-clamp": [{
        "line-clamp": ["none", isNumber$1, isArbitraryNumber]
      }],
      /**
       * Line Height
       * @see https://tailwindcss.com/docs/line-height
       */
      leading: [{
        leading: ["none", "tight", "snug", "normal", "relaxed", "loose", isArbitraryValue, isLength$3]
      }],
      /**
       * List Style Image
       * @see https://tailwindcss.com/docs/list-style-image
       */
      "list-image": [{
        "list-image": ["none", isArbitraryValue]
      }],
      /**
       * List Style Type
       * @see https://tailwindcss.com/docs/list-style-type
       */
      "list-style-type": [{
        list: ["none", "disc", "decimal", isArbitraryValue]
      }],
      /**
       * List Style Position
       * @see https://tailwindcss.com/docs/list-style-position
       */
      "list-style-position": [{
        list: ["inside", "outside"]
      }],
      /**
       * Placeholder Color
       * @deprecated since Tailwind CSS v3.0.0
       * @see https://tailwindcss.com/docs/placeholder-color
       */
      "placeholder-color": [{
        placeholder: [colors]
      }],
      /**
       * Placeholder Opacity
       * @see https://tailwindcss.com/docs/placeholder-opacity
       */
      "placeholder-opacity": [{
        "placeholder-opacity": [opacity]
      }],
      /**
       * Text Alignment
       * @see https://tailwindcss.com/docs/text-align
       */
      "text-alignment": [{
        text: ["left", "center", "right", "justify", "start", "end"]
      }],
      /**
       * Text Color
       * @see https://tailwindcss.com/docs/text-color
       */
      "text-color": [{
        text: [colors]
      }],
      /**
       * Text Opacity
       * @see https://tailwindcss.com/docs/text-opacity
       */
      "text-opacity": [{
        "text-opacity": [opacity]
      }],
      /**
       * Text Decoration
       * @see https://tailwindcss.com/docs/text-decoration
       */
      "text-decoration": ["underline", "overline", "line-through", "no-underline"],
      /**
       * Text Decoration Style
       * @see https://tailwindcss.com/docs/text-decoration-style
       */
      "text-decoration-style": [{
        decoration: [].concat(getLineStyles(), ["wavy"])
      }],
      /**
       * Text Decoration Thickness
       * @see https://tailwindcss.com/docs/text-decoration-thickness
       */
      "text-decoration-thickness": [{
        decoration: ["auto", "from-font", isLength$3]
      }],
      /**
       * Text Underline Offset
       * @see https://tailwindcss.com/docs/text-underline-offset
       */
      "underline-offset": [{
        "underline-offset": ["auto", isArbitraryValue, isLength$3]
      }],
      /**
       * Text Decoration Color
       * @see https://tailwindcss.com/docs/text-decoration-color
       */
      "text-decoration-color": [{
        decoration: [colors]
      }],
      /**
       * Text Transform
       * @see https://tailwindcss.com/docs/text-transform
       */
      "text-transform": ["uppercase", "lowercase", "capitalize", "normal-case"],
      /**
       * Text Overflow
       * @see https://tailwindcss.com/docs/text-overflow
       */
      "text-overflow": ["truncate", "text-ellipsis", "text-clip"],
      /**
       * Text Indent
       * @see https://tailwindcss.com/docs/text-indent
       */
      indent: [{
        indent: getSpacingWithArbitrary()
      }],
      /**
       * Vertical Alignment
       * @see https://tailwindcss.com/docs/vertical-align
       */
      "vertical-align": [{
        align: ["baseline", "top", "middle", "bottom", "text-top", "text-bottom", "sub", "super", isArbitraryValue]
      }],
      /**
       * Whitespace
       * @see https://tailwindcss.com/docs/whitespace
       */
      whitespace: [{
        whitespace: ["normal", "nowrap", "pre", "pre-line", "pre-wrap", "break-spaces"]
      }],
      /**
       * Word Break
       * @see https://tailwindcss.com/docs/word-break
       */
      "break": [{
        "break": ["normal", "words", "all", "keep"]
      }],
      /**
       * Hyphens
       * @see https://tailwindcss.com/docs/hyphens
       */
      hyphens: [{
        hyphens: ["none", "manual", "auto"]
      }],
      /**
       * Content
       * @see https://tailwindcss.com/docs/content
       */
      content: [{
        content: ["none", isArbitraryValue]
      }],
      // Backgrounds
      /**
       * Background Attachment
       * @see https://tailwindcss.com/docs/background-attachment
       */
      "bg-attachment": [{
        bg: ["fixed", "local", "scroll"]
      }],
      /**
       * Background Clip
       * @see https://tailwindcss.com/docs/background-clip
       */
      "bg-clip": [{
        "bg-clip": ["border", "padding", "content", "text"]
      }],
      /**
       * Background Opacity
       * @deprecated since Tailwind CSS v3.0.0
       * @see https://tailwindcss.com/docs/background-opacity
       */
      "bg-opacity": [{
        "bg-opacity": [opacity]
      }],
      /**
       * Background Origin
       * @see https://tailwindcss.com/docs/background-origin
       */
      "bg-origin": [{
        "bg-origin": ["border", "padding", "content"]
      }],
      /**
       * Background Position
       * @see https://tailwindcss.com/docs/background-position
       */
      "bg-position": [{
        bg: [].concat(getPositions(), [isArbitraryPosition])
      }],
      /**
       * Background Repeat
       * @see https://tailwindcss.com/docs/background-repeat
       */
      "bg-repeat": [{
        bg: ["no-repeat", {
          repeat: ["", "x", "y", "round", "space"]
        }]
      }],
      /**
       * Background Size
       * @see https://tailwindcss.com/docs/background-size
       */
      "bg-size": [{
        bg: ["auto", "cover", "contain", isArbitrarySize]
      }],
      /**
       * Background Image
       * @see https://tailwindcss.com/docs/background-image
       */
      "bg-image": [{
        bg: ["none", {
          "gradient-to": ["t", "tr", "r", "br", "b", "bl", "l", "tl"]
        }, isArbitraryUrl]
      }],
      /**
       * Background Color
       * @see https://tailwindcss.com/docs/background-color
       */
      "bg-color": [{
        bg: [colors]
      }],
      /**
       * Gradient Color Stops From Position
       * @see https://tailwindcss.com/docs/gradient-color-stops
       */
      "gradient-from-pos": [{
        from: [gradientColorStopPositions]
      }],
      /**
       * Gradient Color Stops Via Position
       * @see https://tailwindcss.com/docs/gradient-color-stops
       */
      "gradient-via-pos": [{
        via: [gradientColorStopPositions]
      }],
      /**
       * Gradient Color Stops To Position
       * @see https://tailwindcss.com/docs/gradient-color-stops
       */
      "gradient-to-pos": [{
        to: [gradientColorStopPositions]
      }],
      /**
       * Gradient Color Stops From
       * @see https://tailwindcss.com/docs/gradient-color-stops
       */
      "gradient-from": [{
        from: [gradientColorStops]
      }],
      /**
       * Gradient Color Stops Via
       * @see https://tailwindcss.com/docs/gradient-color-stops
       */
      "gradient-via": [{
        via: [gradientColorStops]
      }],
      /**
       * Gradient Color Stops To
       * @see https://tailwindcss.com/docs/gradient-color-stops
       */
      "gradient-to": [{
        to: [gradientColorStops]
      }],
      // Borders
      /**
       * Border Radius
       * @see https://tailwindcss.com/docs/border-radius
       */
      rounded: [{
        rounded: [borderRadius]
      }],
      /**
       * Border Radius Start
       * @see https://tailwindcss.com/docs/border-radius
       */
      "rounded-s": [{
        "rounded-s": [borderRadius]
      }],
      /**
       * Border Radius End
       * @see https://tailwindcss.com/docs/border-radius
       */
      "rounded-e": [{
        "rounded-e": [borderRadius]
      }],
      /**
       * Border Radius Top
       * @see https://tailwindcss.com/docs/border-radius
       */
      "rounded-t": [{
        "rounded-t": [borderRadius]
      }],
      /**
       * Border Radius Right
       * @see https://tailwindcss.com/docs/border-radius
       */
      "rounded-r": [{
        "rounded-r": [borderRadius]
      }],
      /**
       * Border Radius Bottom
       * @see https://tailwindcss.com/docs/border-radius
       */
      "rounded-b": [{
        "rounded-b": [borderRadius]
      }],
      /**
       * Border Radius Left
       * @see https://tailwindcss.com/docs/border-radius
       */
      "rounded-l": [{
        "rounded-l": [borderRadius]
      }],
      /**
       * Border Radius Start Start
       * @see https://tailwindcss.com/docs/border-radius
       */
      "rounded-ss": [{
        "rounded-ss": [borderRadius]
      }],
      /**
       * Border Radius Start End
       * @see https://tailwindcss.com/docs/border-radius
       */
      "rounded-se": [{
        "rounded-se": [borderRadius]
      }],
      /**
       * Border Radius End End
       * @see https://tailwindcss.com/docs/border-radius
       */
      "rounded-ee": [{
        "rounded-ee": [borderRadius]
      }],
      /**
       * Border Radius End Start
       * @see https://tailwindcss.com/docs/border-radius
       */
      "rounded-es": [{
        "rounded-es": [borderRadius]
      }],
      /**
       * Border Radius Top Left
       * @see https://tailwindcss.com/docs/border-radius
       */
      "rounded-tl": [{
        "rounded-tl": [borderRadius]
      }],
      /**
       * Border Radius Top Right
       * @see https://tailwindcss.com/docs/border-radius
       */
      "rounded-tr": [{
        "rounded-tr": [borderRadius]
      }],
      /**
       * Border Radius Bottom Right
       * @see https://tailwindcss.com/docs/border-radius
       */
      "rounded-br": [{
        "rounded-br": [borderRadius]
      }],
      /**
       * Border Radius Bottom Left
       * @see https://tailwindcss.com/docs/border-radius
       */
      "rounded-bl": [{
        "rounded-bl": [borderRadius]
      }],
      /**
       * Border Width
       * @see https://tailwindcss.com/docs/border-width
       */
      "border-w": [{
        border: [borderWidth]
      }],
      /**
       * Border Width X
       * @see https://tailwindcss.com/docs/border-width
       */
      "border-w-x": [{
        "border-x": [borderWidth]
      }],
      /**
       * Border Width Y
       * @see https://tailwindcss.com/docs/border-width
       */
      "border-w-y": [{
        "border-y": [borderWidth]
      }],
      /**
       * Border Width Start
       * @see https://tailwindcss.com/docs/border-width
       */
      "border-w-s": [{
        "border-s": [borderWidth]
      }],
      /**
       * Border Width End
       * @see https://tailwindcss.com/docs/border-width
       */
      "border-w-e": [{
        "border-e": [borderWidth]
      }],
      /**
       * Border Width Top
       * @see https://tailwindcss.com/docs/border-width
       */
      "border-w-t": [{
        "border-t": [borderWidth]
      }],
      /**
       * Border Width Right
       * @see https://tailwindcss.com/docs/border-width
       */
      "border-w-r": [{
        "border-r": [borderWidth]
      }],
      /**
       * Border Width Bottom
       * @see https://tailwindcss.com/docs/border-width
       */
      "border-w-b": [{
        "border-b": [borderWidth]
      }],
      /**
       * Border Width Left
       * @see https://tailwindcss.com/docs/border-width
       */
      "border-w-l": [{
        "border-l": [borderWidth]
      }],
      /**
       * Border Opacity
       * @see https://tailwindcss.com/docs/border-opacity
       */
      "border-opacity": [{
        "border-opacity": [opacity]
      }],
      /**
       * Border Style
       * @see https://tailwindcss.com/docs/border-style
       */
      "border-style": [{
        border: [].concat(getLineStyles(), ["hidden"])
      }],
      /**
       * Divide Width X
       * @see https://tailwindcss.com/docs/divide-width
       */
      "divide-x": [{
        "divide-x": [borderWidth]
      }],
      /**
       * Divide Width X Reverse
       * @see https://tailwindcss.com/docs/divide-width
       */
      "divide-x-reverse": ["divide-x-reverse"],
      /**
       * Divide Width Y
       * @see https://tailwindcss.com/docs/divide-width
       */
      "divide-y": [{
        "divide-y": [borderWidth]
      }],
      /**
       * Divide Width Y Reverse
       * @see https://tailwindcss.com/docs/divide-width
       */
      "divide-y-reverse": ["divide-y-reverse"],
      /**
       * Divide Opacity
       * @see https://tailwindcss.com/docs/divide-opacity
       */
      "divide-opacity": [{
        "divide-opacity": [opacity]
      }],
      /**
       * Divide Style
       * @see https://tailwindcss.com/docs/divide-style
       */
      "divide-style": [{
        divide: getLineStyles()
      }],
      /**
       * Border Color
       * @see https://tailwindcss.com/docs/border-color
       */
      "border-color": [{
        border: [borderColor]
      }],
      /**
       * Border Color X
       * @see https://tailwindcss.com/docs/border-color
       */
      "border-color-x": [{
        "border-x": [borderColor]
      }],
      /**
       * Border Color Y
       * @see https://tailwindcss.com/docs/border-color
       */
      "border-color-y": [{
        "border-y": [borderColor]
      }],
      /**
       * Border Color Top
       * @see https://tailwindcss.com/docs/border-color
       */
      "border-color-t": [{
        "border-t": [borderColor]
      }],
      /**
       * Border Color Right
       * @see https://tailwindcss.com/docs/border-color
       */
      "border-color-r": [{
        "border-r": [borderColor]
      }],
      /**
       * Border Color Bottom
       * @see https://tailwindcss.com/docs/border-color
       */
      "border-color-b": [{
        "border-b": [borderColor]
      }],
      /**
       * Border Color Left
       * @see https://tailwindcss.com/docs/border-color
       */
      "border-color-l": [{
        "border-l": [borderColor]
      }],
      /**
       * Divide Color
       * @see https://tailwindcss.com/docs/divide-color
       */
      "divide-color": [{
        divide: [borderColor]
      }],
      /**
       * Outline Style
       * @see https://tailwindcss.com/docs/outline-style
       */
      "outline-style": [{
        outline: [""].concat(getLineStyles())
      }],
      /**
       * Outline Offset
       * @see https://tailwindcss.com/docs/outline-offset
       */
      "outline-offset": [{
        "outline-offset": [isArbitraryValue, isLength$3]
      }],
      /**
       * Outline Width
       * @see https://tailwindcss.com/docs/outline-width
       */
      "outline-w": [{
        outline: [isLength$3]
      }],
      /**
       * Outline Color
       * @see https://tailwindcss.com/docs/outline-color
       */
      "outline-color": [{
        outline: [colors]
      }],
      /**
       * Ring Width
       * @see https://tailwindcss.com/docs/ring-width
       */
      "ring-w": [{
        ring: getLengthWithEmpty()
      }],
      /**
       * Ring Width Inset
       * @see https://tailwindcss.com/docs/ring-width
       */
      "ring-w-inset": ["ring-inset"],
      /**
       * Ring Color
       * @see https://tailwindcss.com/docs/ring-color
       */
      "ring-color": [{
        ring: [colors]
      }],
      /**
       * Ring Opacity
       * @see https://tailwindcss.com/docs/ring-opacity
       */
      "ring-opacity": [{
        "ring-opacity": [opacity]
      }],
      /**
       * Ring Offset Width
       * @see https://tailwindcss.com/docs/ring-offset-width
       */
      "ring-offset-w": [{
        "ring-offset": [isLength$3]
      }],
      /**
       * Ring Offset Color
       * @see https://tailwindcss.com/docs/ring-offset-color
       */
      "ring-offset-color": [{
        "ring-offset": [colors]
      }],
      // Effects
      /**
       * Box Shadow
       * @see https://tailwindcss.com/docs/box-shadow
       */
      shadow: [{
        shadow: ["", "inner", "none", isTshirtSize, isArbitraryShadow]
      }],
      /**
       * Box Shadow Color
       * @see https://tailwindcss.com/docs/box-shadow-color
       */
      "shadow-color": [{
        shadow: [isAny]
      }],
      /**
       * Opacity
       * @see https://tailwindcss.com/docs/opacity
       */
      opacity: [{
        opacity: [opacity]
      }],
      /**
       * Mix Blend Mode
       * @see https://tailwindcss.com/docs/mix-blend-mode
       */
      "mix-blend": [{
        "mix-blend": getBlendModes()
      }],
      /**
       * Background Blend Mode
       * @see https://tailwindcss.com/docs/background-blend-mode
       */
      "bg-blend": [{
        "bg-blend": getBlendModes()
      }],
      // Filters
      /**
       * Filter
       * @deprecated since Tailwind CSS v3.0.0
       * @see https://tailwindcss.com/docs/filter
       */
      filter: [{
        filter: ["", "none"]
      }],
      /**
       * Blur
       * @see https://tailwindcss.com/docs/blur
       */
      blur: [{
        blur: [blur]
      }],
      /**
       * Brightness
       * @see https://tailwindcss.com/docs/brightness
       */
      brightness: [{
        brightness: [brightness]
      }],
      /**
       * Contrast
       * @see https://tailwindcss.com/docs/contrast
       */
      contrast: [{
        contrast: [contrast]
      }],
      /**
       * Drop Shadow
       * @see https://tailwindcss.com/docs/drop-shadow
       */
      "drop-shadow": [{
        "drop-shadow": ["", "none", isTshirtSize, isArbitraryValue]
      }],
      /**
       * Grayscale
       * @see https://tailwindcss.com/docs/grayscale
       */
      grayscale: [{
        grayscale: [grayscale]
      }],
      /**
       * Hue Rotate
       * @see https://tailwindcss.com/docs/hue-rotate
       */
      "hue-rotate": [{
        "hue-rotate": [hueRotate]
      }],
      /**
       * Invert
       * @see https://tailwindcss.com/docs/invert
       */
      invert: [{
        invert: [invert]
      }],
      /**
       * Saturate
       * @see https://tailwindcss.com/docs/saturate
       */
      saturate: [{
        saturate: [saturate]
      }],
      /**
       * Sepia
       * @see https://tailwindcss.com/docs/sepia
       */
      sepia: [{
        sepia: [sepia]
      }],
      /**
       * Backdrop Filter
       * @deprecated since Tailwind CSS v3.0.0
       * @see https://tailwindcss.com/docs/backdrop-filter
       */
      "backdrop-filter": [{
        "backdrop-filter": ["", "none"]
      }],
      /**
       * Backdrop Blur
       * @see https://tailwindcss.com/docs/backdrop-blur
       */
      "backdrop-blur": [{
        "backdrop-blur": [blur]
      }],
      /**
       * Backdrop Brightness
       * @see https://tailwindcss.com/docs/backdrop-brightness
       */
      "backdrop-brightness": [{
        "backdrop-brightness": [brightness]
      }],
      /**
       * Backdrop Contrast
       * @see https://tailwindcss.com/docs/backdrop-contrast
       */
      "backdrop-contrast": [{
        "backdrop-contrast": [contrast]
      }],
      /**
       * Backdrop Grayscale
       * @see https://tailwindcss.com/docs/backdrop-grayscale
       */
      "backdrop-grayscale": [{
        "backdrop-grayscale": [grayscale]
      }],
      /**
       * Backdrop Hue Rotate
       * @see https://tailwindcss.com/docs/backdrop-hue-rotate
       */
      "backdrop-hue-rotate": [{
        "backdrop-hue-rotate": [hueRotate]
      }],
      /**
       * Backdrop Invert
       * @see https://tailwindcss.com/docs/backdrop-invert
       */
      "backdrop-invert": [{
        "backdrop-invert": [invert]
      }],
      /**
       * Backdrop Opacity
       * @see https://tailwindcss.com/docs/backdrop-opacity
       */
      "backdrop-opacity": [{
        "backdrop-opacity": [opacity]
      }],
      /**
       * Backdrop Saturate
       * @see https://tailwindcss.com/docs/backdrop-saturate
       */
      "backdrop-saturate": [{
        "backdrop-saturate": [saturate]
      }],
      /**
       * Backdrop Sepia
       * @see https://tailwindcss.com/docs/backdrop-sepia
       */
      "backdrop-sepia": [{
        "backdrop-sepia": [sepia]
      }],
      // Tables
      /**
       * Border Collapse
       * @see https://tailwindcss.com/docs/border-collapse
       */
      "border-collapse": [{
        border: ["collapse", "separate"]
      }],
      /**
       * Border Spacing
       * @see https://tailwindcss.com/docs/border-spacing
       */
      "border-spacing": [{
        "border-spacing": [borderSpacing]
      }],
      /**
       * Border Spacing X
       * @see https://tailwindcss.com/docs/border-spacing
       */
      "border-spacing-x": [{
        "border-spacing-x": [borderSpacing]
      }],
      /**
       * Border Spacing Y
       * @see https://tailwindcss.com/docs/border-spacing
       */
      "border-spacing-y": [{
        "border-spacing-y": [borderSpacing]
      }],
      /**
       * Table Layout
       * @see https://tailwindcss.com/docs/table-layout
       */
      "table-layout": [{
        table: ["auto", "fixed"]
      }],
      /**
       * Caption Side
       * @see https://tailwindcss.com/docs/caption-side
       */
      caption: [{
        caption: ["top", "bottom"]
      }],
      // Transitions and Animation
      /**
       * Tranisition Property
       * @see https://tailwindcss.com/docs/transition-property
       */
      transition: [{
        transition: ["none", "all", "", "colors", "opacity", "shadow", "transform", isArbitraryValue]
      }],
      /**
       * Transition Duration
       * @see https://tailwindcss.com/docs/transition-duration
       */
      duration: [{
        duration: getNumberAndArbitrary()
      }],
      /**
       * Transition Timing Function
       * @see https://tailwindcss.com/docs/transition-timing-function
       */
      ease: [{
        ease: ["linear", "in", "out", "in-out", isArbitraryValue]
      }],
      /**
       * Transition Delay
       * @see https://tailwindcss.com/docs/transition-delay
       */
      delay: [{
        delay: getNumberAndArbitrary()
      }],
      /**
       * Animation
       * @see https://tailwindcss.com/docs/animation
       */
      animate: [{
        animate: ["none", "spin", "ping", "pulse", "bounce", isArbitraryValue]
      }],
      // Transforms
      /**
       * Transform
       * @see https://tailwindcss.com/docs/transform
       */
      transform: [{
        transform: ["", "gpu", "none"]
      }],
      /**
       * Scale
       * @see https://tailwindcss.com/docs/scale
       */
      scale: [{
        scale: [scale2]
      }],
      /**
       * Scale X
       * @see https://tailwindcss.com/docs/scale
       */
      "scale-x": [{
        "scale-x": [scale2]
      }],
      /**
       * Scale Y
       * @see https://tailwindcss.com/docs/scale
       */
      "scale-y": [{
        "scale-y": [scale2]
      }],
      /**
       * Rotate
       * @see https://tailwindcss.com/docs/rotate
       */
      rotate: [{
        rotate: [isInteger$1, isArbitraryValue]
      }],
      /**
       * Translate X
       * @see https://tailwindcss.com/docs/translate
       */
      "translate-x": [{
        "translate-x": [translate]
      }],
      /**
       * Translate Y
       * @see https://tailwindcss.com/docs/translate
       */
      "translate-y": [{
        "translate-y": [translate]
      }],
      /**
       * Skew X
       * @see https://tailwindcss.com/docs/skew
       */
      "skew-x": [{
        "skew-x": [skew]
      }],
      /**
       * Skew Y
       * @see https://tailwindcss.com/docs/skew
       */
      "skew-y": [{
        "skew-y": [skew]
      }],
      /**
       * Transform Origin
       * @see https://tailwindcss.com/docs/transform-origin
       */
      "transform-origin": [{
        origin: ["center", "top", "top-right", "right", "bottom-right", "bottom", "bottom-left", "left", "top-left", isArbitraryValue]
      }],
      // Interactivity
      /**
       * Accent Color
       * @see https://tailwindcss.com/docs/accent-color
       */
      accent: [{
        accent: ["auto", colors]
      }],
      /**
       * Appearance
       * @see https://tailwindcss.com/docs/appearance
       */
      appearance: ["appearance-none"],
      /**
       * Cursor
       * @see https://tailwindcss.com/docs/cursor
       */
      cursor: [{
        cursor: ["auto", "default", "pointer", "wait", "text", "move", "help", "not-allowed", "none", "context-menu", "progress", "cell", "crosshair", "vertical-text", "alias", "copy", "no-drop", "grab", "grabbing", "all-scroll", "col-resize", "row-resize", "n-resize", "e-resize", "s-resize", "w-resize", "ne-resize", "nw-resize", "se-resize", "sw-resize", "ew-resize", "ns-resize", "nesw-resize", "nwse-resize", "zoom-in", "zoom-out", isArbitraryValue]
      }],
      /**
       * Caret Color
       * @see https://tailwindcss.com/docs/just-in-time-mode#caret-color-utilities
       */
      "caret-color": [{
        caret: [colors]
      }],
      /**
       * Pointer Events
       * @see https://tailwindcss.com/docs/pointer-events
       */
      "pointer-events": [{
        "pointer-events": ["none", "auto"]
      }],
      /**
       * Resize
       * @see https://tailwindcss.com/docs/resize
       */
      resize: [{
        resize: ["none", "y", "x", ""]
      }],
      /**
       * Scroll Behavior
       * @see https://tailwindcss.com/docs/scroll-behavior
       */
      "scroll-behavior": [{
        scroll: ["auto", "smooth"]
      }],
      /**
       * Scroll Margin
       * @see https://tailwindcss.com/docs/scroll-margin
       */
      "scroll-m": [{
        "scroll-m": getSpacingWithArbitrary()
      }],
      /**
       * Scroll Margin X
       * @see https://tailwindcss.com/docs/scroll-margin
       */
      "scroll-mx": [{
        "scroll-mx": getSpacingWithArbitrary()
      }],
      /**
       * Scroll Margin Y
       * @see https://tailwindcss.com/docs/scroll-margin
       */
      "scroll-my": [{
        "scroll-my": getSpacingWithArbitrary()
      }],
      /**
       * Scroll Margin Start
       * @see https://tailwindcss.com/docs/scroll-margin
       */
      "scroll-ms": [{
        "scroll-ms": getSpacingWithArbitrary()
      }],
      /**
       * Scroll Margin End
       * @see https://tailwindcss.com/docs/scroll-margin
       */
      "scroll-me": [{
        "scroll-me": getSpacingWithArbitrary()
      }],
      /**
       * Scroll Margin Top
       * @see https://tailwindcss.com/docs/scroll-margin
       */
      "scroll-mt": [{
        "scroll-mt": getSpacingWithArbitrary()
      }],
      /**
       * Scroll Margin Right
       * @see https://tailwindcss.com/docs/scroll-margin
       */
      "scroll-mr": [{
        "scroll-mr": getSpacingWithArbitrary()
      }],
      /**
       * Scroll Margin Bottom
       * @see https://tailwindcss.com/docs/scroll-margin
       */
      "scroll-mb": [{
        "scroll-mb": getSpacingWithArbitrary()
      }],
      /**
       * Scroll Margin Left
       * @see https://tailwindcss.com/docs/scroll-margin
       */
      "scroll-ml": [{
        "scroll-ml": getSpacingWithArbitrary()
      }],
      /**
       * Scroll Padding
       * @see https://tailwindcss.com/docs/scroll-padding
       */
      "scroll-p": [{
        "scroll-p": getSpacingWithArbitrary()
      }],
      /**
       * Scroll Padding X
       * @see https://tailwindcss.com/docs/scroll-padding
       */
      "scroll-px": [{
        "scroll-px": getSpacingWithArbitrary()
      }],
      /**
       * Scroll Padding Y
       * @see https://tailwindcss.com/docs/scroll-padding
       */
      "scroll-py": [{
        "scroll-py": getSpacingWithArbitrary()
      }],
      /**
       * Scroll Padding Start
       * @see https://tailwindcss.com/docs/scroll-padding
       */
      "scroll-ps": [{
        "scroll-ps": getSpacingWithArbitrary()
      }],
      /**
       * Scroll Padding End
       * @see https://tailwindcss.com/docs/scroll-padding
       */
      "scroll-pe": [{
        "scroll-pe": getSpacingWithArbitrary()
      }],
      /**
       * Scroll Padding Top
       * @see https://tailwindcss.com/docs/scroll-padding
       */
      "scroll-pt": [{
        "scroll-pt": getSpacingWithArbitrary()
      }],
      /**
       * Scroll Padding Right
       * @see https://tailwindcss.com/docs/scroll-padding
       */
      "scroll-pr": [{
        "scroll-pr": getSpacingWithArbitrary()
      }],
      /**
       * Scroll Padding Bottom
       * @see https://tailwindcss.com/docs/scroll-padding
       */
      "scroll-pb": [{
        "scroll-pb": getSpacingWithArbitrary()
      }],
      /**
       * Scroll Padding Left
       * @see https://tailwindcss.com/docs/scroll-padding
       */
      "scroll-pl": [{
        "scroll-pl": getSpacingWithArbitrary()
      }],
      /**
       * Scroll Snap Align
       * @see https://tailwindcss.com/docs/scroll-snap-align
       */
      "snap-align": [{
        snap: ["start", "end", "center", "align-none"]
      }],
      /**
       * Scroll Snap Stop
       * @see https://tailwindcss.com/docs/scroll-snap-stop
       */
      "snap-stop": [{
        snap: ["normal", "always"]
      }],
      /**
       * Scroll Snap Type
       * @see https://tailwindcss.com/docs/scroll-snap-type
       */
      "snap-type": [{
        snap: ["none", "x", "y", "both"]
      }],
      /**
       * Scroll Snap Type Strictness
       * @see https://tailwindcss.com/docs/scroll-snap-type
       */
      "snap-strictness": [{
        snap: ["mandatory", "proximity"]
      }],
      /**
       * Touch Action
       * @see https://tailwindcss.com/docs/touch-action
       */
      touch: [{
        touch: ["auto", "none", "pinch-zoom", "manipulation", {
          pan: ["x", "left", "right", "y", "up", "down"]
        }]
      }],
      /**
       * User Select
       * @see https://tailwindcss.com/docs/user-select
       */
      select: [{
        select: ["none", "text", "all", "auto"]
      }],
      /**
       * Will Change
       * @see https://tailwindcss.com/docs/will-change
       */
      "will-change": [{
        "will-change": ["auto", "scroll", "contents", "transform", isArbitraryValue]
      }],
      // SVG
      /**
       * Fill
       * @see https://tailwindcss.com/docs/fill
       */
      fill: [{
        fill: [colors, "none"]
      }],
      /**
       * Stroke Width
       * @see https://tailwindcss.com/docs/stroke-width
       */
      "stroke-w": [{
        stroke: [isLength$3, isArbitraryNumber]
      }],
      /**
       * Stroke
       * @see https://tailwindcss.com/docs/stroke
       */
      stroke: [{
        stroke: [colors, "none"]
      }],
      // Accessibility
      /**
       * Screen Readers
       * @see https://tailwindcss.com/docs/screen-readers
       */
      sr: ["sr-only", "not-sr-only"]
    },
    conflictingClassGroups: {
      overflow: ["overflow-x", "overflow-y"],
      overscroll: ["overscroll-x", "overscroll-y"],
      inset: ["inset-x", "inset-y", "start", "end", "top", "right", "bottom", "left"],
      "inset-x": ["right", "left"],
      "inset-y": ["top", "bottom"],
      flex: ["basis", "grow", "shrink"],
      gap: ["gap-x", "gap-y"],
      p: ["px", "py", "ps", "pe", "pt", "pr", "pb", "pl"],
      px: ["pr", "pl"],
      py: ["pt", "pb"],
      m: ["mx", "my", "ms", "me", "mt", "mr", "mb", "ml"],
      mx: ["mr", "ml"],
      my: ["mt", "mb"],
      "font-size": ["leading"],
      "fvn-normal": ["fvn-ordinal", "fvn-slashed-zero", "fvn-figure", "fvn-spacing", "fvn-fraction"],
      "fvn-ordinal": ["fvn-normal"],
      "fvn-slashed-zero": ["fvn-normal"],
      "fvn-figure": ["fvn-normal"],
      "fvn-spacing": ["fvn-normal"],
      "fvn-fraction": ["fvn-normal"],
      rounded: ["rounded-s", "rounded-e", "rounded-t", "rounded-r", "rounded-b", "rounded-l", "rounded-ss", "rounded-se", "rounded-ee", "rounded-es", "rounded-tl", "rounded-tr", "rounded-br", "rounded-bl"],
      "rounded-s": ["rounded-ss", "rounded-es"],
      "rounded-e": ["rounded-se", "rounded-ee"],
      "rounded-t": ["rounded-tl", "rounded-tr"],
      "rounded-r": ["rounded-tr", "rounded-br"],
      "rounded-b": ["rounded-br", "rounded-bl"],
      "rounded-l": ["rounded-tl", "rounded-bl"],
      "border-spacing": ["border-spacing-x", "border-spacing-y"],
      "border-w": ["border-w-s", "border-w-e", "border-w-t", "border-w-r", "border-w-b", "border-w-l"],
      "border-w-x": ["border-w-r", "border-w-l"],
      "border-w-y": ["border-w-t", "border-w-b"],
      "border-color": ["border-color-t", "border-color-r", "border-color-b", "border-color-l"],
      "border-color-x": ["border-color-r", "border-color-l"],
      "border-color-y": ["border-color-t", "border-color-b"],
      "scroll-m": ["scroll-mx", "scroll-my", "scroll-ms", "scroll-me", "scroll-mt", "scroll-mr", "scroll-mb", "scroll-ml"],
      "scroll-mx": ["scroll-mr", "scroll-ml"],
      "scroll-my": ["scroll-mt", "scroll-mb"],
      "scroll-p": ["scroll-px", "scroll-py", "scroll-ps", "scroll-pe", "scroll-pt", "scroll-pr", "scroll-pb", "scroll-pl"],
      "scroll-px": ["scroll-pr", "scroll-pl"],
      "scroll-py": ["scroll-pt", "scroll-pb"]
    },
    conflictingClassGroupModifiers: {
      "font-size": ["leading"]
    }
  };
}
function mergeConfigs(baseConfig, configExtension) {
  for (var key in configExtension) {
    mergePropertyRecursively(baseConfig, key, configExtension[key]);
  }
  return baseConfig;
}
var hasOwnProperty$9 = Object.prototype.hasOwnProperty;
var overrideTypes = /* @__PURE__ */ new Set(["string", "number", "boolean"]);
function mergePropertyRecursively(baseObject, mergeKey, mergeValue) {
  if (!hasOwnProperty$9.call(baseObject, mergeKey) || overrideTypes.has(typeof mergeValue) || mergeValue === null) {
    baseObject[mergeKey] = mergeValue;
    return;
  }
  if (Array.isArray(mergeValue) && Array.isArray(baseObject[mergeKey])) {
    baseObject[mergeKey] = baseObject[mergeKey].concat(mergeValue);
    return;
  }
  if (typeof mergeValue === "object" && typeof baseObject[mergeKey] === "object") {
    if (baseObject[mergeKey] === null) {
      baseObject[mergeKey] = mergeValue;
      return;
    }
    for (var nextKey in mergeValue) {
      mergePropertyRecursively(baseObject[mergeKey], nextKey, mergeValue[nextKey]);
    }
  }
}
function extendTailwindMerge(configExtension) {
  for (var _len = arguments.length, createConfig = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
    createConfig[_key - 1] = arguments[_key];
  }
  return typeof configExtension === "function" ? createTailwindMerge.apply(void 0, [getDefaultConfig, configExtension].concat(createConfig)) : createTailwindMerge.apply(void 0, [function() {
    return mergeConfigs(getDefaultConfig(), configExtension);
  }].concat(createConfig));
}
var twMerge = /* @__PURE__ */ createTailwindMerge(getDefaultConfig);
var se = { twMerge: true, twMergeConfig: {}, responsiveVariants: false }, _ = (s) => s || void 0, N = (...s) => _(y(s).filter(Boolean).join(" ")), q = null, M = {}, F = false, w = (...s) => (b$1) => b$1.twMerge ? ((!q || F) && (F = false, q = u(M) ? twMerge : extendTailwindMerge(M)), _(q(N(s)))) : N(s), Z = (s, b) => {
  for (let e in b) s.hasOwnProperty(e) ? s[e] = N(s[e], b[e]) : s[e] = b[e];
  return s;
}, ie = (s, b$1) => {
  let { extend: e = null, slots: j = {}, variants: U2 = {}, compoundVariants: C2 = [], compoundSlots: V2 = [], defaultVariants: W2 = {} } = s, m2 = { ...se, ...b$1 }, S2 = e != null && e.base ? N(e.base, s == null ? void 0 : s.base) : s == null ? void 0 : s.base, g$1 = e != null && e.variants && !u(e.variants) ? p(U2, e.variants) : U2, A2 = e != null && e.defaultVariants && !u(e.defaultVariants) ? { ...e.defaultVariants, ...W2 } : W2;
  !u(m2.twMergeConfig) && !x(m2.twMergeConfig, M) && (F = true, M = m2.twMergeConfig);
  let O2 = u(e == null ? void 0 : e.slots), $ = u(j) ? {} : { base: N(s == null ? void 0 : s.base, O2 && (e == null ? void 0 : e.base)), ...j }, h$1 = O2 ? $ : Z({ ...e == null ? void 0 : e.slots }, u($) ? { base: s == null ? void 0 : s.base } : $), v2 = (l$12) => {
    if (u(g$1) && u(j) && O2) return w(S2, l$12 == null ? void 0 : l$12.class, l$12 == null ? void 0 : l$12.className)(m2);
    if (C2 && !Array.isArray(C2)) throw new TypeError(`The "compoundVariants" prop must be an array. Received: ${typeof C2}`);
    if (V2 && !Array.isArray(V2)) throw new TypeError(`The "compoundSlots" prop must be an array. Received: ${typeof V2}`);
    let K2 = (t2, n2, a2 = [], i) => {
      let r2 = a2;
      if (typeof n2 == "string") r2 = r2.concat(g(n2).split(" ").map((c) => `${t2}:${c}`));
      else if (Array.isArray(n2)) r2 = r2.concat(n2.reduce((c, f2) => c.concat(`${t2}:${f2}`), []));
      else if (typeof n2 == "object" && typeof i == "string") {
        for (let c in n2) if (n2.hasOwnProperty(c) && c === i) {
          let f2 = n2[c];
          if (f2 && typeof f2 == "string") {
            let o = g(f2);
            r2[i] ? r2[i] = r2[i].concat(o.split(" ").map((u2) => `${t2}:${u2}`)) : r2[i] = o.split(" ").map((u2) => `${t2}:${u2}`);
          } else Array.isArray(f2) && f2.length > 0 && (r2[i] = f2.reduce((o, u2) => o.concat(`${t2}:${u2}`), []));
        }
      }
      return r2;
    }, z2 = (t2, n2 = g$1, a$1 = null, i = null) => {
      var J2;
      let r2 = n2[t2];
      if (!r2 || u(r2)) return null;
      let c = (J2 = i == null ? void 0 : i[t2]) != null ? J2 : l$12 == null ? void 0 : l$12[t2];
      if (c === null) return null;
      let f2 = l(c), o = Array.isArray(m2.responsiveVariants) && m2.responsiveVariants.length > 0 || m2.responsiveVariants === true, u$12 = A2 == null ? void 0 : A2[t2], d = [];
      if (typeof f2 == "object" && o) for (let [k2, L2] of Object.entries(f2)) {
        let ae2 = r2[L2];
        if (k2 === "initial") {
          u$12 = L2;
          continue;
        }
        Array.isArray(m2.responsiveVariants) && !m2.responsiveVariants.includes(k2) || (d = K2(k2, ae2, d, a$1));
      }
      let T2 = r2[f2] || r2[l(u$12)];
      return typeof d == "object" && typeof a$1 == "string" && d[a$1] ? Z(d, T2) : d.length > 0 ? (d.push(T2), d) : T2;
    }, P2 = () => g$1 ? Object.keys(g$1).map((t2) => z2(t2, g$1)) : null, p2 = (t2, n2) => {
      if (!g$1 || typeof g$1 != "object") return null;
      let a2 = new Array();
      for (let i in g$1) {
        let r2 = z2(i, g$1, t2, n2), c = t2 === "base" && typeof r2 == "string" ? r2 : r2 && r2[t2];
        c && (a2[a2.length] = c);
      }
      return a2;
    }, D2 = {};
    for (let t2 in l$12) l$12[t2] !== void 0 && (D2[t2] = l$12[t2]);
    let G2 = (t2, n2) => {
      var i;
      let a2 = typeof (l$12 == null ? void 0 : l$12[t2]) == "object" ? { [t2]: (i = l$12[t2]) == null ? void 0 : i.initial } : {};
      return { ...A2, ...D2, ...a2, ...n2 };
    }, H2 = (t2 = [], n2) => {
      let a2 = [];
      for (let { class: i, className: r2, ...c } of t2) {
        let f2 = true;
        for (let [o, u2] of Object.entries(c)) {
          let d = G2(o, n2);
          if (Array.isArray(u2)) {
            if (!u2.includes(d[o])) {
              f2 = false;
              break;
            }
          } else if (d[o] !== u2) {
            f2 = false;
            break;
          }
        }
        f2 && (i && a2.push(i), r2 && a2.push(r2));
      }
      return a2;
    }, I2 = (t2) => {
      let n2 = H2(C2, t2), a$1 = H2(e == null ? void 0 : e.compoundVariants, t2);
      return a(a$1, n2);
    }, ee2 = (t2) => {
      let n2 = I2(t2);
      if (!Array.isArray(n2)) return n2;
      let a2 = {};
      for (let i of n2) if (typeof i == "string" && (a2.base = w(a2.base, i)(m2)), typeof i == "object") for (let [r2, c] of Object.entries(i)) a2[r2] = w(a2[r2], c)(m2);
      return a2;
    }, te2 = (t2) => {
      if (V2.length < 1) return null;
      let n2 = {};
      for (let { slots: a2 = [], class: i, className: r2, ...c } of V2) {
        if (!u(c)) {
          let f2 = true;
          for (let o of Object.keys(c)) {
            let u2 = G2(o, t2)[o];
            if (u2 === void 0 || (Array.isArray(c[o]) ? !c[o].includes(u2) : c[o] !== u2)) {
              f2 = false;
              break;
            }
          }
          if (!f2) continue;
        }
        for (let f2 of a2) n2[f2] = n2[f2] || [], n2[f2].push([i, r2]);
      }
      return n2;
    };
    if (!u(j) || !O2) {
      let t2 = {};
      if (typeof h$1 == "object" && !u(h$1)) for (let n2 of Object.keys(h$1)) t2[n2] = (a2) => {
        var i, r2;
        return w(h$1[n2], p2(n2, a2), ((i = ee2(a2)) != null ? i : [])[n2], ((r2 = te2(a2)) != null ? r2 : [])[n2], a2 == null ? void 0 : a2.class, a2 == null ? void 0 : a2.className)(m2);
      };
      return t2;
    }
    return w(S2, P2(), I2(), l$12 == null ? void 0 : l$12.class, l$12 == null ? void 0 : l$12.className)(m2);
  }, x$12 = () => {
    if (!(!g$1 || typeof g$1 != "object")) return Object.keys(g$1);
  };
  return v2.variantKeys = x$12(), v2.extend = e, v2.base = S2, v2.slots = h$1, v2.variants = g$1, v2.defaultVariants = A2, v2.compoundSlots = V2, v2.compoundVariants = C2, v2;
};
var tv = (options, config) => {
  var _a, _b, _c;
  return ie(options, {
    ...config,
    twMerge: (_a = void 0) != null ? _a : true,
    twMergeConfig: {
      ...void 0,
      theme: {
        ...(_b = void 0) == null ? void 0 : _b.theme,
        ...twMergeConfig.theme
      },
      classGroups: {
        ...(_c = void 0) == null ? void 0 : _c.classGroups,
        ...twMergeConfig.classGroups
      }
    }
  });
};
var dataFocusVisibleClasses = [
  "outline-none",
  "data-[focus-visible=true]:z-10",
  "data-[focus-visible=true]:outline-2",
  "data-[focus-visible=true]:outline-focus",
  "data-[focus-visible=true]:outline-offset-2"
];
var groupDataFocusVisibleClasses = [
  "outline-none",
  "group-data-[focus-visible=true]:z-10",
  "group-data-[focus-visible=true]:ring-2",
  "group-data-[focus-visible=true]:ring-focus",
  "group-data-[focus-visible=true]:ring-offset-2",
  "group-data-[focus-visible=true]:ring-offset-background"
];
var translateCenterClasses = [
  "absolute",
  "top-1/2",
  "left-1/2",
  "-translate-x-1/2",
  "-translate-y-1/2"
];
var collapseAdjacentVariantBorders = {
  default: ["[&+.border-medium.border-default]:ms-[calc(theme(borderWidth.medium)*-1)]"],
  primary: ["[&+.border-medium.border-primary]:ms-[calc(theme(borderWidth.medium)*-1)]"],
  secondary: ["[&+.border-medium.border-secondary]:ms-[calc(theme(borderWidth.medium)*-1)]"],
  success: ["[&+.border-medium.border-success]:ms-[calc(theme(borderWidth.medium)*-1)]"],
  warning: ["[&+.border-medium.border-warning]:ms-[calc(theme(borderWidth.medium)*-1)]"],
  danger: ["[&+.border-medium.border-danger]:ms-[calc(theme(borderWidth.medium)*-1)]"]
};
var slider = tv({
  slots: {
    base: "flex flex-col w-full gap-1",
    labelWrapper: "w-full flex justify-between items-center",
    label: "",
    value: "",
    step: [
      "h-1.5",
      "w-1.5",
      "absolute",
      "rounded-full",
      "bg-default-300/50",
      "data-[in-range=true]:bg-background/50"
    ],
    mark: [
      "absolute",
      "text-small",
      "cursor-default",
      "opacity-50",
      "data-[in-range=true]:opacity-100"
    ],
    trackWrapper: "relative flex gap-2",
    track: ["flex", "w-full", "relative", "rounded-full", "bg-default-300/50"],
    filler: "h-full absolute",
    thumb: [
      "flex",
      "justify-center",
      "items-center",
      "before:absolute",
      "before:w-11",
      "before:h-11",
      "before:rounded-full",
      "after:shadow-small",
      "after:shadow-small",
      "after:bg-background",
      "data-[focused=true]:z-10",
      dataFocusVisibleClasses
    ],
    startContent: [],
    endContent: []
  },
  variants: {
    size: {
      sm: {
        label: "text-small",
        value: "text-small",
        thumb: "w-5 h-5 after:w-4 after:h-4",
        step: "data-[in-range=false]:bg-default-200"
      },
      md: {
        thumb: "w-6 h-6 after:w-5 after:h-5",
        label: "text-small",
        value: "text-small"
      },
      lg: {
        thumb: "h-7 w-7 after:w-5 after:h-5",
        step: "w-2 h-2",
        label: "text-medium",
        value: "text-medium",
        mark: "mt-2"
      }
    },
    radius: {
      none: {
        thumb: "rounded-none after:rounded-none"
      },
      sm: {
        thumb: "rounded-[calc(theme(borderRadius.small)/2)] after:rounded-[calc(theme(borderRadius.small)/3)]"
      },
      md: {
        thumb: "rounded-[calc(theme(borderRadius.medium)/2)] after:rounded-[calc(theme(borderRadius.medium)/3)]"
      },
      lg: {
        thumb: "rounded-[calc(theme(borderRadius.large)/1.5)] after:rounded-[calc(theme(borderRadius.large)/2)]"
      },
      full: {
        thumb: "rounded-full after:rounded-full"
      }
    },
    color: {
      foreground: {
        filler: "bg-foreground",
        thumb: "bg-foreground"
      },
      primary: {
        filler: "bg-primary",
        thumb: "bg-primary"
      },
      secondary: {
        filler: "bg-secondary",
        thumb: "bg-secondary"
      },
      success: {
        filler: "bg-success",
        thumb: "bg-success"
      },
      warning: {
        filler: "bg-warning",
        thumb: "bg-warning"
      },
      danger: {
        filler: "bg-danger",
        thumb: "bg-danger"
      }
    },
    isVertical: {
      true: {
        base: "w-auto h-full flex-col-reverse items-center",
        trackWrapper: "flex-col h-full justify-center items-center",
        filler: "w-full h-auto",
        thumb: "left-1/2",
        track: "h-full border-y-transparent",
        labelWrapper: "flex-col justify-center items-center",
        step: ["left-1/2", "-translate-x-1/2", "translate-y-1/2"],
        mark: ["left-1/2", "ml-1", "translate-x-1/2", "translate-y-1/2"]
      },
      false: {
        thumb: "top-1/2",
        trackWrapper: "items-center",
        track: "border-x-transparent",
        step: ["top-1/2", "-translate-x-1/2", "-translate-y-1/2"],
        mark: ["top-1/2", "mt-1", "-translate-x-1/2", "translate-y-1/2"]
      }
    },
    isDisabled: {
      false: {
        thumb: ["cursor-grab", "data-[dragging=true]:cursor-grabbing"]
      },
      true: {
        base: "opacity-disabled",
        thumb: "cursor-default"
      }
    },
    hasMarks: {
      true: {
        base: "mb-5",
        mark: "cursor-pointer"
      },
      false: {}
    },
    showOutline: {
      true: {
        thumb: "ring-2 ring-background"
      },
      false: {
        thumb: "ring-transparent border-0"
      }
    },
    hideValue: {
      true: {
        value: "sr-only"
      }
    },
    hideThumb: {
      true: {
        thumb: "sr-only",
        track: "cursor-pointer"
      }
    },
    hasSingleThumb: {
      true: {},
      false: {}
    },
    disableAnimation: {
      true: {
        thumb: "data-[dragging=true]:after:scale-100"
      },
      false: {
        thumb: "after:transition-all motion-reduce:after:transition-none",
        mark: "transition-opacity motion-reduce:transition-none"
      }
    },
    disableThumbScale: {
      true: {},
      false: {
        thumb: "data-[dragging=true]:after:scale-80"
      }
    }
  },
  compoundVariants: [
    {
      size: ["sm", "md"],
      showOutline: false,
      class: {
        thumb: "shadow-small"
      }
    },
    {
      size: "sm",
      color: "foreground",
      class: {
        step: "data-[in-range=true]:bg-foreground"
      }
    },
    {
      size: "sm",
      color: "primary",
      class: {
        step: "data-[in-range=true]:bg-primary"
      }
    },
    {
      size: "sm",
      color: "secondary",
      class: {
        step: "data-[in-range=true]:bg-secondary"
      }
    },
    {
      size: "sm",
      color: "success",
      class: {
        step: "data-[in-range=true]:bg-success"
      }
    },
    {
      size: "sm",
      color: "warning",
      class: {
        step: "data-[in-range=true]:bg-warning"
      }
    },
    {
      size: "sm",
      color: "danger",
      class: {
        step: "data-[in-range=true]:bg-danger"
      }
    },
    {
      size: "sm",
      isVertical: false,
      class: {
        track: "h-1 my-[calc((theme(spacing.5)-theme(spacing.1))/2)] border-x-[calc(theme(spacing.5)/2)]"
      }
    },
    {
      size: "md",
      isVertical: false,
      class: {
        track: "h-3 my-[calc((theme(spacing.6)-theme(spacing.3))/2)] border-x-[calc(theme(spacing.6)/2)]"
      }
    },
    {
      size: "lg",
      isVertical: false,
      class: {
        track: "h-7 my-[calc((theme(spacing.7)-theme(spacing.5))/2)] border-x-[calc(theme(spacing.7)/2)]"
      }
    },
    {
      size: "sm",
      isVertical: true,
      class: {
        track: "w-1 mx-[calc((theme(spacing.5)-theme(spacing.1))/2)] border-y-[calc(theme(spacing.5)/2)]"
      }
    },
    {
      size: "md",
      isVertical: true,
      class: {
        track: "w-3 mx-[calc((theme(spacing.6)-theme(spacing.3))/2)] border-y-[calc(theme(spacing.6)/2)]"
      }
    },
    {
      size: "lg",
      isVertical: true,
      class: {
        track: "w-7 mx-[calc((theme(spacing.7)-theme(spacing.5))/2)] border-y-[calc(theme(spacing.7)/2)]"
      }
    },
    {
      color: "foreground",
      isVertical: false,
      hasSingleThumb: true,
      class: {
        track: "border-s-foreground"
      }
    },
    {
      color: "primary",
      isVertical: false,
      hasSingleThumb: true,
      class: {
        track: "border-s-primary"
      }
    },
    {
      color: "secondary",
      isVertical: false,
      hasSingleThumb: true,
      class: {
        track: "border-s-secondary"
      }
    },
    {
      color: "success",
      isVertical: false,
      hasSingleThumb: true,
      class: {
        track: "border-s-success"
      }
    },
    {
      color: "warning",
      isVertical: false,
      hasSingleThumb: true,
      class: {
        track: "border-s-warning"
      }
    },
    {
      color: "danger",
      isVertical: false,
      hasSingleThumb: true,
      class: {
        track: "border-s-danger"
      }
    },
    {
      color: "foreground",
      isVertical: true,
      hasSingleThumb: true,
      class: {
        track: "border-b-foreground"
      }
    },
    {
      color: "primary",
      isVertical: true,
      hasSingleThumb: true,
      class: {
        track: "border-b-primary"
      }
    },
    {
      color: "secondary",
      isVertical: true,
      hasSingleThumb: true,
      class: {
        track: "border-b-secondary"
      }
    },
    {
      color: "success",
      isVertical: true,
      hasSingleThumb: true,
      class: {
        track: "border-b-success"
      }
    },
    {
      color: "warning",
      isVertical: true,
      hasSingleThumb: true,
      class: {
        track: "border-b-warning"
      }
    },
    {
      color: "danger",
      isVertical: true,
      hasSingleThumb: true,
      class: {
        track: "border-b-danger"
      }
    }
  ],
  defaultVariants: {
    size: "md",
    color: "primary",
    radius: "full",
    hideValue: false,
    hideThumb: false,
    isDisabled: false,
    disableThumbScale: false,
    showOutline: false
  }
});
var spinner = tv({
  slots: {
    base: "relative inline-flex flex-col gap-2 items-center justify-center",
    wrapper: "relative flex",
    circle1: [
      "absolute",
      "w-full",
      "h-full",
      "rounded-full",
      "animate-spinner-ease-spin",
      "border-2",
      "border-solid",
      "border-t-transparent",
      "border-l-transparent",
      "border-r-transparent"
    ],
    circle2: [
      "absolute",
      "w-full",
      "h-full",
      "rounded-full",
      "opacity-75",
      "animate-spinner-linear-spin",
      "border-2",
      "border-dotted",
      "border-t-transparent",
      "border-l-transparent",
      "border-r-transparent"
    ],
    label: "text-foreground dark:text-foreground-dark font-regular"
  },
  variants: {
    size: {
      sm: {
        wrapper: "w-5 h-5",
        circle1: "border-2",
        circle2: "border-2",
        label: "text-small"
      },
      md: {
        wrapper: "w-8 h-8",
        circle1: "border-3",
        circle2: "border-3",
        label: "text-medium"
      },
      lg: {
        wrapper: "w-10 h-10",
        circle1: "border-3",
        circle2: "border-3",
        label: "text-large"
      }
    },
    color: {
      current: {
        circle1: "border-b-current",
        circle2: "border-b-current"
      },
      white: {
        circle1: "border-b-white",
        circle2: "border-b-white"
      },
      default: {
        circle1: "border-b-default",
        circle2: "border-b-default"
      },
      primary: {
        circle1: "border-b-primary",
        circle2: "border-b-primary"
      },
      secondary: {
        circle1: "border-b-secondary",
        circle2: "border-b-secondary"
      },
      success: {
        circle1: "border-b-success",
        circle2: "border-b-success"
      },
      warning: {
        circle1: "border-b-warning",
        circle2: "border-b-warning"
      },
      danger: {
        circle1: "border-b-danger",
        circle2: "border-b-danger"
      }
    },
    labelColor: {
      foreground: {
        label: "text-foreground"
      },
      primary: {
        label: "text-primary"
      },
      secondary: {
        label: "text-secondary"
      },
      success: {
        label: "text-success"
      },
      warning: {
        label: "text-warning"
      },
      danger: {
        label: "text-danger"
      }
    }
  },
  defaultVariants: {
    size: "md",
    color: "primary",
    labelColor: "foreground"
  }
});
var menu = tv({
  slots: {
    base: "w-full relative flex flex-col gap-1 p-1",
    list: "w-full flex flex-col gap-0.5 outline-none",
    emptyContent: [
      "h-10",
      "px-2",
      "py-1.5",
      "w-full",
      "h-full",
      "text-foreground-400",
      "text-start"
    ]
  }
});
var menuItem = tv({
  slots: {
    base: [
      "flex",
      "group",
      "gap-2",
      "items-center",
      "justify-between",
      "relative",
      "px-2",
      "py-1.5",
      "w-full",
      "h-full",
      "box-border",
      "rounded-small",
      "subpixel-antialiased",
      "outline-none",
      "cursor-pointer",
      "tap-highlight-transparent",
      ...dataFocusVisibleClasses,
      "data-[focus-visible=true]:dark:ring-offset-background-content1"
    ],
    wrapper: "w-full flex flex-col items-start justify-center",
    title: "flex-1 text-small font-normal",
    description: ["w-full", "text-tiny", "text-foreground-500", "group-hover:text-current"],
    selectedIcon: ["text-inherit", "w-3", "h-3", "flex-shrink-0"],
    shortcut: [
      "px-1",
      "py-0.5",
      "rounded",
      "font-sans",
      "text-foreground-500",
      "text-tiny",
      "border-small",
      "border-default-300",
      "group-hover:border-current"
    ]
  },
  variants: {
    variant: {
      solid: {
        base: ""
      },
      bordered: {
        base: "border-medium border-transparent bg-transparent"
      },
      light: {
        base: "bg-transparent"
      },
      faded: {
        base: [
          "border-small border-transparent hover:border-default data-[hover=true]:bg-default-100",
          "data-[selectable=true]:focus:border-default data-[selectable=true]:focus:bg-default-100"
        ]
      },
      flat: {
        base: ""
      },
      shadow: {
        base: "data-[hover=true]:shadow-lg"
      }
    },
    color: {
      default: {},
      primary: {},
      secondary: {},
      success: {},
      warning: {},
      danger: {}
    },
    showDivider: {
      true: {
        base: [
          "mb-1.5",
          "after:content-['']",
          "after:absolute",
          "after:-bottom-1",
          "after:left-0",
          "after:right-0",
          "after:h-divider",
          "after:bg-divider"
        ]
      },
      false: {}
    },
    isDisabled: {
      true: {
        base: "opacity-disabled pointer-events-none"
      }
    },
    disableAnimation: {
      true: {},
      false: {
        base: "data-[hover=true]:transition-colors"
      }
    }
  },
  defaultVariants: {
    variant: "solid",
    color: "default",
    showDivider: false
  },
  compoundVariants: [
    {
      variant: "solid",
      color: "default",
      class: {
        base: [
          "data-[hover=true]:bg-default",
          "data-[hover=true]:text-default-foreground",
          "data-[selectable=true]:focus:bg-default",
          "data-[selectable=true]:focus:text-default-foreground"
        ]
      }
    },
    {
      variant: "solid",
      color: "primary",
      class: {
        base: [
          "data-[hover=true]:bg-primary data-[hover=true]:text-primary-foreground",
          "data-[selectable=true]:focus:bg-primary data-[selectable=true]:focus:text-primary-foreground"
        ]
      }
    },
    {
      variant: "solid",
      color: "secondary",
      class: {
        base: [
          "data-[hover=true]:bg-secondary data-[hover=true]:text-secondary-foreground",
          "data-[selectable=true]:focus:bg-secondary data-[selectable=true]:focus:text-secondary-foreground"
        ]
      }
    },
    {
      variant: "solid",
      color: "success",
      class: {
        base: [
          "data-[hover=true]:bg-success data-[hover=true]:text-success-foreground",
          "data-[selectable=true]:focus:bg-success data-[selectable=true]:focus:text-success-foreground"
        ]
      }
    },
    {
      variant: "solid",
      color: "warning",
      class: {
        base: [
          "data-[hover=true]:bg-warning data-[hover=true]:text-warning-foreground",
          "data-[selectable=true]:focus:bg-warning data-[selectable=true]:focus:text-warning-foreground"
        ]
      }
    },
    {
      variant: "solid",
      color: "danger",
      class: {
        base: [
          "data-[hover=true]:bg-danger data-[hover=true]:text-danger-foreground",
          "data-[selectable=true]:focus:bg-danger data-[selectable=true]:focus:text-danger-foreground"
        ]
      }
    },
    {
      variant: "shadow",
      color: "default",
      class: {
        base: [
          "data-[hover=true]:shadow-default/50 data-[hover=true]:bg-default data-[hover=true]:text-default-foreground",
          "data-[selectable=true]:focus:shadow-default/50 data-[selectable=true]:focus:bg-default data-[selectable=true]:focus:text-default-foreground"
        ]
      }
    },
    {
      variant: "shadow",
      color: "primary",
      class: {
        base: [
          "data-[hover=true]:shadow-primary/30 data-[hover=true]:bg-primary data-[hover=true]:text-primary-foreground",
          "data-[selectable=true]:focus:shadow-primary/30 data-[selectable=true]:focus:bg-primary data-[selectable=true]:focus:text-primary-foreground"
        ]
      }
    },
    {
      variant: "shadow",
      color: "secondary",
      class: {
        base: [
          "data-[hover=true]:shadow-secondary/30 data-[hover=true]:bg-secondary data-[hover=true]:text-secondary-foreground",
          "data-[selectable=true]:focus:shadow-secondary/30 data-[selectable=true]:focus:bg-secondary data-[selectable=true]:focus:text-secondary-foreground"
        ]
      }
    },
    {
      variant: "shadow",
      color: "success",
      class: {
        base: [
          "data-[hover=true]:shadow-success/30 data-[hover=true]:bg-success data-[hover=true]:text-success-foreground",
          "data-[selectable=true]:focus:shadow-success/30 data-[selectable=true]:focus:bg-success data-[selectable=true]:focus:text-success-foreground"
        ]
      }
    },
    {
      variant: "shadow",
      color: "warning",
      class: {
        base: [
          "data-[hover=true]:shadow-warning/30 data-[hover=true]:bg-warning data-[hover=true]:text-warning-foreground",
          "data-[selectable=true]:focus:shadow-warning/30 data-[selectable=true]:focus:bg-warning data-[selectable=true]:focus:text-warning-foreground"
        ]
      }
    },
    {
      variant: "shadow",
      color: "danger",
      class: {
        base: [
          "data-[hover=true]:shadow-danger/30 data-[hover=true]:bg-danger data-[hover=true]:text-danger-foreground",
          "data-[selectable=true]:focus:shadow-danger/30 data-[selectable=true]:focus:bg-danger data-[selectable=true]:focus:text-danger-foreground"
        ]
      }
    },
    {
      variant: "bordered",
      color: "default",
      class: {
        base: ["data-[hover=true]:border-default", "data-[selectable=true]:focus:border-default"]
      }
    },
    {
      variant: "bordered",
      color: "primary",
      class: {
        base: [
          "data-[hover=true]:border-primary data-[hover=true]:text-primary",
          "data-[selectable=true]:focus:border-primary data-[selectable=true]:focus:text-primary"
        ]
      }
    },
    {
      variant: "bordered",
      color: "secondary",
      class: {
        base: [
          "data-[hover=true]:border-secondary data-[hover=true]:text-secondary",
          "data-[selectable=true]:focus:border-secondary data-[selectable=true]:focus:text-secondary"
        ]
      }
    },
    {
      variant: "bordered",
      color: "success",
      class: {
        base: [
          "data-[hover=true]:border-success data-[hover=true]:text-success",
          "data-[selectable=true]:focus:border-success data-[selectable=true]:focus:text-success"
        ]
      }
    },
    {
      variant: "bordered",
      color: "warning",
      class: {
        base: [
          "data-[hover=true]:border-warning data-[hover=true]:text-warning",
          "data-[selectable=true]:focus:border-warning data-[selectable=true]:focus:text-warning"
        ]
      }
    },
    {
      variant: "bordered",
      color: "danger",
      class: {
        base: [
          "data-[hover=true]:border-danger data-[hover=true]:text-danger",
          "data-[selectable=true]:focus:border-danger data-[selectable=true]:focus:text-danger"
        ]
      }
    },
    {
      variant: "flat",
      color: "default",
      class: {
        base: [
          "data-[hover=true]:bg-default/40",
          "data-[hover=true]:text-default-foreground",
          "data-[selectable=true]:focus:bg-default/40",
          "data-[selectable=true]:focus:text-default-foreground"
        ]
      }
    },
    {
      variant: "flat",
      color: "primary",
      class: {
        base: [
          "data-[hover=true]:bg-primary/20 data-[hover=true]:text-primary",
          "data-[selectable=true]:focus:bg-primary/20 data-[selectable=true]:focus:text-primary"
        ]
      }
    },
    {
      variant: "flat",
      color: "secondary",
      class: {
        base: [
          "data-[hover=true]:bg-secondary/20 data-[hover=true]:text-secondary",
          "data-[selectable=true]:focus:bg-secondary/20 data-[selectable=true]:focus:text-secondary"
        ]
      }
    },
    {
      variant: "flat",
      color: "success",
      class: {
        base: [
          "data-[hover=true]:bg-success/20 data-[hover=true]:text-success",
          "data-[selectable=true]:focus:bg-success/20 data-[selectable=true]:focus:text-success"
        ]
      }
    },
    {
      variant: "flat",
      color: "warning",
      class: {
        base: [
          "data-[hover=true]:bg-warning/20 data-[hover=true]:text-warning",
          "data-[selectable=true]:focus:bg-warning/20 data-[selectable=true]:focus:text-warning"
        ]
      }
    },
    {
      variant: "flat",
      color: "danger",
      class: {
        base: [
          "data-[hover=true]:bg-danger/20 data-[hover=true]:text-danger",
          "data-[selectable=true]:focus:bg-danger/20 data-[selectable=true]:focus:text-danger"
        ]
      }
    },
    {
      variant: "faded",
      color: "default",
      class: {
        base: [
          "data-[hover=true]:text-default-foreground",
          "data-[selectable=true]:focus:text-default-foreground"
        ]
      }
    },
    {
      variant: "faded",
      color: "primary",
      class: {
        base: ["data-[hover=true]:text-primary", "data-[selectable=true]:focus:text-primary"]
      }
    },
    {
      variant: "faded",
      color: "secondary",
      class: {
        base: ["data-[hover=true]:text-secondary", "data-[selectable=true]:focus:text-secondary"]
      }
    },
    {
      variant: "faded",
      color: "success",
      class: {
        base: ["data-[hover=true]:text-success", "data-[selectable=true]:focus:text-success"]
      }
    },
    {
      variant: "faded",
      color: "warning",
      class: {
        base: ["data-[hover=true]:text-warning", "data-[selectable=true]:focus:text-warning"]
      }
    },
    {
      variant: "faded",
      color: "danger",
      class: {
        base: ["data-[hover=true]:text-danger", "data-[selectable=true]:focus:text-danger"]
      }
    },
    {
      variant: "light",
      color: "default",
      class: {
        base: [
          "data-[hover=true]:text-default-500",
          "data-[selectable=true]:focus:text-default-500"
        ]
      }
    },
    {
      variant: "light",
      color: "primary",
      class: {
        base: ["data-[hover=true]:text-primary", "data-[selectable=true]:focus:text-primary"]
      }
    },
    {
      variant: "light",
      color: "secondary",
      class: {
        base: ["data-[hover=true]:text-secondary", "data-[selectable=true]:focus:text-secondary"]
      }
    },
    {
      variant: "light",
      color: "success",
      class: {
        base: ["data-[hover=true]:text-success", "data-[selectable=true]:focus:text-success"]
      }
    },
    {
      variant: "light",
      color: "warning",
      class: {
        base: ["data-[hover=true]:text-warning", "data-[selectable=true]:focus:text-warning"]
      }
    },
    {
      variant: "light",
      color: "danger",
      class: {
        base: ["data-[hover=true]:text-danger", "data-[selectable=true]:focus:text-danger"]
      }
    }
  ]
});
var menuSection = tv({
  slots: {
    base: "relative mb-2",
    heading: "pl-1 text-tiny text-foreground-500",
    group: "data-[has-title=true]:pt-1",
    divider: "mt-2"
  }
});
var navbar = tv({
  slots: {
    base: [
      "flex",
      "z-40",
      "w-full",
      "h-auto",
      "items-center",
      "justify-center",
      "data-[menu-open=true]:border-none"
    ],
    wrapper: [
      "z-40",
      "flex",
      "px-6",
      "gap-4",
      "w-full",
      "flex-row",
      "relative",
      "flex-nowrap",
      "items-center",
      "justify-between",
      "h-[var(--navbar-height)]"
    ],
    toggle: [
      "group",
      "flex",
      "items-center",
      "justify-center",
      "w-6",
      "h-full",
      "outline-none",
      "rounded-small",
      "tap-highlight-transparent",
      ...dataFocusVisibleClasses
    ],
    srOnly: ["sr-only"],
    toggleIcon: [
      "w-full",
      "h-full",
      "pointer-events-none",
      "flex",
      "flex-col",
      "items-center",
      "justify-center",
      "text-inherit",
      "group-data-[pressed=true]:opacity-70",
      "transition-opacity",
      "before:content-['']",
      "before:block",
      "before:h-px",
      "before:w-6",
      "before:bg-current",
      "before:transition-transform",
      "before:duration-150",
      "before:-translate-y-1",
      "before:rotate-0",
      "group-data-[open=true]:before:translate-y-px",
      "group-data-[open=true]:before:rotate-45",
      "after:content-['']",
      "after:block",
      "after:h-px",
      "after:w-6",
      "after:bg-current",
      "after:transition-transform",
      "after:duration-150",
      "after:translate-y-1",
      "after:rotate-0",
      "group-data-[open=true]:after:translate-y-0",
      "group-data-[open=true]:after:-rotate-45"
    ],
    brand: [
      "flex",
      "basis-0",
      "flex-row",
      "flex-grow",
      "flex-nowrap",
      "justify-start",
      "bg-transparent",
      "items-center",
      "no-underline",
      "text-medium",
      "whitespace-nowrap",
      "box-border"
    ],
    content: [
      "flex",
      "gap-4",
      "h-full",
      "flex-row",
      "flex-nowrap",
      "items-center",
      "data-[justify=start]:justify-start",
      "data-[justify=start]:flex-grow",
      "data-[justify=start]:basis-0",
      "data-[justify=center]:justify-center",
      "data-[justify=end]:justify-end",
      "data-[justify=end]:flex-grow",
      "data-[justify=end]:basis-0"
    ],
    item: [
      "text-medium",
      "whitespace-nowrap",
      "box-border",
      "list-none",
      "data-[active=true]:font-semibold"
    ],
    menu: [
      "z-30",
      "px-6",
      "pt-2",
      "fixed",
      "flex",
      "max-w-full",
      "top-[var(--navbar-height)]",
      "inset-x-0",
      "bottom-0",
      "w-screen",
      "flex-col",
      "gap-2",
      "overflow-y-auto"
    ],
    menuItem: [
      "text-large",
      "data-[active=true]:font-semibold"
    ]
  },
  variants: {
    position: {
      static: {
        base: "static"
      },
      sticky: {
        base: "sticky top-0 inset-x-0"
      }
    },
    maxWidth: {
      sm: {
        wrapper: "max-w-[640px]"
      },
      md: {
        wrapper: "max-w-[768px]"
      },
      lg: {
        wrapper: "max-w-[1024px]"
      },
      xl: {
        wrapper: "max-w-[1280px]"
      },
      "2xl": {
        wrapper: "max-w-[1536px]"
      },
      full: {
        wrapper: "max-w-full"
      }
    },
    hideOnScroll: {
      true: {
        base: ["sticky", "top-0", "inset-x-0"]
      }
    },
    isBordered: {
      true: {
        base: ["border-b", "border-divider"]
      }
    },
    isBlurred: {
      false: {
        base: "bg-background",
        menu: "bg-background"
      },
      true: {
        base: [
          "backdrop-blur-lg",
          "data-[menu-open=true]:backdrop-blur-xl",
          "backdrop-saturate-150",
          "bg-background/70"
        ],
        menu: ["backdrop-blur-xl", "backdrop-saturate-150", "bg-background/70"]
      }
    },
    disableAnimation: {
      true: {
        menu: ["hidden", "h-[calc(100dvh_-_var(--navbar-height))]", "data-[open=true]:flex"]
      }
    }
  },
  defaultVariants: {
    maxWidth: "lg",
    position: "sticky",
    isBlurred: true
  }
});
var popover = tv({
  slots: {
    base: [
      "z-0",
      "relative",
      "bg-transparent",
      "before:content-['']",
      "before:hidden",
      "before:z-[-1]",
      "before:absolute",
      "before:rotate-45",
      "before:w-2.5",
      "before:h-2.5",
      "before:rounded-sm",
      "data-[arrow=true]:before:block",
      "data-[placement=top]:before:-bottom-[calc(theme(spacing.5)/4_-_1.5px)]",
      "data-[placement=top]:before:left-1/2",
      "data-[placement=top]:before:-translate-x-1/2",
      "data-[placement=top-start]:before:-bottom-[calc(theme(spacing.5)/4_-_1.5px)]",
      "data-[placement=top-start]:before:left-3",
      "data-[placement=top-end]:before:-bottom-[calc(theme(spacing.5)/4_-_1.5px)]",
      "data-[placement=top-end]:before:right-3",
      "data-[placement=bottom]:before:-top-[calc(theme(spacing.5)/4_-_1.5px)]",
      "data-[placement=bottom]:before:left-1/2",
      "data-[placement=bottom]:before:-translate-x-1/2",
      "data-[placement=bottom-start]:before:-top-[calc(theme(spacing.5)/4_-_1.5px)]",
      "data-[placement=bottom-start]:before:left-3",
      "data-[placement=bottom-end]:before:-top-[calc(theme(spacing.5)/4_-_1.5px)]",
      "data-[placement=bottom-end]:before:right-3",
      "data-[placement=left]:before:-right-[calc(theme(spacing.5)/4_-_2px)]",
      "data-[placement=left]:before:top-1/2",
      "data-[placement=left]:before:-translate-y-1/2",
      "data-[placement=left-start]:before:-right-[calc(theme(spacing.5)/4_-_3px)]",
      "data-[placement=left-start]:before:top-1/4",
      "data-[placement=left-end]:before:-right-[calc(theme(spacing.5)/4_-_3px)]",
      "data-[placement=left-end]:before:bottom-1/4",
      "data-[placement=right]:before:-left-[calc(theme(spacing.5)/4_-_2px)]",
      "data-[placement=right]:before:top-1/2",
      "data-[placement=right]:before:-translate-y-1/2",
      "data-[placement=right-start]:before:-left-[calc(theme(spacing.5)/4_-_3px)]",
      "data-[placement=right-start]:before:top-1/4",
      "data-[placement=right-end]:before:-left-[calc(theme(spacing.5)/4_-_3px)]",
      "data-[placement=right-end]:before:bottom-1/4",
      ...dataFocusVisibleClasses
    ],
    content: [
      "z-10",
      "px-2.5",
      "py-1",
      "w-full",
      "inline-flex",
      "flex-col",
      "items-center",
      "justify-center",
      "box-border",
      "subpixel-antialiased",
      "outline-none",
      "box-border"
    ],
    trigger: ["z-10"],
    backdrop: ["hidden"],
    arrow: []
  },
  variants: {
    size: {
      sm: { content: "text-tiny" },
      md: { content: "text-small" },
      lg: { content: "text-medium" }
    },
    color: {
      default: {
        base: "before:bg-content1 before:shadow-small",
        content: "bg-content1"
      },
      foreground: {
        base: "before:bg-foreground",
        content: colorVariants.solid.foreground
      },
      primary: {
        base: "before:bg-primary",
        content: colorVariants.solid.primary
      },
      secondary: {
        base: "before:bg-secondary",
        content: colorVariants.solid.secondary
      },
      success: {
        base: "before:bg-success",
        content: colorVariants.solid.success
      },
      warning: {
        base: "before:bg-warning",
        content: colorVariants.solid.warning
      },
      danger: {
        base: "before:bg-danger",
        content: colorVariants.solid.danger
      }
    },
    radius: {
      none: { content: "rounded-none" },
      sm: { content: "rounded-small" },
      md: { content: "rounded-medium" },
      lg: { content: "rounded-large" },
      full: { content: "rounded-full" }
    },
    shadow: {
      sm: {
        content: "shadow-small"
      },
      md: {
        content: "shadow-medium"
      },
      lg: {
        content: "shadow-large"
      }
    },
    backdrop: {
      transparent: {},
      opaque: {
        backdrop: "bg-overlay/50 backdrop-opacity-disabled"
      },
      blur: {
        backdrop: "backdrop-blur-sm backdrop-saturate-150 bg-overlay/30"
      }
    },
    triggerScaleOnOpen: {
      true: {
        trigger: ["aria-expanded:scale-[0.97]", "aria-expanded:opacity-70", "subpixel-antialiased"]
      },
      false: {}
    },
    disableAnimation: {
      true: {
        base: "animate-none"
      }
    },
    isTriggerDisabled: {
      true: {
        trigger: "opacity-disabled pointer-events-none"
      },
      false: {}
    }
  },
  defaultVariants: {
    color: "default",
    radius: "lg",
    size: "md",
    shadow: "md",
    backdrop: "transparent",
    triggerScaleOnOpen: true
  },
  compoundVariants: [
    {
      backdrop: ["opaque", "blur"],
      class: {
        backdrop: "block w-full h-full fixed inset-0 -z-30"
      }
    }
  ]
});
var divider = tv({
  base: "shrink-0 bg-divider border-none",
  variants: {
    orientation: {
      horizontal: "w-full h-divider",
      vertical: "h-full w-divider"
    }
  },
  defaultVariants: {
    orientation: "horizontal"
  }
});
var dropdown = tv({
  base: ["w-full", "p-1", "min-w-[200px]"]
});
tv({
  slots: {
    base: [
      "flex",
      "group",
      "gap-2",
      "items-center",
      "justify-between",
      "relative",
      "px-2",
      "py-1.5",
      "w-full",
      "h-full",
      "box-border",
      "rounded-small",
      "outline-none",
      "cursor-pointer",
      "tap-highlight-transparent",
      "data-[pressed=true]:opacity-70",
      ...dataFocusVisibleClasses,
      "data-[focus-visible=true]:dark:ring-offset-background-content1"
    ],
    wrapper: "w-full flex flex-col items-start justify-center",
    title: "flex-1 text-small font-normal truncate",
    description: ["w-full", "text-tiny", "text-foreground-500", "group-hover:text-current"],
    selectedIcon: ["text-inherit", "w-3", "h-3", "flex-shrink-0"],
    shortcut: [
      "px-1",
      "py-0.5",
      "rounded",
      "font-sans",
      "text-foreground-500",
      "text-tiny",
      "border-small",
      "border-default-300",
      "group-hover:border-current"
    ]
  },
  variants: {
    variant: {
      solid: {
        base: ""
      },
      bordered: {
        base: "border-medium border-transparent bg-transparent"
      },
      light: {
        base: "bg-transparent"
      },
      faded: {
        base: "border-small border-transparent hover:border-default data-[hover=true]:bg-default-100"
      },
      flat: {
        base: ""
      },
      shadow: {
        base: "data-[hover=true]:shadow-lg"
      }
    },
    color: {
      default: {},
      primary: {},
      secondary: {},
      success: {},
      warning: {},
      danger: {}
    },
    isDisabled: {
      true: {
        base: "opacity-disabled pointer-events-none"
      }
    },
    disableAnimation: {
      true: {},
      false: {}
    }
  },
  defaultVariants: {
    variant: "solid",
    color: "default"
  },
  compoundVariants: [
    {
      variant: "solid",
      color: "default",
      class: {
        base: "data-[hover=true]:bg-default data-[hover=true]:text-default-foreground"
      }
    },
    {
      variant: "solid",
      color: "primary",
      class: {
        base: "data-[hover=true]:bg-primary data-[hover=true]:text-primary-foreground"
      }
    },
    {
      variant: "solid",
      color: "secondary",
      class: {
        base: "data-[hover=true]:bg-secondary data-[hover=true]:text-secondary-foreground"
      }
    },
    {
      variant: "solid",
      color: "success",
      class: {
        base: "data-[hover=true]:bg-success data-[hover=true]:text-success-foreground"
      }
    },
    {
      variant: "solid",
      color: "warning",
      class: {
        base: "data-[hover=true]:bg-warning data-[hover=true]:text-warning-foreground"
      }
    },
    {
      variant: "solid",
      color: "danger",
      class: {
        base: "data-[hover=true]:bg-danger data-[hover=true]:text-danger-foreground"
      }
    },
    {
      variant: "shadow",
      color: "default",
      class: {
        base: "data-[hover=true]:shadow-default/50 data-[hover=true]:bg-default data-[hover=true]:text-default-foreground"
      }
    },
    {
      variant: "shadow",
      color: "primary",
      class: {
        base: "data-[hover=true]:shadow-primary/30 data-[hover=true]:bg-primary data-[hover=true]:text-primary-foreground"
      }
    },
    {
      variant: "shadow",
      color: "secondary",
      class: {
        base: "data-[hover=true]:shadow-secondary/30 data-[hover=true]:bg-secondary data-[hover=true]:text-secondary-foreground"
      }
    },
    {
      variant: "shadow",
      color: "success",
      class: {
        base: "data-[hover=true]:shadow-success/30 data-[hover=true]:bg-success data-[hover=true]:text-success-foreground"
      }
    },
    {
      variant: "shadow",
      color: "warning",
      class: {
        base: "data-[hover=true]:shadow-warning/30 data-[hover=true]:bg-warning data-[hover=true]:text-warning-foreground"
      }
    },
    {
      variant: "shadow",
      color: "danger",
      class: {
        base: "data-[hover=true]:shadow-danger/30 data-[hover=true]:bg-danger data-[hover=true]:text-danger-foreground"
      }
    },
    {
      variant: "bordered",
      color: "default",
      class: {
        base: "data-[hover=true]:border-default"
      }
    },
    {
      variant: "bordered",
      color: "primary",
      class: {
        base: "data-[hover=true]:border-primary data-[hover=true]:text-primary"
      }
    },
    {
      variant: "bordered",
      color: "secondary",
      class: {
        base: "data-[hover=true]:border-secondary data-[hover=true]:text-secondary"
      }
    },
    {
      variant: "bordered",
      color: "success",
      class: {
        base: "data-[hover=true]:border-success data-[hover=true]:text-success"
      }
    },
    {
      variant: "bordered",
      color: "warning",
      class: {
        base: "data-[hover=true]:border-warning data-[hover=true]:text-warning"
      }
    },
    {
      variant: "bordered",
      color: "danger",
      class: {
        base: "data-[hover=true]:border-danger data-[hover=true]:text-danger"
      }
    },
    {
      variant: "flat",
      color: "default",
      class: {
        base: "data-[hover=true]:bg-default/40 data-[hover=true]:text-default-foreground"
      }
    },
    {
      variant: "flat",
      color: "primary",
      class: {
        base: "data-[hover=true]:bg-primary/20 data-[hover=true]:text-primary"
      }
    },
    {
      variant: "flat",
      color: "secondary",
      class: {
        base: "data-[hover=true]:bg-secondary/20 data-[hover=true]:text-secondary"
      }
    },
    {
      variant: "flat",
      color: "success",
      class: {
        base: "data-[hover=true]:bg-success/20 data-[hover=true]:text-success "
      }
    },
    {
      variant: "flat",
      color: "warning",
      class: {
        base: "data-[hover=true]:bg-warning/20 data-[hover=true]:text-warning"
      }
    },
    {
      variant: "flat",
      color: "danger",
      class: {
        base: "data-[hover=true]:bg-danger/20 data-[hover=true]:text-danger"
      }
    },
    {
      variant: "faded",
      color: "default",
      class: {
        base: "data-[hover=true]:text-default-foreground"
      }
    },
    {
      variant: "faded",
      color: "primary",
      class: {
        base: "data-[hover=true]:text-primary"
      }
    },
    {
      variant: "faded",
      color: "secondary",
      class: {
        base: "data-[hover=true]:text-secondary"
      }
    },
    {
      variant: "faded",
      color: "success",
      class: {
        base: "data-[hover=true]:text-success"
      }
    },
    {
      variant: "faded",
      color: "warning",
      class: {
        base: "data-[hover=true]:text-warning"
      }
    },
    {
      variant: "faded",
      color: "danger",
      class: {
        base: "data-[hover=true]:text-danger"
      }
    },
    {
      variant: "light",
      color: "default",
      class: {
        base: "data-[hover=true]:text-default-500"
      }
    },
    {
      variant: "light",
      color: "primary",
      class: {
        base: "data-[hover=true]:text-primary"
      }
    },
    {
      variant: "light",
      color: "secondary",
      class: {
        base: "data-[hover=true]:text-secondary"
      }
    },
    {
      variant: "light",
      color: "success",
      class: {
        base: "data-[hover=true]:text-success"
      }
    },
    {
      variant: "light",
      color: "warning",
      class: {
        base: "data-[hover=true]:text-warning"
      }
    },
    {
      variant: "light",
      color: "danger",
      class: {
        base: "data-[hover=true]:text-danger"
      }
    }
  ]
});
tv({
  slots: {
    base: "relative mb-2",
    heading: "pl-1 text-tiny text-foreground-500",
    group: "data-[has-title=true]:pt-1",
    divider: "mt-2"
  }
});
tv({
  base: "w-full flex flex-col gap-0.5 p-1"
});
var image = tv({
  slots: {
    wrapper: "relative shadow-black/5",
    zoomedWrapper: "relative overflow-hidden rounded-inherit",
    img: "relative z-10 opacity-0 shadow-black/5 data-[loaded=true]:opacity-100",
    blurredImg: [
      "absolute",
      "z-0",
      "inset-0",
      "w-full",
      "h-full",
      "object-cover",
      "filter",
      "blur-lg",
      "scale-105",
      "saturate-150",
      "opacity-30",
      "translate-y-1"
    ]
  },
  variants: {
    radius: {
      none: {},
      sm: {},
      md: {},
      lg: {},
      full: {}
    },
    shadow: {
      none: {
        wrapper: "shadow-none",
        img: "shadow-none"
      },
      sm: {
        wrapper: "shadow-small",
        img: "shadow-small"
      },
      md: {
        wrapper: "shadow-medium",
        img: "shadow-medium"
      },
      lg: {
        wrapper: "shadow-large",
        img: "shadow-large"
      }
    },
    isZoomed: {
      true: {
        img: ["object-cover", "transform", "hover:scale-125"]
      }
    },
    showSkeleton: {
      true: {
        wrapper: ["group", "relative", "overflow-hidden", "bg-content3 dark:bg-content2"],
        img: "opacity-0"
      }
    },
    disableAnimation: {
      true: {
        img: "transition-none"
      },
      false: {
        img: "transition-transform-opacity motion-reduce:transition-none !duration-300"
      }
    }
  },
  defaultVariants: {
    radius: "lg",
    shadow: "none",
    isZoomed: false,
    isBlurred: false,
    showSkeleton: false
  },
  compoundVariants: [
    {
      showSkeleton: true,
      disableAnimation: false,
      class: {
        wrapper: [
          "before:opacity-100",
          "before:absolute",
          "before:inset-0",
          "before:-translate-x-full",
          "before:animate-[shimmer_2s_infinite]",
          "before:border-t",
          "before:border-content4/30",
          "before:bg-gradient-to-r",
          "before:from-transparent",
          "before:via-content4",
          "dark:before:via-default-700/10",
          "before:to-transparent",
          "after:opacity-100",
          "after:absolute",
          "after:inset-0",
          "after:-z-10",
          "after:bg-content3",
          "dark:after:bg-content2"
        ]
      }
    }
  ],
  compoundSlots: [
    {
      slots: ["wrapper", "img", "blurredImg", "zoomedWrapper"],
      radius: "none",
      class: "rounded-none"
    },
    {
      slots: ["wrapper", "img", "blurredImg", "zoomedWrapper"],
      radius: "full",
      class: "rounded-full"
    },
    {
      slots: ["wrapper", "img", "blurredImg", "zoomedWrapper"],
      radius: "sm",
      class: "rounded-small"
    },
    {
      slots: ["wrapper", "img", "blurredImg", "zoomedWrapper"],
      radius: "md",
      class: "rounded-md"
    },
    {
      slots: ["wrapper", "img", "blurredImg", "zoomedWrapper"],
      radius: "lg",
      class: "rounded-large"
    }
  ]
});
var input = tv({
  slots: {
    base: "group flex flex-col data-[hidden=true]:hidden",
    label: [
      "absolute",
      "z-10",
      "pointer-events-none",
      "origin-top-left",
      "rtl:origin-top-right",
      "subpixel-antialiased",
      "block",
      "text-small",
      "text-foreground-500"
    ],
    mainWrapper: "h-full",
    inputWrapper: "relative w-full inline-flex tap-highlight-transparent flex-row items-center shadow-sm px-3 gap-3",
    innerWrapper: "inline-flex w-full items-center h-full box-border",
    input: [
      "w-full font-normal bg-transparent !outline-none placeholder:text-foreground-500 focus-visible:outline-none",
      "data-[has-start-content=true]:ps-1.5",
      "data-[has-end-content=true]:pe-1.5",
      "file:cursor-pointer file:bg-transparent file:border-0",
      "autofill:bg-transparent bg-clip-text"
    ],
    clearButton: [
      "p-2",
      "-m-2",
      "z-10",
      "hidden",
      "absolute",
      "end-3",
      "start-auto",
      "appearance-none",
      "outline-none",
      "select-none",
      "opacity-0",
      "hover:!opacity-100",
      "cursor-pointer",
      "active:!opacity-70",
      "rounded-full",
      ...dataFocusVisibleClasses
    ],
    helperWrapper: "hidden group-data-[has-helper=true]:flex p-1 relative flex-col gap-1.5",
    description: "text-tiny text-foreground-400",
    errorMessage: "text-tiny text-danger"
  },
  variants: {
    variant: {
      flat: {
        inputWrapper: [
          "bg-default-100",
          "data-[hover=true]:bg-default-200",
          "group-data-[focus=true]:bg-default-100"
        ]
      },
      faded: {
        inputWrapper: [
          "bg-default-100",
          "border-medium",
          "border-default-200",
          "data-[hover=true]:border-default-400"
        ],
        value: "group-data-[has-value=true]:text-default-foreground"
      },
      bordered: {
        inputWrapper: [
          "border-medium",
          "border-default-200",
          "data-[hover=true]:border-default-400",
          "group-data-[focus=true]:border-default-foreground"
        ]
      },
      underlined: {
        inputWrapper: [
          "!px-1",
          "!pb-0",
          "!gap-0",
          "relative",
          "box-border",
          "border-b-medium",
          "shadow-[0_1px_0px_0_rgba(0,0,0,0.05)]",
          "border-default-200",
          "!rounded-none",
          "hover:border-default-300",
          "after:content-['']",
          "after:w-0",
          "after:origin-center",
          "after:bg-default-foreground",
          "after:absolute",
          "after:left-1/2",
          "after:-translate-x-1/2",
          "after:-bottom-[2px]",
          "after:h-[2px]",
          "group-data-[focus=true]:after:w-full"
        ],
        innerWrapper: "pb-1",
        label: "group-data-[filled-within=true]:text-foreground"
      }
    },
    color: {
      default: {},
      primary: {},
      secondary: {},
      success: {},
      warning: {},
      danger: {}
    },
    size: {
      sm: {
        label: "text-tiny",
        inputWrapper: "h-8 min-h-8 px-2 rounded-small",
        input: "text-small",
        clearButton: "text-medium"
      },
      md: {
        inputWrapper: "h-10 min-h-10 rounded-medium",
        input: "text-small",
        clearButton: "text-large"
      },
      lg: {
        inputWrapper: "h-12 min-h-12 rounded-large",
        input: "text-medium",
        clearButton: "text-large"
      }
    },
    radius: {
      none: {
        inputWrapper: "rounded-none"
      },
      sm: {
        inputWrapper: "rounded-small"
      },
      md: {
        inputWrapper: "rounded-medium"
      },
      lg: {
        inputWrapper: "rounded-large"
      },
      full: {
        inputWrapper: "rounded-full"
      }
    },
    labelPlacement: {
      outside: {
        mainWrapper: "flex flex-col"
      },
      "outside-left": {
        base: "flex-row items-center flex-nowrap data-[has-helper=true]:items-start",
        inputWrapper: "flex-1",
        mainWrapper: "flex flex-col",
        label: "relative text-foreground pe-2 ps-2 pointer-events-auto"
      },
      inside: {
        label: "text-tiny cursor-text",
        inputWrapper: "flex-col items-start justify-center gap-0",
        innerWrapper: "group-data-[has-label=true]:items-end"
      }
    },
    fullWidth: {
      true: {
        base: "w-full"
      }
    },
    isClearable: {
      true: {
        input: "peer pr-6 rtl:pr-0 rtl:pl-6",
        clearButton: "peer-data-[filled=true]:opacity-70 peer-data-[filled=true]:block"
      }
    },
    isDisabled: {
      true: {
        base: "opacity-disabled pointer-events-none",
        inputWrapper: "pointer-events-none",
        label: "pointer-events-none"
      }
    },
    isInvalid: {
      true: {
        label: "!text-danger",
        input: "!placeholder:text-danger !text-danger"
      }
    },
    isRequired: {
      true: {
        label: "after:content-['*'] after:text-danger after:ml-0.5 rtl:after:ml-[unset] rtl:after:mr-0.5"
      }
    },
    isMultiline: {
      true: {
        label: "relative",
        inputWrapper: "!h-auto",
        innerWrapper: "items-start group-data-[has-label=true]:items-start",
        input: "resize-none data-[hide-scroll=true]:scrollbar-hide"
      }
    },
    disableAnimation: {
      true: {
        input: "transition-none",
        inputWrapper: "transition-none",
        label: "transition-none"
      },
      false: {
        inputWrapper: "transition-background motion-reduce:transition-none !duration-150",
        label: [
          "will-change-auto",
          "!duration-200",
          "!ease-out",
          "motion-reduce:transition-none",
          "transition-[transform,color,left,opacity]"
        ],
        clearButton: ["transition-opacity", "motion-reduce:transition-none"]
      }
    }
  },
  defaultVariants: {
    variant: "flat",
    color: "default",
    size: "md",
    fullWidth: true,
    labelPlacement: "inside",
    isDisabled: false,
    isMultiline: false
  },
  compoundVariants: [
    {
      variant: "flat",
      color: "default",
      class: {
        input: "group-data-[has-value=true]:text-default-foreground"
      }
    },
    {
      variant: "flat",
      color: "primary",
      class: {
        inputWrapper: [
          "bg-primary-50",
          "data-[hover=true]:bg-primary-100",
          "text-primary",
          "group-data-[focus=true]:bg-primary-50",
          "placeholder:text-primary"
        ],
        input: "placeholder:text-primary",
        label: "text-primary"
      }
    },
    {
      variant: "flat",
      color: "secondary",
      class: {
        inputWrapper: [
          "bg-secondary-50",
          "text-secondary",
          "data-[hover=true]:bg-secondary-100",
          "group-data-[focus=true]:bg-secondary-50",
          "placeholder:text-secondary"
        ],
        input: "placeholder:text-secondary",
        label: "text-secondary"
      }
    },
    {
      variant: "flat",
      color: "success",
      class: {
        inputWrapper: [
          "bg-success-50",
          "text-success-600",
          "dark:text-success",
          "placeholder:text-success-600",
          "dark:placeholder:text-success",
          "data-[hover=true]:bg-success-100",
          "group-data-[focus=true]:bg-success-50"
        ],
        input: "placeholder:text-success-600 dark:placeholder:text-success",
        label: "text-success-600 dark:text-success"
      }
    },
    {
      variant: "flat",
      color: "warning",
      class: {
        inputWrapper: [
          "bg-warning-50",
          "text-warning-600",
          "dark:text-warning",
          "placeholder:text-warning-600",
          "dark:placeholder:text-warning",
          "data-[hover=true]:bg-warning-100",
          "group-data-[focus=true]:bg-warning-50"
        ],
        input: "placeholder:text-warning-600 dark:placeholder:text-warning",
        label: "text-warning-600 dark:text-warning"
      }
    },
    {
      variant: "flat",
      color: "danger",
      class: {
        inputWrapper: [
          "bg-danger-50",
          "text-danger",
          "dark:text-danger-500",
          "placeholder:text-danger",
          "dark:placeholder:text-danger-500",
          "data-[hover=true]:bg-danger-100",
          "group-data-[focus=true]:bg-danger-50"
        ],
        input: "placeholder:text-danger dark:placeholder:text-danger-500",
        label: "text-danger dark:text-danger-500"
      }
    },
    {
      variant: "faded",
      color: "primary",
      class: {
        label: "text-primary",
        inputWrapper: "data-[hover=true]:border-primary focus-within:border-primary"
      }
    },
    {
      variant: "faded",
      color: "secondary",
      class: {
        label: "text-secondary",
        inputWrapper: "data-[hover=true]:border-secondary focus-within:border-secondary"
      }
    },
    {
      variant: "faded",
      color: "success",
      class: {
        label: "text-success",
        inputWrapper: "data-[hover=true]:border-success focus-within:border-success"
      }
    },
    {
      variant: "faded",
      color: "warning",
      class: {
        label: "text-warning",
        inputWrapper: "data-[hover=true]:border-warning focus-within:border-warning"
      }
    },
    {
      variant: "faded",
      color: "danger",
      class: {
        label: "text-danger",
        inputWrapper: "data-[hover=true]:border-danger focus-within:border-danger"
      }
    },
    {
      variant: "underlined",
      color: "default",
      class: {
        input: "group-data-[has-value=true]:text-foreground"
      }
    },
    {
      variant: "underlined",
      color: "primary",
      class: {
        inputWrapper: "after:bg-primary",
        label: "text-primary"
      }
    },
    {
      variant: "underlined",
      color: "secondary",
      class: {
        inputWrapper: "after:bg-secondary",
        label: "text-secondary"
      }
    },
    {
      variant: "underlined",
      color: "success",
      class: {
        inputWrapper: "after:bg-success",
        label: "text-success"
      }
    },
    {
      variant: "underlined",
      color: "warning",
      class: {
        inputWrapper: "after:bg-warning",
        label: "text-warning"
      }
    },
    {
      variant: "underlined",
      color: "danger",
      class: {
        inputWrapper: "after:bg-danger",
        label: "text-danger"
      }
    },
    {
      variant: "bordered",
      color: "primary",
      class: {
        inputWrapper: "group-data-[focus=true]:border-primary",
        label: "text-primary"
      }
    },
    {
      variant: "bordered",
      color: "secondary",
      class: {
        inputWrapper: "group-data-[focus=true]:border-secondary",
        label: "text-secondary"
      }
    },
    {
      variant: "bordered",
      color: "success",
      class: {
        inputWrapper: "group-data-[focus=true]:border-success",
        label: "text-success"
      }
    },
    {
      variant: "bordered",
      color: "warning",
      class: {
        inputWrapper: "group-data-[focus=true]:border-warning",
        label: "text-warning"
      }
    },
    {
      variant: "bordered",
      color: "danger",
      class: {
        inputWrapper: "group-data-[focus=true]:border-danger",
        label: "text-danger"
      }
    },
    {
      labelPlacement: "inside",
      color: "default",
      class: {
        label: "group-data-[filled-within=true]:text-default-600"
      }
    },
    {
      labelPlacement: "outside",
      color: "default",
      class: {
        label: "group-data-[filled-within=true]:text-foreground"
      }
    },
    {
      radius: "full",
      size: ["sm"],
      class: {
        inputWrapper: "px-3"
      }
    },
    {
      radius: "full",
      size: "md",
      class: {
        inputWrapper: "px-4"
      }
    },
    {
      radius: "full",
      size: "lg",
      class: {
        inputWrapper: "px-5"
      }
    },
    {
      disableAnimation: false,
      variant: ["faded", "bordered"],
      class: {
        inputWrapper: "transition-colors motion-reduce:transition-none"
      }
    },
    {
      disableAnimation: false,
      variant: "underlined",
      class: {
        inputWrapper: "after:transition-width motion-reduce:after:transition-none"
      }
    },
    {
      variant: ["flat", "faded"],
      class: {
        inputWrapper: [
          ...groupDataFocusVisibleClasses
        ]
      }
    },
    {
      isInvalid: true,
      variant: "flat",
      class: {
        inputWrapper: [
          "!bg-danger-50",
          "data-[hover=true]:!bg-danger-100",
          "group-data-[focus=true]:!bg-danger-50"
        ]
      }
    },
    {
      isInvalid: true,
      variant: "bordered",
      class: {
        inputWrapper: "!border-danger group-data-[focus=true]:!border-danger"
      }
    },
    {
      isInvalid: true,
      variant: "underlined",
      class: {
        inputWrapper: "after:!bg-danger"
      }
    },
    {
      labelPlacement: "inside",
      size: "sm",
      class: {
        inputWrapper: "h-12 py-1.5 px-3"
      }
    },
    {
      labelPlacement: "inside",
      size: "md",
      class: {
        inputWrapper: "h-14 py-2"
      }
    },
    {
      labelPlacement: "inside",
      size: "lg",
      class: {
        label: "text-small",
        inputWrapper: "h-16 py-2.5 gap-0"
      }
    },
    {
      labelPlacement: "inside",
      size: "sm",
      variant: ["bordered", "faded"],
      class: {
        inputWrapper: "py-1"
      }
    },
    {
      labelPlacement: ["inside", "outside"],
      class: {
        label: ["group-data-[filled-within=true]:pointer-events-auto"]
      }
    },
    {
      labelPlacement: "outside",
      isMultiline: false,
      class: {
        base: "relative justify-end",
        label: [
          "pb-0",
          "z-20",
          "top-1/2",
          "-translate-y-1/2",
          "group-data-[filled-within=true]:start-0"
        ]
      }
    },
    {
      labelPlacement: ["inside"],
      class: {
        label: ["group-data-[filled-within=true]:scale-85"]
      }
    },
    {
      labelPlacement: ["inside"],
      variant: "flat",
      class: {
        innerWrapper: "pb-0.5"
      }
    },
    {
      variant: "underlined",
      size: "sm",
      class: {
        innerWrapper: "pb-1"
      }
    },
    {
      variant: "underlined",
      size: ["md", "lg"],
      class: {
        innerWrapper: "pb-1.5"
      }
    },
    {
      labelPlacement: "inside",
      size: ["sm", "md"],
      class: {
        label: "text-small"
      }
    },
    {
      labelPlacement: "inside",
      isMultiline: false,
      size: "sm",
      class: {
        label: [
          "group-data-[filled-within=true]:-translate-y-[calc(50%_+_theme(fontSize.tiny)/2_-_8px)]"
        ]
      }
    },
    {
      labelPlacement: "inside",
      isMultiline: false,
      size: "md",
      class: {
        label: [
          "group-data-[filled-within=true]:-translate-y-[calc(50%_+_theme(fontSize.small)/2_-_6px)]"
        ]
      }
    },
    {
      labelPlacement: "inside",
      isMultiline: false,
      size: "lg",
      class: {
        label: [
          "text-medium",
          "group-data-[filled-within=true]:-translate-y-[calc(50%_+_theme(fontSize.small)/2_-_8px)]"
        ]
      }
    },
    {
      labelPlacement: "inside",
      variant: ["faded", "bordered"],
      isMultiline: false,
      size: "sm",
      class: {
        label: [
          "group-data-[filled-within=true]:-translate-y-[calc(50%_+_theme(fontSize.tiny)/2_-_8px_-_theme(borderWidth.medium))]"
        ]
      }
    },
    {
      labelPlacement: "inside",
      variant: ["faded", "bordered"],
      isMultiline: false,
      size: "md",
      class: {
        label: [
          "group-data-[filled-within=true]:-translate-y-[calc(50%_+_theme(fontSize.small)/2_-_6px_-_theme(borderWidth.medium))]"
        ]
      }
    },
    {
      labelPlacement: "inside",
      variant: ["faded", "bordered"],
      isMultiline: false,
      size: "lg",
      class: {
        label: [
          "text-medium",
          "group-data-[filled-within=true]:-translate-y-[calc(50%_+_theme(fontSize.small)/2_-_8px_-_theme(borderWidth.medium))]"
        ]
      }
    },
    {
      labelPlacement: "inside",
      variant: "underlined",
      isMultiline: false,
      size: "sm",
      class: {
        label: [
          "group-data-[filled-within=true]:-translate-y-[calc(50%_+_theme(fontSize.tiny)/2_-_5px)]"
        ]
      }
    },
    {
      labelPlacement: "inside",
      variant: "underlined",
      isMultiline: false,
      size: "md",
      class: {
        label: [
          "group-data-[filled-within=true]:-translate-y-[calc(50%_+_theme(fontSize.small)/2_-_3.5px)]"
        ]
      }
    },
    {
      labelPlacement: "inside",
      variant: "underlined",
      size: "lg",
      isMultiline: false,
      class: {
        label: [
          "text-medium",
          "group-data-[filled-within=true]:-translate-y-[calc(50%_+_theme(fontSize.small)/2_-_4px)]"
        ]
      }
    },
    {
      labelPlacement: "outside",
      size: "sm",
      isMultiline: false,
      class: {
        label: [
          "start-2",
          "text-tiny",
          "group-data-[filled-within=true]:-translate-y-[calc(100%_+_theme(fontSize.tiny)/2_+_16px)]"
        ],
        base: "data-[has-label=true]:mt-[calc(theme(fontSize.small)_+_8px)]"
      }
    },
    {
      labelPlacement: "outside",
      size: "md",
      isMultiline: false,
      class: {
        label: [
          "start-3",
          "end-auto",
          "text-small",
          "group-data-[filled-within=true]:-translate-y-[calc(100%_+_theme(fontSize.small)/2_+_20px)]"
        ],
        base: "data-[has-label=true]:mt-[calc(theme(fontSize.small)_+_10px)]"
      }
    },
    {
      labelPlacement: "outside",
      size: "lg",
      isMultiline: false,
      class: {
        label: [
          "start-3",
          "end-auto",
          "text-medium",
          "group-data-[filled-within=true]:-translate-y-[calc(100%_+_theme(fontSize.small)/2_+_24px)]"
        ],
        base: "data-[has-label=true]:mt-[calc(theme(fontSize.small)_+_12px)]"
      }
    },
    {
      labelPlacement: "outside-left",
      size: "sm",
      class: {
        label: "group-data-[has-helper=true]:pt-2"
      }
    },
    {
      labelPlacement: "outside-left",
      size: "md",
      class: {
        label: "group-data-[has-helper=true]:pt-3"
      }
    },
    {
      labelPlacement: "outside-left",
      size: "lg",
      class: {
        label: "group-data-[has-helper=true]:pt-4"
      }
    },
    {
      labelPlacement: ["outside", "outside-left"],
      isMultiline: true,
      class: {
        inputWrapper: "py-2"
      }
    },
    {
      labelPlacement: "outside",
      isMultiline: true,
      class: {
        label: "pb-1.5"
      }
    },
    {
      labelPlacement: "inside",
      isMultiline: true,
      class: {
        label: "pb-0.5",
        input: "pt-0"
      }
    },
    {
      isMultiline: true,
      disableAnimation: false,
      class: {
        input: "transition-height !duration-100 motion-reduce:transition-none"
      }
    },
    {
      labelPlacement: ["inside", "outside"],
      class: {
        label: ["pe-2", "max-w-full", "text-ellipsis", "overflow-hidden"]
      }
    },
    {
      isMultiline: true,
      radius: "full",
      class: {
        inputWrapper: "data-[has-multiple-rows=true]:rounded-large"
      }
    }
  ]
});
var link = tv({
  base: [
    "relative inline-flex items-center outline-none tap-highlight-transparent",
    ...dataFocusVisibleClasses
  ],
  variants: {
    size: {
      sm: "text-small",
      md: "text-medium",
      lg: "text-large"
    },
    color: {
      foreground: "text-foreground",
      primary: "text-primary",
      secondary: "text-secondary",
      success: "text-success",
      warning: "text-warning",
      danger: "text-danger"
    },
    underline: {
      none: "no-underline",
      hover: "hover:underline",
      always: "underline",
      active: "active:underline",
      focus: "focus:underline"
    },
    isBlock: {
      true: [
        "px-2",
        "py-1",
        "hover:after:opacity-100",
        "after:content-['']",
        "after:inset-0",
        "after:opacity-0",
        "after:w-full",
        "after:h-full",
        "after:rounded-xl",
        "after:transition-background",
        "after:absolute"
      ],
      false: "hover:opacity-80 active:opacity-disabled transition-opacity"
    },
    isDisabled: {
      true: "opacity-disabled cursor-default pointer-events-none"
    },
    disableAnimation: {
      true: "after:transition-none transition-none"
    }
  },
  compoundVariants: [
    {
      isBlock: true,
      color: "foreground",
      class: "hover:after:bg-foreground/10"
    },
    {
      isBlock: true,
      color: "primary",
      class: "hover:after:bg-primary/20"
    },
    {
      isBlock: true,
      color: "secondary",
      class: "hover:after:bg-secondary/20"
    },
    {
      isBlock: true,
      color: "success",
      class: "hover:after:bg-success/20"
    },
    {
      isBlock: true,
      color: "warning",
      class: "hover:after:bg-warning/20"
    },
    {
      isBlock: true,
      color: "danger",
      class: "hover:after:bg-danger/20"
    },
    {
      underline: ["hover", "always", "active", "focus"],
      class: "underline-offset-4"
    }
  ],
  defaultVariants: {
    color: "primary",
    size: "md",
    isBlock: false,
    underline: "none",
    isDisabled: false
  }
});
var linkAnchorClasses = "flex mx-1 text-current self-center";
var card = tv({
  slots: {
    base: [
      "flex",
      "flex-col",
      "relative",
      "overflow-hidden",
      "h-auto",
      "outline-none",
      "text-foreground",
      "box-border",
      "bg-content1",
      ...dataFocusVisibleClasses
    ],
    header: [
      "flex",
      "p-3",
      "z-10",
      "w-full",
      "justify-start",
      "items-center",
      "shrink-0",
      "overflow-inherit",
      "color-inherit",
      "subpixel-antialiased"
    ],
    body: [
      "relative",
      "flex",
      "flex-1",
      "w-full",
      "p-3",
      "flex-auto",
      "flex-col",
      "place-content-inherit",
      "align-items-inherit",
      "h-auto",
      "break-words",
      "text-left",
      "overflow-y-auto",
      "subpixel-antialiased"
    ],
    footer: [
      "p-3",
      "h-auto",
      "flex",
      "w-full",
      "items-center",
      "overflow-hidden",
      "color-inherit",
      "subpixel-antialiased"
    ]
  },
  variants: {
    shadow: {
      none: {
        base: "shadow-none"
      },
      sm: {
        base: "shadow-small"
      },
      md: {
        base: "shadow-medium"
      },
      lg: {
        base: "shadow-large"
      }
    },
    radius: {
      none: {
        base: "rounded-none",
        header: "rounded-none",
        footer: "rounded-none"
      },
      sm: {
        base: "rounded-small",
        header: "rounded-t-small",
        footer: "rounded-b-small"
      },
      md: {
        base: "rounded-medium",
        header: "rounded-t-medium",
        footer: "rounded-b-medium"
      },
      lg: {
        base: "rounded-large",
        header: "rounded-t-large",
        footer: "rounded-b-large"
      }
    },
    fullWidth: {
      true: {
        base: "w-full"
      }
    },
    isHoverable: {
      true: {
        base: "data-[hover=true]:bg-content2 dark:data-[hover=true]:bg-content2"
      }
    },
    isPressable: {
      true: { base: "cursor-pointer" }
    },
    isBlurred: {
      true: {
        base: [
          "bg-background/80",
          "dark:bg-background/20",
          "backdrop-blur-md",
          "backdrop-saturate-150"
        ]
      }
    },
    isFooterBlurred: {
      true: {
        footer: ["bg-background/10", "backdrop-blur", "backdrop-saturate-150"]
      }
    },
    isDisabled: {
      true: {
        base: "opacity-disabled cursor-not-allowed"
      }
    },
    disableAnimation: {
      true: "",
      false: { base: "transition-transform-background motion-reduce:transition-none" }
    }
  },
  compoundVariants: [
    {
      isPressable: true,
      class: "data-[pressed=true]:scale-[0.97] tap-highlight-transparent"
    }
  ],
  defaultVariants: {
    radius: "lg",
    shadow: "md",
    fullWidth: false,
    isHoverable: false,
    isPressable: false,
    isDisabled: false,
    isFooterBlurred: false
  }
});
var circularProgress = tv({
  slots: {
    base: "flex flex-col justify-center gap-1 max-w-fit items-center",
    label: "",
    svgWrapper: "relative block",
    svg: "z-0 relative overflow-hidden",
    track: "h-full stroke-default-300/50",
    indicator: "h-full stroke-current",
    value: "absolute font-normal inset-0 flex items-center justify-center"
  },
  variants: {
    color: {
      default: {
        svg: "text-default-400"
      },
      primary: {
        svg: "text-primary"
      },
      secondary: {
        svg: "text-secondary"
      },
      success: {
        svg: "text-success"
      },
      warning: {
        svg: "text-warning"
      },
      danger: {
        svg: "text-danger"
      }
    },
    size: {
      sm: {
        svg: "w-8 h-8",
        label: "text-small",
        value: "text-[0.5rem]"
      },
      md: {
        svg: "w-10 h-10",
        label: "text-small",
        value: "text-[0.55rem]"
      },
      lg: {
        svg: "w-12 h-12",
        label: "text-medium",
        value: "text-[0.6rem]"
      }
    },
    isIndeterminate: {
      true: {
        svg: "animate-spinner-ease-spin"
      }
    },
    isDisabled: {
      true: {
        base: "opacity-disabled cursor-not-allowed"
      }
    },
    disableAnimation: {
      true: {},
      false: {
        indicator: "transition-all !duration-500"
      }
    }
  },
  defaultVariants: {
    color: "primary",
    size: "md",
    isDisabled: false
  },
  compoundVariants: [
    {
      disableAnimation: true,
      isIndeterminate: false,
      class: {
        svg: "!transition-none motion-reduce:transition-none"
      }
    }
  ]
});
var avatar = tv({
  slots: {
    base: [
      "flex",
      "relative",
      "justify-center",
      "items-center",
      "box-border",
      "overflow-hidden",
      "align-middle",
      "text-white",
      "z-0",
      ...dataFocusVisibleClasses
    ],
    img: [
      "flex",
      "object-cover",
      "w-full",
      "h-full",
      "transition-opacity",
      "!duration-500",
      "opacity-0",
      "data-[loaded=true]:opacity-100"
    ],
    fallback: [...translateCenterClasses, "flex", "items-center", "justify-center"],
    name: [...translateCenterClasses, "font-normal", "text-center", "text-inherit"],
    icon: [
      ...translateCenterClasses,
      "flex",
      "items-center",
      "justify-center",
      "text-inherit",
      "w-full",
      "h-full"
    ]
  },
  variants: {
    size: {
      sm: {
        base: "w-8 h-8 text-tiny"
      },
      md: {
        base: "w-10 h-10 text-tiny"
      },
      lg: {
        base: "w-14 h-14 text-small"
      }
    },
    color: {
      default: {
        base: colorVariants.solid.default
      },
      primary: {
        base: colorVariants.solid.primary
      },
      secondary: {
        base: colorVariants.solid.secondary
      },
      success: {
        base: colorVariants.solid.success
      },
      warning: {
        base: colorVariants.solid.warning
      },
      danger: {
        base: colorVariants.solid.danger
      }
    },
    radius: {
      none: {
        base: "rounded-none"
      },
      sm: {
        base: "rounded-small"
      },
      md: {
        base: "rounded-medium"
      },
      lg: {
        base: "rounded-large"
      },
      full: {
        base: "rounded-full"
      }
    },
    isBordered: {
      true: {
        base: "ring-2 ring-offset-2 ring-offset-background dark:ring-offset-background-dark"
      }
    },
    isDisabled: {
      true: {
        base: "opacity-disabled"
      }
    },
    isInGroup: {
      true: {
        base: [
          "-ms-2 data-[hover=true]:-translate-x-3 rtl:data-[hover=true]:translate-x-3 transition-transform",
          "data-[focus-visible=true]:-translate-x-3 rtl:data-[focus-visible=true]:translate-x-3"
        ]
      }
    },
    isInGridGroup: {
      true: {
        base: "m-0 data-[hover=true]:translate-x-0"
      }
    },
    disableAnimation: {
      true: {
        base: "transition-none",
        img: "transition-none"
      },
      false: {}
    }
  },
  defaultVariants: {
    size: "md",
    color: "default",
    radius: "full"
  },
  compoundVariants: [
    {
      color: "default",
      isBordered: true,
      class: {
        base: "ring-default"
      }
    },
    {
      color: "primary",
      isBordered: true,
      class: {
        base: "ring-primary"
      }
    },
    {
      color: "secondary",
      isBordered: true,
      class: {
        base: "ring-secondary"
      }
    },
    {
      color: "success",
      isBordered: true,
      class: {
        base: "ring-success"
      }
    },
    {
      color: "warning",
      isBordered: true,
      class: {
        base: "ring-warning"
      }
    },
    {
      color: "danger",
      isBordered: true,
      class: {
        base: "ring-danger"
      }
    }
  ]
});
tv({
  slots: {
    base: "flex items-center justify-center h-auto w-max",
    count: "hover:-translate-x-0"
  },
  variants: {
    isGrid: {
      true: "inline-grid grid-cols-4 gap-3"
    }
  }
});
var button = tv({
  base: [
    "z-0",
    "group",
    "relative",
    "inline-flex",
    "items-center",
    "justify-center",
    "box-border",
    "appearance-none",
    "outline-none",
    "select-none",
    "whitespace-nowrap",
    "min-w-max",
    "font-normal",
    "subpixel-antialiased",
    "overflow-hidden",
    "tap-highlight-transparent",
    "data-[pressed=true]:scale-[0.97]",
    ...dataFocusVisibleClasses
  ],
  variants: {
    variant: {
      solid: "",
      bordered: "border-medium bg-transparent",
      light: "bg-transparent",
      flat: "",
      faded: "border-medium",
      shadow: "",
      ghost: "border-medium bg-transparent"
    },
    size: {
      sm: "px-3 min-w-16 h-8 text-tiny gap-2 rounded-small",
      md: "px-4 min-w-20 h-10 text-small gap-2 rounded-medium",
      lg: "px-6 min-w-24 h-12 text-medium gap-3 rounded-large"
    },
    color: {
      default: "",
      primary: "",
      secondary: "",
      success: "",
      warning: "",
      danger: ""
    },
    radius: {
      none: "rounded-none",
      sm: "rounded-small",
      md: "rounded-medium",
      lg: "rounded-large",
      full: "rounded-full"
    },
    fullWidth: {
      true: "w-full"
    },
    isDisabled: {
      true: "opacity-disabled pointer-events-none"
    },
    isInGroup: {
      true: "[&:not(:first-child):not(:last-child)]:rounded-none"
    },
    isIconOnly: {
      true: "px-0 !gap-0",
      false: "[&>svg]:max-w-[theme(spacing.8)]"
    },
    disableAnimation: {
      true: "!transition-none data-[pressed=true]:scale-100",
      false: "transition-transform-colors-opacity motion-reduce:transition-none"
    }
  },
  defaultVariants: {
    size: "md",
    variant: "solid",
    color: "default",
    fullWidth: false,
    isDisabled: false,
    isInGroup: false
  },
  compoundVariants: [
    {
      variant: "solid",
      color: "default",
      class: colorVariants.solid.default
    },
    {
      variant: "solid",
      color: "primary",
      class: colorVariants.solid.primary
    },
    {
      variant: "solid",
      color: "secondary",
      class: colorVariants.solid.secondary
    },
    {
      variant: "solid",
      color: "success",
      class: colorVariants.solid.success
    },
    {
      variant: "solid",
      color: "warning",
      class: colorVariants.solid.warning
    },
    {
      variant: "solid",
      color: "danger",
      class: colorVariants.solid.danger
    },
    {
      variant: "shadow",
      color: "default",
      class: colorVariants.shadow.default
    },
    {
      variant: "shadow",
      color: "primary",
      class: colorVariants.shadow.primary
    },
    {
      variant: "shadow",
      color: "secondary",
      class: colorVariants.shadow.secondary
    },
    {
      variant: "shadow",
      color: "success",
      class: colorVariants.shadow.success
    },
    {
      variant: "shadow",
      color: "warning",
      class: colorVariants.shadow.warning
    },
    {
      variant: "shadow",
      color: "danger",
      class: colorVariants.shadow.danger
    },
    {
      variant: "bordered",
      color: "default",
      class: colorVariants.bordered.default
    },
    {
      variant: "bordered",
      color: "primary",
      class: colorVariants.bordered.primary
    },
    {
      variant: "bordered",
      color: "secondary",
      class: colorVariants.bordered.secondary
    },
    {
      variant: "bordered",
      color: "success",
      class: colorVariants.bordered.success
    },
    {
      variant: "bordered",
      color: "warning",
      class: colorVariants.bordered.warning
    },
    {
      variant: "bordered",
      color: "danger",
      class: colorVariants.bordered.danger
    },
    {
      variant: "flat",
      color: "default",
      class: colorVariants.flat.default
    },
    {
      variant: "flat",
      color: "primary",
      class: colorVariants.flat.primary
    },
    {
      variant: "flat",
      color: "secondary",
      class: colorVariants.flat.secondary
    },
    {
      variant: "flat",
      color: "success",
      class: colorVariants.flat.success
    },
    {
      variant: "flat",
      color: "warning",
      class: colorVariants.flat.warning
    },
    {
      variant: "flat",
      color: "danger",
      class: colorVariants.flat.danger
    },
    {
      variant: "faded",
      color: "default",
      class: colorVariants.faded.default
    },
    {
      variant: "faded",
      color: "primary",
      class: colorVariants.faded.primary
    },
    {
      variant: "faded",
      color: "secondary",
      class: colorVariants.faded.secondary
    },
    {
      variant: "faded",
      color: "success",
      class: colorVariants.faded.success
    },
    {
      variant: "faded",
      color: "warning",
      class: colorVariants.faded.warning
    },
    {
      variant: "faded",
      color: "danger",
      class: colorVariants.faded.danger
    },
    {
      variant: "light",
      color: "default",
      class: [colorVariants.light.default, "data-[hover=true]:bg-default/40"]
    },
    {
      variant: "light",
      color: "primary",
      class: [colorVariants.light.primary, "data-[hover=true]:bg-primary/20"]
    },
    {
      variant: "light",
      color: "secondary",
      class: [colorVariants.light.secondary, "data-[hover=true]:bg-secondary/20"]
    },
    {
      variant: "light",
      color: "success",
      class: [colorVariants.light.success, "data-[hover=true]:bg-success/20"]
    },
    {
      variant: "light",
      color: "warning",
      class: [colorVariants.light.warning, "data-[hover=true]:bg-warning/20"]
    },
    {
      variant: "light",
      color: "danger",
      class: [colorVariants.light.danger, "data-[hover=true]:bg-danger/20"]
    },
    {
      variant: "ghost",
      color: "default",
      class: [colorVariants.ghost.default, "data-[hover=true]:!bg-default"]
    },
    {
      variant: "ghost",
      color: "primary",
      class: [
        colorVariants.ghost.primary,
        "data-[hover=true]:!bg-primary data-[hover=true]:!text-primary-foreground"
      ]
    },
    {
      variant: "ghost",
      color: "secondary",
      class: [
        colorVariants.ghost.secondary,
        "data-[hover=true]:!bg-secondary data-[hover=true]:!text-secondary-foreground"
      ]
    },
    {
      variant: "ghost",
      color: "success",
      class: [
        colorVariants.ghost.success,
        "data-[hover=true]:!bg-success data-[hover=true]:!text-success-foreground"
      ]
    },
    {
      variant: "ghost",
      color: "warning",
      class: [
        colorVariants.ghost.warning,
        "data-[hover=true]:!bg-warning data-[hover=true]:!text-warning-foreground"
      ]
    },
    {
      variant: "ghost",
      color: "danger",
      class: [colorVariants.ghost.danger, "data-[hover=true]:!bg-danger !text-danger-foreground"]
    },
    {
      isInGroup: true,
      class: "rounded-none first:rounded-s-medium last:rounded-e-medium"
    },
    {
      isInGroup: true,
      size: "sm",
      class: "rounded-none first:rounded-s-small last:rounded-e-small"
    },
    {
      isInGroup: true,
      size: "md",
      class: "rounded-none first:rounded-s-medium last:rounded-e-medium"
    },
    {
      isInGroup: true,
      size: "lg",
      class: "rounded-none first:rounded-s-large last:rounded-e-large"
    },
    {
      isInGroup: true,
      isRounded: true,
      class: "rounded-none first:rounded-s-full last:rounded-e-full"
    },
    {
      isInGroup: true,
      radius: "none",
      class: "rounded-none first:rounded-s-none last:rounded-e-none"
    },
    {
      isInGroup: true,
      radius: "sm",
      class: "rounded-none first:rounded-s-small last:rounded-e-small"
    },
    {
      isInGroup: true,
      radius: "md",
      class: "rounded-none first:rounded-s-medium last:rounded-e-medium"
    },
    {
      isInGroup: true,
      radius: "lg",
      class: "rounded-none first:rounded-s-large last:rounded-e-large"
    },
    {
      isInGroup: true,
      radius: "full",
      class: "rounded-none first:rounded-s-full last:rounded-e-full"
    },
    {
      isInGroup: true,
      variant: ["ghost", "bordered"],
      color: "default",
      className: collapseAdjacentVariantBorders.default
    },
    {
      isInGroup: true,
      variant: ["ghost", "bordered"],
      color: "primary",
      className: collapseAdjacentVariantBorders.primary
    },
    {
      isInGroup: true,
      variant: ["ghost", "bordered"],
      color: "secondary",
      className: collapseAdjacentVariantBorders.secondary
    },
    {
      isInGroup: true,
      variant: ["ghost", "bordered"],
      color: "success",
      className: collapseAdjacentVariantBorders.success
    },
    {
      isInGroup: true,
      variant: ["ghost", "bordered"],
      color: "warning",
      className: collapseAdjacentVariantBorders.warning
    },
    {
      isInGroup: true,
      variant: ["ghost", "bordered"],
      color: "danger",
      className: collapseAdjacentVariantBorders.danger
    },
    {
      isIconOnly: true,
      size: "sm",
      class: "min-w-8 w-8 h-8"
    },
    {
      isIconOnly: true,
      size: "md",
      class: "min-w-10 w-10 h-10"
    },
    {
      isIconOnly: true,
      size: "lg",
      class: "min-w-12 w-12 h-12"
    },
    {
      variant: ["solid", "faded", "flat", "bordered", "shadow"],
      class: "data-[hover=true]:opacity-hover"
    }
  ]
});
var buttonGroup = tv({
  base: "inline-flex items-center justify-center h-auto",
  variants: {
    fullWidth: {
      true: "w-full"
    }
  },
  defaultVariants: {
    fullWidth: false
  }
});
function $feb5ffebff200149$export$d3e3bd3e26688c04(e) {
  return $c87311424ea30a05$export$e1865c3bedcd822b() ? e.altKey : e.ctrlKey;
}
function $feb5ffebff200149$export$16792effe837dba3(e) {
  if ($c87311424ea30a05$export$9ac100e40613ea10()) return e.metaKey;
  return e.ctrlKey;
}
const $fb3050f43d946246$var$TYPEAHEAD_DEBOUNCE_WAIT_MS = 1e3;
function $fb3050f43d946246$export$e32c88dfddc6e1d8(options) {
  let { keyboardDelegate, selectionManager, onTypeSelect } = options;
  let state = reactExports.useRef({
    search: "",
    timeout: null
  }).current;
  let onKeyDown = (e) => {
    let character = $fb3050f43d946246$var$getStringForKey(e.key);
    if (!character || e.ctrlKey || e.metaKey || !e.currentTarget.contains(e.target)) return;
    if (character === " " && state.search.trim().length > 0) {
      e.preventDefault();
      if (!("continuePropagation" in e)) e.stopPropagation();
    }
    state.search += character;
    let key = keyboardDelegate.getKeyForSearch(state.search, selectionManager.focusedKey);
    if (key == null) key = keyboardDelegate.getKeyForSearch(state.search);
    if (key != null) {
      selectionManager.setFocusedKey(key);
      if (onTypeSelect) onTypeSelect(key);
    }
    clearTimeout(state.timeout);
    state.timeout = setTimeout(() => {
      state.search = "";
    }, $fb3050f43d946246$var$TYPEAHEAD_DEBOUNCE_WAIT_MS);
  };
  return {
    typeSelectProps: {
      // Using a capturing listener to catch the keydown event before
      // other hooks in order to handle the Spacebar event.
      onKeyDownCapture: keyboardDelegate.getKeyForSearch ? onKeyDown : null
    }
  };
}
function $fb3050f43d946246$var$getStringForKey(key) {
  if (key.length === 1 || !/^[A-Z]/i.test(key)) return key;
  return "";
}
function $ae20dd8cbca75726$export$d6daf82dcd84e87c(options) {
  let { selectionManager: manager, keyboardDelegate: delegate, ref, autoFocus = false, shouldFocusWrap = false, disallowEmptySelection = false, disallowSelectAll = false, selectOnFocus = manager.selectionBehavior === "replace", disallowTypeAhead = false, shouldUseVirtualFocus, allowsTabNavigation = false, isVirtualized, scrollRef = ref, linkBehavior = "action" } = options;
  let { direction } = $18f2051aff69b9bf$export$43bb16f9c6d9e3f7();
  let router2 = $ea8dcbcb9ea1b556$export$9a302a45f65d0572();
  let onKeyDown = (e) => {
    if (e.altKey && e.key === "Tab") e.preventDefault();
    if (!ref.current.contains(e.target)) return;
    const navigateToKey = (key, childFocus) => {
      if (key != null) {
        if (manager.isLink(key) && linkBehavior === "selection" && selectOnFocus && !$feb5ffebff200149$export$d3e3bd3e26688c04(e)) {
          reactDomExports.flushSync(() => {
            manager.setFocusedKey(key, childFocus);
          });
          let item = scrollRef.current.querySelector(`[data-key="${CSS.escape(key.toString())}"]`);
          let itemProps = manager.getItemProps(key);
          router2.open(item, e, itemProps.href, itemProps.routerOptions);
          return;
        }
        manager.setFocusedKey(key, childFocus);
        if (manager.isLink(key) && linkBehavior === "override") return;
        if (e.shiftKey && manager.selectionMode === "multiple") manager.extendSelection(key);
        else if (selectOnFocus && !$feb5ffebff200149$export$d3e3bd3e26688c04(e)) manager.replaceSelection(key);
      }
    };
    switch (e.key) {
      case "ArrowDown":
        if (delegate.getKeyBelow) {
          var _delegate_getFirstKey, _delegate_getFirstKey1;
          e.preventDefault();
          let nextKey = manager.focusedKey != null ? delegate.getKeyBelow(manager.focusedKey) : (_delegate_getFirstKey = delegate.getFirstKey) === null || _delegate_getFirstKey === void 0 ? void 0 : _delegate_getFirstKey.call(delegate);
          if (nextKey == null && shouldFocusWrap) nextKey = (_delegate_getFirstKey1 = delegate.getFirstKey) === null || _delegate_getFirstKey1 === void 0 ? void 0 : _delegate_getFirstKey1.call(delegate, manager.focusedKey);
          navigateToKey(nextKey);
        }
        break;
      case "ArrowUp":
        if (delegate.getKeyAbove) {
          var _delegate_getLastKey, _delegate_getLastKey1;
          e.preventDefault();
          let nextKey = manager.focusedKey != null ? delegate.getKeyAbove(manager.focusedKey) : (_delegate_getLastKey = delegate.getLastKey) === null || _delegate_getLastKey === void 0 ? void 0 : _delegate_getLastKey.call(delegate);
          if (nextKey == null && shouldFocusWrap) nextKey = (_delegate_getLastKey1 = delegate.getLastKey) === null || _delegate_getLastKey1 === void 0 ? void 0 : _delegate_getLastKey1.call(delegate, manager.focusedKey);
          navigateToKey(nextKey);
        }
        break;
      case "ArrowLeft":
        if (delegate.getKeyLeftOf) {
          var _delegate_getFirstKey2, _delegate_getLastKey2;
          e.preventDefault();
          let nextKey = delegate.getKeyLeftOf(manager.focusedKey);
          if (nextKey == null && shouldFocusWrap) nextKey = direction === "rtl" ? (_delegate_getFirstKey2 = delegate.getFirstKey) === null || _delegate_getFirstKey2 === void 0 ? void 0 : _delegate_getFirstKey2.call(delegate, manager.focusedKey) : (_delegate_getLastKey2 = delegate.getLastKey) === null || _delegate_getLastKey2 === void 0 ? void 0 : _delegate_getLastKey2.call(delegate, manager.focusedKey);
          navigateToKey(nextKey, direction === "rtl" ? "first" : "last");
        }
        break;
      case "ArrowRight":
        if (delegate.getKeyRightOf) {
          var _delegate_getLastKey3, _delegate_getFirstKey3;
          e.preventDefault();
          let nextKey = delegate.getKeyRightOf(manager.focusedKey);
          if (nextKey == null && shouldFocusWrap) nextKey = direction === "rtl" ? (_delegate_getLastKey3 = delegate.getLastKey) === null || _delegate_getLastKey3 === void 0 ? void 0 : _delegate_getLastKey3.call(delegate, manager.focusedKey) : (_delegate_getFirstKey3 = delegate.getFirstKey) === null || _delegate_getFirstKey3 === void 0 ? void 0 : _delegate_getFirstKey3.call(delegate, manager.focusedKey);
          navigateToKey(nextKey, direction === "rtl" ? "last" : "first");
        }
        break;
      case "Home":
        if (delegate.getFirstKey) {
          e.preventDefault();
          let firstKey = delegate.getFirstKey(manager.focusedKey, $feb5ffebff200149$export$16792effe837dba3(e));
          manager.setFocusedKey(firstKey);
          if ($feb5ffebff200149$export$16792effe837dba3(e) && e.shiftKey && manager.selectionMode === "multiple") manager.extendSelection(firstKey);
          else if (selectOnFocus) manager.replaceSelection(firstKey);
        }
        break;
      case "End":
        if (delegate.getLastKey) {
          e.preventDefault();
          let lastKey = delegate.getLastKey(manager.focusedKey, $feb5ffebff200149$export$16792effe837dba3(e));
          manager.setFocusedKey(lastKey);
          if ($feb5ffebff200149$export$16792effe837dba3(e) && e.shiftKey && manager.selectionMode === "multiple") manager.extendSelection(lastKey);
          else if (selectOnFocus) manager.replaceSelection(lastKey);
        }
        break;
      case "PageDown":
        if (delegate.getKeyPageBelow) {
          e.preventDefault();
          let nextKey = delegate.getKeyPageBelow(manager.focusedKey);
          navigateToKey(nextKey);
        }
        break;
      case "PageUp":
        if (delegate.getKeyPageAbove) {
          e.preventDefault();
          let nextKey = delegate.getKeyPageAbove(manager.focusedKey);
          navigateToKey(nextKey);
        }
        break;
      case "a":
        if ($feb5ffebff200149$export$16792effe837dba3(e) && manager.selectionMode === "multiple" && disallowSelectAll !== true) {
          e.preventDefault();
          manager.selectAll();
        }
        break;
      case "Escape":
        if (!disallowEmptySelection && manager.selectedKeys.size !== 0) {
          e.stopPropagation();
          e.preventDefault();
          manager.clearSelection();
        }
        break;
      case "Tab":
        if (!allowsTabNavigation) {
          if (e.shiftKey) ref.current.focus();
          else {
            let walker = $9bf71ea28793e738$export$2d6ec8fc375ceafa(ref.current, {
              tabbable: true
            });
            let next;
            let last;
            do {
              last = walker.lastChild();
              if (last) next = last;
            } while (last);
            if (next && !next.contains(document.activeElement)) $7215afc6de606d6b$export$de79e2c695e052f3(next);
          }
          break;
        }
    }
  };
  let scrollPos = reactExports.useRef({
    top: 0,
    left: 0
  });
  $e9faafb641e167db$export$90fc3a17d93f704c(scrollRef, "scroll", isVirtualized ? null : () => {
    scrollPos.current = {
      top: scrollRef.current.scrollTop,
      left: scrollRef.current.scrollLeft
    };
  });
  let onFocus = (e) => {
    if (manager.isFocused) {
      if (!e.currentTarget.contains(e.target)) manager.setFocused(false);
      return;
    }
    if (!e.currentTarget.contains(e.target)) return;
    manager.setFocused(true);
    if (manager.focusedKey == null) {
      let navigateToFirstKey = (key) => {
        if (key != null) {
          manager.setFocusedKey(key);
          if (selectOnFocus) manager.replaceSelection(key);
        }
      };
      let relatedTarget = e.relatedTarget;
      var _manager_lastSelectedKey, _manager_firstSelectedKey;
      if (relatedTarget && e.currentTarget.compareDocumentPosition(relatedTarget) & Node.DOCUMENT_POSITION_FOLLOWING) navigateToFirstKey((_manager_lastSelectedKey = manager.lastSelectedKey) !== null && _manager_lastSelectedKey !== void 0 ? _manager_lastSelectedKey : delegate.getLastKey());
      else navigateToFirstKey((_manager_firstSelectedKey = manager.firstSelectedKey) !== null && _manager_firstSelectedKey !== void 0 ? _manager_firstSelectedKey : delegate.getFirstKey());
    } else if (!isVirtualized) {
      scrollRef.current.scrollTop = scrollPos.current.top;
      scrollRef.current.scrollLeft = scrollPos.current.left;
    }
    if (!isVirtualized && manager.focusedKey != null) {
      let element = scrollRef.current.querySelector(`[data-key="${CSS.escape(manager.focusedKey.toString())}"]`);
      if (element) {
        if (!element.contains(document.activeElement)) $7215afc6de606d6b$export$de79e2c695e052f3(element);
        let modality = $507fabe10e71c6fb$export$630ff653c5ada6a9();
        if (modality === "keyboard") $2f04cbc44ee30ce0$export$c826860796309d1b(element, {
          containingElement: ref.current
        });
      }
    }
  };
  let onBlur = (e) => {
    if (!e.currentTarget.contains(e.relatedTarget)) manager.setFocused(false);
  };
  const autoFocusRef = reactExports.useRef(autoFocus);
  reactExports.useEffect(() => {
    if (autoFocusRef.current) {
      let focusedKey = null;
      if (autoFocus === "first") focusedKey = delegate.getFirstKey();
      if (autoFocus === "last") focusedKey = delegate.getLastKey();
      let selectedKeys = manager.selectedKeys;
      if (selectedKeys.size) {
        for (let key of selectedKeys) if (manager.canSelectItem(key)) {
          focusedKey = key;
          break;
        }
      }
      manager.setFocused(true);
      manager.setFocusedKey(focusedKey);
      if (focusedKey == null && !shouldUseVirtualFocus) $6a99195332edec8b$export$80f3e147d781571c(ref.current);
    }
  }, []);
  let lastFocusedKey = reactExports.useRef(manager.focusedKey);
  reactExports.useEffect(() => {
    let modality = $507fabe10e71c6fb$export$630ff653c5ada6a9();
    if (manager.isFocused && manager.focusedKey != null && (scrollRef === null || scrollRef === void 0 ? void 0 : scrollRef.current)) {
      let element = scrollRef.current.querySelector(`[data-key="${CSS.escape(manager.focusedKey.toString())}"]`);
      if (element && (modality === "keyboard" || autoFocusRef.current)) {
        if (!isVirtualized) $2f04cbc44ee30ce0$export$53a0910f038337bd(scrollRef.current, element);
        if (modality !== "virtual") $2f04cbc44ee30ce0$export$c826860796309d1b(element, {
          containingElement: ref.current
        });
      }
    }
    if (manager.isFocused && manager.focusedKey == null && lastFocusedKey.current != null) $6a99195332edec8b$export$80f3e147d781571c(ref.current);
    lastFocusedKey.current = manager.focusedKey;
    autoFocusRef.current = false;
  }, [
    isVirtualized,
    scrollRef,
    manager.focusedKey,
    manager.isFocused,
    ref
  ]);
  let handlers = {
    onKeyDown,
    onFocus,
    onBlur,
    onMouseDown(e) {
      if (scrollRef.current === e.target)
        e.preventDefault();
    }
  };
  let { typeSelectProps } = $fb3050f43d946246$export$e32c88dfddc6e1d8({
    keyboardDelegate: delegate,
    selectionManager: manager
  });
  if (!disallowTypeAhead) handlers = $3ef42575df84b30b$export$9d1611c77c2fe928(typeSelectProps, handlers);
  let tabIndex;
  if (!shouldUseVirtualFocus) tabIndex = manager.focusedKey == null ? 0 : -1;
  return {
    collectionProps: {
      ...handlers,
      tabIndex
    }
  };
}
function $880e95eb8b93ba9a$export$ecf600387e221c37(options) {
  let { selectionManager: manager, key, ref, shouldSelectOnPressUp, shouldUseVirtualFocus, focus, isDisabled, onAction, allowsDifferentPressOrigin, linkBehavior = "action" } = options;
  let router2 = $ea8dcbcb9ea1b556$export$9a302a45f65d0572();
  let onSelect = (e) => {
    if (e.pointerType === "keyboard" && $feb5ffebff200149$export$d3e3bd3e26688c04(e)) manager.toggleSelection(key);
    else {
      if (manager.selectionMode === "none") return;
      if (manager.isLink(key)) {
        if (linkBehavior === "selection") {
          let itemProps2 = manager.getItemProps(key);
          router2.open(ref.current, e, itemProps2.href, itemProps2.routerOptions);
          manager.setSelectedKeys(manager.selectedKeys);
          return;
        } else if (linkBehavior === "override" || linkBehavior === "none") return;
      }
      if (manager.selectionMode === "single") {
        if (manager.isSelected(key) && !manager.disallowEmptySelection) manager.toggleSelection(key);
        else manager.replaceSelection(key);
      } else if (e && e.shiftKey) manager.extendSelection(key);
      else if (manager.selectionBehavior === "toggle" || e && ($feb5ffebff200149$export$16792effe837dba3(e) || e.pointerType === "touch" || e.pointerType === "virtual"))
        manager.toggleSelection(key);
      else manager.replaceSelection(key);
    }
  };
  reactExports.useEffect(() => {
    let isFocused = key === manager.focusedKey;
    if (isFocused && manager.isFocused && !shouldUseVirtualFocus) {
      if (focus) focus();
      else if (document.activeElement !== ref.current) $6a99195332edec8b$export$80f3e147d781571c(ref.current);
    }
  }, [
    ref,
    key,
    manager.focusedKey,
    manager.childFocusStrategy,
    manager.isFocused,
    shouldUseVirtualFocus
  ]);
  isDisabled = isDisabled || manager.isDisabled(key);
  let itemProps = {};
  if (!shouldUseVirtualFocus && !isDisabled) itemProps = {
    tabIndex: key === manager.focusedKey ? 0 : -1,
    onFocus(e) {
      if (e.target === ref.current) manager.setFocusedKey(key);
    }
  };
  else if (isDisabled) itemProps.onMouseDown = (e) => {
    e.preventDefault();
  };
  let isLinkOverride = manager.isLink(key) && linkBehavior === "override";
  let hasLinkAction = manager.isLink(key) && linkBehavior !== "selection" && linkBehavior !== "none";
  let allowsSelection = !isDisabled && manager.canSelectItem(key) && !isLinkOverride;
  let allowsActions = (onAction || hasLinkAction) && !isDisabled;
  let hasPrimaryAction = allowsActions && (manager.selectionBehavior === "replace" ? !allowsSelection : !allowsSelection || manager.isEmpty);
  let hasSecondaryAction = allowsActions && allowsSelection && manager.selectionBehavior === "replace";
  let hasAction = hasPrimaryAction || hasSecondaryAction;
  let modality = reactExports.useRef(null);
  let longPressEnabled = hasAction && allowsSelection;
  let longPressEnabledOnPressStart = reactExports.useRef(false);
  let hadPrimaryActionOnPressStart = reactExports.useRef(false);
  let performAction = (e) => {
    if (onAction) onAction();
    if (hasLinkAction) {
      let itemProps2 = manager.getItemProps(key);
      router2.open(ref.current, e, itemProps2.href, itemProps2.routerOptions);
    }
  };
  let itemPressProps = {};
  if (shouldSelectOnPressUp) {
    itemPressProps.onPressStart = (e) => {
      modality.current = e.pointerType;
      longPressEnabledOnPressStart.current = longPressEnabled;
      if (e.pointerType === "keyboard" && (!hasAction || $880e95eb8b93ba9a$var$isSelectionKey())) onSelect(e);
    };
    if (!allowsDifferentPressOrigin) itemPressProps.onPress = (e) => {
      if (hasPrimaryAction || hasSecondaryAction && e.pointerType !== "mouse") {
        if (e.pointerType === "keyboard" && !$880e95eb8b93ba9a$var$isActionKey()) return;
        performAction(e);
      } else if (e.pointerType !== "keyboard" && allowsSelection) onSelect(e);
    };
    else {
      itemPressProps.onPressUp = hasPrimaryAction ? null : (e) => {
        if (e.pointerType !== "keyboard" && allowsSelection) onSelect(e);
      };
      itemPressProps.onPress = hasPrimaryAction ? performAction : null;
    }
  } else {
    itemPressProps.onPressStart = (e) => {
      modality.current = e.pointerType;
      longPressEnabledOnPressStart.current = longPressEnabled;
      hadPrimaryActionOnPressStart.current = hasPrimaryAction;
      if (allowsSelection && (e.pointerType === "mouse" && !hasPrimaryAction || e.pointerType === "keyboard" && (!allowsActions || $880e95eb8b93ba9a$var$isSelectionKey()))) onSelect(e);
    };
    itemPressProps.onPress = (e) => {
      if (e.pointerType === "touch" || e.pointerType === "pen" || e.pointerType === "virtual" || e.pointerType === "keyboard" && hasAction && $880e95eb8b93ba9a$var$isActionKey() || e.pointerType === "mouse" && hadPrimaryActionOnPressStart.current) {
        if (hasAction) performAction(e);
        else if (allowsSelection) onSelect(e);
      }
    };
  }
  itemProps["data-key"] = key;
  itemPressProps.preventFocusOnPress = shouldUseVirtualFocus;
  let { pressProps, isPressed } = $f6c31cce2adf654f$export$45712eceda6fad21(itemPressProps);
  let onDoubleClick = hasSecondaryAction ? (e) => {
    if (modality.current === "mouse") {
      e.stopPropagation();
      e.preventDefault();
      performAction(e);
    }
  } : void 0;
  let { longPressProps } = $8a26561d2877236e$export$c24ed0104d07eab9({
    isDisabled: !longPressEnabled,
    onLongPress(e) {
      if (e.pointerType === "touch") {
        onSelect(e);
        manager.setSelectionBehavior("toggle");
      }
    }
  });
  let onDragStartCapture = (e) => {
    if (modality.current === "touch" && longPressEnabledOnPressStart.current) e.preventDefault();
  };
  let onClick = manager.isLink(key) ? (e) => {
    if (!$ea8dcbcb9ea1b556$export$95185d699e05d4d7.isOpening) e.preventDefault();
  } : void 0;
  return {
    itemProps: $3ef42575df84b30b$export$9d1611c77c2fe928(itemProps, allowsSelection || hasPrimaryAction ? pressProps : {}, longPressEnabled ? longPressProps : {}, {
      onDoubleClick,
      onDragStartCapture,
      onClick
    }),
    isPressed,
    isSelected: manager.isSelected(key),
    isFocused: manager.isFocused && manager.focusedKey === key,
    isDisabled,
    allowsSelection,
    hasAction
  };
}
function $880e95eb8b93ba9a$var$isActionKey() {
  let event = window.event;
  return (event === null || event === void 0 ? void 0 : event.key) === "Enter";
}
function $880e95eb8b93ba9a$var$isSelectionKey() {
  let event = window.event;
  return (event === null || event === void 0 ? void 0 : event.key) === " " || (event === null || event === void 0 ? void 0 : event.code) === "Space";
}
class $2a25aae57d74318e$export$a05409b8bb224a5a {
  isDisabled(item) {
    var _item_props;
    return this.disabledBehavior === "all" && (((_item_props = item.props) === null || _item_props === void 0 ? void 0 : _item_props.isDisabled) || this.disabledKeys.has(item.key));
  }
  getNextKey(key) {
    key = this.collection.getKeyAfter(key);
    while (key != null) {
      let item = this.collection.getItem(key);
      if (item.type === "item" && !this.isDisabled(item)) return key;
      key = this.collection.getKeyAfter(key);
    }
    return null;
  }
  getPreviousKey(key) {
    key = this.collection.getKeyBefore(key);
    while (key != null) {
      let item = this.collection.getItem(key);
      if (item.type === "item" && !this.isDisabled(item)) return key;
      key = this.collection.getKeyBefore(key);
    }
    return null;
  }
  findKey(key, nextKey, shouldSkip) {
    let item = this.getItem(key);
    if (!item) return null;
    let prevRect = item.getBoundingClientRect();
    do {
      key = nextKey(key);
      item = this.getItem(key);
    } while (item && shouldSkip(prevRect, item.getBoundingClientRect()));
    return key;
  }
  isSameRow(prevRect, itemRect) {
    return prevRect.top === itemRect.top || prevRect.left !== itemRect.left;
  }
  isSameColumn(prevRect, itemRect) {
    return prevRect.left === itemRect.left || prevRect.top !== itemRect.top;
  }
  getKeyBelow(key) {
    if (this.layout === "grid" && this.orientation === "vertical") return this.findKey(key, (key2) => this.getNextKey(key2), this.isSameRow);
    else return this.getNextKey(key);
  }
  getKeyAbove(key) {
    if (this.layout === "grid" && this.orientation === "vertical") return this.findKey(key, (key2) => this.getPreviousKey(key2), this.isSameRow);
    else return this.getPreviousKey(key);
  }
  getNextColumn(key, right) {
    return right ? this.getPreviousKey(key) : this.getNextKey(key);
  }
  getKeyRightOf(key) {
    if (this.layout === "grid") {
      if (this.orientation === "vertical") return this.getNextColumn(key, this.direction === "rtl");
      else return this.findKey(key, (key2) => this.getNextColumn(key2, this.direction === "rtl"), this.isSameColumn);
    } else if (this.orientation === "horizontal") return this.getNextColumn(key, this.direction === "rtl");
    return null;
  }
  getKeyLeftOf(key) {
    if (this.layout === "grid") {
      if (this.orientation === "vertical") return this.getNextColumn(key, this.direction === "ltr");
      else return this.findKey(key, (key2) => this.getNextColumn(key2, this.direction === "ltr"), this.isSameColumn);
    } else if (this.orientation === "horizontal") return this.getNextColumn(key, this.direction === "ltr");
    return null;
  }
  getFirstKey() {
    let key = this.collection.getFirstKey();
    while (key != null) {
      let item = this.collection.getItem(key);
      if ((item === null || item === void 0 ? void 0 : item.type) === "item" && !this.isDisabled(item)) return key;
      key = this.collection.getKeyAfter(key);
    }
    return null;
  }
  getLastKey() {
    let key = this.collection.getLastKey();
    while (key != null) {
      let item = this.collection.getItem(key);
      if (item.type === "item" && !this.isDisabled(item)) return key;
      key = this.collection.getKeyBefore(key);
    }
    return null;
  }
  getItem(key) {
    return key !== null ? this.ref.current.querySelector(`[data-key="${CSS.escape(key.toString())}"]`) : null;
  }
  getKeyPageAbove(key) {
    let menu2 = this.ref.current;
    let item = this.getItem(key);
    if (!item) return null;
    if (!$cc38e7bd3fc7b213$export$2bb74740c4e19def(menu2)) return this.getFirstKey();
    let containerRect = menu2.getBoundingClientRect();
    let itemRect = item.getBoundingClientRect();
    if (this.orientation === "horizontal") {
      let containerX = containerRect.x - menu2.scrollLeft;
      let pageX = Math.max(0, itemRect.x - containerX + itemRect.width - containerRect.width);
      while (item && itemRect.x - containerX > pageX) {
        key = this.getKeyAbove(key);
        item = key == null ? null : this.getItem(key);
        itemRect = item === null || item === void 0 ? void 0 : item.getBoundingClientRect();
      }
    } else {
      let containerY = containerRect.y - menu2.scrollTop;
      let pageY = Math.max(0, itemRect.y - containerY + itemRect.height - containerRect.height);
      while (item && itemRect.y - containerY > pageY) {
        key = this.getKeyAbove(key);
        item = key == null ? null : this.getItem(key);
        itemRect = item === null || item === void 0 ? void 0 : item.getBoundingClientRect();
      }
    }
    return key !== null && key !== void 0 ? key : this.getFirstKey();
  }
  getKeyPageBelow(key) {
    let menu2 = this.ref.current;
    let item = this.getItem(key);
    if (!item) return null;
    if (!$cc38e7bd3fc7b213$export$2bb74740c4e19def(menu2)) return this.getLastKey();
    let containerRect = menu2.getBoundingClientRect();
    let itemRect = item.getBoundingClientRect();
    if (this.orientation === "horizontal") {
      let containerX = containerRect.x - menu2.scrollLeft;
      let pageX = Math.min(menu2.scrollWidth, itemRect.x - containerX - itemRect.width + containerRect.width);
      while (item && itemRect.x - containerX < pageX) {
        key = this.getKeyBelow(key);
        item = key == null ? null : this.getItem(key);
        itemRect = item === null || item === void 0 ? void 0 : item.getBoundingClientRect();
      }
    } else {
      let containerY = containerRect.y - menu2.scrollTop;
      let pageY = Math.min(menu2.scrollHeight, itemRect.y - containerY - itemRect.height + containerRect.height);
      while (item && itemRect.y - containerY < pageY) {
        key = this.getKeyBelow(key);
        item = key == null ? null : this.getItem(key);
        itemRect = item === null || item === void 0 ? void 0 : item.getBoundingClientRect();
      }
    }
    return key !== null && key !== void 0 ? key : this.getLastKey();
  }
  getKeyForSearch(search2, fromKey) {
    if (!this.collator) return null;
    let collection = this.collection;
    let key = fromKey || this.getFirstKey();
    while (key != null) {
      let item = collection.getItem(key);
      let substring = item.textValue.slice(0, search2.length);
      if (item.textValue && this.collator.compare(substring, search2) === 0) return key;
      key = this.getKeyBelow(key);
    }
    return null;
  }
  constructor(...args) {
    if (args.length === 1) {
      let opts = args[0];
      this.collection = opts.collection;
      this.ref = opts.ref;
      this.collator = opts.collator;
      this.disabledKeys = opts.disabledKeys || /* @__PURE__ */ new Set();
      this.disabledBehavior = opts.disabledBehavior || "all";
      this.orientation = opts.orientation;
      this.direction = opts.direction;
      this.layout = opts.layout || "stack";
    } else {
      this.collection = args[0];
      this.disabledKeys = args[1];
      this.ref = args[2];
      this.collator = args[3];
      this.layout = "stack";
      this.orientation = "vertical";
      this.disabledBehavior = "all";
    }
    if (this.layout === "stack" && this.orientation === "vertical") {
      this.getKeyLeftOf = void 0;
      this.getKeyRightOf = void 0;
    }
  }
}
function $982254629710d113$export$b95089534ab7c1fd(props) {
  let { selectionManager, collection, disabledKeys, ref, keyboardDelegate } = props;
  let collator = $325a3faab7a68acd$export$a16aca283550c30d({
    usage: "search",
    sensitivity: "base"
  });
  let disabledBehavior = selectionManager.disabledBehavior;
  let delegate = reactExports.useMemo(() => keyboardDelegate || new $2a25aae57d74318e$export$a05409b8bb224a5a({
    collection,
    disabledKeys,
    disabledBehavior,
    ref,
    collator
  }), [
    keyboardDelegate,
    collection,
    disabledKeys,
    ref,
    collator,
    disabledBehavior
  ]);
  let { collectionProps } = $ae20dd8cbca75726$export$d6daf82dcd84e87c({
    ...props,
    ref,
    selectionManager,
    keyboardDelegate: delegate
  });
  return {
    listProps: collectionProps
  };
}
var LinkIcon = (props) => /* @__PURE__ */ jsxRuntimeExports.jsxs(
  "svg",
  {
    "aria-hidden": "true",
    fill: "none",
    focusable: "false",
    height: "1em",
    shapeRendering: "geometricPrecision",
    stroke: "currentColor",
    strokeLinecap: "round",
    strokeLinejoin: "round",
    strokeWidth: "1.5",
    viewBox: "0 0 24 24",
    width: "1em",
    ...props,
    children: [
      /* @__PURE__ */ jsxRuntimeExports.jsx("path", { d: "M18 13v6a2 2 0 01-2 2H5a2 2 0 01-2-2V8a2 2 0 012-2h6" }),
      /* @__PURE__ */ jsxRuntimeExports.jsx("path", { d: "M15 3h6v6" }),
      /* @__PURE__ */ jsxRuntimeExports.jsx("path", { d: "M10 14L21 3" })
    ]
  }
);
var CloseFilledIcon = (props) => /* @__PURE__ */ jsxRuntimeExports.jsx(
  "svg",
  {
    "aria-hidden": "true",
    focusable: "false",
    height: "1em",
    role: "presentation",
    viewBox: "0 0 24 24",
    width: "1em",
    ...props,
    children: /* @__PURE__ */ jsxRuntimeExports.jsx(
      "path",
      {
        d: "M12 2a10 10 0 1010 10A10.016 10.016 0 0012 2zm3.36 12.3a.754.754 0 010 1.06.748.748 0 01-1.06 0l-2.3-2.3-2.3 2.3a.748.748 0 01-1.06 0 .754.754 0 010-1.06l2.3-2.3-2.3-2.3A.75.75 0 019.7 8.64l2.3 2.3 2.3-2.3a.75.75 0 011.06 1.06l-2.3 2.3z",
        fill: "currentColor"
      }
    )
  }
);
var TRANSITION_EASINGS = {
  ease: [0.36, 0.66, 0.4, 1],
  easeIn: [0.4, 0, 1, 1],
  easeOut: [0, 0, 0.2, 1],
  easeInOut: [0.4, 0, 0.2, 1],
  spring: [0.155, 1.105, 0.295, 1.12],
  springOut: [0.57, -0.15, 0.62, 0.07],
  softSpring: [0.16, 1.11, 0.3, 1.02]
};
var TRANSITION_VARIANTS = {
  scaleSpring: {
    enter: {
      transform: "scale(1)",
      opacity: 1,
      transition: {
        type: "spring",
        bounce: 0,
        duration: 0.2
      }
    },
    exit: {
      transform: "scale(0.85)",
      opacity: 0,
      transition: {
        type: "easeOut",
        duration: 0.15
      }
    }
  },
  scaleSpringOpacity: {
    initial: {
      opacity: 0,
      transform: "scale(0.8)"
    },
    enter: {
      opacity: 1,
      transform: "scale(1)",
      transition: {
        type: "spring",
        bounce: 0,
        duration: 0.3
      }
    },
    exit: {
      opacity: 0,
      transform: "scale(0.96)",
      transition: {
        type: "easeOut",
        bounce: 0,
        duration: 0.15
      }
    }
  },
  scale: {
    enter: { scale: 1 },
    exit: { scale: 0.95 }
  },
  scaleFadeIn: {
    enter: {
      transform: "scale(1)",
      opacity: 1,
      transition: {
        duration: 0.25,
        ease: TRANSITION_EASINGS.easeIn
      }
    },
    exit: {
      transform: "scale(0.95)",
      opacity: 0,
      transition: {
        duration: 0.2,
        ease: TRANSITION_EASINGS.easeOut
      }
    }
  },
  scaleInOut: {
    enter: {
      transform: "scale(1)",
      opacity: 1,
      transition: {
        duration: 0.4,
        ease: TRANSITION_EASINGS.ease
      }
    },
    exit: {
      transform: "scale(1.03)",
      opacity: 0,
      transition: {
        duration: 0.3,
        ease: TRANSITION_EASINGS.ease
      }
    }
  },
  fade: {
    enter: {
      opacity: 1,
      transition: {
        duration: 0.4,
        ease: TRANSITION_EASINGS.ease
      }
    },
    exit: {
      opacity: 0,
      transition: {
        duration: 0.3,
        ease: TRANSITION_EASINGS.ease
      }
    }
  },
  collapse: {
    enter: {
      opacity: 1,
      height: "auto",
      transition: {
        height: {
          type: "spring",
          bounce: 0,
          duration: 0.3
        },
        opacity: {
          easings: "ease",
          duration: 0.4
        }
      }
    },
    exit: {
      opacity: 0,
      height: 0,
      transition: {
        easings: "ease",
        duration: 0.3
      }
    }
  }
};
class $05ca4cd7c4a5a999$export$863faf230ee2118a {
  *[Symbol.iterator]() {
    yield* this.iterable;
  }
  get size() {
    return this.keyMap.size;
  }
  getKeys() {
    return this.keyMap.keys();
  }
  getKeyBefore(key) {
    let node = this.keyMap.get(key);
    return node ? node.prevKey : null;
  }
  getKeyAfter(key) {
    let node = this.keyMap.get(key);
    return node ? node.nextKey : null;
  }
  getFirstKey() {
    return this.firstKey;
  }
  getLastKey() {
    return this.lastKey;
  }
  getItem(key) {
    return this.keyMap.get(key);
  }
  at(idx) {
    const keys2 = [
      ...this.getKeys()
    ];
    return this.getItem(keys2[idx]);
  }
  constructor(nodes, { expandedKeys } = {}) {
    this.keyMap = /* @__PURE__ */ new Map();
    this.iterable = nodes;
    expandedKeys = expandedKeys || /* @__PURE__ */ new Set();
    let visit = (node) => {
      this.keyMap.set(node.key, node);
      if (node.childNodes && (node.type === "section" || expandedKeys.has(node.key))) for (let child of node.childNodes) visit(child);
    };
    for (let node of nodes) visit(node);
    let last;
    let index = 0;
    for (let [key, node] of this.keyMap) {
      if (last) {
        last.nextKey = key;
        node.prevKey = last.key;
      } else {
        this.firstKey = key;
        node.prevKey = void 0;
      }
      if (node.type === "item") node.index = index++;
      last = node;
      last.nextKey = void 0;
    }
    this.lastKey = last === null || last === void 0 ? void 0 : last.key;
  }
}
class $e40ea825a81a3709$export$52baac22726c72bf extends Set {
  constructor(keys2, anchorKey, currentKey) {
    super(keys2);
    if (keys2 instanceof $e40ea825a81a3709$export$52baac22726c72bf) {
      this.anchorKey = anchorKey || keys2.anchorKey;
      this.currentKey = currentKey || keys2.currentKey;
    } else {
      this.anchorKey = anchorKey;
      this.currentKey = currentKey;
    }
  }
}
function $458b0a5536c1a7cf$export$40bfa8c7b0832715(value, defaultValue, onChange) {
  let [stateValue, setStateValue] = reactExports.useState(value || defaultValue);
  let isControlledRef = reactExports.useRef(value !== void 0);
  let isControlled = value !== void 0;
  reactExports.useEffect(() => {
    let wasControlled = isControlledRef.current;
    if (wasControlled !== isControlled) console.warn(`WARN: A component changed from ${wasControlled ? "controlled" : "uncontrolled"} to ${isControlled ? "controlled" : "uncontrolled"}.`);
    isControlledRef.current = isControlled;
  }, [
    isControlled
  ]);
  let currentValue = isControlled ? value : stateValue;
  let setValue = reactExports.useCallback((value2, ...args) => {
    let onChangeCaller = (value3, ...onChangeArgs) => {
      if (onChange) {
        if (!Object.is(currentValue, value3)) onChange(value3, ...onChangeArgs);
      }
      if (!isControlled)
        currentValue = value3;
    };
    if (typeof value2 === "function") {
      console.warn("We can not support a function callback. See Github Issues for details https://github.com/adobe/react-spectrum/issues/2320");
      let updateFunction = (oldValue, ...functionArgs) => {
        let interceptedValue = value2(isControlled ? currentValue : oldValue, ...functionArgs);
        onChangeCaller(interceptedValue, ...args);
        if (!isControlled) return interceptedValue;
        return oldValue;
      };
      setStateValue(updateFunction);
    } else {
      if (!isControlled) setStateValue(value2);
      onChangeCaller(value2, ...args);
    }
  }, [
    isControlled,
    currentValue,
    onChange
  ]);
  return [
    currentValue,
    setValue
  ];
}
function $7af3f5b51489e0b5$var$equalSets(setA, setB) {
  if (setA.size !== setB.size) return false;
  for (let item of setA) {
    if (!setB.has(item)) return false;
  }
  return true;
}
function $7af3f5b51489e0b5$export$253fe78d46329472(props) {
  let { selectionMode = "none", disallowEmptySelection, allowDuplicateSelectionEvents, selectionBehavior: selectionBehaviorProp = "toggle", disabledBehavior = "all" } = props;
  let isFocusedRef = reactExports.useRef(false);
  let [, setFocused] = reactExports.useState(false);
  let focusedKeyRef = reactExports.useRef(null);
  let childFocusStrategyRef = reactExports.useRef(null);
  let [, setFocusedKey] = reactExports.useState(null);
  let selectedKeysProp = reactExports.useMemo(() => $7af3f5b51489e0b5$var$convertSelection(props.selectedKeys), [
    props.selectedKeys
  ]);
  let defaultSelectedKeys = reactExports.useMemo(() => $7af3f5b51489e0b5$var$convertSelection(props.defaultSelectedKeys, new $e40ea825a81a3709$export$52baac22726c72bf()), [
    props.defaultSelectedKeys
  ]);
  let [selectedKeys, setSelectedKeys] = $458b0a5536c1a7cf$export$40bfa8c7b0832715(selectedKeysProp, defaultSelectedKeys, props.onSelectionChange);
  let disabledKeysProp = reactExports.useMemo(() => props.disabledKeys ? new Set(props.disabledKeys) : /* @__PURE__ */ new Set(), [
    props.disabledKeys
  ]);
  let [selectionBehavior, setSelectionBehavior] = reactExports.useState(selectionBehaviorProp);
  if (selectionBehaviorProp === "replace" && selectionBehavior === "toggle" && typeof selectedKeys === "object" && selectedKeys.size === 0) setSelectionBehavior("replace");
  let lastSelectionBehavior = reactExports.useRef(selectionBehaviorProp);
  reactExports.useEffect(() => {
    if (selectionBehaviorProp !== lastSelectionBehavior.current) {
      setSelectionBehavior(selectionBehaviorProp);
      lastSelectionBehavior.current = selectionBehaviorProp;
    }
  }, [
    selectionBehaviorProp
  ]);
  return {
    selectionMode,
    disallowEmptySelection,
    selectionBehavior,
    setSelectionBehavior,
    get isFocused() {
      return isFocusedRef.current;
    },
    setFocused(f2) {
      isFocusedRef.current = f2;
      setFocused(f2);
    },
    get focusedKey() {
      return focusedKeyRef.current;
    },
    get childFocusStrategy() {
      return childFocusStrategyRef.current;
    },
    setFocusedKey(k2, childFocusStrategy = "first") {
      focusedKeyRef.current = k2;
      childFocusStrategyRef.current = childFocusStrategy;
      setFocusedKey(k2);
    },
    selectedKeys,
    setSelectedKeys(keys2) {
      if (allowDuplicateSelectionEvents || !$7af3f5b51489e0b5$var$equalSets(keys2, selectedKeys)) setSelectedKeys(keys2);
    },
    disabledKeys: disabledKeysProp,
    disabledBehavior
  };
}
function $7af3f5b51489e0b5$var$convertSelection(selection, defaultValue) {
  if (!selection) return defaultValue;
  return selection === "all" ? "all" : new $e40ea825a81a3709$export$52baac22726c72bf(selection);
}
function $c5a24bc478652b5f$export$1005530eda016c13$1(node, collection) {
  if (typeof collection.getChildren === "function") return collection.getChildren(node.key);
  return node.childNodes;
}
function $c5a24bc478652b5f$export$fbdeaa6a76694f71(iterable) {
  return $c5a24bc478652b5f$export$5f3398f8733f90e2(iterable);
}
function $c5a24bc478652b5f$export$5f3398f8733f90e2(iterable, index) {
  for (let item of iterable) {
    return item;
  }
}
function $c5a24bc478652b5f$export$8c434b3a7a4dad6(collection, a2, b) {
  if (a2.parentKey === b.parentKey) return a2.index - b.index;
  let aAncestors = [
    ...$c5a24bc478652b5f$var$getAncestors(collection, a2),
    a2
  ];
  let bAncestors = [
    ...$c5a24bc478652b5f$var$getAncestors(collection, b),
    b
  ];
  let firstNonMatchingAncestor = aAncestors.slice(0, bAncestors.length).findIndex((a3, i) => a3 !== bAncestors[i]);
  if (firstNonMatchingAncestor !== -1) {
    a2 = aAncestors[firstNonMatchingAncestor];
    b = bAncestors[firstNonMatchingAncestor];
    return a2.index - b.index;
  }
  if (aAncestors.findIndex((node) => node === b) >= 0) return 1;
  else if (bAncestors.findIndex((node) => node === a2) >= 0) return -1;
  return -1;
}
function $c5a24bc478652b5f$var$getAncestors(collection, node) {
  let parents = [];
  while ((node === null || node === void 0 ? void 0 : node.parentKey) != null) {
    node = collection.getItem(node.parentKey);
    parents.unshift(node);
  }
  return parents;
}
class $d496c0a20b6e58ec$export$6c8a5aaad13c9852 {
  /**
  * The type of selection that is allowed in the collection.
  */
  get selectionMode() {
    return this.state.selectionMode;
  }
  /**
  * Whether the collection allows empty selection.
  */
  get disallowEmptySelection() {
    return this.state.disallowEmptySelection;
  }
  /**
  * The selection behavior for the collection.
  */
  get selectionBehavior() {
    return this.state.selectionBehavior;
  }
  /**
  * Sets the selection behavior for the collection.
  */
  setSelectionBehavior(selectionBehavior) {
    this.state.setSelectionBehavior(selectionBehavior);
  }
  /**
  * Whether the collection is currently focused.
  */
  get isFocused() {
    return this.state.isFocused;
  }
  /**
  * Sets whether the collection is focused.
  */
  setFocused(isFocused) {
    this.state.setFocused(isFocused);
  }
  /**
  * The current focused key in the collection.
  */
  get focusedKey() {
    return this.state.focusedKey;
  }
  /** Whether the first or last child of the focused key should receive focus. */
  get childFocusStrategy() {
    return this.state.childFocusStrategy;
  }
  /**
  * Sets the focused key.
  */
  setFocusedKey(key, childFocusStrategy) {
    if (key == null || this.collection.getItem(key)) this.state.setFocusedKey(key, childFocusStrategy);
  }
  /**
  * The currently selected keys in the collection.
  */
  get selectedKeys() {
    return this.state.selectedKeys === "all" ? new Set(this.getSelectAllKeys()) : this.state.selectedKeys;
  }
  /**
  * The raw selection value for the collection.
  * Either 'all' for select all, or a set of keys.
  */
  get rawSelection() {
    return this.state.selectedKeys;
  }
  /**
  * Returns whether a key is selected.
  */
  isSelected(key) {
    if (this.state.selectionMode === "none") return false;
    key = this.getKey(key);
    return this.state.selectedKeys === "all" ? this.canSelectItem(key) : this.state.selectedKeys.has(key);
  }
  /**
  * Whether the selection is empty.
  */
  get isEmpty() {
    return this.state.selectedKeys !== "all" && this.state.selectedKeys.size === 0;
  }
  /**
  * Whether all items in the collection are selected.
  */
  get isSelectAll() {
    if (this.isEmpty) return false;
    if (this.state.selectedKeys === "all") return true;
    if (this._isSelectAll != null) return this._isSelectAll;
    let allKeys = this.getSelectAllKeys();
    let selectedKeys = this.state.selectedKeys;
    this._isSelectAll = allKeys.every((k2) => selectedKeys.has(k2));
    return this._isSelectAll;
  }
  get firstSelectedKey() {
    let first = null;
    for (let key of this.state.selectedKeys) {
      let item = this.collection.getItem(key);
      if (!first || item && $c5a24bc478652b5f$export$8c434b3a7a4dad6(this.collection, item, first) < 0) first = item;
    }
    return first === null || first === void 0 ? void 0 : first.key;
  }
  get lastSelectedKey() {
    let last = null;
    for (let key of this.state.selectedKeys) {
      let item = this.collection.getItem(key);
      if (!last || item && $c5a24bc478652b5f$export$8c434b3a7a4dad6(this.collection, item, last) > 0) last = item;
    }
    return last === null || last === void 0 ? void 0 : last.key;
  }
  get disabledKeys() {
    return this.state.disabledKeys;
  }
  get disabledBehavior() {
    return this.state.disabledBehavior;
  }
  /**
  * Extends the selection to the given key.
  */
  extendSelection(toKey) {
    if (this.selectionMode === "none") return;
    if (this.selectionMode === "single") {
      this.replaceSelection(toKey);
      return;
    }
    toKey = this.getKey(toKey);
    let selection;
    if (this.state.selectedKeys === "all") selection = new $e40ea825a81a3709$export$52baac22726c72bf([
      toKey
    ], toKey, toKey);
    else {
      let selectedKeys = this.state.selectedKeys;
      let anchorKey = selectedKeys.anchorKey || toKey;
      selection = new $e40ea825a81a3709$export$52baac22726c72bf(selectedKeys, anchorKey, toKey);
      for (let key of this.getKeyRange(anchorKey, selectedKeys.currentKey || toKey)) selection.delete(key);
      for (let key of this.getKeyRange(toKey, anchorKey)) if (this.canSelectItem(key)) selection.add(key);
    }
    this.state.setSelectedKeys(selection);
  }
  getKeyRange(from, to) {
    let fromItem = this.collection.getItem(from);
    let toItem = this.collection.getItem(to);
    if (fromItem && toItem) {
      if ($c5a24bc478652b5f$export$8c434b3a7a4dad6(this.collection, fromItem, toItem) <= 0) return this.getKeyRangeInternal(from, to);
      return this.getKeyRangeInternal(to, from);
    }
    return [];
  }
  getKeyRangeInternal(from, to) {
    let keys2 = [];
    let key = from;
    while (key) {
      let item = this.collection.getItem(key);
      if (item && item.type === "item" || item.type === "cell" && this.allowsCellSelection) keys2.push(key);
      if (key === to) return keys2;
      key = this.collection.getKeyAfter(key);
    }
    return [];
  }
  getKey(key) {
    let item = this.collection.getItem(key);
    if (!item)
      return key;
    if (item.type === "cell" && this.allowsCellSelection) return key;
    while (item.type !== "item" && item.parentKey != null) item = this.collection.getItem(item.parentKey);
    if (!item || item.type !== "item") return null;
    return item.key;
  }
  /**
  * Toggles whether the given key is selected.
  */
  toggleSelection(key) {
    if (this.selectionMode === "none") return;
    if (this.selectionMode === "single" && !this.isSelected(key)) {
      this.replaceSelection(key);
      return;
    }
    key = this.getKey(key);
    if (key == null) return;
    let keys2 = new $e40ea825a81a3709$export$52baac22726c72bf(this.state.selectedKeys === "all" ? this.getSelectAllKeys() : this.state.selectedKeys);
    if (keys2.has(key)) keys2.delete(key);
    else if (this.canSelectItem(key)) {
      keys2.add(key);
      keys2.anchorKey = key;
      keys2.currentKey = key;
    }
    if (this.disallowEmptySelection && keys2.size === 0) return;
    this.state.setSelectedKeys(keys2);
  }
  /**
  * Replaces the selection with only the given key.
  */
  replaceSelection(key) {
    if (this.selectionMode === "none") return;
    key = this.getKey(key);
    if (key == null) return;
    let selection = this.canSelectItem(key) ? new $e40ea825a81a3709$export$52baac22726c72bf([
      key
    ], key, key) : new $e40ea825a81a3709$export$52baac22726c72bf();
    this.state.setSelectedKeys(selection);
  }
  /**
  * Replaces the selection with the given keys.
  */
  setSelectedKeys(keys2) {
    if (this.selectionMode === "none") return;
    let selection = new $e40ea825a81a3709$export$52baac22726c72bf();
    for (let key of keys2) {
      key = this.getKey(key);
      if (key != null) {
        selection.add(key);
        if (this.selectionMode === "single") break;
      }
    }
    this.state.setSelectedKeys(selection);
  }
  getSelectAllKeys() {
    let keys2 = [];
    let addKeys = (key) => {
      while (key != null) {
        if (this.canSelectItem(key)) {
          let item = this.collection.getItem(key);
          if (item.type === "item") keys2.push(key);
          if (item.hasChildNodes && (this.allowsCellSelection || item.type !== "item")) addKeys($c5a24bc478652b5f$export$fbdeaa6a76694f71($c5a24bc478652b5f$export$1005530eda016c13$1(item, this.collection)).key);
        }
        key = this.collection.getKeyAfter(key);
      }
    };
    addKeys(this.collection.getFirstKey());
    return keys2;
  }
  /**
  * Selects all items in the collection.
  */
  selectAll() {
    if (!this.isSelectAll && this.selectionMode === "multiple") this.state.setSelectedKeys("all");
  }
  /**
  * Removes all keys from the selection.
  */
  clearSelection() {
    if (!this.disallowEmptySelection && (this.state.selectedKeys === "all" || this.state.selectedKeys.size > 0)) this.state.setSelectedKeys(new $e40ea825a81a3709$export$52baac22726c72bf());
  }
  /**
  * Toggles between select all and an empty selection.
  */
  toggleSelectAll() {
    if (this.isSelectAll) this.clearSelection();
    else this.selectAll();
  }
  select(key, e) {
    if (this.selectionMode === "none") return;
    if (this.selectionMode === "single") {
      if (this.isSelected(key) && !this.disallowEmptySelection) this.toggleSelection(key);
      else this.replaceSelection(key);
    } else if (this.selectionBehavior === "toggle" || e && (e.pointerType === "touch" || e.pointerType === "virtual"))
      this.toggleSelection(key);
    else this.replaceSelection(key);
  }
  /**
  * Returns whether the current selection is equal to the given selection.
  */
  isSelectionEqual(selection) {
    if (selection === this.state.selectedKeys) return true;
    let selectedKeys = this.selectedKeys;
    if (selection.size !== selectedKeys.size) return false;
    for (let key of selection) {
      if (!selectedKeys.has(key)) return false;
    }
    for (let key of selectedKeys) {
      if (!selection.has(key)) return false;
    }
    return true;
  }
  canSelectItem(key) {
    var _item_props;
    if (this.state.selectionMode === "none" || this.state.disabledKeys.has(key)) return false;
    let item = this.collection.getItem(key);
    if (!item || (item === null || item === void 0 ? void 0 : (_item_props = item.props) === null || _item_props === void 0 ? void 0 : _item_props.isDisabled) || item.type === "cell" && !this.allowsCellSelection) return false;
    return true;
  }
  isDisabled(key) {
    var _this_collection_getItem_props, _this_collection_getItem;
    return this.state.disabledBehavior === "all" && (this.state.disabledKeys.has(key) || !!((_this_collection_getItem = this.collection.getItem(key)) === null || _this_collection_getItem === void 0 ? void 0 : (_this_collection_getItem_props = _this_collection_getItem.props) === null || _this_collection_getItem_props === void 0 ? void 0 : _this_collection_getItem_props.isDisabled));
  }
  isLink(key) {
    var _this_collection_getItem_props, _this_collection_getItem;
    return !!((_this_collection_getItem = this.collection.getItem(key)) === null || _this_collection_getItem === void 0 ? void 0 : (_this_collection_getItem_props = _this_collection_getItem.props) === null || _this_collection_getItem_props === void 0 ? void 0 : _this_collection_getItem_props.href);
  }
  getItemProps(key) {
    var _this_collection_getItem;
    return (_this_collection_getItem = this.collection.getItem(key)) === null || _this_collection_getItem === void 0 ? void 0 : _this_collection_getItem.props;
  }
  constructor(collection, state, options) {
    this.collection = collection;
    this.state = state;
    var _options_allowsCellSelection;
    this.allowsCellSelection = (_options_allowsCellSelection = options === null || options === void 0 ? void 0 : options.allowsCellSelection) !== null && _options_allowsCellSelection !== void 0 ? _options_allowsCellSelection : false;
    this._isSelectAll = null;
  }
}
function $c1d7fb2ec91bae71$var$Item(props) {
  return null;
}
$c1d7fb2ec91bae71$var$Item.getCollectionNode = function* getCollectionNode(props, context) {
  let { childItems, title, children } = props;
  let rendered = props.title || props.children;
  let textValue = props.textValue || (typeof rendered === "string" ? rendered : "") || props["aria-label"] || "";
  if (!textValue && !(context === null || context === void 0 ? void 0 : context.suppressTextValueWarning)) console.warn("<Item> with non-plain text contents is unsupported by type to select for accessibility. Please add a `textValue` prop.");
  yield {
    type: "item",
    props,
    rendered,
    textValue,
    "aria-label": props["aria-label"],
    hasChildNodes: $c1d7fb2ec91bae71$var$hasChildItems(props),
    *childNodes() {
      if (childItems) for (let child of childItems) yield {
        type: "item",
        value: child
      };
      else if (title) {
        let items = [];
        React$1.Children.forEach(children, (child) => {
          items.push({
            type: "item",
            element: child
          });
        });
        yield* items;
      }
    }
  };
};
function $c1d7fb2ec91bae71$var$hasChildItems(props) {
  if (props.hasChildItems != null) return props.hasChildItems;
  if (props.childItems) return true;
  if (props.title && React$1.Children.count(props.children) > 0) return true;
  return false;
}
let $c1d7fb2ec91bae71$export$6d08773d2e66f8f2 = $c1d7fb2ec91bae71$var$Item;
function $9fc4852771d079eb$var$Section(props) {
  return null;
}
$9fc4852771d079eb$var$Section.getCollectionNode = function* getCollectionNode2(props) {
  let { children, title, items } = props;
  yield {
    type: "section",
    props,
    hasChildNodes: true,
    rendered: title,
    "aria-label": props["aria-label"],
    *childNodes() {
      if (typeof children === "function") {
        if (!items) throw new Error("props.children was a function but props.items is missing");
        for (let item of items) yield {
          type: "item",
          value: item,
          renderer: children
        };
      } else {
        let items2 = [];
        React$1.Children.forEach(children, (child) => {
          items2.push({
            type: "item",
            element: child
          });
        });
        yield* items2;
      }
    }
  };
};
let $9fc4852771d079eb$export$6e2c8f0811a474ce = $9fc4852771d079eb$var$Section;
class $eb2240fc39a57fa5$export$bf788dd355e3a401 {
  build(props, context) {
    this.context = context;
    return $eb2240fc39a57fa5$var$iterable(() => this.iterateCollection(props));
  }
  *iterateCollection(props) {
    let { children, items } = props;
    if (typeof children === "function") {
      if (!items) throw new Error("props.children was a function but props.items is missing");
      for (let item of props.items) yield* this.getFullNode({
        value: item
      }, {
        renderer: children
      });
    } else {
      let items2 = [];
      React$1.Children.forEach(children, (child) => {
        items2.push(child);
      });
      let index = 0;
      for (let item of items2) {
        let nodes = this.getFullNode({
          element: item,
          index
        }, {});
        for (let node of nodes) {
          index++;
          yield node;
        }
      }
    }
  }
  getKey(item, partialNode, state, parentKey) {
    if (item.key != null) return item.key;
    if (partialNode.type === "cell" && partialNode.key != null) return `${parentKey}${partialNode.key}`;
    let v2 = partialNode.value;
    if (v2 != null) {
      var _v_key;
      let key = (_v_key = v2.key) !== null && _v_key !== void 0 ? _v_key : v2.id;
      if (key == null) throw new Error("No key found for item");
      return key;
    }
    return parentKey ? `${parentKey}.${partialNode.index}` : `$.${partialNode.index}`;
  }
  getChildState(state, partialNode) {
    return {
      renderer: partialNode.renderer || state.renderer
    };
  }
  *getFullNode(partialNode, state, parentKey, parentNode) {
    let element = partialNode.element;
    if (!element && partialNode.value && state && state.renderer) {
      let cached = this.cache.get(partialNode.value);
      if (cached && (!cached.shouldInvalidate || !cached.shouldInvalidate(this.context))) {
        cached.index = partialNode.index;
        cached.parentKey = parentNode ? parentNode.key : null;
        yield cached;
        return;
      }
      element = state.renderer(partialNode.value);
    }
    if (React$1.isValidElement(element)) {
      let type2 = element.type;
      if (typeof type2 !== "function" && typeof type2.getCollectionNode !== "function") {
        let name = typeof element.type === "function" ? element.type.name : element.type;
        throw new Error(`Unknown element <${name}> in collection.`);
      }
      let childNodes = type2.getCollectionNode(element.props, this.context);
      let index = partialNode.index;
      let result = childNodes.next();
      while (!result.done && result.value) {
        let childNode = result.value;
        partialNode.index = index;
        let nodeKey = childNode.key;
        if (!nodeKey) nodeKey = childNode.element ? null : this.getKey(element, partialNode, state, parentKey);
        let nodes = this.getFullNode({
          ...childNode,
          key: nodeKey,
          index,
          wrapper: $eb2240fc39a57fa5$var$compose(partialNode.wrapper, childNode.wrapper)
        }, this.getChildState(state, childNode), parentKey ? `${parentKey}${element.key}` : element.key, parentNode);
        let children = [
          ...nodes
        ];
        for (let node2 of children) {
          node2.value = childNode.value || partialNode.value;
          if (node2.value) this.cache.set(node2.value, node2);
          if (partialNode.type && node2.type !== partialNode.type) throw new Error(`Unsupported type <${$eb2240fc39a57fa5$var$capitalize(node2.type)}> in <${$eb2240fc39a57fa5$var$capitalize(parentNode.type)}>. Only <${$eb2240fc39a57fa5$var$capitalize(partialNode.type)}> is supported.`);
          index++;
          yield node2;
        }
        result = childNodes.next(children);
      }
      return;
    }
    if (partialNode.key == null) return;
    let builder = this;
    let node = {
      type: partialNode.type,
      props: partialNode.props,
      key: partialNode.key,
      parentKey: parentNode ? parentNode.key : null,
      value: partialNode.value,
      level: parentNode ? parentNode.level + 1 : 0,
      index: partialNode.index,
      rendered: partialNode.rendered,
      textValue: partialNode.textValue,
      "aria-label": partialNode["aria-label"],
      wrapper: partialNode.wrapper,
      shouldInvalidate: partialNode.shouldInvalidate,
      hasChildNodes: partialNode.hasChildNodes,
      childNodes: $eb2240fc39a57fa5$var$iterable(function* () {
        if (!partialNode.hasChildNodes) return;
        let index = 0;
        for (let child of partialNode.childNodes()) {
          if (child.key != null)
            child.key = `${node.key}${child.key}`;
          child.index = index;
          let nodes = builder.getFullNode(child, builder.getChildState(state, child), node.key, node);
          for (let node2 of nodes) {
            index++;
            yield node2;
          }
        }
      })
    };
    yield node;
  }
  constructor() {
    this.cache = /* @__PURE__ */ new WeakMap();
  }
}
function $eb2240fc39a57fa5$var$iterable(iterator) {
  let cache = [];
  let iterable = null;
  return {
    *[Symbol.iterator]() {
      for (let item of cache) yield item;
      if (!iterable) iterable = iterator();
      for (let item of iterable) {
        cache.push(item);
        yield item;
      }
    }
  };
}
function $eb2240fc39a57fa5$var$compose(outer, inner) {
  if (outer && inner) return (element) => outer(inner(element));
  if (outer) return outer;
  if (inner) return inner;
}
function $eb2240fc39a57fa5$var$capitalize(str2) {
  return str2[0].toUpperCase() + str2.slice(1);
}
function $7613b1592d41b092$export$6cd28814d92fa9c9(props, factory, context) {
  let builder = reactExports.useMemo(() => new $eb2240fc39a57fa5$export$bf788dd355e3a401(), []);
  let { children, items, collection } = props;
  let result = reactExports.useMemo(() => {
    if (collection) return collection;
    let nodes = builder.build({
      children,
      items
    }, context);
    return factory(nodes);
  }, [
    builder,
    children,
    items,
    collection,
    context,
    factory
  ]);
  return result;
}
function $c5a24bc478652b5f$export$1005530eda016c13(node, collection) {
  if (typeof collection.getChildren === "function") return collection.getChildren(node.key);
  return node.childNodes;
}
const $453cc9f0df89c0a5$var$cache = /* @__PURE__ */ new WeakMap();
function $453cc9f0df89c0a5$export$77d5aafae4e095b2(collection) {
  let count = $453cc9f0df89c0a5$var$cache.get(collection);
  if (count != null) return count;
  count = 0;
  let countItems = (items) => {
    for (let item of items) if (item.type === "section") countItems($c5a24bc478652b5f$export$1005530eda016c13(item, collection));
    else count++;
  };
  countItems(collection);
  $453cc9f0df89c0a5$var$cache.set(collection, count);
  return count;
}
function $875d6693e12af071$export$728d6ba534403756(props) {
  let { onExpandedChange } = props;
  let [expandedKeys, setExpandedKeys] = $458b0a5536c1a7cf$export$40bfa8c7b0832715$1(props.expandedKeys ? new Set(props.expandedKeys) : void 0, props.defaultExpandedKeys ? new Set(props.defaultExpandedKeys) : /* @__PURE__ */ new Set(), onExpandedChange);
  let selectionState = $7af3f5b51489e0b5$export$253fe78d46329472(props);
  let disabledKeys = reactExports.useMemo(() => props.disabledKeys ? new Set(props.disabledKeys) : /* @__PURE__ */ new Set(), [
    props.disabledKeys
  ]);
  let tree = $7613b1592d41b092$export$6cd28814d92fa9c9(props, reactExports.useCallback((nodes) => new $05ca4cd7c4a5a999$export$863faf230ee2118a(nodes, {
    expandedKeys
  }), [
    expandedKeys
  ]), null);
  reactExports.useEffect(() => {
    if (selectionState.focusedKey != null && !tree.getItem(selectionState.focusedKey)) selectionState.setFocusedKey(null);
  }, [
    tree,
    selectionState.focusedKey
  ]);
  let onToggle = (key) => {
    setExpandedKeys($875d6693e12af071$var$toggleKey(expandedKeys, key));
  };
  return {
    collection: tree,
    expandedKeys,
    disabledKeys,
    toggleKey: onToggle,
    setExpandedKeys,
    selectionManager: new $d496c0a20b6e58ec$export$6c8a5aaad13c9852(tree, selectionState)
  };
}
function $875d6693e12af071$var$toggleKey(set2, key) {
  let res = new Set(set2);
  if (res.has(key)) res.delete(key);
  else res.add(key);
  return res;
}
function useSeparator(props) {
  let domProps = filterDOMProps(props, {
    enabled: typeof props.elementType === "string"
  });
  let ariaOrientation;
  if (props.orientation === "vertical") {
    ariaOrientation = "vertical";
  }
  if (props.elementType !== "hr") {
    return {
      separatorProps: {
        ...domProps,
        role: "separator",
        "aria-orientation": ariaOrientation
      }
    };
  }
  return { separatorProps: domProps };
}
function useDivider(props) {
  const { as, className, orientation, ...otherProps } = props;
  let Component = as || "hr";
  if (Component === "hr" && orientation === "vertical") {
    Component = "div";
  }
  const { separatorProps } = useSeparator({
    elementType: typeof Component === "string" ? Component : "hr",
    orientation
  });
  const styles = reactExports.useMemo(
    () => divider({
      orientation,
      className
    }),
    [orientation, className]
  );
  const getDividerProps = reactExports.useCallback(
    (props2 = {}) => ({
      className: styles,
      role: "separator",
      "data-orientation": orientation,
      ...separatorProps,
      ...otherProps,
      ...props2
    }),
    [styles, orientation, separatorProps, otherProps]
  );
  return { Component, getDividerProps };
}
var Divider = forwardRef((props, ref) => {
  const { Component, getDividerProps } = useDivider({ ...props });
  return /* @__PURE__ */ jsxRuntimeExports.jsx(Component, { ref, ...getDividerProps() });
});
Divider.displayName = "NextUI.Divider";
var divider_default = Divider;
var getTransformOrigins = (placement) => {
  const origins = {
    top: {
      originY: 1
    },
    bottom: {
      originY: 0
    },
    left: {
      originX: 1
    },
    right: {
      originX: 0
    },
    "top-start": {
      originX: 0,
      originY: 1
    },
    "top-end": {
      originX: 1,
      originY: 1
    },
    "bottom-start": {
      originX: 0,
      originY: 0
    },
    "bottom-end": {
      originX: 1,
      originY: 0
    },
    "right-start": {
      originX: 0,
      originY: 0
    },
    "right-end": {
      originX: 0,
      originY: 1
    },
    "left-start": {
      originX: 1,
      originY: 0
    },
    "left-end": {
      originX: 1,
      originY: 1
    }
  };
  return (origins == null ? void 0 : origins[placement]) || {};
};
var toReactAriaPlacement = (placement) => {
  const mapPositions = {
    top: "top",
    bottom: "bottom",
    left: "left",
    right: "right",
    "top-start": "top start",
    "top-end": "top end",
    "bottom-start": "bottom start",
    "bottom-end": "bottom end",
    "left-start": "left top",
    "left-end": "left bottom",
    "right-start": "right top",
    "right-end": "right bottom"
  };
  return mapPositions[placement];
};
var getShouldUseAxisPlacement = (axisPlacement, overlayPlacement) => {
  if (overlayPlacement.includes("-")) {
    const [position] = overlayPlacement.split("-");
    if (position.includes(axisPlacement)) {
      return false;
    }
  }
  return true;
};
var getArrowPlacement = (dynamicPlacement, placement) => {
  if (placement.includes("-")) {
    const [, position] = placement.split("-");
    return `${dynamicPlacement}-${position}`;
  }
  return dynamicPlacement;
};
var refCountMap = /* @__PURE__ */ new WeakMap();
var observerStack = [];
function ariaHideOutside(targets, root2 = document.body) {
  let visibleNodes = new Set(targets);
  let hiddenNodes = /* @__PURE__ */ new Set();
  let walk = (root22) => {
    for (let element of root22.querySelectorAll(
      "[data-live-announcer], [data-react-aria-top-layer]"
    )) {
      visibleNodes.add(element);
    }
    let acceptNode = (node) => {
      const parentElement = node.parentElement;
      if (visibleNodes.has(node) || hiddenNodes.has(parentElement) && parentElement.getAttribute("role") !== "row") {
        return NodeFilter.FILTER_REJECT;
      }
      for (let target of visibleNodes) {
        if (node.contains(target)) {
          return NodeFilter.FILTER_SKIP;
        }
      }
      return NodeFilter.FILTER_ACCEPT;
    };
    let walker = document.createTreeWalker(root22, NodeFilter.SHOW_ELEMENT, { acceptNode });
    let acceptRoot = acceptNode(root22);
    if (acceptRoot === NodeFilter.FILTER_ACCEPT) {
      hide(root22);
    }
    if (acceptRoot !== NodeFilter.FILTER_REJECT) {
      let node = walker.nextNode();
      while (node != null) {
        hide(node);
        node = walker.nextNode();
      }
    }
  };
  let hide = (node) => {
    var _a;
    let refCount = (_a = refCountMap.get(node)) != null ? _a : 0;
    if (node.getAttribute("aria-hidden") === "true" && refCount === 0) {
      return;
    }
    if (refCount === 0) {
      node.setAttribute("aria-hidden", "true");
    }
    hiddenNodes.add(node);
    refCountMap.set(node, refCount + 1);
  };
  if (observerStack.length) {
    observerStack[observerStack.length - 1].disconnect();
  }
  walk(root2);
  let observer = new MutationObserver((changes) => {
    for (let change of changes) {
      if (change.type !== "childList" || change.addedNodes.length === 0) {
        continue;
      }
      if (![...visibleNodes, ...hiddenNodes].some((node) => node.contains(change.target))) {
        for (let node of change.removedNodes) {
          if (node instanceof Element) {
            visibleNodes.delete(node);
            hiddenNodes.delete(node);
          }
        }
        for (let node of change.addedNodes) {
          if ((node instanceof HTMLElement || node instanceof SVGElement) && (node.dataset.liveAnnouncer === "true" || node.dataset.reactAriaTopLayer === "true")) {
            visibleNodes.add(node);
          } else if (node instanceof Element) {
            walk(node);
          }
        }
      }
    }
  });
  observer.observe(root2, { childList: true, subtree: true });
  let observerWrapper = {
    observe() {
      observer.observe(root2, { childList: true, subtree: true });
    },
    disconnect() {
      observer.disconnect();
    }
  };
  observerStack.push(observerWrapper);
  return () => {
    observer.disconnect();
    for (let node of hiddenNodes) {
      let count = refCountMap.get(node);
      if (count == null) {
        continue;
      }
      if (count === 1) {
        node.removeAttribute("aria-hidden");
        refCountMap.delete(node);
      } else {
        refCountMap.set(node, count - 1);
      }
    }
    if (observerWrapper === observerStack[observerStack.length - 1]) {
      observerStack.pop();
      if (observerStack.length) {
        observerStack[observerStack.length - 1].observe();
      }
    } else {
      observerStack.splice(observerStack.indexOf(observerWrapper), 1);
    }
  };
}
var ariaShouldCloseOnInteractOutside = (element, triggerRef, state) => {
  const trigger = triggerRef == null ? void 0 : triggerRef.current;
  if (!trigger || !trigger.contains(element)) {
    const startElements = document.querySelectorAll("body > span[data-focus-scope-start]");
    let focusScopeElements = [];
    startElements.forEach((startElement) => {
      focusScopeElements.push(startElement.nextElementSibling);
    });
    if (focusScopeElements.length === 1) {
      state.close();
      return false;
    }
  }
  return !trigger || !trigger.contains(element);
};
var AvatarIcon = () => /* @__PURE__ */ jsxRuntimeExports.jsxs(
  "svg",
  {
    "aria-hidden": "true",
    fill: "none",
    height: "80%",
    role: "presentation",
    viewBox: "0 0 24 24",
    width: "80%",
    children: [
      /* @__PURE__ */ jsxRuntimeExports.jsx(
        "path",
        {
          d: "M12 2C9.38 2 7.25 4.13 7.25 6.75C7.25 9.32 9.26 11.4 11.88 11.49C11.96 11.48 12.04 11.48 12.1 11.49C12.12 11.49 12.13 11.49 12.15 11.49C12.16 11.49 12.16 11.49 12.17 11.49C14.73 11.4 16.74 9.32 16.75 6.75C16.75 4.13 14.62 2 12 2Z",
          fill: "currentColor"
        }
      ),
      /* @__PURE__ */ jsxRuntimeExports.jsx(
        "path",
        {
          d: "M17.0809 14.1489C14.2909 12.2889 9.74094 12.2889 6.93094 14.1489C5.66094 14.9989 4.96094 16.1489 4.96094 17.3789C4.96094 18.6089 5.66094 19.7489 6.92094 20.5889C8.32094 21.5289 10.1609 21.9989 12.0009 21.9989C13.8409 21.9989 15.6809 21.5289 17.0809 20.5889C18.3409 19.7389 19.0409 18.5989 19.0409 17.3589C19.0309 16.1289 18.3409 14.9889 17.0809 14.1489Z",
          fill: "currentColor"
        }
      )
    ]
  }
);
var [AvatarGroupProvider, useAvatarGroupContext] = createContext2({
  name: "AvatarGroupContext",
  strict: false
});
var useSafeLayoutEffect = Boolean(globalThis == null ? void 0 : globalThis.document) ? reactExports.useLayoutEffect : reactExports.useEffect;
function useImage$1(props = {}) {
  const { loading, src, srcSet, onLoad, onError, crossOrigin, sizes, ignoreFallback } = props;
  const [status, setStatus] = reactExports.useState("pending");
  reactExports.useEffect(() => {
    setStatus(src ? "loading" : "pending");
  }, [src]);
  const imageRef = reactExports.useRef();
  const load2 = reactExports.useCallback(() => {
    if (!src)
      return;
    flush();
    const img = new Image();
    img.src = src;
    if (crossOrigin)
      img.crossOrigin = crossOrigin;
    if (srcSet)
      img.srcset = srcSet;
    if (sizes)
      img.sizes = sizes;
    if (loading)
      img.loading = loading;
    img.onload = (event) => {
      flush();
      setStatus("loaded");
      onLoad == null ? void 0 : onLoad(event);
    };
    img.onerror = (error) => {
      flush();
      setStatus("failed");
      onError == null ? void 0 : onError(error);
    };
    imageRef.current = img;
  }, [src, crossOrigin, srcSet, sizes, onLoad, onError, loading]);
  const flush = () => {
    if (imageRef.current) {
      imageRef.current.onload = null;
      imageRef.current.onerror = null;
      imageRef.current = null;
    }
  };
  useSafeLayoutEffect(() => {
    if (ignoreFallback)
      return void 0;
    if (status === "loading") {
      load2();
    }
    return () => {
      flush();
    };
  }, [status, load2, ignoreFallback]);
  return ignoreFallback ? "loaded" : status;
}
function useAvatar(originalProps = {}) {
  var _a, _b, _c, _d, _e, _f, _g;
  const globalContext = useProviderContext();
  const groupContext = useAvatarGroupContext();
  const isInGroup = !!groupContext;
  const {
    as,
    ref,
    src,
    name,
    icon,
    classNames,
    fallback,
    alt = name || "avatar",
    imgRef: imgRefProp,
    color: color2 = (_a = groupContext == null ? void 0 : groupContext.color) != null ? _a : "default",
    radius = (_b = groupContext == null ? void 0 : groupContext.radius) != null ? _b : "full",
    size: size2 = (_c = groupContext == null ? void 0 : groupContext.size) != null ? _c : "md",
    isBordered = (_d = groupContext == null ? void 0 : groupContext.isBordered) != null ? _d : false,
    isDisabled = (_e = groupContext == null ? void 0 : groupContext.isDisabled) != null ? _e : false,
    isFocusable = false,
    getInitials = safeText,
    ignoreFallback = false,
    showFallback: showFallbackProp = false,
    ImgComponent = "img",
    imgProps,
    className,
    onError,
    ...otherProps
  } = originalProps;
  const Component = as || "span";
  const domRef = useDOMRef(ref);
  const imgRef = useDOMRef(imgRefProp);
  const { isFocusVisible, isFocused, focusProps } = $f7dceffc5ad7768b$export$4e328f61c538687f();
  const { isHovered, hoverProps } = $6179b936705e76d3$export$ae780daf29e6d456({ isDisabled });
  const disableAnimation = (_g = (_f = originalProps.disableAnimation) != null ? _f : globalContext == null ? void 0 : globalContext.disableAnimation) != null ? _g : false;
  const imageStatus = useImage$1({ src, onError, ignoreFallback });
  const isImgLoaded = imageStatus === "loaded";
  const shouldFilterDOMProps = typeof ImgComponent === "string";
  const showFallback = (!src || !isImgLoaded) && showFallbackProp;
  const slots = reactExports.useMemo(
    () => {
      var _a2;
      return avatar({
        color: color2,
        radius,
        size: size2,
        isBordered,
        isDisabled,
        isInGroup,
        disableAnimation,
        isInGridGroup: (_a2 = groupContext == null ? void 0 : groupContext.isGrid) != null ? _a2 : false
      });
    },
    [
      color2,
      radius,
      size2,
      isBordered,
      isDisabled,
      disableAnimation,
      isInGroup,
      groupContext == null ? void 0 : groupContext.isGrid
    ]
  );
  const baseStyles = clsx$1(classNames == null ? void 0 : classNames.base, className);
  const canBeFocused = reactExports.useMemo(() => {
    return isFocusable || as === "button";
  }, [isFocusable, as]);
  const getAvatarProps = reactExports.useCallback(
    (props = {}) => ({
      ref: domRef,
      tabIndex: canBeFocused ? 0 : -1,
      "data-hover": dataAttr(isHovered),
      "data-focus": dataAttr(isFocused),
      "data-focus-visible": dataAttr(isFocusVisible),
      className: slots.base({
        class: clsx$1(baseStyles, props == null ? void 0 : props.className)
      }),
      ...$3ef42575df84b30b$export$9d1611c77c2fe928(otherProps, hoverProps, canBeFocused ? focusProps : {})
    }),
    [canBeFocused, slots, baseStyles, focusProps, otherProps]
  );
  const getImageProps = reactExports.useCallback(
    (props = {}) => ({
      ref: imgRef,
      src,
      "data-loaded": dataAttr(isImgLoaded),
      className: slots.img({ class: classNames == null ? void 0 : classNames.img }),
      ...$3ef42575df84b30b$export$9d1611c77c2fe928(
        imgProps,
        props,
        filterDOMProps({ disableAnimation }, {
          enabled: shouldFilterDOMProps
        })
      )
    }),
    [slots, isImgLoaded, imgProps, disableAnimation, src, imgRef, shouldFilterDOMProps]
  );
  return {
    Component,
    ImgComponent,
    src,
    alt,
    icon,
    name,
    imgRef,
    slots,
    classNames,
    fallback,
    isImgLoaded,
    showFallback,
    ignoreFallback,
    getInitials,
    getAvatarProps,
    getImageProps
  };
}
var Avatar = forwardRef((props, ref) => {
  const {
    Component,
    ImgComponent,
    src,
    icon = /* @__PURE__ */ jsxRuntimeExports.jsx(AvatarIcon, {}),
    alt,
    classNames,
    slots,
    name,
    showFallback,
    fallback: fallbackComponent,
    getInitials,
    getAvatarProps,
    getImageProps
  } = useAvatar({
    ...props,
    ref
  });
  const fallback = reactExports.useMemo(() => {
    if (!showFallback && src)
      return null;
    if (fallbackComponent) {
      return /* @__PURE__ */ jsxRuntimeExports.jsx("div", { "aria-label": alt, className: slots.fallback({ class: classNames == null ? void 0 : classNames.fallback }), role: "img", children: fallbackComponent });
    }
    return name ? /* @__PURE__ */ jsxRuntimeExports.jsx("span", { "aria-label": alt, className: slots.name({ class: classNames == null ? void 0 : classNames.name }), role: "img", children: getInitials(name) }) : /* @__PURE__ */ jsxRuntimeExports.jsx("span", { "aria-label": alt, className: slots.icon({ class: classNames == null ? void 0 : classNames.icon }), role: "img", children: icon });
  }, [showFallback, src, fallbackComponent, name, classNames]);
  return /* @__PURE__ */ jsxRuntimeExports.jsxs(Component, { ...getAvatarProps(), children: [
    src && /* @__PURE__ */ jsxRuntimeExports.jsx(ImgComponent, { ...getImageProps(), alt }),
    fallback
  ] });
});
Avatar.displayName = "NextUI.Avatar";
var avatar_default = Avatar;
function useButtonGroup(originalProps) {
  var _a, _b;
  const globalContext = useProviderContext();
  const [props, variantProps2] = mapPropsVariants(originalProps, buttonGroup.variantKeys);
  const {
    ref,
    as,
    children,
    color: color2 = "default",
    size: size2 = "md",
    variant = "solid",
    radius,
    isDisabled = false,
    isIconOnly = false,
    disableRipple = (_a = globalContext == null ? void 0 : globalContext.disableRipple) != null ? _a : false,
    disableAnimation = (_b = globalContext == null ? void 0 : globalContext.disableAnimation) != null ? _b : false,
    className,
    ...otherProps
  } = props;
  const Component = as || "div";
  const domRef = useDOMRef(ref);
  const classNames = reactExports.useMemo(
    () => buttonGroup({
      ...variantProps2,
      className
    }),
    [objectToDeps(variantProps2), className]
  );
  const context = reactExports.useMemo(
    () => ({
      size: size2,
      color: color2,
      variant,
      radius,
      isIconOnly,
      isDisabled,
      disableAnimation,
      disableRipple,
      fullWidth: !!(originalProps == null ? void 0 : originalProps.fullWidth)
    }),
    [
      size2,
      color2,
      variant,
      radius,
      isDisabled,
      isIconOnly,
      disableAnimation,
      disableRipple,
      originalProps == null ? void 0 : originalProps.fullWidth
    ]
  );
  const getButtonGroupProps = reactExports.useCallback(
    () => ({
      role: "group",
      ...otherProps
    }),
    [otherProps]
  );
  return {
    Component,
    children,
    domRef,
    context,
    classNames,
    getButtonGroupProps
  };
}
var [ButtonGroupProvider, useButtonGroupContext] = createContext2({
  name: "ButtonGroupContext",
  strict: false
});
var ButtonGroup = forwardRef((props, ref) => {
  const { Component, domRef, context, children, classNames, getButtonGroupProps } = useButtonGroup({
    ...props,
    ref
  });
  return /* @__PURE__ */ jsxRuntimeExports.jsx(ButtonGroupProvider, { value: context, children: /* @__PURE__ */ jsxRuntimeExports.jsx(Component, { ref: domRef, className: classNames, ...getButtonGroupProps(), children }) });
});
ButtonGroup.displayName = "NextUI.ButtonGroup";
var button_group_default = ButtonGroup;
function useAriaButton(props, ref) {
  let {
    elementType = "button",
    isDisabled,
    onPress,
    onPressStart,
    onPressEnd,
    onPressChange,
    preventFocusOnPress,
    allowFocusWhenDisabled,
    onClick: deprecatedOnClick,
    href,
    target,
    rel,
    type: type2 = "button",
    allowTextSelectionOnPress
  } = props;
  let additionalProps;
  if (elementType === "button") {
    additionalProps = {
      type: type2,
      disabled: isDisabled
    };
  } else {
    additionalProps = {
      role: "button",
      tabIndex: isDisabled ? void 0 : 0,
      href: elementType === "a" && isDisabled ? void 0 : href,
      target: elementType === "a" ? target : void 0,
      type: elementType === "input" ? type2 : void 0,
      disabled: elementType === "input" ? isDisabled : void 0,
      "aria-disabled": !isDisabled || elementType === "input" ? void 0 : isDisabled,
      rel: elementType === "a" ? rel : void 0
    };
  }
  let { pressProps, isPressed } = $f6c31cce2adf654f$export$45712eceda6fad21({
    onPressStart,
    onPressEnd,
    onPressChange,
    onPress,
    isDisabled,
    preventFocusOnPress,
    allowTextSelectionOnPress,
    ref
  });
  let { focusableProps } = $e6afbd83fe6ebbd2$export$4c014de7c8940b4c(props, ref);
  if (allowFocusWhenDisabled) {
    focusableProps.tabIndex = isDisabled ? -1 : focusableProps.tabIndex;
  }
  let buttonProps = $3ef42575df84b30b$export$9d1611c77c2fe928(
    focusableProps,
    pressProps,
    $65484d02dcb7eb3e$export$457c3d6518dd4c6f(props, { labelable: true })
  );
  return {
    isPressed,
    buttonProps: $3ef42575df84b30b$export$9d1611c77c2fe928(additionalProps, buttonProps, {
      "aria-haspopup": props["aria-haspopup"],
      "aria-expanded": props["aria-expanded"],
      "aria-controls": props["aria-controls"],
      "aria-pressed": props["aria-pressed"],
      onClick: (e) => {
        deprecatedOnClick == null ? void 0 : deprecatedOnClick(e);
      }
    })
  };
}
var Ripple = (props) => {
  const { ripples = [], motionProps, color: color2 = "currentColor", style, onClear } = props;
  return /* @__PURE__ */ jsxRuntimeExports.jsx(jsxRuntimeExports.Fragment, { children: ripples.map((ripple) => {
    const duration = clamp$1(0.01 * ripple.size, 0.2, ripple.size > 100 ? 0.75 : 0.5);
    return /* @__PURE__ */ jsxRuntimeExports.jsx(LazyMotion, { features: domAnimation, children: /* @__PURE__ */ jsxRuntimeExports.jsx(AnimatePresence, { mode: "popLayout", children: /* @__PURE__ */ jsxRuntimeExports.jsx(
      m.span,
      {
        animate: { transform: "scale(2)", opacity: 0 },
        className: "nextui-ripple",
        exit: { opacity: 0 },
        initial: { transform: "scale(0)", opacity: 0.35 },
        style: {
          position: "absolute",
          backgroundColor: color2,
          borderRadius: "100%",
          transformOrigin: "center",
          pointerEvents: "none",
          overflow: "hidden",
          inset: 0,
          zIndex: 0,
          top: ripple.y,
          left: ripple.x,
          width: `${ripple.size}px`,
          height: `${ripple.size}px`,
          ...style
        },
        transition: { duration },
        onAnimationComplete: () => {
          onClear(ripple.key);
        },
        ...motionProps
      }
    ) }) }, ripple.key);
  }) });
};
Ripple.displayName = "NextUI.Ripple";
var ripple_default = Ripple;
function useRipple(props = {}) {
  const [ripples, setRipples] = reactExports.useState([]);
  const onClick = reactExports.useCallback((event) => {
    const trigger = event.currentTarget;
    const size2 = Math.max(trigger.clientWidth, trigger.clientHeight);
    const rect = trigger.getBoundingClientRect();
    setRipples((prevRipples) => [
      ...prevRipples,
      {
        key: getUniqueID(prevRipples.length.toString()),
        size: size2,
        x: event.clientX - rect.left - size2 / 2,
        y: event.clientY - rect.top - size2 / 2
      }
    ]);
  }, []);
  const onClear = reactExports.useCallback((key) => {
    setRipples((prevState) => prevState.filter((ripple) => ripple.key !== key));
  }, []);
  return { ripples, onClick, onClear, ...props };
}
function useButton(props) {
  var _a, _b, _c, _d, _e, _f, _g, _h, _i;
  const groupContext = useButtonGroupContext();
  const globalContext = useProviderContext();
  const isInGroup = !!groupContext;
  const {
    ref,
    as,
    children,
    startContent: startContentProp,
    endContent: endContentProp,
    autoFocus,
    className,
    spinner: spinner2,
    isLoading = false,
    disableRipple: disableRippleProp = false,
    fullWidth = (_a = groupContext == null ? void 0 : groupContext.fullWidth) != null ? _a : false,
    radius = groupContext == null ? void 0 : groupContext.radius,
    size: size2 = (_b = groupContext == null ? void 0 : groupContext.size) != null ? _b : "md",
    color: color2 = (_c = groupContext == null ? void 0 : groupContext.color) != null ? _c : "default",
    variant = (_d = groupContext == null ? void 0 : groupContext.variant) != null ? _d : "solid",
    disableAnimation = (_f = (_e = groupContext == null ? void 0 : groupContext.disableAnimation) != null ? _e : globalContext == null ? void 0 : globalContext.disableAnimation) != null ? _f : false,
    isDisabled: isDisabledProp = (_g = groupContext == null ? void 0 : groupContext.isDisabled) != null ? _g : false,
    isIconOnly = (_h = groupContext == null ? void 0 : groupContext.isIconOnly) != null ? _h : false,
    spinnerPlacement = "start",
    onPress,
    onClick,
    ...otherProps
  } = props;
  const Component = as || "button";
  const shouldFilterDOMProps = typeof Component === "string";
  const domRef = useDOMRef(ref);
  const disableRipple = (_i = disableRippleProp || (globalContext == null ? void 0 : globalContext.disableRipple)) != null ? _i : disableAnimation;
  const { isFocusVisible, isFocused, focusProps } = $f7dceffc5ad7768b$export$4e328f61c538687f({
    autoFocus
  });
  const isDisabled = isDisabledProp || isLoading;
  const styles = reactExports.useMemo(
    () => button({
      size: size2,
      color: color2,
      variant,
      radius,
      fullWidth,
      isDisabled,
      isInGroup,
      disableAnimation,
      isIconOnly,
      className
    }),
    [
      size2,
      color2,
      variant,
      radius,
      fullWidth,
      isDisabled,
      isInGroup,
      isIconOnly,
      disableAnimation,
      className
    ]
  );
  const { onClick: onRippleClickHandler, onClear: onClearRipple, ripples } = useRipple();
  const handleClick = reactExports.useCallback(
    (e) => {
      if (disableRipple || isDisabled || disableAnimation)
        return;
      domRef.current && onRippleClickHandler(e);
    },
    [disableRipple, isDisabled, disableAnimation, domRef, onRippleClickHandler]
  );
  const { buttonProps: ariaButtonProps, isPressed } = useAriaButton(
    {
      elementType: as,
      isDisabled,
      onPress,
      onClick: $ff5963eb1fccf552$export$e08e3b67e392101e(onClick, handleClick),
      ...otherProps
    },
    domRef
  );
  const { isHovered, hoverProps } = $6179b936705e76d3$export$ae780daf29e6d456({ isDisabled });
  const getButtonProps = reactExports.useCallback(
    (props2 = {}) => ({
      "data-disabled": dataAttr(isDisabled),
      "data-focus": dataAttr(isFocused),
      "data-pressed": dataAttr(isPressed),
      "data-focus-visible": dataAttr(isFocusVisible),
      "data-hover": dataAttr(isHovered),
      "data-loading": dataAttr(isLoading),
      ...$3ef42575df84b30b$export$9d1611c77c2fe928(
        ariaButtonProps,
        focusProps,
        hoverProps,
        filterDOMProps(otherProps, {
          enabled: shouldFilterDOMProps
        }),
        filterDOMProps(props2)
      )
    }),
    [
      isLoading,
      isDisabled,
      isFocused,
      isPressed,
      shouldFilterDOMProps,
      isFocusVisible,
      isHovered,
      ariaButtonProps,
      focusProps,
      hoverProps,
      otherProps
    ]
  );
  const getIconClone = (icon) => reactExports.isValidElement(icon) ? reactExports.cloneElement(icon, {
    "aria-hidden": true,
    focusable: false,
    tabIndex: -1
  }) : null;
  const startContent = getIconClone(startContentProp);
  const endContent = getIconClone(endContentProp);
  const spinnerSize = reactExports.useMemo(() => {
    const buttonSpinnerSizeMap = {
      sm: "sm",
      md: "sm",
      lg: "md"
    };
    return buttonSpinnerSizeMap[size2];
  }, [size2]);
  const getRippleProps = reactExports.useCallback(
    () => ({ ripples, onClear: onClearRipple }),
    [ripples, onClearRipple]
  );
  return {
    Component,
    children,
    domRef,
    spinner: spinner2,
    styles,
    startContent,
    endContent,
    isLoading,
    spinnerPlacement,
    spinnerSize,
    disableRipple,
    getButtonProps,
    getRippleProps,
    isIconOnly
  };
}
function useSpinner(originalProps) {
  const [props, variantProps2] = mapPropsVariants(originalProps, spinner.variantKeys);
  const { children, className, classNames, label: labelProp, ...otherProps } = props;
  const slots = reactExports.useMemo(() => spinner({ ...variantProps2 }), [objectToDeps(variantProps2)]);
  const baseStyles = clsx$1(classNames == null ? void 0 : classNames.base, className);
  const label = labelProp || children;
  const ariaLabel = reactExports.useMemo(() => {
    if (label && typeof label === "string") {
      return label;
    }
    return !otherProps["aria-label"] ? "Loading" : "";
  }, [children, label, otherProps["aria-label"]]);
  const getSpinnerProps = reactExports.useCallback(
    () => ({
      "aria-label": ariaLabel,
      className: slots.base({
        class: baseStyles
      }),
      ...otherProps
    }),
    [ariaLabel, slots, baseStyles, otherProps]
  );
  return { label, slots, classNames, getSpinnerProps };
}
var Spinner = forwardRef((props, ref) => {
  const { slots, classNames, label, getSpinnerProps } = useSpinner({ ...props });
  return /* @__PURE__ */ jsxRuntimeExports.jsxs("div", { ref, ...getSpinnerProps(), children: [
    /* @__PURE__ */ jsxRuntimeExports.jsxs("div", { className: slots.wrapper({ class: classNames == null ? void 0 : classNames.wrapper }), children: [
      /* @__PURE__ */ jsxRuntimeExports.jsx("i", { className: slots.circle1({ class: classNames == null ? void 0 : classNames.circle1 }) }),
      /* @__PURE__ */ jsxRuntimeExports.jsx("i", { className: slots.circle2({ class: classNames == null ? void 0 : classNames.circle2 }) })
    ] }),
    label && /* @__PURE__ */ jsxRuntimeExports.jsx("span", { className: slots.label({ class: classNames == null ? void 0 : classNames.label }), children: label })
  ] });
});
Spinner.displayName = "NextUI.Spinner";
var spinner_default = Spinner;
var Button$1 = forwardRef((props, ref) => {
  const {
    Component,
    domRef,
    children,
    styles,
    spinnerSize,
    spinner: spinner2 = /* @__PURE__ */ jsxRuntimeExports.jsx(spinner_default, { color: "current", size: spinnerSize }),
    spinnerPlacement,
    startContent,
    endContent,
    isLoading,
    disableRipple,
    getButtonProps,
    getRippleProps,
    isIconOnly
  } = useButton({ ...props, ref });
  return /* @__PURE__ */ jsxRuntimeExports.jsxs(Component, { ref: domRef, className: styles, ...getButtonProps(), children: [
    startContent,
    isLoading && spinnerPlacement === "start" && spinner2,
    isLoading && isIconOnly ? null : children,
    isLoading && spinnerPlacement === "end" && spinner2,
    endContent,
    !disableRipple && /* @__PURE__ */ jsxRuntimeExports.jsx(ripple_default, { ...getRippleProps() })
  ] });
});
Button$1.displayName = "NextUI.Button";
var button_default = Button$1;
var [CardProvider, useCardContext] = createContext2({
  name: "CardContext",
  strict: true,
  errorMessage: "useCardContext: `context` is undefined. Seems you forgot to wrap component within <Card />"
});
function useCard(originalProps) {
  var _a, _b, _c, _d;
  const globalContext = useProviderContext();
  const [props, variantProps2] = mapPropsVariants(originalProps, card.variantKeys);
  const {
    ref,
    as,
    children,
    onClick,
    onPress,
    autoFocus,
    className,
    classNames,
    allowTextSelectionOnPress = true,
    ...otherProps
  } = props;
  const domRef = useDOMRef(ref);
  const Component = as || (originalProps.isPressable ? "button" : "div");
  const shouldFilterDOMProps = typeof Component === "string";
  const disableAnimation = (_b = (_a = originalProps.disableAnimation) != null ? _a : globalContext == null ? void 0 : globalContext.disableAnimation) != null ? _b : false;
  const disableRipple = (_d = (_c = originalProps.disableRipple) != null ? _c : globalContext == null ? void 0 : globalContext.disableRipple) != null ? _d : false;
  const baseStyles = clsx$1(classNames == null ? void 0 : classNames.base, className);
  const { onClick: onRippleClickHandler, onClear: onClearRipple, ripples } = useRipple();
  const handleClick = (e) => {
    if (!disableAnimation && !disableRipple && domRef.current) {
      onRippleClickHandler(e);
    }
  };
  const { buttonProps, isPressed } = useAriaButton(
    {
      onPress,
      elementType: as,
      isDisabled: !originalProps.isPressable,
      onClick: $ff5963eb1fccf552$export$e08e3b67e392101e(onClick, handleClick),
      allowTextSelectionOnPress,
      ...otherProps
    },
    domRef
  );
  const { hoverProps, isHovered } = $6179b936705e76d3$export$ae780daf29e6d456({
    isDisabled: !originalProps.isHoverable,
    ...otherProps
  });
  const { isFocusVisible, isFocused, focusProps } = $f7dceffc5ad7768b$export$4e328f61c538687f({
    autoFocus
  });
  const slots = reactExports.useMemo(
    () => card({
      ...variantProps2,
      disableAnimation
    }),
    [objectToDeps(variantProps2), disableAnimation]
  );
  const context = reactExports.useMemo(
    () => ({
      slots,
      classNames,
      disableAnimation,
      isDisabled: originalProps.isDisabled,
      isFooterBlurred: originalProps.isFooterBlurred,
      fullWidth: originalProps.fullWidth
    }),
    [
      slots,
      classNames,
      originalProps.isDisabled,
      originalProps.isFooterBlurred,
      disableAnimation,
      originalProps.fullWidth
    ]
  );
  const getCardProps = reactExports.useCallback(
    (props2 = {}) => {
      return {
        ref: domRef,
        className: slots.base({ class: baseStyles }),
        tabIndex: originalProps.isPressable ? 0 : -1,
        "data-hover": dataAttr(isHovered),
        "data-pressed": dataAttr(isPressed),
        "data-focus": dataAttr(isFocused),
        "data-focus-visible": dataAttr(isFocusVisible),
        "data-disabled": dataAttr(originalProps.isDisabled),
        ...$3ef42575df84b30b$export$9d1611c77c2fe928(
          originalProps.isPressable ? { ...buttonProps, ...focusProps, role: "button" } : {},
          originalProps.isHoverable ? hoverProps : {},
          filterDOMProps(otherProps, {
            enabled: shouldFilterDOMProps
          }),
          filterDOMProps(props2)
        )
      };
    },
    [
      domRef,
      slots,
      baseStyles,
      shouldFilterDOMProps,
      originalProps.isPressable,
      originalProps.isHoverable,
      originalProps.isDisabled,
      isHovered,
      isPressed,
      isFocusVisible,
      buttonProps,
      focusProps,
      hoverProps,
      otherProps
    ]
  );
  const getRippleProps = reactExports.useCallback(
    () => ({ ripples, onClear: onClearRipple }),
    [ripples, onClearRipple]
  );
  return {
    context,
    domRef,
    Component,
    classNames,
    children,
    isHovered,
    isPressed,
    disableAnimation,
    isPressable: originalProps.isPressable,
    isHoverable: originalProps.isHoverable,
    disableRipple,
    handleClick,
    isFocusVisible,
    getCardProps,
    getRippleProps
  };
}
var Card = forwardRef((props, ref) => {
  const {
    children,
    context,
    Component,
    isPressable,
    disableAnimation,
    disableRipple,
    getCardProps,
    getRippleProps
  } = useCard({ ...props, ref });
  return /* @__PURE__ */ jsxRuntimeExports.jsxs(Component, { ...getCardProps(), children: [
    /* @__PURE__ */ jsxRuntimeExports.jsx(CardProvider, { value: context, children }),
    isPressable && !disableAnimation && !disableRipple && /* @__PURE__ */ jsxRuntimeExports.jsx(ripple_default, { ...getRippleProps() })
  ] });
});
Card.displayName = "NextUI.Card";
var card_default = Card;
function $e93e671b31057976$export$b8473d3665f3a75a(props, state, ref) {
  let { validationBehavior, focus } = props;
  $f0a04ccd8dbdd83b$export$e5c5a5f917a5871c(() => {
    if (validationBehavior === "native" && (ref === null || ref === void 0 ? void 0 : ref.current)) {
      let errorMessage = state.realtimeValidation.isInvalid ? state.realtimeValidation.validationErrors.join(" ") || "Invalid value." : "";
      ref.current.setCustomValidity(errorMessage);
      if (!ref.current.hasAttribute("title")) ref.current.title = "";
      if (!state.realtimeValidation.isInvalid) state.updateValidation($e93e671b31057976$var$getNativeValidity(ref.current));
    }
  });
  let onReset = $8ae05eaa5c114e9c$export$7f54fc3180508a52(() => {
    state.resetValidation();
  });
  let onInvalid = $8ae05eaa5c114e9c$export$7f54fc3180508a52((e) => {
    var _ref_current;
    if (!state.displayValidation.isInvalid) state.commitValidation();
    let form = ref === null || ref === void 0 ? void 0 : (_ref_current = ref.current) === null || _ref_current === void 0 ? void 0 : _ref_current.form;
    if (!e.defaultPrevented && ref && form && $e93e671b31057976$var$getFirstInvalidInput(form) === ref.current) {
      var _ref_current1;
      if (focus) focus();
      else (_ref_current1 = ref.current) === null || _ref_current1 === void 0 ? void 0 : _ref_current1.focus();
      $507fabe10e71c6fb$export$8397ddfc504fdb9a("keyboard");
    }
    e.preventDefault();
  });
  let onChange = $8ae05eaa5c114e9c$export$7f54fc3180508a52(() => {
    state.commitValidation();
  });
  reactExports.useEffect(() => {
    let input2 = ref === null || ref === void 0 ? void 0 : ref.current;
    if (!input2) return;
    let form = input2.form;
    input2.addEventListener("invalid", onInvalid);
    input2.addEventListener("change", onChange);
    form === null || form === void 0 ? void 0 : form.addEventListener("reset", onReset);
    return () => {
      input2.removeEventListener("invalid", onInvalid);
      input2.removeEventListener("change", onChange);
      form === null || form === void 0 ? void 0 : form.removeEventListener("reset", onReset);
    };
  }, [
    ref,
    onInvalid,
    onChange,
    onReset,
    validationBehavior
  ]);
}
function $e93e671b31057976$var$getValidity(input2) {
  let validity = input2.validity;
  return {
    badInput: validity.badInput,
    customError: validity.customError,
    patternMismatch: validity.patternMismatch,
    rangeOverflow: validity.rangeOverflow,
    rangeUnderflow: validity.rangeUnderflow,
    stepMismatch: validity.stepMismatch,
    tooLong: validity.tooLong,
    tooShort: validity.tooShort,
    typeMismatch: validity.typeMismatch,
    valueMissing: validity.valueMissing,
    valid: validity.valid
  };
}
function $e93e671b31057976$var$getNativeValidity(input2) {
  return {
    isInvalid: !input2.validity.valid,
    validationDetails: $e93e671b31057976$var$getValidity(input2),
    validationErrors: input2.validationMessage ? [
      input2.validationMessage
    ] : []
  };
}
function $e93e671b31057976$var$getFirstInvalidInput(form) {
  for (let i = 0; i < form.elements.length; i++) {
    let element = form.elements[i];
    if (!element.validity.valid) return element;
  }
  return null;
}
const $e5be200c675c3b3a$export$aca958c65c314e6c = {
  badInput: false,
  customError: false,
  patternMismatch: false,
  rangeOverflow: false,
  rangeUnderflow: false,
  stepMismatch: false,
  tooLong: false,
  tooShort: false,
  typeMismatch: false,
  valueMissing: false,
  valid: true
};
const $e5be200c675c3b3a$var$CUSTOM_VALIDITY_STATE = {
  ...$e5be200c675c3b3a$export$aca958c65c314e6c,
  customError: true,
  valid: false
};
const $e5be200c675c3b3a$export$dad6ae84456c676a = {
  isInvalid: false,
  validationDetails: $e5be200c675c3b3a$export$aca958c65c314e6c,
  validationErrors: []
};
const $e5be200c675c3b3a$export$571b5131b7e65c11 = reactExports.createContext({});
const $e5be200c675c3b3a$export$a763b9476acd3eb = "__formValidationState" + Date.now();
function $e5be200c675c3b3a$export$fc1a364ae1f3ff10(props) {
  if (props[$e5be200c675c3b3a$export$a763b9476acd3eb]) {
    let { realtimeValidation, displayValidation, updateValidation, resetValidation, commitValidation } = props[$e5be200c675c3b3a$export$a763b9476acd3eb];
    return {
      realtimeValidation,
      displayValidation,
      updateValidation,
      resetValidation,
      commitValidation
    };
  }
  return $e5be200c675c3b3a$var$useFormValidationStateImpl(props);
}
function $e5be200c675c3b3a$var$useFormValidationStateImpl(props) {
  let { isInvalid, validationState, name, value, builtinValidation, validate, validationBehavior = "aria" } = props;
  if (validationState) isInvalid || (isInvalid = validationState === "invalid");
  let controlledError = isInvalid !== void 0 ? {
    isInvalid,
    validationErrors: [],
    validationDetails: $e5be200c675c3b3a$var$CUSTOM_VALIDITY_STATE
  } : null;
  let clientError = reactExports.useMemo(() => $e5be200c675c3b3a$var$getValidationResult($e5be200c675c3b3a$var$runValidate(validate, value)), [
    validate,
    value
  ]);
  if (builtinValidation === null || builtinValidation === void 0 ? void 0 : builtinValidation.validationDetails.valid) builtinValidation = null;
  let serverErrors = reactExports.useContext($e5be200c675c3b3a$export$571b5131b7e65c11);
  let serverErrorMessages = reactExports.useMemo(() => {
    if (name) return Array.isArray(name) ? name.flatMap((name2) => $e5be200c675c3b3a$var$asArray(serverErrors[name2])) : $e5be200c675c3b3a$var$asArray(serverErrors[name]);
    return [];
  }, [
    serverErrors,
    name
  ]);
  let [lastServerErrors, setLastServerErrors] = reactExports.useState(serverErrors);
  let [isServerErrorCleared, setServerErrorCleared] = reactExports.useState(false);
  if (serverErrors !== lastServerErrors) {
    setLastServerErrors(serverErrors);
    setServerErrorCleared(false);
  }
  let serverError = reactExports.useMemo(() => $e5be200c675c3b3a$var$getValidationResult(isServerErrorCleared ? [] : serverErrorMessages), [
    isServerErrorCleared,
    serverErrorMessages
  ]);
  let nextValidation = reactExports.useRef($e5be200c675c3b3a$export$dad6ae84456c676a);
  let [currentValidity, setCurrentValidity] = reactExports.useState($e5be200c675c3b3a$export$dad6ae84456c676a);
  let lastError = reactExports.useRef($e5be200c675c3b3a$export$dad6ae84456c676a);
  let commitValidation = () => {
    if (!commitQueued) return;
    setCommitQueued(false);
    let error = clientError || builtinValidation || nextValidation.current;
    if (!$e5be200c675c3b3a$var$isEqualValidation(error, lastError.current)) {
      lastError.current = error;
      setCurrentValidity(error);
    }
  };
  let [commitQueued, setCommitQueued] = reactExports.useState(false);
  reactExports.useEffect(commitValidation);
  let realtimeValidation = controlledError || serverError || clientError || builtinValidation || $e5be200c675c3b3a$export$dad6ae84456c676a;
  let displayValidation = validationBehavior === "native" ? controlledError || serverError || currentValidity : controlledError || serverError || clientError || builtinValidation || currentValidity;
  return {
    realtimeValidation,
    displayValidation,
    updateValidation(value2) {
      if (validationBehavior === "aria" && !$e5be200c675c3b3a$var$isEqualValidation(currentValidity, value2)) setCurrentValidity(value2);
      else nextValidation.current = value2;
    },
    resetValidation() {
      let error = $e5be200c675c3b3a$export$dad6ae84456c676a;
      if (!$e5be200c675c3b3a$var$isEqualValidation(error, lastError.current)) {
        lastError.current = error;
        setCurrentValidity(error);
      }
      if (validationBehavior === "native") setCommitQueued(false);
      setServerErrorCleared(true);
    },
    commitValidation() {
      if (validationBehavior === "native") setCommitQueued(true);
      setServerErrorCleared(true);
    }
  };
}
function $e5be200c675c3b3a$var$asArray(v2) {
  if (!v2) return [];
  return Array.isArray(v2) ? v2 : [
    v2
  ];
}
function $e5be200c675c3b3a$var$runValidate(validate, value) {
  if (typeof validate === "function") {
    let e = validate(value);
    if (e && typeof e !== "boolean") return $e5be200c675c3b3a$var$asArray(e);
  }
  return [];
}
function $e5be200c675c3b3a$var$getValidationResult(errors) {
  return errors.length ? {
    isInvalid: true,
    validationErrors: errors,
    validationDetails: $e5be200c675c3b3a$var$CUSTOM_VALIDITY_STATE
  } : null;
}
function $e5be200c675c3b3a$var$isEqualValidation(a2, b) {
  if (a2 === b) return true;
  return a2 && b && a2.isInvalid === b.isInvalid && a2.validationErrors.length === b.validationErrors.length && a2.validationErrors.every((a3, i) => a3 === b.validationErrors[i]) && Object.entries(a2.validationDetails).every(([k2, v2]) => b.validationDetails[k2] === v2);
}
function $d191a55c9702f145$export$8467354a121f1b9f(props) {
  let { id: id2, label, "aria-labelledby": ariaLabelledby, "aria-label": ariaLabel, labelElementType = "label" } = props;
  id2 = $bdb11010cef70236$export$f680877a34711e37(id2);
  let labelId = $bdb11010cef70236$export$f680877a34711e37();
  let labelProps = {};
  if (label) {
    ariaLabelledby = ariaLabelledby ? `${labelId} ${ariaLabelledby}` : labelId;
    labelProps = {
      id: labelId,
      htmlFor: labelElementType === "label" ? id2 : void 0
    };
  } else if (!ariaLabelledby && !ariaLabel) console.warn("If you do not provide a visible label, you must specify an aria-label or aria-labelledby attribute for accessibility");
  let fieldProps = $313b98861ee5dd6c$export$d6875122194c7b44({
    id: id2,
    "aria-label": ariaLabel,
    "aria-labelledby": ariaLabelledby
  });
  return {
    labelProps,
    fieldProps
  };
}
function $2baaea4c71418dea$export$294aa081a6c6f55d(props) {
  let { description, errorMessage, isInvalid, validationState } = props;
  let { labelProps, fieldProps } = $d191a55c9702f145$export$8467354a121f1b9f(props);
  let descriptionId = $bdb11010cef70236$export$b4cc09c592e8fdb8([
    Boolean(description),
    Boolean(errorMessage),
    isInvalid,
    validationState
  ]);
  let errorMessageId = $bdb11010cef70236$export$b4cc09c592e8fdb8([
    Boolean(description),
    Boolean(errorMessage),
    isInvalid,
    validationState
  ]);
  fieldProps = $3ef42575df84b30b$export$9d1611c77c2fe928(fieldProps, {
    "aria-describedby": [
      descriptionId,
      // Use aria-describedby for error message because aria-errormessage is unsupported using VoiceOver or NVDA. See https://github.com/adobe/react-spectrum/issues/1346#issuecomment-740136268
      errorMessageId,
      props["aria-describedby"]
    ].filter(Boolean).join(" ") || void 0
  });
  return {
    labelProps,
    fieldProps,
    descriptionProps: {
      id: descriptionId
    },
    errorMessageProps: {
      id: errorMessageId
    }
  };
}
function useAriaLink(props, ref) {
  let {
    elementType = "a",
    onPress,
    onPressStart,
    onPressEnd,
    onClick: deprecatedOnClick,
    isDisabled,
    ...otherProps
  } = props;
  let linkProps = {};
  if (elementType !== "a") {
    linkProps = {
      role: "link",
      tabIndex: !isDisabled ? 0 : void 0
    };
  }
  let { focusableProps } = $e6afbd83fe6ebbd2$export$4c014de7c8940b4c(props, ref);
  let { pressProps, isPressed } = $f6c31cce2adf654f$export$45712eceda6fad21({ onPress, onPressStart, onPressEnd, isDisabled, ref });
  let domProps = $65484d02dcb7eb3e$export$457c3d6518dd4c6f(otherProps, { labelable: true, isLink: elementType === "a" });
  let interactionHandlers = $3ef42575df84b30b$export$9d1611c77c2fe928(focusableProps, pressProps);
  let router2 = $ea8dcbcb9ea1b556$export$9a302a45f65d0572();
  let routerLinkProps = $ea8dcbcb9ea1b556$export$7e924b3091a3bd18(props);
  return {
    isPressed,
    linkProps: $3ef42575df84b30b$export$9d1611c77c2fe928(domProps, routerLinkProps, {
      ...interactionHandlers,
      ...linkProps,
      "aria-disabled": isDisabled || void 0,
      "aria-current": props["aria-current"],
      onClick: (e) => {
        var _a;
        (_a = pressProps.onClick) == null ? void 0 : _a.call(pressProps, e);
        if (deprecatedOnClick) {
          deprecatedOnClick(e);
        }
        if (!router2.isNative && e.currentTarget instanceof HTMLAnchorElement && e.currentTarget.href && !e.isDefaultPrevented() && $ea8dcbcb9ea1b556$export$efa8c9099e530235(e.currentTarget, e) && props.href) {
          e.preventDefault();
          router2.open(e.currentTarget, e, props.href, props.routerOptions);
        }
      }
    })
  };
}
function useLink(originalProps) {
  var _a, _b, _c, _d;
  const globalContext = useProviderContext();
  const [props, variantProps2] = mapPropsVariants(originalProps, link.variantKeys);
  const {
    ref,
    as,
    children,
    anchorIcon,
    isExternal = false,
    showAnchorIcon = false,
    autoFocus = false,
    className,
    onPress,
    onPressStart,
    onPressEnd,
    onClick,
    ...otherProps
  } = props;
  const Component = as || "a";
  const domRef = useDOMRef(ref);
  const disableAnimation = (_b = (_a = originalProps == null ? void 0 : originalProps.disableAnimation) != null ? _a : globalContext == null ? void 0 : globalContext.disableAnimation) != null ? _b : false;
  const { linkProps } = useAriaLink(
    {
      ...otherProps,
      onPress,
      onPressStart,
      onPressEnd,
      onClick,
      isDisabled: originalProps.isDisabled,
      elementType: `${as}`
    },
    domRef
  );
  const { isFocused, isFocusVisible, focusProps } = $f7dceffc5ad7768b$export$4e328f61c538687f({
    autoFocus
  });
  if (isExternal) {
    otherProps.rel = (_c = otherProps.rel) != null ? _c : "noopener noreferrer";
    otherProps.target = (_d = otherProps.target) != null ? _d : "_blank";
  }
  const classNames = reactExports.useMemo(
    () => link({
      ...variantProps2,
      disableAnimation,
      className
    }),
    [objectToDeps(variantProps2), disableAnimation, className]
  );
  const getLinkProps = reactExports.useCallback(() => {
    return {
      ref: domRef,
      className: classNames,
      "data-focus": dataAttr(isFocused),
      "data-disabled": dataAttr(originalProps.isDisabled),
      "data-focus-visible": dataAttr(isFocusVisible),
      ...$3ef42575df84b30b$export$9d1611c77c2fe928(focusProps, linkProps, otherProps)
    };
  }, [classNames, isFocused, isFocusVisible, focusProps, linkProps, otherProps]);
  return { Component, children, anchorIcon, showAnchorIcon, getLinkProps };
}
var Link$1 = forwardRef((props, ref) => {
  const {
    Component,
    children,
    showAnchorIcon,
    anchorIcon = /* @__PURE__ */ jsxRuntimeExports.jsx(LinkIcon, { className: linkAnchorClasses }),
    getLinkProps
  } = useLink({
    ref,
    ...props
  });
  return /* @__PURE__ */ jsxRuntimeExports.jsx(Component, { ...getLinkProps(), children: /* @__PURE__ */ jsxRuntimeExports.jsxs(jsxRuntimeExports.Fragment, { children: [
    children,
    showAnchorIcon && anchorIcon
  ] }) });
});
Link$1.displayName = "NextUI.Link";
var link_default = Link$1;
function $fc909762b330b746$export$61c6a8c84e605fb6(props) {
  let [isOpen, setOpen] = $458b0a5536c1a7cf$export$40bfa8c7b0832715$1(props.isOpen, props.defaultOpen || false, props.onOpenChange);
  const open = reactExports.useCallback(() => {
    setOpen(true);
  }, [
    setOpen
  ]);
  const close = reactExports.useCallback(() => {
    setOpen(false);
  }, [
    setOpen
  ]);
  const toggle = reactExports.useCallback(() => {
    setOpen(!isOpen);
  }, [
    setOpen,
    isOpen
  ]);
  return {
    isOpen,
    setOpen,
    open,
    close,
    toggle
  };
}
const $8796f90736e175cb$var$TOOLTIP_DELAY = 1500;
const $8796f90736e175cb$var$TOOLTIP_COOLDOWN = 500;
let $8796f90736e175cb$var$tooltips = {};
let $8796f90736e175cb$var$tooltipId = 0;
let $8796f90736e175cb$var$globalWarmedUp = false;
let $8796f90736e175cb$var$globalWarmUpTimeout = null;
let $8796f90736e175cb$var$globalCooldownTimeout = null;
function $8796f90736e175cb$export$4d40659c25ecb50b(props = {}) {
  let { delay = $8796f90736e175cb$var$TOOLTIP_DELAY, closeDelay = $8796f90736e175cb$var$TOOLTIP_COOLDOWN } = props;
  let { isOpen, open, close } = $fc909762b330b746$export$61c6a8c84e605fb6(props);
  let id2 = reactExports.useMemo(() => `${++$8796f90736e175cb$var$tooltipId}`, []);
  let closeTimeout = reactExports.useRef();
  let ensureTooltipEntry = () => {
    $8796f90736e175cb$var$tooltips[id2] = hideTooltip;
  };
  let closeOpenTooltips = () => {
    for (let hideTooltipId in $8796f90736e175cb$var$tooltips) if (hideTooltipId !== id2) {
      $8796f90736e175cb$var$tooltips[hideTooltipId](true);
      delete $8796f90736e175cb$var$tooltips[hideTooltipId];
    }
  };
  let showTooltip = () => {
    clearTimeout(closeTimeout.current);
    closeTimeout.current = null;
    closeOpenTooltips();
    ensureTooltipEntry();
    $8796f90736e175cb$var$globalWarmedUp = true;
    open();
    if ($8796f90736e175cb$var$globalWarmUpTimeout) {
      clearTimeout($8796f90736e175cb$var$globalWarmUpTimeout);
      $8796f90736e175cb$var$globalWarmUpTimeout = null;
    }
    if ($8796f90736e175cb$var$globalCooldownTimeout) {
      clearTimeout($8796f90736e175cb$var$globalCooldownTimeout);
      $8796f90736e175cb$var$globalCooldownTimeout = null;
    }
  };
  let hideTooltip = (immediate) => {
    if (immediate || closeDelay <= 0) {
      clearTimeout(closeTimeout.current);
      closeTimeout.current = null;
      close();
    } else if (!closeTimeout.current) closeTimeout.current = setTimeout(() => {
      closeTimeout.current = null;
      close();
    }, closeDelay);
    if ($8796f90736e175cb$var$globalWarmUpTimeout) {
      clearTimeout($8796f90736e175cb$var$globalWarmUpTimeout);
      $8796f90736e175cb$var$globalWarmUpTimeout = null;
    }
    if ($8796f90736e175cb$var$globalWarmedUp) {
      if ($8796f90736e175cb$var$globalCooldownTimeout) clearTimeout($8796f90736e175cb$var$globalCooldownTimeout);
      $8796f90736e175cb$var$globalCooldownTimeout = setTimeout(() => {
        delete $8796f90736e175cb$var$tooltips[id2];
        $8796f90736e175cb$var$globalCooldownTimeout = null;
        $8796f90736e175cb$var$globalWarmedUp = false;
      }, Math.max($8796f90736e175cb$var$TOOLTIP_COOLDOWN, closeDelay));
    }
  };
  let warmupTooltip = () => {
    closeOpenTooltips();
    ensureTooltipEntry();
    if (!isOpen && !$8796f90736e175cb$var$globalWarmUpTimeout && !$8796f90736e175cb$var$globalWarmedUp) $8796f90736e175cb$var$globalWarmUpTimeout = setTimeout(() => {
      $8796f90736e175cb$var$globalWarmUpTimeout = null;
      $8796f90736e175cb$var$globalWarmedUp = true;
      showTooltip();
    }, delay);
    else if (!isOpen) showTooltip();
  };
  reactExports.useEffect(() => {
    return () => {
      clearTimeout(closeTimeout.current);
      let tooltip = $8796f90736e175cb$var$tooltips[id2];
      if (tooltip) delete $8796f90736e175cb$var$tooltips[id2];
    };
  }, [
    id2
  ]);
  return {
    isOpen,
    open: (immediate) => {
      if (!immediate && delay > 0 && !closeTimeout.current) warmupTooltip();
      else showTooltip();
    },
    close: hideTooltip
  };
}
function $326e436e94273fe1$export$1c4b08e0eca38426(props, state) {
  let domProps = $65484d02dcb7eb3e$export$457c3d6518dd4c6f(props, {
    labelable: true
  });
  let { hoverProps } = $6179b936705e76d3$export$ae780daf29e6d456({
    onHoverStart: () => state === null || state === void 0 ? void 0 : state.open(true),
    onHoverEnd: () => state === null || state === void 0 ? void 0 : state.close()
  });
  return {
    tooltipProps: $3ef42575df84b30b$export$9d1611c77c2fe928(domProps, hoverProps, {
      role: "tooltip"
    })
  };
}
function $4e1b34546679e357$export$a6da6c504e4bba8b(props, state, ref) {
  let { isDisabled, trigger } = props;
  let tooltipId = $bdb11010cef70236$export$f680877a34711e37();
  let isHovered = reactExports.useRef(false);
  let isFocused = reactExports.useRef(false);
  let handleShow = () => {
    if (isHovered.current || isFocused.current) state.open(isFocused.current);
  };
  let handleHide = (immediate) => {
    if (!isHovered.current && !isFocused.current) state.close(immediate);
  };
  reactExports.useEffect(() => {
    let onKeyDown = (e) => {
      if (ref && ref.current) {
        if (e.key === "Escape") {
          e.stopPropagation();
          state.close(true);
        }
      }
    };
    if (state.isOpen) {
      document.addEventListener("keydown", onKeyDown, true);
      return () => {
        document.removeEventListener("keydown", onKeyDown, true);
      };
    }
  }, [
    ref,
    state
  ]);
  let onHoverStart = () => {
    if (trigger === "focus") return;
    if ($507fabe10e71c6fb$export$630ff653c5ada6a9() === "pointer") isHovered.current = true;
    else isHovered.current = false;
    handleShow();
  };
  let onHoverEnd = () => {
    if (trigger === "focus") return;
    isFocused.current = false;
    isHovered.current = false;
    handleHide();
  };
  let onPressStart = () => {
    isFocused.current = false;
    isHovered.current = false;
    handleHide(true);
  };
  let onFocus = () => {
    let isVisible = $507fabe10e71c6fb$export$b9b3dfddab17db27();
    if (isVisible) {
      isFocused.current = true;
      handleShow();
    }
  };
  let onBlur = () => {
    isFocused.current = false;
    isHovered.current = false;
    handleHide(true);
  };
  let { hoverProps } = $6179b936705e76d3$export$ae780daf29e6d456({
    isDisabled,
    onHoverStart,
    onHoverEnd
  });
  let { focusableProps } = $e6afbd83fe6ebbd2$export$4c014de7c8940b4c({
    isDisabled,
    onFocus,
    onBlur
  }, ref);
  return {
    triggerProps: {
      "aria-describedby": state.isOpen ? tooltipId : void 0,
      ...$3ef42575df84b30b$export$9d1611c77c2fe928(focusableProps, hoverProps, {
        onPointerDown: onPressStart,
        onKeyDown: onPressStart
      })
    },
    tooltipProps: {
      id: tooltipId
    }
  };
}
function useTooltip(originalProps) {
  var _a, _b;
  const globalContext = useProviderContext();
  const [props, variantProps2] = mapPropsVariants(originalProps, popover.variantKeys);
  const {
    ref,
    as,
    isOpen: isOpenProp,
    content,
    children,
    defaultOpen,
    onOpenChange,
    isDisabled,
    trigger: triggerAction,
    shouldFlip = true,
    containerPadding = 12,
    placement: placementProp = "top",
    delay = 0,
    closeDelay = 500,
    showArrow = false,
    offset = 7,
    crossOffset = 0,
    isDismissable,
    shouldCloseOnBlur = true,
    portalContainer,
    isKeyboardDismissDisabled = false,
    updatePositionDeps = [],
    shouldCloseOnInteractOutside,
    className,
    onClose,
    motionProps,
    classNames,
    ...otherProps
  } = props;
  const Component = as || "div";
  const disableAnimation = (_b = (_a = originalProps == null ? void 0 : originalProps.disableAnimation) != null ? _a : globalContext == null ? void 0 : globalContext.disableAnimation) != null ? _b : false;
  const state = $8796f90736e175cb$export$4d40659c25ecb50b({
    delay,
    closeDelay,
    isDisabled,
    defaultOpen,
    isOpen: isOpenProp,
    onOpenChange: (isOpen2) => {
      onOpenChange == null ? void 0 : onOpenChange(isOpen2);
      if (!isOpen2) {
        onClose == null ? void 0 : onClose();
      }
    }
  });
  const triggerRef = reactExports.useRef(null);
  const overlayRef = reactExports.useRef(null);
  const tooltipId = reactExports.useId();
  const isOpen = state.isOpen && !isDisabled;
  reactExports.useImperativeHandle(
    ref,
    () => createDOMRef(overlayRef)
  );
  const { triggerProps, tooltipProps: triggerTooltipProps } = $4e1b34546679e357$export$a6da6c504e4bba8b(
    {
      isDisabled,
      trigger: triggerAction
    },
    state,
    triggerRef
  );
  const { tooltipProps } = $326e436e94273fe1$export$1c4b08e0eca38426(
    {
      isOpen,
      ...$3ef42575df84b30b$export$9d1611c77c2fe928(props, triggerTooltipProps)
    },
    state
  );
  const {
    overlayProps: positionProps,
    placement,
    updatePosition
  } = $2a41e45df1593e64$export$d39e1813b3bdd0e1({
    isOpen,
    targetRef: triggerRef,
    placement: toReactAriaPlacement(placementProp),
    overlayRef,
    offset: showArrow ? offset + 3 : offset,
    crossOffset,
    shouldFlip,
    containerPadding
  });
  useSafeLayoutEffect(() => {
    if (!updatePositionDeps.length)
      return;
    updatePosition();
  }, updatePositionDeps);
  const { overlayProps } = $a11501f3d1d39e6c$export$ea8f71083e90600f(
    {
      isOpen,
      onClose: state.close,
      isDismissable,
      shouldCloseOnBlur,
      isKeyboardDismissDisabled,
      shouldCloseOnInteractOutside
    },
    overlayRef
  );
  const slots = reactExports.useMemo(
    () => {
      var _a2, _b2, _c;
      return popover({
        ...variantProps2,
        disableAnimation,
        radius: (_a2 = originalProps == null ? void 0 : originalProps.radius) != null ? _a2 : "md",
        size: (_b2 = originalProps == null ? void 0 : originalProps.size) != null ? _b2 : "md",
        shadow: (_c = originalProps == null ? void 0 : originalProps.shadow) != null ? _c : "sm"
      });
    },
    [
      objectToDeps(variantProps2),
      disableAnimation,
      originalProps == null ? void 0 : originalProps.radius,
      originalProps == null ? void 0 : originalProps.size,
      originalProps == null ? void 0 : originalProps.shadow
    ]
  );
  const getTriggerProps = reactExports.useCallback(
    (props2 = {}, _ref = null) => ({
      ...$3ef42575df84b30b$export$9d1611c77c2fe928(triggerProps, props2),
      ref: mergeRefs(_ref, triggerRef),
      "aria-describedby": isOpen ? tooltipId : void 0
    }),
    [triggerProps, isOpen, tooltipId, state]
  );
  const getTooltipProps = reactExports.useCallback(
    () => ({
      ref: overlayRef,
      "data-slot": "base",
      "data-open": dataAttr(isOpen),
      "data-arrow": dataAttr(showArrow),
      "data-disabled": dataAttr(isDisabled),
      "data-placement": getArrowPlacement(placement, placementProp),
      ...$3ef42575df84b30b$export$9d1611c77c2fe928(tooltipProps, overlayProps, otherProps),
      style: $3ef42575df84b30b$export$9d1611c77c2fe928(positionProps.style, otherProps.style, props.style),
      className: slots.base({ class: classNames == null ? void 0 : classNames.base }),
      id: tooltipId
    }),
    [
      slots,
      isOpen,
      showArrow,
      isDisabled,
      placement,
      placementProp,
      tooltipProps,
      overlayProps,
      otherProps,
      positionProps,
      props,
      tooltipId
    ]
  );
  const getTooltipContentProps = reactExports.useCallback(
    () => ({
      "data-slot": "content",
      "data-open": dataAttr(isOpen),
      "data-arrow": dataAttr(showArrow),
      "data-disabled": dataAttr(isDisabled),
      "data-placement": getArrowPlacement(placement, placementProp),
      className: slots.content({ class: clsx$1(classNames == null ? void 0 : classNames.content, className) })
    }),
    [slots, isOpen, showArrow, isDisabled, placement, placementProp, classNames]
  );
  return {
    Component,
    content,
    children,
    isOpen,
    triggerRef,
    showArrow,
    portalContainer,
    placement: placementProp,
    disableAnimation,
    isDisabled,
    motionProps,
    getTooltipContentProps,
    getTriggerProps,
    getTooltipProps
  };
}
var Tooltip = forwardRef((props, ref) => {
  const {
    Component,
    children,
    content,
    isOpen,
    portalContainer,
    placement,
    disableAnimation,
    motionProps,
    getTriggerProps,
    getTooltipProps,
    getTooltipContentProps
  } = useTooltip({
    ...props,
    ref
  });
  let trigger;
  try {
    const childrenNum = reactExports.Children.count(children);
    if (childrenNum !== 1)
      throw new Error();
    if (!reactExports.isValidElement(children)) {
      trigger = /* @__PURE__ */ jsxRuntimeExports.jsx("p", { ...getTriggerProps(), children });
    } else {
      const child = children;
      trigger = reactExports.cloneElement(child, getTriggerProps(child.props, child.ref));
    }
  } catch (error) {
    trigger = /* @__PURE__ */ jsxRuntimeExports.jsx("span", {});
    warn("Tooltip must have only one child node. Please, check your code.");
  }
  const { ref: tooltipRef, id: id2, style, ...otherTooltipProps } = getTooltipProps();
  const animatedContent = /* @__PURE__ */ jsxRuntimeExports.jsx("div", { ref: tooltipRef, id: id2, style, children: /* @__PURE__ */ jsxRuntimeExports.jsx(LazyMotion, { features: domAnimation, children: /* @__PURE__ */ jsxRuntimeExports.jsx(
    m.div,
    {
      animate: "enter",
      exit: "exit",
      initial: "exit",
      variants: TRANSITION_VARIANTS.scaleSpring,
      ...$3ef42575df84b30b$export$9d1611c77c2fe928(motionProps, otherTooltipProps),
      style: {
        ...getTransformOrigins(placement)
      },
      children: /* @__PURE__ */ jsxRuntimeExports.jsx(Component, { ...getTooltipContentProps(), children: content })
    }
  ) }) });
  return /* @__PURE__ */ jsxRuntimeExports.jsxs(jsxRuntimeExports.Fragment, { children: [
    trigger,
    disableAnimation && isOpen ? /* @__PURE__ */ jsxRuntimeExports.jsx($f57aed4a881a3485$export$b47c3594eab58386, { portalContainer, children: /* @__PURE__ */ jsxRuntimeExports.jsx("div", { ref: tooltipRef, id: id2, style, ...otherTooltipProps, children: /* @__PURE__ */ jsxRuntimeExports.jsx(Component, { ...getTooltipContentProps(), children: content }) }) }) : /* @__PURE__ */ jsxRuntimeExports.jsx(AnimatePresence, { children: isOpen ? /* @__PURE__ */ jsxRuntimeExports.jsx($f57aed4a881a3485$export$b47c3594eab58386, { portalContainer, children: animatedContent }) : null })
  ] });
});
Tooltip.displayName = "NextUI.Tooltip";
var tooltip_default = Tooltip;
function useIsMounted(props = {}) {
  const { rerender = false, delay = 0 } = props;
  const isMountedRef = reactExports.useRef(false);
  const [isMounted3, setIsMounted] = reactExports.useState(false);
  reactExports.useEffect(() => {
    isMountedRef.current = true;
    let timer = null;
    if (rerender) {
      if (delay > 0) {
        timer = setTimeout(() => {
          setIsMounted(true);
        }, delay);
      } else {
        setIsMounted(true);
      }
    }
    return () => {
      isMountedRef.current = false;
      if (rerender) {
        setIsMounted(false);
      }
      if (timer) {
        clearTimeout(timer);
      }
    };
  }, [rerender]);
  return [reactExports.useCallback(() => isMountedRef.current, []), isMounted3];
}
function $204d9ebcedfb8806$export$ed5abd763a836edc(props) {
  let { value = 0, minValue = 0, maxValue = 100, valueLabel, isIndeterminate, formatOptions = {
    style: "percent"
  } } = props;
  let domProps = $65484d02dcb7eb3e$export$457c3d6518dd4c6f(props, {
    labelable: true
  });
  let { labelProps, fieldProps } = $d191a55c9702f145$export$8467354a121f1b9f({
    ...props,
    // Progress bar is not an HTML input element so it
    // shouldn't be labeled by a <label> element.
    labelElementType: "span"
  });
  value = $9446cca9a3875146$export$7d15b64cf5a3a4c4(value, minValue, maxValue);
  let percentage = (value - minValue) / (maxValue - minValue);
  let formatter = $a916eb452884faea$export$b7a616150fdb9f44(formatOptions);
  if (!isIndeterminate && !valueLabel) {
    let valueToFormat = formatOptions.style === "percent" ? percentage : value;
    valueLabel = formatter.format(valueToFormat);
  }
  return {
    progressBarProps: $3ef42575df84b30b$export$9d1611c77c2fe928(domProps, {
      ...fieldProps,
      "aria-valuenow": isIndeterminate ? void 0 : value,
      "aria-valuemin": minValue,
      "aria-valuemax": maxValue,
      "aria-valuetext": isIndeterminate ? void 0 : valueLabel,
      role: "progressbar"
    }),
    labelProps
  };
}
function useCircularProgress(originalProps) {
  var _a, _b, _c;
  const globalContext = useProviderContext();
  const [props, variantProps2] = mapPropsVariants(originalProps, circularProgress.variantKeys);
  const {
    ref,
    as,
    id: id2,
    className,
    classNames,
    label,
    valueLabel,
    value = void 0,
    minValue = 0,
    maxValue = 100,
    strokeWidth: strokeWidthProp,
    showValueLabel = false,
    formatOptions = {
      style: "percent"
    },
    ...otherProps
  } = props;
  const Component = as || "div";
  const domRef = useDOMRef(ref);
  const baseStyles = clsx$1(classNames == null ? void 0 : classNames.base, className);
  const [, isMounted3] = useIsMounted({
    rerender: true,
    delay: 100
  });
  const isIndeterminate = ((_a = originalProps.isIndeterminate) != null ? _a : true) && value === void 0;
  const disableAnimation = (_c = (_b = originalProps.disableAnimation) != null ? _b : globalContext == null ? void 0 : globalContext.disableAnimation) != null ? _c : false;
  const { progressBarProps, labelProps } = $204d9ebcedfb8806$export$ed5abd763a836edc({
    id: id2,
    label,
    value,
    minValue,
    maxValue,
    valueLabel,
    formatOptions,
    isIndeterminate,
    "aria-labelledby": originalProps["aria-labelledby"],
    "aria-label": originalProps["aria-label"]
  });
  const slots = reactExports.useMemo(
    () => circularProgress({
      ...variantProps2,
      disableAnimation,
      isIndeterminate
    }),
    [objectToDeps(variantProps2), disableAnimation, isIndeterminate]
  );
  const selfMounted = disableAnimation ? true : isMounted3;
  const center = 16;
  const strokeWidth = strokeWidthProp || (originalProps.size === "sm" ? 2 : 3);
  const radius = 16 - strokeWidth;
  const circumference = 2 * radius * Math.PI;
  const percentage = reactExports.useMemo(() => {
    if (!selfMounted) {
      return 0;
    }
    if (isIndeterminate) {
      return 0.25;
    }
    return value ? clampPercentage((value - minValue) / (maxValue - minValue), 1) : 0;
  }, [selfMounted, value, minValue, maxValue, isIndeterminate]);
  const offset = circumference - percentage * circumference;
  const getProgressBarProps = reactExports.useCallback(
    (props2 = {}) => ({
      ref: domRef,
      "data-indeterminate": dataAttr(isIndeterminate),
      "data-disabled": dataAttr(originalProps.isDisabled),
      className: slots.base({ class: baseStyles }),
      ...$3ef42575df84b30b$export$9d1611c77c2fe928(progressBarProps, otherProps, props2)
    }),
    [
      domRef,
      slots,
      isIndeterminate,
      originalProps.isDisabled,
      baseStyles,
      progressBarProps,
      otherProps
    ]
  );
  const getLabelProps = reactExports.useCallback(
    (props2 = {}) => ({
      className: slots.label({ class: classNames == null ? void 0 : classNames.label }),
      ...$3ef42575df84b30b$export$9d1611c77c2fe928(labelProps, props2)
    }),
    [slots, classNames, labelProps]
  );
  const getSvgProps = reactExports.useCallback(
    (props2 = {}) => ({
      viewBox: "0 0 32 32",
      fill: "none",
      strokeWidth,
      className: slots.svg({ class: classNames == null ? void 0 : classNames.svg }),
      ...props2
    }),
    [strokeWidth, slots, classNames]
  );
  const getIndicatorProps = reactExports.useCallback(
    (props2 = {}) => ({
      cx: center,
      cy: center,
      r: radius,
      role: "presentation",
      strokeDasharray: `${circumference} ${circumference}`,
      strokeDashoffset: offset,
      transform: "rotate(-90 16 16)",
      strokeLinecap: "round",
      className: slots.indicator({ class: classNames == null ? void 0 : classNames.indicator }),
      ...props2
    }),
    [slots, classNames, offset, circumference, radius]
  );
  const getTrackProps = reactExports.useCallback(
    (props2 = {}) => ({
      cx: center,
      cy: center,
      r: radius,
      role: "presentation",
      strokeDasharray: `${circumference} ${circumference}`,
      strokeDashoffset: 0,
      transform: "rotate(-90 16 16)",
      strokeLinecap: "round",
      className: slots.track({ class: classNames == null ? void 0 : classNames.track }),
      ...props2
    }),
    [slots, classNames, circumference, radius]
  );
  return {
    Component,
    domRef,
    slots,
    classNames,
    label,
    showValueLabel,
    getProgressBarProps,
    getLabelProps,
    getSvgProps,
    getIndicatorProps,
    getTrackProps
  };
}
var CircularProgress = forwardRef((props, ref) => {
  const {
    Component,
    slots,
    classNames,
    label,
    showValueLabel,
    getProgressBarProps,
    getLabelProps,
    getSvgProps,
    getIndicatorProps,
    getTrackProps
  } = useCircularProgress({ ref, ...props });
  const progressBarProps = getProgressBarProps();
  return /* @__PURE__ */ jsxRuntimeExports.jsxs(Component, { ...progressBarProps, children: [
    /* @__PURE__ */ jsxRuntimeExports.jsxs("div", { className: slots.svgWrapper({ class: classNames == null ? void 0 : classNames.svgWrapper }), children: [
      /* @__PURE__ */ jsxRuntimeExports.jsxs("svg", { ...getSvgProps(), children: [
        /* @__PURE__ */ jsxRuntimeExports.jsx("circle", { ...getTrackProps() }),
        /* @__PURE__ */ jsxRuntimeExports.jsx("circle", { ...getIndicatorProps() })
      ] }),
      showValueLabel && /* @__PURE__ */ jsxRuntimeExports.jsx("span", { className: slots.value({ class: classNames == null ? void 0 : classNames.value }), children: progressBarProps["aria-valuetext"] })
    ] }),
    label && /* @__PURE__ */ jsxRuntimeExports.jsx("span", { ...getLabelProps(), children: label })
  ] });
});
CircularProgress.displayName = "NextUI.CircularProgress";
var circular_progress_default = CircularProgress;
function $2d73ec29415bd339$export$712718f7aec83d5(props, ref) {
  let { inputElementType = "input", isDisabled = false, isRequired = false, isReadOnly = false, type: type2 = "text", validationBehavior = "aria" } = props;
  let [value, setValue] = $458b0a5536c1a7cf$export$40bfa8c7b0832715$1(props.value, props.defaultValue || "", props.onChange);
  let { focusableProps } = $e6afbd83fe6ebbd2$export$4c014de7c8940b4c(props, ref);
  let validationState = $e5be200c675c3b3a$export$fc1a364ae1f3ff10({
    ...props,
    value
  });
  let { isInvalid, validationErrors, validationDetails } = validationState.displayValidation;
  let { labelProps, fieldProps, descriptionProps, errorMessageProps } = $2baaea4c71418dea$export$294aa081a6c6f55d({
    ...props,
    isInvalid,
    errorMessage: props.errorMessage || validationErrors
  });
  let domProps = $65484d02dcb7eb3e$export$457c3d6518dd4c6f(props, {
    labelable: true
  });
  const inputOnlyProps = {
    type: type2,
    pattern: props.pattern
  };
  $99facab73266f662$export$5add1d006293d136(ref, value, setValue);
  $e93e671b31057976$export$b8473d3665f3a75a(props, validationState, ref);
  reactExports.useEffect(() => {
    if (ref.current instanceof $431fbd86ca7dc216$export$f21a1ffae260145a(ref.current).HTMLTextAreaElement) {
      let input2 = ref.current;
      Object.defineProperty(input2, "defaultValue", {
        get: () => input2.value,
        set: () => {
        },
        configurable: true
      });
    }
  }, [
    ref
  ]);
  return {
    labelProps,
    inputProps: $3ef42575df84b30b$export$9d1611c77c2fe928(domProps, inputElementType === "input" && inputOnlyProps, {
      disabled: isDisabled,
      readOnly: isReadOnly,
      required: isRequired && validationBehavior === "native",
      "aria-required": isRequired && validationBehavior === "aria" || void 0,
      "aria-invalid": isInvalid || void 0,
      "aria-errormessage": props["aria-errormessage"],
      "aria-activedescendant": props["aria-activedescendant"],
      "aria-autocomplete": props["aria-autocomplete"],
      "aria-haspopup": props["aria-haspopup"],
      value,
      onChange: (e) => setValue(e.target.value),
      autoComplete: props.autoComplete,
      autoCapitalize: props.autoCapitalize,
      maxLength: props.maxLength,
      minLength: props.minLength,
      name: props.name,
      placeholder: props.placeholder,
      inputMode: props.inputMode,
      // Clipboard events
      onCopy: props.onCopy,
      onCut: props.onCut,
      onPaste: props.onPaste,
      // Composition events
      onCompositionEnd: props.onCompositionEnd,
      onCompositionStart: props.onCompositionStart,
      onCompositionUpdate: props.onCompositionUpdate,
      // Selection events
      onSelect: props.onSelect,
      // Input events
      onBeforeInput: props.onBeforeInput,
      onInput: props.onInput,
      ...focusableProps,
      ...fieldProps
    }),
    descriptionProps,
    errorMessageProps,
    isInvalid,
    validationErrors,
    validationDetails
  };
}
function useInput(originalProps) {
  var _a, _b, _c, _d;
  const globalContext = useProviderContext();
  const [props, variantProps2] = mapPropsVariants(originalProps, input.variantKeys);
  const {
    ref,
    as,
    type: type2,
    label,
    baseRef,
    wrapperRef,
    description,
    className,
    classNames,
    autoFocus,
    startContent,
    endContent,
    onClear,
    onChange,
    validationState,
    validationBehavior = (_a = globalContext == null ? void 0 : globalContext.validationBehavior) != null ? _a : "aria",
    innerWrapperRef: innerWrapperRefProp,
    onValueChange = () => {
    },
    ...otherProps
  } = props;
  const handleValueChange = reactExports.useCallback(
    (value) => {
      onValueChange(value != null ? value : "");
    },
    [onValueChange]
  );
  const [isFocusWithin, setFocusWithin] = reactExports.useState(false);
  const Component = as || "div";
  const disableAnimation = (_c = (_b = originalProps.disableAnimation) != null ? _b : globalContext == null ? void 0 : globalContext.disableAnimation) != null ? _c : false;
  const domRef = useDOMRef(ref);
  const baseDomRef = useDOMRef(baseRef);
  const inputWrapperRef = useDOMRef(wrapperRef);
  const innerWrapperRef = useDOMRef(innerWrapperRefProp);
  const [inputValue, setInputValue] = $458b0a5536c1a7cf$export$40bfa8c7b0832715$1(
    props.value,
    (_d = props.defaultValue) != null ? _d : "",
    handleValueChange
  );
  const isFilledByDefault = ["date", "time", "month", "week", "range"].includes(type2);
  const isFilled = !isEmpty(inputValue) || isFilledByDefault;
  const isFilledWithin = isFilled || isFocusWithin;
  const isHiddenType = type2 === "hidden";
  const isMultiline = originalProps.isMultiline;
  const isFileTypeInput = type2 === "file";
  const baseStyles = clsx$1(classNames == null ? void 0 : classNames.base, className, isFilled ? "is-filled" : "");
  const handleClear = reactExports.useCallback(() => {
    var _a2;
    setInputValue("");
    onClear == null ? void 0 : onClear();
    (_a2 = domRef.current) == null ? void 0 : _a2.focus();
  }, [setInputValue, onClear]);
  useSafeLayoutEffect(() => {
    if (!domRef.current)
      return;
    setInputValue(domRef.current.value);
  }, [domRef.current]);
  const {
    labelProps,
    inputProps,
    isInvalid: isAriaInvalid,
    validationErrors,
    validationDetails,
    descriptionProps,
    errorMessageProps
  } = $2d73ec29415bd339$export$712718f7aec83d5(
    {
      ...originalProps,
      validationBehavior,
      autoCapitalize: originalProps.autoCapitalize,
      value: inputValue,
      "aria-label": safeAriaLabel(
        originalProps["aria-label"],
        originalProps.label,
        originalProps.placeholder
      ),
      inputElementType: isMultiline ? "textarea" : "input",
      onChange: setInputValue
    },
    domRef
  );
  if (isFileTypeInput) {
    delete inputProps.value;
    delete inputProps.onChange;
  }
  const { isFocusVisible, isFocused, focusProps } = $f7dceffc5ad7768b$export$4e328f61c538687f({
    autoFocus,
    isTextInput: true
  });
  const { isHovered, hoverProps } = $6179b936705e76d3$export$ae780daf29e6d456({ isDisabled: !!(originalProps == null ? void 0 : originalProps.isDisabled) });
  const { isHovered: isLabelHovered, hoverProps: labelHoverProps } = $6179b936705e76d3$export$ae780daf29e6d456({
    isDisabled: !!(originalProps == null ? void 0 : originalProps.isDisabled)
  });
  const { focusProps: clearFocusProps, isFocusVisible: isClearButtonFocusVisible } = $f7dceffc5ad7768b$export$4e328f61c538687f();
  const { focusWithinProps } = $9ab94262bd0047c7$export$420e68273165f4ec({
    onFocusWithinChange: setFocusWithin
  });
  const { pressProps: clearPressProps } = $f6c31cce2adf654f$export$45712eceda6fad21({
    isDisabled: !!(originalProps == null ? void 0 : originalProps.isDisabled) || !!(originalProps == null ? void 0 : originalProps.isReadOnly),
    onPress: handleClear
  });
  const isInvalid = validationState === "invalid" || originalProps.isInvalid || isAriaInvalid;
  const labelPlacement = reactExports.useMemo(() => {
    var _a2;
    if (isFileTypeInput) {
      if (!originalProps.labelPlacement)
        return "outside";
      if (originalProps.labelPlacement === "inside") {
        warn("Input with file type doesn't support inside label. Converting to outside ...");
        return "outside";
      }
    }
    if ((!originalProps.labelPlacement || originalProps.labelPlacement === "inside") && !label) {
      return "outside";
    }
    return (_a2 = originalProps.labelPlacement) != null ? _a2 : "inside";
  }, [originalProps.labelPlacement, label]);
  const errorMessage = typeof props.errorMessage === "function" ? props.errorMessage({ isInvalid, validationErrors, validationDetails }) : props.errorMessage || (validationErrors == null ? void 0 : validationErrors.join(" "));
  const isClearable = !!onClear || originalProps.isClearable;
  const hasElements = !!label || !!description || !!errorMessage;
  const hasPlaceholder = !!props.placeholder;
  const hasLabel = !!label;
  const hasHelper = !!description || !!errorMessage;
  const shouldLabelBeOutside = labelPlacement === "outside" || labelPlacement === "outside-left";
  const shouldLabelBeInside = labelPlacement === "inside";
  const isPlaceholderShown = domRef.current ? (!domRef.current.value || domRef.current.value === "" || !inputValue || inputValue === "") && hasPlaceholder : false;
  const isOutsideLeft = labelPlacement === "outside-left";
  const hasStartContent = !!startContent;
  const isLabelOutside = shouldLabelBeOutside ? labelPlacement === "outside-left" || hasPlaceholder || labelPlacement === "outside" && hasStartContent : false;
  const isLabelOutsideAsPlaceholder = labelPlacement === "outside" && !hasPlaceholder && !hasStartContent;
  const slots = reactExports.useMemo(
    () => input({
      ...variantProps2,
      isInvalid,
      labelPlacement,
      isClearable,
      disableAnimation
    }),
    [
      objectToDeps(variantProps2),
      isInvalid,
      labelPlacement,
      isClearable,
      hasStartContent,
      disableAnimation
    ]
  );
  const getBaseProps = reactExports.useCallback(
    (props2 = {}) => {
      return {
        ref: baseDomRef,
        className: slots.base({ class: baseStyles }),
        "data-slot": "base",
        "data-filled": dataAttr(
          isFilled || hasPlaceholder || hasStartContent || isPlaceholderShown || isFileTypeInput
        ),
        "data-filled-within": dataAttr(
          isFilledWithin || hasPlaceholder || hasStartContent || isPlaceholderShown || isFileTypeInput
        ),
        "data-focus-within": dataAttr(isFocusWithin),
        "data-focus-visible": dataAttr(isFocusVisible),
        "data-readonly": dataAttr(originalProps.isReadOnly),
        "data-focus": dataAttr(isFocused),
        "data-hover": dataAttr(isHovered || isLabelHovered),
        "data-required": dataAttr(originalProps.isRequired),
        "data-invalid": dataAttr(isInvalid),
        "data-disabled": dataAttr(originalProps.isDisabled),
        "data-has-elements": dataAttr(hasElements),
        "data-has-helper": dataAttr(hasHelper),
        "data-has-label": dataAttr(hasLabel),
        "data-has-value": dataAttr(!isPlaceholderShown),
        "data-hidden": dataAttr(isHiddenType),
        ...focusWithinProps,
        ...props2
      };
    },
    [
      slots,
      baseStyles,
      isFilled,
      isFocused,
      isHovered,
      isLabelHovered,
      isInvalid,
      hasHelper,
      hasLabel,
      hasElements,
      isPlaceholderShown,
      hasStartContent,
      isFocusWithin,
      isFocusVisible,
      isFilledWithin,
      hasPlaceholder,
      focusWithinProps,
      isHiddenType,
      originalProps.isReadOnly,
      originalProps.isRequired,
      originalProps.isDisabled
    ]
  );
  const getLabelProps = reactExports.useCallback(
    (props2 = {}) => {
      return {
        "data-slot": "label",
        className: slots.label({ class: classNames == null ? void 0 : classNames.label }),
        ...$3ef42575df84b30b$export$9d1611c77c2fe928(labelProps, labelHoverProps, props2)
      };
    },
    [slots, isLabelHovered, labelProps, classNames == null ? void 0 : classNames.label]
  );
  const getInputProps = reactExports.useCallback(
    (props2 = {}) => {
      return {
        ref: domRef,
        "data-slot": "input",
        "data-filled": dataAttr(isFilled),
        "data-filled-within": dataAttr(isFilledWithin),
        "data-has-start-content": dataAttr(hasStartContent),
        "data-has-end-content": dataAttr(!!endContent),
        className: slots.input({
          class: clsx$1(classNames == null ? void 0 : classNames.input, isFilled ? "is-filled" : "")
        }),
        ...$3ef42575df84b30b$export$9d1611c77c2fe928(
          focusProps,
          inputProps,
          filterDOMProps(otherProps, {
            enabled: true,
            labelable: true,
            omitEventNames: new Set(Object.keys(inputProps))
          }),
          props2
        ),
        "aria-readonly": dataAttr(originalProps.isReadOnly),
        onChange: $ff5963eb1fccf552$export$e08e3b67e392101e(inputProps.onChange, onChange)
      };
    },
    [
      slots,
      inputValue,
      focusProps,
      inputProps,
      otherProps,
      isFilled,
      isFilledWithin,
      hasStartContent,
      endContent,
      classNames == null ? void 0 : classNames.input,
      originalProps.isReadOnly,
      originalProps.isRequired,
      onChange
    ]
  );
  const getInputWrapperProps = reactExports.useCallback(
    (props2 = {}) => {
      return {
        ref: inputWrapperRef,
        "data-slot": "input-wrapper",
        "data-hover": dataAttr(isHovered || isLabelHovered),
        "data-focus-visible": dataAttr(isFocusVisible),
        "data-focus": dataAttr(isFocused),
        className: slots.inputWrapper({
          class: clsx$1(classNames == null ? void 0 : classNames.inputWrapper, isFilled ? "is-filled" : "")
        }),
        ...$3ef42575df84b30b$export$9d1611c77c2fe928(props2, hoverProps),
        onClick: (e) => {
          if (domRef.current && e.currentTarget === e.target) {
            domRef.current.focus();
          }
        },
        style: {
          cursor: "text",
          ...props2.style
        }
      };
    },
    [
      slots,
      isHovered,
      isLabelHovered,
      isFocusVisible,
      isFocused,
      inputValue,
      classNames == null ? void 0 : classNames.inputWrapper
    ]
  );
  const getInnerWrapperProps = reactExports.useCallback(
    (props2 = {}) => {
      return {
        ...props2,
        ref: innerWrapperRef,
        "data-slot": "inner-wrapper",
        onClick: (e) => {
          if (domRef.current && e.currentTarget === e.target) {
            domRef.current.focus();
          }
        },
        className: slots.innerWrapper({
          class: clsx$1(classNames == null ? void 0 : classNames.innerWrapper, props2 == null ? void 0 : props2.className)
        })
      };
    },
    [slots, classNames == null ? void 0 : classNames.innerWrapper]
  );
  const getMainWrapperProps = reactExports.useCallback(
    (props2 = {}) => {
      return {
        ...props2,
        "data-slot": "main-wrapper",
        className: slots.mainWrapper({
          class: clsx$1(classNames == null ? void 0 : classNames.mainWrapper, props2 == null ? void 0 : props2.className)
        })
      };
    },
    [slots, classNames == null ? void 0 : classNames.mainWrapper]
  );
  const getHelperWrapperProps = reactExports.useCallback(
    (props2 = {}) => {
      return {
        ...props2,
        "data-slot": "helper-wrapper",
        className: slots.helperWrapper({
          class: clsx$1(classNames == null ? void 0 : classNames.helperWrapper, props2 == null ? void 0 : props2.className)
        })
      };
    },
    [slots, classNames == null ? void 0 : classNames.helperWrapper]
  );
  const getDescriptionProps = reactExports.useCallback(
    (props2 = {}) => {
      return {
        ...props2,
        ...descriptionProps,
        "data-slot": "description",
        className: slots.description({ class: clsx$1(classNames == null ? void 0 : classNames.description, props2 == null ? void 0 : props2.className) })
      };
    },
    [slots, classNames == null ? void 0 : classNames.description]
  );
  const getErrorMessageProps = reactExports.useCallback(
    (props2 = {}) => {
      return {
        ...props2,
        ...errorMessageProps,
        "data-slot": "error-message",
        className: slots.errorMessage({ class: clsx$1(classNames == null ? void 0 : classNames.errorMessage, props2 == null ? void 0 : props2.className) })
      };
    },
    [slots, errorMessageProps, classNames == null ? void 0 : classNames.errorMessage]
  );
  const getClearButtonProps = reactExports.useCallback(
    (props2 = {}) => {
      return {
        ...props2,
        role: "button",
        tabIndex: 0,
        "aria-label": "clear input",
        "data-slot": "clear-button",
        "data-focus-visible": dataAttr(isClearButtonFocusVisible),
        className: slots.clearButton({ class: clsx$1(classNames == null ? void 0 : classNames.clearButton, props2 == null ? void 0 : props2.className) }),
        ...$3ef42575df84b30b$export$9d1611c77c2fe928(clearPressProps, clearFocusProps)
      };
    },
    [slots, isClearButtonFocusVisible, clearPressProps, clearFocusProps, classNames == null ? void 0 : classNames.clearButton]
  );
  return {
    Component,
    classNames,
    domRef,
    label,
    description,
    startContent,
    endContent,
    labelPlacement,
    isClearable,
    hasHelper,
    hasStartContent,
    isLabelOutside,
    isOutsideLeft,
    isLabelOutsideAsPlaceholder,
    shouldLabelBeOutside,
    shouldLabelBeInside,
    hasPlaceholder,
    isInvalid,
    errorMessage,
    getBaseProps,
    getLabelProps,
    getInputProps,
    getMainWrapperProps,
    getInputWrapperProps,
    getInnerWrapperProps,
    getHelperWrapperProps,
    getDescriptionProps,
    getErrorMessageProps,
    getClearButtonProps
  };
}
var Input = forwardRef((props, ref) => {
  const {
    Component,
    label,
    description,
    isClearable,
    startContent,
    endContent,
    labelPlacement,
    hasHelper,
    isOutsideLeft,
    shouldLabelBeOutside,
    errorMessage,
    isInvalid,
    getBaseProps,
    getLabelProps,
    getInputProps,
    getInnerWrapperProps,
    getInputWrapperProps,
    getMainWrapperProps,
    getHelperWrapperProps,
    getDescriptionProps,
    getErrorMessageProps,
    getClearButtonProps
  } = useInput({ ...props, ref });
  const labelContent = label ? /* @__PURE__ */ jsxRuntimeExports.jsx("label", { ...getLabelProps(), children: label }) : null;
  const end = reactExports.useMemo(() => {
    if (isClearable) {
      return /* @__PURE__ */ jsxRuntimeExports.jsx("span", { ...getClearButtonProps(), children: endContent || /* @__PURE__ */ jsxRuntimeExports.jsx(CloseFilledIcon, {}) });
    }
    return endContent;
  }, [isClearable, getClearButtonProps]);
  const helperWrapper = reactExports.useMemo(() => {
    if (!hasHelper)
      return null;
    return /* @__PURE__ */ jsxRuntimeExports.jsx("div", { ...getHelperWrapperProps(), children: isInvalid && errorMessage ? /* @__PURE__ */ jsxRuntimeExports.jsx("div", { ...getErrorMessageProps(), children: errorMessage }) : description ? /* @__PURE__ */ jsxRuntimeExports.jsx("div", { ...getDescriptionProps(), children: description }) : null });
  }, [
    hasHelper,
    isInvalid,
    errorMessage,
    description,
    getHelperWrapperProps,
    getErrorMessageProps,
    getDescriptionProps
  ]);
  const innerWrapper = reactExports.useMemo(() => {
    return /* @__PURE__ */ jsxRuntimeExports.jsxs("div", { ...getInnerWrapperProps(), children: [
      startContent,
      /* @__PURE__ */ jsxRuntimeExports.jsx("input", { ...getInputProps() }),
      end
    ] });
  }, [startContent, end, getInputProps, getInnerWrapperProps]);
  const mainWrapper = reactExports.useMemo(() => {
    if (shouldLabelBeOutside) {
      return /* @__PURE__ */ jsxRuntimeExports.jsxs("div", { ...getMainWrapperProps(), children: [
        /* @__PURE__ */ jsxRuntimeExports.jsxs("div", { ...getInputWrapperProps(), children: [
          !isOutsideLeft ? labelContent : null,
          innerWrapper
        ] }),
        helperWrapper
      ] });
    }
    return /* @__PURE__ */ jsxRuntimeExports.jsxs(jsxRuntimeExports.Fragment, { children: [
      /* @__PURE__ */ jsxRuntimeExports.jsxs("div", { ...getInputWrapperProps(), children: [
        labelContent,
        innerWrapper
      ] }),
      helperWrapper
    ] });
  }, [
    labelPlacement,
    helperWrapper,
    shouldLabelBeOutside,
    labelContent,
    innerWrapper,
    errorMessage,
    description,
    getMainWrapperProps,
    getInputWrapperProps,
    getErrorMessageProps,
    getDescriptionProps
  ]);
  return /* @__PURE__ */ jsxRuntimeExports.jsxs(Component, { ...getBaseProps(), children: [
    isOutsideLeft ? labelContent : null,
    mainWrapper
  ] });
});
Input.displayName = "NextUI.Input";
var input_default = Input;
function _extends$a() {
  return _extends$a = Object.assign ? Object.assign.bind() : function(n2) {
    for (var e = 1; e < arguments.length; e++) {
      var t2 = arguments[e];
      for (var r2 in t2) ({}).hasOwnProperty.call(t2, r2) && (n2[r2] = t2[r2]);
    }
    return n2;
  }, _extends$a.apply(null, arguments);
}
function _objectWithoutPropertiesLoose(r2, e) {
  if (null == r2) return {};
  var t2 = {};
  for (var n2 in r2) if ({}.hasOwnProperty.call(r2, n2)) {
    if (e.includes(n2)) continue;
    t2[n2] = r2[n2];
  }
  return t2;
}
function useReactAriaPopover(props, state) {
  const {
    triggerRef,
    popoverRef,
    showArrow,
    offset = 7,
    crossOffset = 0,
    scrollRef,
    shouldFlip,
    boundaryElement,
    isDismissable = true,
    shouldCloseOnBlur = true,
    placement: placementProp = "top",
    containerPadding,
    shouldCloseOnInteractOutside,
    isNonModal: isNonModalProp,
    isKeyboardDismissDisabled,
    updatePositionDeps = [],
    ...otherProps
  } = props;
  const isNonModal = isNonModalProp != null ? isNonModalProp : true;
  const { overlayProps, underlayProps } = $a11501f3d1d39e6c$export$ea8f71083e90600f(
    {
      isOpen: state.isOpen,
      onClose: state.close,
      shouldCloseOnBlur,
      isDismissable,
      isKeyboardDismissDisabled,
      shouldCloseOnInteractOutside: shouldCloseOnInteractOutside ? shouldCloseOnInteractOutside : (element) => ariaShouldCloseOnInteractOutside(element, triggerRef, state)
    },
    popoverRef
  );
  const {
    overlayProps: positionProps,
    arrowProps,
    placement,
    updatePosition
  } = $2a41e45df1593e64$export$d39e1813b3bdd0e1({
    ...otherProps,
    shouldFlip,
    crossOffset,
    targetRef: triggerRef,
    overlayRef: popoverRef,
    isOpen: state.isOpen,
    scrollRef,
    boundaryElement,
    containerPadding,
    placement: toReactAriaPlacement(placementProp),
    offset: showArrow ? offset + 3 : offset,
    onClose: isNonModal ? state.close : () => {
    }
  });
  useSafeLayoutEffect(() => {
    if (!updatePositionDeps.length)
      return;
    updatePosition();
  }, updatePositionDeps);
  reactExports.useEffect(() => {
    if (state.isOpen && !isNonModal && popoverRef.current) {
      return ariaHideOutside([popoverRef.current]);
    }
  }, [isNonModal, state.isOpen, popoverRef]);
  return {
    popoverProps: $3ef42575df84b30b$export$9d1611c77c2fe928(overlayProps, positionProps),
    arrowProps,
    underlayProps,
    placement
  };
}
function usePopover(originalProps) {
  var _a, _b, _c;
  const globalContext = useProviderContext();
  const [props, variantProps2] = mapPropsVariants(originalProps, popover.variantKeys);
  const {
    as,
    ref,
    children,
    state: stateProp,
    triggerRef: triggerRefProp,
    scrollRef,
    defaultOpen,
    onOpenChange,
    isOpen: isOpenProp,
    isNonModal = true,
    shouldFlip = true,
    containerPadding = 12,
    shouldBlockScroll = false,
    isDismissable = true,
    shouldCloseOnBlur,
    portalContainer,
    updatePositionDeps,
    dialogProps: dialogPropsProp,
    placement: placementProp = "top",
    triggerType = "dialog",
    showArrow = false,
    offset = 7,
    crossOffset = 0,
    boundaryElement,
    isKeyboardDismissDisabled,
    shouldCloseOnInteractOutside,
    motionProps,
    className,
    classNames,
    onClose,
    ...otherProps
  } = props;
  const Component = as || "div";
  const domRef = useDOMRef(ref);
  const domTriggerRef = reactExports.useRef(null);
  const wasTriggerPressedRef = reactExports.useRef(false);
  const triggerRef = triggerRefProp || domTriggerRef;
  const disableAnimation = (_b = (_a = originalProps.disableAnimation) != null ? _a : globalContext == null ? void 0 : globalContext.disableAnimation) != null ? _b : false;
  const innerState = $fc909762b330b746$export$61c6a8c84e605fb6({
    isOpen: isOpenProp,
    defaultOpen,
    onOpenChange: (isOpen) => {
      onOpenChange == null ? void 0 : onOpenChange(isOpen);
      if (!isOpen) {
        onClose == null ? void 0 : onClose();
      }
    }
  });
  const state = stateProp || innerState;
  const {
    popoverProps,
    underlayProps,
    placement: ariaPlacement
  } = useReactAriaPopover(
    {
      triggerRef,
      isNonModal,
      popoverRef: domRef,
      placement: placementProp,
      offset,
      scrollRef,
      isDismissable,
      shouldCloseOnBlur,
      boundaryElement,
      crossOffset,
      shouldFlip,
      containerPadding,
      updatePositionDeps,
      isKeyboardDismissDisabled,
      shouldCloseOnInteractOutside
    },
    state
  );
  const { triggerProps } = $628037886ba31236$export$f9d5c8beee7d008d({ type: triggerType }, state, triggerRef);
  const { isFocusVisible, isFocused, focusProps } = $f7dceffc5ad7768b$export$4e328f61c538687f();
  const slots = reactExports.useMemo(
    () => popover({
      ...variantProps2
    }),
    [objectToDeps(variantProps2)]
  );
  const baseStyles = clsx$1(classNames == null ? void 0 : classNames.base, className);
  const getPopoverProps = (props2 = {}) => ({
    ref: domRef,
    ...$3ef42575df84b30b$export$9d1611c77c2fe928(popoverProps, otherProps, props2),
    style: $3ef42575df84b30b$export$9d1611c77c2fe928(popoverProps.style, otherProps.style, props2.style)
  });
  const getDialogProps = (props2 = {}) => ({
    "data-slot": "base",
    "data-open": dataAttr(state.isOpen),
    "data-focus": dataAttr(isFocused),
    "data-arrow": dataAttr(showArrow),
    "data-focus-visible": dataAttr(isFocusVisible),
    "data-placement": getArrowPlacement(ariaPlacement, placementProp),
    ...$3ef42575df84b30b$export$9d1611c77c2fe928(focusProps, dialogPropsProp, props2),
    className: slots.base({ class: clsx$1(baseStyles) }),
    style: {
      outline: "none"
    }
  });
  const getContentProps = reactExports.useCallback(
    (props2 = {}) => ({
      "data-slot": "content",
      "data-open": dataAttr(state.isOpen),
      "data-arrow": dataAttr(showArrow),
      "data-placement": getArrowPlacement(ariaPlacement, placementProp),
      className: slots.content({ class: clsx$1(classNames == null ? void 0 : classNames.content, props2.className) })
    }),
    [slots, state.isOpen, showArrow, ariaPlacement, placementProp, classNames]
  );
  const placement = reactExports.useMemo(
    () => getShouldUseAxisPlacement(ariaPlacement, placementProp) ? ariaPlacement || placementProp : placementProp,
    [ariaPlacement, placementProp]
  );
  const onPress = reactExports.useCallback(
    (e) => {
      var _a2;
      let pressTimer;
      if (e.pointerType === "touch" && ((originalProps == null ? void 0 : originalProps.backdrop) === "blur" || (originalProps == null ? void 0 : originalProps.backdrop) === "opaque")) {
        pressTimer = setTimeout(() => {
          wasTriggerPressedRef.current = true;
        }, 100);
      } else {
        wasTriggerPressedRef.current = true;
      }
      (_a2 = triggerProps.onPress) == null ? void 0 : _a2.call(triggerProps, e);
      return () => {
        clearTimeout(pressTimer);
      };
    },
    [triggerProps == null ? void 0 : triggerProps.onPress]
  );
  const getTriggerProps = reactExports.useCallback(
    (props2 = {}, _ref = null) => {
      const { isDisabled, ...otherProps2 } = props2;
      return {
        "data-slot": "trigger",
        ...$3ef42575df84b30b$export$9d1611c77c2fe928({ "aria-haspopup": "dialog" }, triggerProps, otherProps2),
        onPress,
        isDisabled,
        className: slots.trigger({
          class: clsx$1(classNames == null ? void 0 : classNames.trigger, props2.className),
          isTriggerDisabled: isDisabled
        }),
        ref: $5dc95899b306f630$export$c9058316764c140e(_ref, triggerRef)
      };
    },
    [state, triggerProps, onPress, triggerRef]
  );
  const getBackdropProps = reactExports.useCallback(
    (props2 = {}) => ({
      "data-slot": "backdrop",
      className: slots.backdrop({ class: classNames == null ? void 0 : classNames.backdrop }),
      onClick: (e) => {
        if (!wasTriggerPressedRef.current) {
          e.preventDefault();
          return;
        }
        state.close();
        wasTriggerPressedRef.current = false;
      },
      ...underlayProps,
      ...props2
    }),
    [slots, state.isOpen, classNames, underlayProps]
  );
  reactExports.useEffect(() => {
    if (state.isOpen && (domRef == null ? void 0 : domRef.current)) {
      return $5e3802645cc19319$export$1c3ebcada18427bf([domRef == null ? void 0 : domRef.current]);
    }
  }, [state.isOpen, domRef]);
  return {
    state,
    Component,
    children,
    classNames,
    showArrow,
    triggerRef,
    placement,
    isNonModal,
    popoverRef: domRef,
    portalContainer,
    isOpen: state.isOpen,
    onClose: state.close,
    disableAnimation,
    shouldBlockScroll,
    backdrop: (_c = originalProps.backdrop) != null ? _c : "transparent",
    motionProps,
    getBackdropProps,
    getPopoverProps,
    getTriggerProps,
    getDialogProps,
    getContentProps
  };
}
function $40df3f8667284809$export$d55e7ee900f34e93(props, ref) {
  let { role = "dialog" } = props;
  let titleId = $bdb11010cef70236$export$b4cc09c592e8fdb8();
  titleId = props["aria-label"] ? void 0 : titleId;
  let isRefocusing = reactExports.useRef(false);
  reactExports.useEffect(() => {
    if (ref.current && !ref.current.contains(document.activeElement)) {
      $6a99195332edec8b$export$80f3e147d781571c(ref.current);
      let timeout = setTimeout(() => {
        if (document.activeElement === ref.current) {
          isRefocusing.current = true;
          if (ref.current) {
            ref.current.blur();
            $6a99195332edec8b$export$80f3e147d781571c(ref.current);
          }
          isRefocusing.current = false;
        }
      }, 500);
      return () => {
        clearTimeout(timeout);
      };
    }
  }, [
    ref
  ]);
  $337b884510726a0d$export$14c98a7594375490();
  return {
    dialogProps: {
      ...$65484d02dcb7eb3e$export$457c3d6518dd4c6f(props, {
        labelable: true
      }),
      role,
      tabIndex: -1,
      "aria-labelledby": props["aria-labelledby"] || titleId,
      // Prevent blur events from reaching useOverlay, which may cause
      // popovers to close. Since focus is contained within the dialog,
      // we don't want this to occur due to the above useEffect.
      onBlur: (e) => {
        if (isRefocusing.current) e.stopPropagation();
      }
    },
    titleProps: {
      id: titleId
    }
  };
}
var [PopoverProvider, usePopoverContext] = createContext2({
  name: "PopoverContext",
  errorMessage: "usePopoverContext: `context` is undefined. Seems you forgot to wrap all popover components within `<Popover />`"
});
var zeroRightClassName = "right-scroll-bar-position";
var fullWidthClassName = "width-before-scroll-bar";
var noScrollbarsClassName = "with-scroll-bars-hidden";
var removedBarSizeVariable = "--removed-body-scroll-bar-size";
function assignRef(ref, value) {
  if (typeof ref === "function") {
    ref(value);
  } else if (ref) {
    ref.current = value;
  }
  return ref;
}
function useCallbackRef(initialValue, callback) {
  var ref = reactExports.useState(function() {
    return {
      // value
      value: initialValue,
      // last callback
      callback,
      // "memoized" public interface
      facade: {
        get current() {
          return ref.value;
        },
        set current(value) {
          var last = ref.value;
          if (last !== value) {
            ref.value = value;
            ref.callback(value, last);
          }
        }
      }
    };
  })[0];
  ref.callback = callback;
  return ref.facade;
}
var useIsomorphicLayoutEffect$2 = typeof window !== "undefined" ? reactExports.useLayoutEffect : reactExports.useEffect;
var currentValues = /* @__PURE__ */ new WeakMap();
function useMergeRefs(refs, defaultValue) {
  var callbackRef = useCallbackRef(null, function(newValue) {
    return refs.forEach(function(ref) {
      return assignRef(ref, newValue);
    });
  });
  useIsomorphicLayoutEffect$2(function() {
    var oldValue = currentValues.get(callbackRef);
    if (oldValue) {
      var prevRefs_1 = new Set(oldValue);
      var nextRefs_1 = new Set(refs);
      var current_1 = callbackRef.current;
      prevRefs_1.forEach(function(ref) {
        if (!nextRefs_1.has(ref)) {
          assignRef(ref, null);
        }
      });
      nextRefs_1.forEach(function(ref) {
        if (!prevRefs_1.has(ref)) {
          assignRef(ref, current_1);
        }
      });
    }
    currentValues.set(callbackRef, refs);
  }, [refs]);
  return callbackRef;
}
function ItoI(a2) {
  return a2;
}
function innerCreateMedium(defaults, middleware) {
  if (middleware === void 0) {
    middleware = ItoI;
  }
  var buffer = [];
  var assigned = false;
  var medium = {
    read: function() {
      if (assigned) {
        throw new Error("Sidecar: could not `read` from an `assigned` medium. `read` could be used only with `useMedium`.");
      }
      if (buffer.length) {
        return buffer[buffer.length - 1];
      }
      return defaults;
    },
    useMedium: function(data) {
      var item = middleware(data, assigned);
      buffer.push(item);
      return function() {
        buffer = buffer.filter(function(x2) {
          return x2 !== item;
        });
      };
    },
    assignSyncMedium: function(cb2) {
      assigned = true;
      while (buffer.length) {
        var cbs = buffer;
        buffer = [];
        cbs.forEach(cb2);
      }
      buffer = {
        push: function(x2) {
          return cb2(x2);
        },
        filter: function() {
          return buffer;
        }
      };
    },
    assignMedium: function(cb2) {
      assigned = true;
      var pendingQueue = [];
      if (buffer.length) {
        var cbs = buffer;
        buffer = [];
        cbs.forEach(cb2);
        pendingQueue = buffer;
      }
      var executeQueue = function() {
        var cbs2 = pendingQueue;
        pendingQueue = [];
        cbs2.forEach(cb2);
      };
      var cycle = function() {
        return Promise.resolve().then(executeQueue);
      };
      cycle();
      buffer = {
        push: function(x2) {
          pendingQueue.push(x2);
          cycle();
        },
        filter: function(filter2) {
          pendingQueue = pendingQueue.filter(filter2);
          return buffer;
        }
      };
    }
  };
  return medium;
}
function createSidecarMedium(options) {
  if (options === void 0) {
    options = {};
  }
  var medium = innerCreateMedium(null);
  medium.options = __assign({ async: true, ssr: false }, options);
  return medium;
}
var SideCar$1 = function(_a) {
  var sideCar = _a.sideCar, rest = __rest(_a, ["sideCar"]);
  if (!sideCar) {
    throw new Error("Sidecar: please provide `sideCar` property to import the right car");
  }
  var Target = sideCar.read();
  if (!Target) {
    throw new Error("Sidecar medium not found");
  }
  return reactExports.createElement(Target, __assign({}, rest));
};
SideCar$1.isSideCarExport = true;
function exportSidecar(medium, exported) {
  medium.useMedium(exported);
  return SideCar$1;
}
var effectCar = createSidecarMedium();
var nothing = function() {
  return;
};
var RemoveScroll = reactExports.forwardRef(function(props, parentRef) {
  var ref = reactExports.useRef(null);
  var _a = reactExports.useState({
    onScrollCapture: nothing,
    onWheelCapture: nothing,
    onTouchMoveCapture: nothing
  }), callbacks2 = _a[0], setCallbacks = _a[1];
  var forwardProps = props.forwardProps, children = props.children, className = props.className, removeScrollBar = props.removeScrollBar, enabled = props.enabled, shards = props.shards, sideCar = props.sideCar, noIsolation = props.noIsolation, inert = props.inert, allowPinchZoom = props.allowPinchZoom, _b = props.as, Container = _b === void 0 ? "div" : _b, gapMode = props.gapMode, rest = __rest(props, ["forwardProps", "children", "className", "removeScrollBar", "enabled", "shards", "sideCar", "noIsolation", "inert", "allowPinchZoom", "as", "gapMode"]);
  var SideCar2 = sideCar;
  var containerRef = useMergeRefs([ref, parentRef]);
  var containerProps = __assign(__assign({}, rest), callbacks2);
  return reactExports.createElement(
    reactExports.Fragment,
    null,
    enabled && reactExports.createElement(SideCar2, { sideCar: effectCar, removeScrollBar, shards, noIsolation, inert, setCallbacks, allowPinchZoom: !!allowPinchZoom, lockRef: ref, gapMode }),
    forwardProps ? reactExports.cloneElement(reactExports.Children.only(children), __assign(__assign({}, containerProps), { ref: containerRef })) : reactExports.createElement(Container, __assign({}, containerProps, { className, ref: containerRef }), children)
  );
});
RemoveScroll.defaultProps = {
  enabled: true,
  removeScrollBar: true,
  inert: false
};
RemoveScroll.classNames = {
  fullWidth: fullWidthClassName,
  zeroRight: zeroRightClassName
};
var getNonce = function() {
  if (typeof __webpack_nonce__ !== "undefined") {
    return __webpack_nonce__;
  }
  return void 0;
};
function makeStyleTag() {
  if (!document)
    return null;
  var tag = document.createElement("style");
  tag.type = "text/css";
  var nonce = getNonce();
  if (nonce) {
    tag.setAttribute("nonce", nonce);
  }
  return tag;
}
function injectStyles(tag, css) {
  if (tag.styleSheet) {
    tag.styleSheet.cssText = css;
  } else {
    tag.appendChild(document.createTextNode(css));
  }
}
function insertStyleTag(tag) {
  var head = document.head || document.getElementsByTagName("head")[0];
  head.appendChild(tag);
}
var stylesheetSingleton = function() {
  var counter = 0;
  var stylesheet = null;
  return {
    add: function(style) {
      if (counter == 0) {
        if (stylesheet = makeStyleTag()) {
          injectStyles(stylesheet, style);
          insertStyleTag(stylesheet);
        }
      }
      counter++;
    },
    remove: function() {
      counter--;
      if (!counter && stylesheet) {
        stylesheet.parentNode && stylesheet.parentNode.removeChild(stylesheet);
        stylesheet = null;
      }
    }
  };
};
var styleHookSingleton = function() {
  var sheet = stylesheetSingleton();
  return function(styles, isDynamic) {
    reactExports.useEffect(function() {
      sheet.add(styles);
      return function() {
        sheet.remove();
      };
    }, [styles && isDynamic]);
  };
};
var styleSingleton = function() {
  var useStyle2 = styleHookSingleton();
  var Sheet = function(_a) {
    var styles = _a.styles, dynamic = _a.dynamic;
    useStyle2(styles, dynamic);
    return null;
  };
  return Sheet;
};
var zeroGap = {
  left: 0,
  top: 0,
  right: 0,
  gap: 0
};
var parse$1 = function(x2) {
  return parseInt(x2 || "", 10) || 0;
};
var getOffset = function(gapMode) {
  var cs = window.getComputedStyle(document.body);
  var left = cs[gapMode === "padding" ? "paddingLeft" : "marginLeft"];
  var top = cs[gapMode === "padding" ? "paddingTop" : "marginTop"];
  var right = cs[gapMode === "padding" ? "paddingRight" : "marginRight"];
  return [parse$1(left), parse$1(top), parse$1(right)];
};
var getGapWidth = function(gapMode) {
  if (gapMode === void 0) {
    gapMode = "margin";
  }
  if (typeof window === "undefined") {
    return zeroGap;
  }
  var offsets = getOffset(gapMode);
  var documentWidth = document.documentElement.clientWidth;
  var windowWidth = window.innerWidth;
  return {
    left: offsets[0],
    top: offsets[1],
    right: offsets[2],
    gap: Math.max(0, windowWidth - documentWidth + offsets[2] - offsets[0])
  };
};
var Style = styleSingleton();
var lockAttribute = "data-scroll-locked";
var getStyles = function(_a, allowRelative, gapMode, important) {
  var left = _a.left, top = _a.top, right = _a.right, gap = _a.gap;
  if (gapMode === void 0) {
    gapMode = "margin";
  }
  return "\n  .".concat(noScrollbarsClassName, " {\n   overflow: hidden ").concat(important, ";\n   padding-right: ").concat(gap, "px ").concat(important, ";\n  }\n  body[").concat(lockAttribute, "] {\n    overflow: hidden ").concat(important, ";\n    overscroll-behavior: contain;\n    ").concat([
    allowRelative && "position: relative ".concat(important, ";"),
    gapMode === "margin" && "\n    padding-left: ".concat(left, "px;\n    padding-top: ").concat(top, "px;\n    padding-right: ").concat(right, "px;\n    margin-left:0;\n    margin-top:0;\n    margin-right: ").concat(gap, "px ").concat(important, ";\n    "),
    gapMode === "padding" && "padding-right: ".concat(gap, "px ").concat(important, ";")
  ].filter(Boolean).join(""), "\n  }\n  \n  .").concat(zeroRightClassName, " {\n    right: ").concat(gap, "px ").concat(important, ";\n  }\n  \n  .").concat(fullWidthClassName, " {\n    margin-right: ").concat(gap, "px ").concat(important, ";\n  }\n  \n  .").concat(zeroRightClassName, " .").concat(zeroRightClassName, " {\n    right: 0 ").concat(important, ";\n  }\n  \n  .").concat(fullWidthClassName, " .").concat(fullWidthClassName, " {\n    margin-right: 0 ").concat(important, ";\n  }\n  \n  body[").concat(lockAttribute, "] {\n    ").concat(removedBarSizeVariable, ": ").concat(gap, "px;\n  }\n");
};
var getCurrentUseCounter = function() {
  var counter = parseInt(document.body.getAttribute(lockAttribute) || "0", 10);
  return isFinite(counter) ? counter : 0;
};
var useLockAttribute = function() {
  reactExports.useEffect(function() {
    document.body.setAttribute(lockAttribute, (getCurrentUseCounter() + 1).toString());
    return function() {
      var newCounter = getCurrentUseCounter() - 1;
      if (newCounter <= 0) {
        document.body.removeAttribute(lockAttribute);
      } else {
        document.body.setAttribute(lockAttribute, newCounter.toString());
      }
    };
  }, []);
};
var RemoveScrollBar = function(_a) {
  var noRelative = _a.noRelative, noImportant = _a.noImportant, _b = _a.gapMode, gapMode = _b === void 0 ? "margin" : _b;
  useLockAttribute();
  var gap = reactExports.useMemo(function() {
    return getGapWidth(gapMode);
  }, [gapMode]);
  return reactExports.createElement(Style, { styles: getStyles(gap, !noRelative, gapMode, !noImportant ? "!important" : "") });
};
var passiveSupported = false;
if (typeof window !== "undefined") {
  try {
    var options = Object.defineProperty({}, "passive", {
      get: function() {
        passiveSupported = true;
        return true;
      }
    });
    window.addEventListener("test", options, options);
    window.removeEventListener("test", options, options);
  } catch (err) {
    passiveSupported = false;
  }
}
var nonPassive = passiveSupported ? { passive: false } : false;
var alwaysContainsScroll = function(node) {
  return node.tagName === "TEXTAREA";
};
var elementCanBeScrolled = function(node, overflow) {
  if (!(node instanceof Element)) {
    return false;
  }
  var styles = window.getComputedStyle(node);
  return (
    // not-not-scrollable
    styles[overflow] !== "hidden" && // contains scroll inside self
    !(styles.overflowY === styles.overflowX && !alwaysContainsScroll(node) && styles[overflow] === "visible")
  );
};
var elementCouldBeVScrolled = function(node) {
  return elementCanBeScrolled(node, "overflowY");
};
var elementCouldBeHScrolled = function(node) {
  return elementCanBeScrolled(node, "overflowX");
};
var locationCouldBeScrolled = function(axis, node) {
  var ownerDocument = node.ownerDocument;
  var current = node;
  do {
    if (typeof ShadowRoot !== "undefined" && current instanceof ShadowRoot) {
      current = current.host;
    }
    var isScrollable = elementCouldBeScrolled(axis, current);
    if (isScrollable) {
      var _a = getScrollVariables(axis, current), scrollHeight = _a[1], clientHeight = _a[2];
      if (scrollHeight > clientHeight) {
        return true;
      }
    }
    current = current.parentNode;
  } while (current && current !== ownerDocument.body);
  return false;
};
var getVScrollVariables = function(_a) {
  var scrollTop = _a.scrollTop, scrollHeight = _a.scrollHeight, clientHeight = _a.clientHeight;
  return [
    scrollTop,
    scrollHeight,
    clientHeight
  ];
};
var getHScrollVariables = function(_a) {
  var scrollLeft = _a.scrollLeft, scrollWidth = _a.scrollWidth, clientWidth = _a.clientWidth;
  return [
    scrollLeft,
    scrollWidth,
    clientWidth
  ];
};
var elementCouldBeScrolled = function(axis, node) {
  return axis === "v" ? elementCouldBeVScrolled(node) : elementCouldBeHScrolled(node);
};
var getScrollVariables = function(axis, node) {
  return axis === "v" ? getVScrollVariables(node) : getHScrollVariables(node);
};
var getDirectionFactor = function(axis, direction) {
  return axis === "h" && direction === "rtl" ? -1 : 1;
};
var handleScroll = function(axis, endTarget, event, sourceDelta, noOverscroll) {
  var directionFactor = getDirectionFactor(axis, window.getComputedStyle(endTarget).direction);
  var delta = directionFactor * sourceDelta;
  var target = event.target;
  var targetInLock = endTarget.contains(target);
  var shouldCancelScroll = false;
  var isDeltaPositive = delta > 0;
  var availableScroll = 0;
  var availableScrollTop = 0;
  do {
    var _a = getScrollVariables(axis, target), position = _a[0], scroll_1 = _a[1], capacity = _a[2];
    var elementScroll = scroll_1 - capacity - directionFactor * position;
    if (position || elementScroll) {
      if (elementCouldBeScrolled(axis, target)) {
        availableScroll += elementScroll;
        availableScrollTop += position;
      }
    }
    if (target instanceof ShadowRoot) {
      target = target.host;
    } else {
      target = target.parentNode;
    }
  } while (
    // portaled content
    !targetInLock && target !== document.body || // self content
    targetInLock && (endTarget.contains(target) || endTarget === target)
  );
  if (isDeltaPositive && (Math.abs(availableScroll) < 1 || !noOverscroll)) {
    shouldCancelScroll = true;
  } else if (!isDeltaPositive && (Math.abs(availableScrollTop) < 1 || !noOverscroll)) {
    shouldCancelScroll = true;
  }
  return shouldCancelScroll;
};
var getTouchXY = function(event) {
  return "changedTouches" in event ? [event.changedTouches[0].clientX, event.changedTouches[0].clientY] : [0, 0];
};
var getDeltaXY = function(event) {
  return [event.deltaX, event.deltaY];
};
var extractRef = function(ref) {
  return ref && "current" in ref ? ref.current : ref;
};
var deltaCompare = function(x2, y2) {
  return x2[0] === y2[0] && x2[1] === y2[1];
};
var generateStyle = function(id2) {
  return "\n  .block-interactivity-".concat(id2, " {pointer-events: none;}\n  .allow-interactivity-").concat(id2, " {pointer-events: all;}\n");
};
var idCounter = 0;
var lockStack = [];
function RemoveScrollSideCar(props) {
  var shouldPreventQueue = reactExports.useRef([]);
  var touchStartRef = reactExports.useRef([0, 0]);
  var activeAxis = reactExports.useRef();
  var id2 = reactExports.useState(idCounter++)[0];
  var Style2 = reactExports.useState(styleSingleton)[0];
  var lastProps = reactExports.useRef(props);
  reactExports.useEffect(function() {
    lastProps.current = props;
  }, [props]);
  reactExports.useEffect(function() {
    if (props.inert) {
      document.body.classList.add("block-interactivity-".concat(id2));
      var allow_1 = __spreadArray([props.lockRef.current], (props.shards || []).map(extractRef), true).filter(Boolean);
      allow_1.forEach(function(el2) {
        return el2.classList.add("allow-interactivity-".concat(id2));
      });
      return function() {
        document.body.classList.remove("block-interactivity-".concat(id2));
        allow_1.forEach(function(el2) {
          return el2.classList.remove("allow-interactivity-".concat(id2));
        });
      };
    }
    return;
  }, [props.inert, props.lockRef.current, props.shards]);
  var shouldCancelEvent = reactExports.useCallback(function(event, parent) {
    if ("touches" in event && event.touches.length === 2 || event.type === "wheel" && event.ctrlKey) {
      return !lastProps.current.allowPinchZoom;
    }
    var touch = getTouchXY(event);
    var touchStart = touchStartRef.current;
    var deltaX = "deltaX" in event ? event.deltaX : touchStart[0] - touch[0];
    var deltaY = "deltaY" in event ? event.deltaY : touchStart[1] - touch[1];
    var currentAxis;
    var target = event.target;
    var moveDirection = Math.abs(deltaX) > Math.abs(deltaY) ? "h" : "v";
    if ("touches" in event && moveDirection === "h" && target.type === "range") {
      return false;
    }
    var canBeScrolledInMainDirection = locationCouldBeScrolled(moveDirection, target);
    if (!canBeScrolledInMainDirection) {
      return true;
    }
    if (canBeScrolledInMainDirection) {
      currentAxis = moveDirection;
    } else {
      currentAxis = moveDirection === "v" ? "h" : "v";
      canBeScrolledInMainDirection = locationCouldBeScrolled(moveDirection, target);
    }
    if (!canBeScrolledInMainDirection) {
      return false;
    }
    if (!activeAxis.current && "changedTouches" in event && (deltaX || deltaY)) {
      activeAxis.current = currentAxis;
    }
    if (!currentAxis) {
      return true;
    }
    var cancelingAxis = activeAxis.current || currentAxis;
    return handleScroll(cancelingAxis, parent, event, cancelingAxis === "h" ? deltaX : deltaY, true);
  }, []);
  var shouldPrevent = reactExports.useCallback(function(_event) {
    var event = _event;
    if (!lockStack.length || lockStack[lockStack.length - 1] !== Style2) {
      return;
    }
    var delta = "deltaY" in event ? getDeltaXY(event) : getTouchXY(event);
    var sourceEvent = shouldPreventQueue.current.filter(function(e) {
      return e.name === event.type && (e.target === event.target || event.target === e.shadowParent) && deltaCompare(e.delta, delta);
    })[0];
    if (sourceEvent && sourceEvent.should) {
      if (event.cancelable) {
        event.preventDefault();
      }
      return;
    }
    if (!sourceEvent) {
      var shardNodes = (lastProps.current.shards || []).map(extractRef).filter(Boolean).filter(function(node) {
        return node.contains(event.target);
      });
      var shouldStop = shardNodes.length > 0 ? shouldCancelEvent(event, shardNodes[0]) : !lastProps.current.noIsolation;
      if (shouldStop) {
        if (event.cancelable) {
          event.preventDefault();
        }
      }
    }
  }, []);
  var shouldCancel = reactExports.useCallback(function(name, delta, target, should) {
    var event = { name, delta, target, should, shadowParent: getOutermostShadowParent(target) };
    shouldPreventQueue.current.push(event);
    setTimeout(function() {
      shouldPreventQueue.current = shouldPreventQueue.current.filter(function(e) {
        return e !== event;
      });
    }, 1);
  }, []);
  var scrollTouchStart = reactExports.useCallback(function(event) {
    touchStartRef.current = getTouchXY(event);
    activeAxis.current = void 0;
  }, []);
  var scrollWheel = reactExports.useCallback(function(event) {
    shouldCancel(event.type, getDeltaXY(event), event.target, shouldCancelEvent(event, props.lockRef.current));
  }, []);
  var scrollTouchMove = reactExports.useCallback(function(event) {
    shouldCancel(event.type, getTouchXY(event), event.target, shouldCancelEvent(event, props.lockRef.current));
  }, []);
  reactExports.useEffect(function() {
    lockStack.push(Style2);
    props.setCallbacks({
      onScrollCapture: scrollWheel,
      onWheelCapture: scrollWheel,
      onTouchMoveCapture: scrollTouchMove
    });
    document.addEventListener("wheel", shouldPrevent, nonPassive);
    document.addEventListener("touchmove", shouldPrevent, nonPassive);
    document.addEventListener("touchstart", scrollTouchStart, nonPassive);
    return function() {
      lockStack = lockStack.filter(function(inst) {
        return inst !== Style2;
      });
      document.removeEventListener("wheel", shouldPrevent, nonPassive);
      document.removeEventListener("touchmove", shouldPrevent, nonPassive);
      document.removeEventListener("touchstart", scrollTouchStart, nonPassive);
    };
  }, []);
  var removeScrollBar = props.removeScrollBar, inert = props.inert;
  return reactExports.createElement(
    reactExports.Fragment,
    null,
    inert ? reactExports.createElement(Style2, { styles: generateStyle(id2) }) : null,
    removeScrollBar ? reactExports.createElement(RemoveScrollBar, { gapMode: props.gapMode }) : null
  );
}
function getOutermostShadowParent(node) {
  var shadowParent = null;
  while (node !== null) {
    if (node instanceof ShadowRoot) {
      shadowParent = node.host;
      node = node.host;
    }
    node = node.parentNode;
  }
  return shadowParent;
}
const SideCar = exportSidecar(effectCar, RemoveScrollSideCar);
var ReactRemoveScroll = reactExports.forwardRef(function(props, ref) {
  return reactExports.createElement(RemoveScroll, __assign({}, props, { ref, sideCar: SideCar }));
});
ReactRemoveScroll.classNames = RemoveScroll.classNames;
var PopoverContent = forwardRef((props, _2) => {
  const { as, children, className, ...otherProps } = props;
  const {
    Component: OverlayComponent,
    isOpen,
    placement,
    backdrop,
    motionProps,
    disableAnimation,
    shouldBlockScroll,
    getPopoverProps,
    getDialogProps,
    getBackdropProps,
    getContentProps,
    isNonModal,
    onClose
  } = usePopoverContext();
  const dialogRef = reactExports.useRef(null);
  const { dialogProps: ariaDialogProps, titleProps } = $40df3f8667284809$export$d55e7ee900f34e93({}, dialogRef);
  const dialogProps = getDialogProps({
    ref: dialogRef,
    ...ariaDialogProps,
    ...otherProps
  });
  const Component = as || OverlayComponent || "div";
  const content = /* @__PURE__ */ jsxRuntimeExports.jsxs(jsxRuntimeExports.Fragment, { children: [
    !isNonModal && /* @__PURE__ */ jsxRuntimeExports.jsx($86ea4cb521eb2e37$export$2317d149ed6f78c4, { onDismiss: onClose }),
    /* @__PURE__ */ jsxRuntimeExports.jsx(Component, { ...dialogProps, children: /* @__PURE__ */ jsxRuntimeExports.jsx("div", { ...getContentProps({ className }), children: typeof children === "function" ? children(titleProps) : children }) }),
    /* @__PURE__ */ jsxRuntimeExports.jsx($86ea4cb521eb2e37$export$2317d149ed6f78c4, { onDismiss: onClose })
  ] });
  const backdropContent = reactExports.useMemo(() => {
    if (backdrop === "transparent") {
      return null;
    }
    if (disableAnimation) {
      return /* @__PURE__ */ jsxRuntimeExports.jsx("div", { ...getBackdropProps() });
    }
    return /* @__PURE__ */ jsxRuntimeExports.jsx(LazyMotion, { features: domAnimation, children: /* @__PURE__ */ jsxRuntimeExports.jsx(
      m.div,
      {
        animate: "enter",
        exit: "exit",
        initial: "exit",
        variants: TRANSITION_VARIANTS.fade,
        ...getBackdropProps()
      }
    ) });
  }, [backdrop, disableAnimation, getBackdropProps]);
  const contents = /* @__PURE__ */ jsxRuntimeExports.jsx(ReactRemoveScroll, { enabled: shouldBlockScroll && isOpen, removeScrollBar: false, children: disableAnimation ? content : /* @__PURE__ */ jsxRuntimeExports.jsx(LazyMotion, { features: domAnimation, children: /* @__PURE__ */ jsxRuntimeExports.jsx(
    m.div,
    {
      animate: "enter",
      exit: "exit",
      initial: "initial",
      style: {
        ...getTransformOrigins(placement === "center" ? "top" : placement)
      },
      variants: TRANSITION_VARIANTS.scaleSpringOpacity,
      ...motionProps,
      children: content
    }
  ) }) });
  return /* @__PURE__ */ jsxRuntimeExports.jsxs("div", { ...getPopoverProps(), children: [
    backdropContent,
    contents
  ] });
});
PopoverContent.displayName = "NextUI.PopoverContent";
var popover_content_default = PopoverContent;
var PopoverTrigger = forwardRef((props, _2) => {
  const { triggerRef, getTriggerProps } = usePopoverContext();
  const { children, ...otherProps } = props;
  const child = reactExports.useMemo(() => {
    if (typeof children === "string")
      return /* @__PURE__ */ jsxRuntimeExports.jsx("p", { children });
    return reactExports.Children.only(children);
  }, [children]);
  const { onPress, isDisabled, ...restProps } = reactExports.useMemo(() => {
    return getTriggerProps($3ef42575df84b30b$export$9d1611c77c2fe928(otherProps, child.props), child.ref);
  }, [getTriggerProps, child.props, otherProps, child.ref]);
  const [, triggerChildren] = pickChildren(children, button_default);
  const { buttonProps } = useAriaButton({ onPress, isDisabled }, triggerRef);
  const hasNextUIButton = reactExports.useMemo(() => {
    return (triggerChildren == null ? void 0 : triggerChildren[0]) !== void 0;
  }, [triggerChildren]);
  return reactExports.cloneElement(
    child,
    $3ef42575df84b30b$export$9d1611c77c2fe928(restProps, hasNextUIButton ? { onPress, isDisabled } : buttonProps)
  );
});
PopoverTrigger.displayName = "NextUI.PopoverTrigger";
var popover_trigger_default = PopoverTrigger;
var Popover = forwardRef((props, ref) => {
  const { children, ...otherProps } = props;
  const context = usePopover({ ...otherProps, ref });
  const [trigger, content] = reactExports.Children.toArray(children);
  const overlay = /* @__PURE__ */ jsxRuntimeExports.jsx($337b884510726a0d$export$c6fdb837b070b4ff, { portalContainer: context.portalContainer, children: content });
  return /* @__PURE__ */ jsxRuntimeExports.jsxs(PopoverProvider, { value: context, children: [
    trigger,
    context.disableAnimation && context.isOpen ? overlay : /* @__PURE__ */ jsxRuntimeExports.jsx(AnimatePresence, { children: context.isOpen ? overlay : null })
  ] });
});
Popover.displayName = "NextUI.Popover";
var popover_default = Popover;
var [DropdownProvider, useDropdownContext] = createContext2({
  name: "DropdownContext",
  errorMessage: "useDropdownContext: `context` is undefined. Seems you forgot to wrap all popover components within `<Dropdown />`"
});
var MenuSectionBase = $9fc4852771d079eb$export$6e2c8f0811a474ce;
var menu_section_base_default = MenuSectionBase;
function MenuSelectedIcon(props) {
  const { isSelected, disableAnimation, ...otherProps } = props;
  return /* @__PURE__ */ jsxRuntimeExports.jsx(
    "svg",
    {
      "aria-hidden": "true",
      "data-selected": isSelected,
      role: "presentation",
      viewBox: "0 0 17 18",
      ...otherProps,
      children: /* @__PURE__ */ jsxRuntimeExports.jsx(
        "polyline",
        {
          fill: "none",
          points: "1 9 7 14 15 4",
          stroke: "currentColor",
          strokeDasharray: 22,
          strokeDashoffset: isSelected ? 44 : 66,
          strokeLinecap: "round",
          strokeLinejoin: "round",
          strokeWidth: 1.5,
          style: !disableAnimation ? {
            transition: "stroke-dashoffset 200ms ease"
          } : {}
        }
      )
    }
  );
}
var menuData = /* @__PURE__ */ new WeakMap();
function useMenu$1(props, state, ref) {
  let { shouldFocusWrap = true, onKeyDown, onKeyUp, ...otherProps } = props;
  if (!props["aria-label"] && !props["aria-labelledby"]) {
    console.warn("An aria-label or aria-labelledby prop is required for accessibility.");
  }
  let domProps = $65484d02dcb7eb3e$export$457c3d6518dd4c6f(props, { labelable: true });
  let { listProps } = $982254629710d113$export$b95089534ab7c1fd({
    ...otherProps,
    ref,
    selectionManager: state.selectionManager,
    collection: state.collection,
    disabledKeys: state.disabledKeys,
    shouldFocusWrap,
    linkBehavior: "override"
  });
  menuData.set(state, {
    onClose: props.onClose,
    onAction: props.onAction
  });
  return {
    menuProps: $3ef42575df84b30b$export$9d1611c77c2fe928(
      domProps,
      { onKeyDown, onKeyUp },
      {
        role: "menu",
        ...listProps,
        onKeyDown: (event) => {
          if (event.key !== "Escape") {
            if (listProps.onKeyDown) {
              listProps.onKeyDown(event);
            }
          }
        }
      }
    )
  };
}
function useMenuItem$1(props, state, ref) {
  var _a, _b;
  let {
    key,
    closeOnSelect,
    isVirtualized,
    "aria-haspopup": hasPopup,
    onPressStart: pressStartProp,
    onPressUp: pressUpProp,
    onPress,
    onPressChange,
    onPressEnd,
    onHoverStart: hoverStartProp,
    onHoverChange,
    onHoverEnd,
    onKeyDown,
    onKeyUp,
    onFocus,
    onFocusChange,
    onBlur,
    onClick
  } = props;
  let isTrigger = !!hasPopup;
  let isDisabled = (_a = props.isDisabled) != null ? _a : state.selectionManager.isDisabled(key);
  let isSelected = (_b = props.isSelected) != null ? _b : state.selectionManager.isSelected(key);
  let data = menuData.get(state);
  let item = state.collection.getItem(key);
  let onClose = props.onClose || data.onClose;
  let router2 = $ea8dcbcb9ea1b556$export$9a302a45f65d0572();
  let performAction = (e) => {
    var _a2;
    if (isTrigger) {
      return;
    }
    if ((_a2 = item == null ? void 0 : item.props) == null ? void 0 : _a2.onAction) {
      item.props.onAction();
    }
    if (props.onAction) {
      props.onAction(key, item);
    } else if (data.onAction) {
      data.onAction(key, item);
    }
    if (e.target instanceof HTMLAnchorElement) {
      router2.open(e.target, e, item.props.href, item.props.routerOptions);
    }
  };
  let role = "menuitem";
  if (!isTrigger) {
    if (state.selectionManager.selectionMode === "single") {
      role = "menuitemradio";
    } else if (state.selectionManager.selectionMode === "multiple") {
      role = "menuitemcheckbox";
    }
  }
  let labelId = $bdb11010cef70236$export$b4cc09c592e8fdb8();
  let descriptionId = $bdb11010cef70236$export$b4cc09c592e8fdb8();
  let keyboardId = $bdb11010cef70236$export$b4cc09c592e8fdb8();
  let ariaProps = {
    "aria-disabled": isDisabled || void 0,
    role,
    "aria-label": props["aria-label"],
    "aria-labelledby": labelId,
    "aria-describedby": [descriptionId, keyboardId].filter(Boolean).join(" ") || void 0,
    "aria-controls": props["aria-controls"],
    "aria-haspopup": hasPopup,
    "aria-expanded": props["aria-expanded"]
  };
  if (state.selectionManager.selectionMode !== "none" && !isTrigger) {
    ariaProps["aria-checked"] = isSelected;
  }
  if (isVirtualized) {
    ariaProps["aria-posinset"] = item == null ? void 0 : item.index;
    ariaProps["aria-setsize"] = $453cc9f0df89c0a5$export$77d5aafae4e095b2(state.collection);
  }
  let onPressStart = (e) => {
    if (e.pointerType === "keyboard") {
      performAction(e);
    }
    pressStartProp == null ? void 0 : pressStartProp(e);
  };
  let onPressUp = (e) => {
    if (e.pointerType !== "keyboard") {
      setTimeout(() => {
        performAction(e);
      });
      if (!isTrigger && onClose && (closeOnSelect != null ? closeOnSelect : state.selectionManager.selectionMode !== "multiple" || state.selectionManager.isLink(key))) {
        setTimeout(() => {
          onClose == null ? void 0 : onClose();
        });
      }
    }
    pressUpProp == null ? void 0 : pressUpProp(e);
  };
  let { itemProps, isFocused } = $880e95eb8b93ba9a$export$ecf600387e221c37({
    selectionManager: state.selectionManager,
    key,
    ref,
    shouldSelectOnPressUp: true,
    allowsDifferentPressOrigin: true,
    linkBehavior: "none"
  });
  let { pressProps, isPressed } = $f6c31cce2adf654f$export$45712eceda6fad21({
    onPressStart,
    onPress,
    onPressUp,
    onPressChange,
    onPressEnd,
    isDisabled
  });
  let { isHovered, hoverProps } = $6179b936705e76d3$export$ae780daf29e6d456({
    isDisabled,
    onHoverStart(e) {
      if (!$507fabe10e71c6fb$export$b9b3dfddab17db27()) {
        state.selectionManager.setFocused(true);
        state.selectionManager.setFocusedKey(key);
      }
      hoverStartProp == null ? void 0 : hoverStartProp(e);
    },
    onHoverChange,
    onHoverEnd
  });
  let { keyboardProps } = $46d819fcbaf35654$export$8f71654801c2f7cd({
    onKeyDown: (e) => {
      if (e.repeat) {
        e.continuePropagation();
        return;
      }
      switch (e.key) {
        case " ":
          if (!isDisabled && state.selectionManager.selectionMode === "none" && !isTrigger && closeOnSelect !== false && onClose) {
            onClose();
          }
          break;
        case "Enter":
          if (!isDisabled && closeOnSelect !== false && !isTrigger && onClose) {
            onClose();
          }
          break;
        default:
          if (!isTrigger) {
            e.continuePropagation();
          }
          onKeyDown == null ? void 0 : onKeyDown(e);
          break;
      }
    },
    onKeyUp
  });
  let { focusProps } = $a1ea59d68270f0dd$export$f8168d8dd8fd66e6({ onBlur, onFocus, onFocusChange });
  let domProps = $65484d02dcb7eb3e$export$457c3d6518dd4c6f(item.props);
  delete domProps.id;
  let linkProps = $ea8dcbcb9ea1b556$export$7e924b3091a3bd18(item.props);
  return {
    menuItemProps: {
      ...ariaProps,
      ...$3ef42575df84b30b$export$9d1611c77c2fe928(
        domProps,
        linkProps,
        isTrigger ? { onFocus: itemProps.onFocus } : itemProps,
        pressProps,
        hoverProps,
        keyboardProps,
        focusProps,
        {
          onClick: $ff5963eb1fccf552$export$e08e3b67e392101e(onClick, pressProps.onClick)
        }
      ),
      tabIndex: itemProps.tabIndex != null ? -1 : void 0
    },
    labelProps: {
      id: labelId
    },
    descriptionProps: {
      id: descriptionId
    },
    keyboardShortcutProps: {
      id: keyboardId
    },
    isHovered,
    isFocused,
    isSelected,
    isPressed,
    isDisabled
  };
}
var MOBILE_SCREEN_WIDTH = 700;
function useIsMobile() {
  let isSSR = $b5e257d569688ac6$export$535bd6ca7f90a273();
  if (isSSR || typeof window === "undefined") {
    return false;
  }
  return window.screen.width <= MOBILE_SCREEN_WIDTH;
}
function useMenuItem(originalProps) {
  var _a, _b;
  const globalContext = useProviderContext();
  const [props, variantProps2] = mapPropsVariants(originalProps, menuItem.variantKeys);
  const {
    as,
    item,
    state,
    shortcut,
    description,
    startContent,
    endContent,
    isVirtualized,
    selectedIcon,
    className,
    classNames,
    onAction,
    autoFocus,
    onClick,
    onPress,
    onPressStart,
    onPressUp,
    onPressEnd,
    onPressChange,
    hideSelectedIcon = false,
    isReadOnly = false,
    closeOnSelect,
    onClose,
    ...otherProps
  } = props;
  const disableAnimation = (_b = (_a = originalProps.disableAnimation) != null ? _a : globalContext == null ? void 0 : globalContext.disableAnimation) != null ? _b : false;
  const domRef = reactExports.useRef(null);
  const Component = as || ((otherProps == null ? void 0 : otherProps.href) ? "a" : "li");
  const shouldFilterDOMProps = typeof Component === "string";
  const { rendered, key } = item;
  const isDisabled = state.disabledKeys.has(key) || originalProps.isDisabled;
  const isSelectable = state.selectionManager.selectionMode !== "none";
  const isMobile = useIsMobile();
  const { isFocusVisible, focusProps } = $f7dceffc5ad7768b$export$4e328f61c538687f({
    autoFocus
  });
  const {
    isHovered,
    isPressed,
    isFocused,
    isSelected,
    menuItemProps,
    labelProps,
    descriptionProps,
    keyboardShortcutProps
  } = useMenuItem$1(
    {
      key,
      onClose,
      isDisabled,
      onPress,
      onClick,
      onPressStart,
      onPressUp,
      onPressEnd,
      onPressChange,
      "aria-label": props["aria-label"],
      closeOnSelect,
      isVirtualized,
      onAction
    },
    state,
    domRef
  );
  let itemProps = menuItemProps;
  const slots = reactExports.useMemo(
    () => menuItem({
      ...variantProps2,
      isDisabled,
      disableAnimation
    }),
    [objectToDeps(variantProps2), isDisabled, disableAnimation]
  );
  const baseStyles = clsx$1(classNames == null ? void 0 : classNames.base, className);
  if (isReadOnly) {
    itemProps = removeEvents(itemProps);
  }
  const getItemProps = (props2 = {}) => ({
    ref: domRef,
    ...$3ef42575df84b30b$export$9d1611c77c2fe928(
      isReadOnly ? {} : focusProps,
      filterDOMProps(otherProps, {
        enabled: shouldFilterDOMProps
      }),
      itemProps,
      props2
    ),
    "data-focus": dataAttr(isFocused),
    "data-selectable": dataAttr(isSelectable),
    "data-hover": dataAttr(isMobile ? isHovered || isPressed : isHovered),
    "data-disabled": dataAttr(isDisabled),
    "data-selected": dataAttr(isSelected),
    "data-pressed": dataAttr(isPressed),
    "data-focus-visible": dataAttr(isFocusVisible),
    className: slots.base({ class: clsx$1(baseStyles, props2.className) })
  });
  const getLabelProps = (props2 = {}) => ({
    ...$3ef42575df84b30b$export$9d1611c77c2fe928(labelProps, props2),
    className: slots.title({ class: classNames == null ? void 0 : classNames.title })
  });
  const getDescriptionProps = (props2 = {}) => ({
    ...$3ef42575df84b30b$export$9d1611c77c2fe928(descriptionProps, props2),
    className: slots.description({ class: classNames == null ? void 0 : classNames.description })
  });
  const getKeyboardShortcutProps = (props2 = {}) => ({
    ...$3ef42575df84b30b$export$9d1611c77c2fe928(keyboardShortcutProps, props2),
    className: slots.shortcut({ class: classNames == null ? void 0 : classNames.shortcut })
  });
  const getSelectedIconProps = reactExports.useCallback(
    (props2 = {}) => {
      return {
        "aria-hidden": dataAttr(true),
        "data-disabled": dataAttr(isDisabled),
        className: slots.selectedIcon({ class: classNames == null ? void 0 : classNames.selectedIcon }),
        ...props2
      };
    },
    [isDisabled, slots, classNames]
  );
  return {
    Component,
    domRef,
    slots,
    classNames,
    isSelectable,
    isSelected,
    isDisabled,
    rendered,
    shortcut,
    description,
    startContent,
    endContent,
    selectedIcon,
    disableAnimation,
    getItemProps,
    getLabelProps,
    hideSelectedIcon,
    getDescriptionProps,
    getKeyboardShortcutProps,
    getSelectedIconProps
  };
}
var MenuItem = forwardRef((props, _2) => {
  const {
    Component,
    slots,
    classNames,
    rendered,
    shortcut,
    description,
    isSelectable,
    isSelected,
    isDisabled,
    selectedIcon,
    startContent,
    endContent,
    disableAnimation,
    hideSelectedIcon,
    getItemProps,
    getLabelProps,
    getDescriptionProps,
    getKeyboardShortcutProps,
    getSelectedIconProps
  } = useMenuItem(props);
  const selectedContent = reactExports.useMemo(() => {
    const defaultIcon = /* @__PURE__ */ jsxRuntimeExports.jsx(MenuSelectedIcon, { disableAnimation, isSelected });
    if (typeof selectedIcon === "function") {
      return selectedIcon({ icon: defaultIcon, isSelected, isDisabled });
    }
    if (selectedIcon)
      return selectedIcon;
    return defaultIcon;
  }, [selectedIcon, isSelected, isDisabled, disableAnimation]);
  return /* @__PURE__ */ jsxRuntimeExports.jsxs(Component, { ...getItemProps(), children: [
    startContent,
    description ? /* @__PURE__ */ jsxRuntimeExports.jsxs("div", { className: slots.wrapper({ class: classNames == null ? void 0 : classNames.wrapper }), children: [
      /* @__PURE__ */ jsxRuntimeExports.jsx("span", { ...getLabelProps(), children: rendered }),
      /* @__PURE__ */ jsxRuntimeExports.jsx("span", { ...getDescriptionProps(), children: description })
    ] }) : /* @__PURE__ */ jsxRuntimeExports.jsx("span", { ...getLabelProps(), children: rendered }),
    shortcut && /* @__PURE__ */ jsxRuntimeExports.jsx("kbd", { ...getKeyboardShortcutProps(), children: shortcut }),
    isSelectable && !hideSelectedIcon && /* @__PURE__ */ jsxRuntimeExports.jsx("span", { ...getSelectedIconProps(), children: selectedContent }),
    endContent
  ] });
});
MenuItem.displayName = "NextUI.MenuItem";
var menu_item_default = MenuItem;
var $c0398ad35c3639b7$exports = {};
$c0398ad35c3639b7$exports = {
  "longPressMessage": `اضغط مطولاً أو اضغط على Alt + السهم لأسفل لفتح القائمة`
};
var $7af657c4165927c3$exports = {};
$7af657c4165927c3$exports = {
  "longPressMessage": `Натиснете продължително или натиснете Alt+ стрелка надолу, за да отворите менюто`
};
var $d95d4da6d531ab81$exports = {};
$d95d4da6d531ab81$exports = {
  "longPressMessage": `Dlouhým stiskem nebo stisknutím kláves Alt + šipka dolů otevřete nabídku`
};
var $24ebda9c775dca17$exports = {};
$24ebda9c775dca17$exports = {
  "longPressMessage": `Langt tryk eller tryk på Alt + pil ned for at åbne menuen`
};
var $743e0dfca6cab1e9$exports = {};
$743e0dfca6cab1e9$exports = {
  "longPressMessage": `Drücken Sie lange oder drücken Sie Alt + Nach-unten, um das Menü zu öffnen`
};
var $a2f41026e05f1c84$exports = {};
$a2f41026e05f1c84$exports = {
  "longPressMessage": `Πιέστε παρατεταμένα ή πατήστε Alt + κάτω βέλος για να ανοίξετε το μενού`
};
var $43b800e97c901737$exports = {};
$43b800e97c901737$exports = {
  "longPressMessage": `Long press or press Alt + ArrowDown to open menu`
};
var $442f5f6ac211e29f$exports = {};
$442f5f6ac211e29f$exports = {
  "longPressMessage": `Mantenga pulsado o pulse Alt + flecha abajo para abrir el menú`
};
var $dff280acfeb2d8ac$exports = {};
$dff280acfeb2d8ac$exports = {
  "longPressMessage": `Menüü avamiseks vajutage pikalt või vajutage klahve Alt + allanool`
};
var $51608325613944d7$exports = {};
$51608325613944d7$exports = {
  "longPressMessage": `Avaa valikko painamalla pohjassa tai näppäinyhdistelmällä Alt + Alanuoli`
};
var $c4a1b1eabeaa87be$exports = {};
$c4a1b1eabeaa87be$exports = {
  "longPressMessage": `Appuyez de manière prolongée ou appuyez sur Alt + Flèche vers le bas pour ouvrir le menu.`
};
var $8c74815cdee18d1b$exports = {};
$8c74815cdee18d1b$exports = {
  "longPressMessage": `לחץ לחיצה ארוכה או הקש Alt + ArrowDown כדי לפתוח את התפריט`
};
var $fd0e9ef6a7fe0ec9$exports = {};
$fd0e9ef6a7fe0ec9$exports = {
  "longPressMessage": `Dugo pritisnite ili pritisnite Alt + strelicu prema dolje za otvaranje izbornika`
};
var $a89a74a39eba465a$exports = {};
$a89a74a39eba465a$exports = {
  "longPressMessage": `Nyomja meg hosszan, vagy nyomja meg az Alt + lefele nyíl gombot a menü megnyitásához`
};
var $edc7c66594a0ae8a$exports = {};
$edc7c66594a0ae8a$exports = {
  "longPressMessage": `Premere a lungo o premere Alt + Freccia giù per aprire il menu`
};
var $f1ab51510712db52$exports = {};
$f1ab51510712db52$exports = {
  "longPressMessage": `長押しまたは Alt+下矢印キーでメニューを開く`
};
var $f9b672d9b82fa3d6$exports = {};
$f9b672d9b82fa3d6$exports = {
  "longPressMessage": `길게 누르거나 Alt + 아래쪽 화살표를 눌러 메뉴 열기`
};
var $a385f3910feda499$exports = {};
$a385f3910feda499$exports = {
  "longPressMessage": `Norėdami atidaryti meniu, nuspaudę palaikykite arba paspauskite „Alt + ArrowDown“.`
};
var $4f1bde932c441789$exports = {};
$4f1bde932c441789$exports = {
  "longPressMessage": `Lai atvērtu izvēlni, turiet nospiestu vai nospiediet taustiņu kombināciju Alt + lejupvērstā bultiņa`
};
var $914a51a8a594d5be$exports = {};
$914a51a8a594d5be$exports = {
  "longPressMessage": `Langt trykk eller trykk Alt + PilNed for å åpne menyen`
};
var $89aaf803103bb500$exports = {};
$89aaf803103bb500$exports = {
  "longPressMessage": `Druk lang op Alt + pijl-omlaag of druk op Alt om het menu te openen`
};
var $c685891476dbaaca$exports = {};
$c685891476dbaaca$exports = {
  "longPressMessage": `Naciśnij i przytrzymaj lub naciśnij klawisze Alt + Strzałka w dół, aby otworzyć menu`
};
var $885879b9b10c2959$exports = {};
$885879b9b10c2959$exports = {
  "longPressMessage": `Pressione e segure ou pressione Alt + Seta para baixo para abrir o menu`
};
var $6b39616688a51692$exports = {};
$6b39616688a51692$exports = {
  "longPressMessage": `Prima continuamente ou prima Alt + Seta Para Baixo para abrir o menu`
};
var $f26362aed63f47e2$exports = {};
$f26362aed63f47e2$exports = {
  "longPressMessage": `Apăsați lung sau apăsați pe Alt + săgeată în jos pentru a deschide meniul`
};
var $06cbade644558bf0$exports = {};
$06cbade644558bf0$exports = {
  "longPressMessage": `Нажмите и удерживайте или нажмите Alt + Стрелка вниз, чтобы открыть меню`
};
var $0a391ff68f9d59b1$exports = {};
$0a391ff68f9d59b1$exports = {
  "longPressMessage": `Ponuku otvoríte dlhým stlačením alebo stlačením klávesu Alt + klávesu so šípkou nadol`
};
var $8193cf0e649c7928$exports = {};
$8193cf0e649c7928$exports = {
  "longPressMessage": `Za odprtje menija pritisnite in držite gumb ali pritisnite Alt+puščica navzdol`
};
var $f398debcce5a5c55$exports = {};
$f398debcce5a5c55$exports = {
  "longPressMessage": `Dugo pritisnite ili pritisnite Alt + strelicu prema dole da otvorite meni`
};
var $9e9fef000aa4c013$exports = {};
$9e9fef000aa4c013$exports = {
  "longPressMessage": `Håll nedtryckt eller tryck på Alt + pil nedåt för att öppna menyn`
};
var $c016c8183bbe3d68$exports = {};
$c016c8183bbe3d68$exports = {
  "longPressMessage": `Menüyü açmak için uzun basın veya Alt + Aşağı Ok tuşuna basın`
};
var $ca4f6c8462244e62$exports = {};
$ca4f6c8462244e62$exports = {
  "longPressMessage": `Довго або звичайно натисніть комбінацію клавіш Alt і стрілка вниз, щоб відкрити меню`
};
var $2d9960c02ccac927$exports = {};
$2d9960c02ccac927$exports = {
  "longPressMessage": `长按或按 Alt + 向下方向键以打开菜单`
};
var $f1b682a4c8c5631c$exports = {};
$f1b682a4c8c5631c$exports = {
  "longPressMessage": `長按或按 Alt+向下鍵以開啟功能表`
};
var $2cbb7ca666678a14$exports = {};
$2cbb7ca666678a14$exports = {
  "ar-AE": $c0398ad35c3639b7$exports,
  "bg-BG": $7af657c4165927c3$exports,
  "cs-CZ": $d95d4da6d531ab81$exports,
  "da-DK": $24ebda9c775dca17$exports,
  "de-DE": $743e0dfca6cab1e9$exports,
  "el-GR": $a2f41026e05f1c84$exports,
  "en-US": $43b800e97c901737$exports,
  "es-ES": $442f5f6ac211e29f$exports,
  "et-EE": $dff280acfeb2d8ac$exports,
  "fi-FI": $51608325613944d7$exports,
  "fr-FR": $c4a1b1eabeaa87be$exports,
  "he-IL": $8c74815cdee18d1b$exports,
  "hr-HR": $fd0e9ef6a7fe0ec9$exports,
  "hu-HU": $a89a74a39eba465a$exports,
  "it-IT": $edc7c66594a0ae8a$exports,
  "ja-JP": $f1ab51510712db52$exports,
  "ko-KR": $f9b672d9b82fa3d6$exports,
  "lt-LT": $a385f3910feda499$exports,
  "lv-LV": $4f1bde932c441789$exports,
  "nb-NO": $914a51a8a594d5be$exports,
  "nl-NL": $89aaf803103bb500$exports,
  "pl-PL": $c685891476dbaaca$exports,
  "pt-BR": $885879b9b10c2959$exports,
  "pt-PT": $6b39616688a51692$exports,
  "ro-RO": $f26362aed63f47e2$exports,
  "ru-RU": $06cbade644558bf0$exports,
  "sk-SK": $0a391ff68f9d59b1$exports,
  "sl-SI": $8193cf0e649c7928$exports,
  "sr-SP": $f398debcce5a5c55$exports,
  "sv-SE": $9e9fef000aa4c013$exports,
  "tr-TR": $c016c8183bbe3d68$exports,
  "uk-UA": $ca4f6c8462244e62$exports,
  "zh-CN": $2d9960c02ccac927$exports,
  "zh-TW": $f1b682a4c8c5631c$exports
};
function $parcel$interopDefault(a2) {
  return a2 && a2.__esModule ? a2.default : a2;
}
function $168583247155ddda$export$dc9c12ed27dd1b49(props, state, ref) {
  let { type: type2 = "menu", isDisabled, trigger = "press" } = props;
  let menuTriggerId = $bdb11010cef70236$export$f680877a34711e37();
  let { triggerProps, overlayProps } = $628037886ba31236$export$f9d5c8beee7d008d({
    type: type2
  }, state, ref);
  let onKeyDown = (e) => {
    if (isDisabled) return;
    if (trigger === "longPress" && !e.altKey) return;
    if (ref && ref.current) switch (e.key) {
      case "Enter":
      case " ":
        if (trigger === "longPress") return;
      case "ArrowDown":
        if (!("continuePropagation" in e)) e.stopPropagation();
        e.preventDefault();
        state.toggle("first");
        break;
      case "ArrowUp":
        if (!("continuePropagation" in e)) e.stopPropagation();
        e.preventDefault();
        state.toggle("last");
        break;
      default:
        if ("continuePropagation" in e) e.continuePropagation();
    }
  };
  let stringFormatter = $fca6afa0e843324b$export$f12b703ca79dfbb1($parcel$interopDefault($2cbb7ca666678a14$exports), "@react-aria/menu");
  let { longPressProps } = $8a26561d2877236e$export$c24ed0104d07eab9({
    isDisabled: isDisabled || trigger !== "longPress",
    accessibilityDescription: stringFormatter.format("longPressMessage"),
    onLongPressStart() {
      state.close();
    },
    onLongPress() {
      state.open("first");
    }
  });
  let pressProps = {
    onPressStart(e) {
      if (e.pointerType !== "touch" && e.pointerType !== "keyboard" && !isDisabled)
        state.open(e.pointerType === "virtual" ? "first" : null);
    },
    onPress(e) {
      if (e.pointerType === "touch" && !isDisabled) state.toggle();
    }
  };
  delete triggerProps.onPress;
  return {
    menuTriggerProps: {
      ...triggerProps,
      ...trigger === "press" ? pressProps : longPressProps,
      id: menuTriggerId,
      onKeyDown
    },
    menuProps: {
      ...overlayProps,
      "aria-labelledby": menuTriggerId,
      autoFocus: state.focusStrategy || true,
      onClose: state.close
    }
  };
}
function $3e5eb2498db5b506$export$73f7a44322579622(props) {
  let { heading, "aria-label": ariaLabel } = props;
  let headingId = $bdb11010cef70236$export$f680877a34711e37();
  return {
    itemProps: {
      role: "presentation"
    },
    headingProps: heading ? {
      // Techincally, menus cannot contain headings according to ARIA.
      // We hide the heading from assistive technology, using role="presentation",
      // and only use it as a label for the nested group.
      id: headingId,
      role: "presentation"
    } : {},
    groupProps: {
      role: "group",
      "aria-label": ariaLabel,
      "aria-labelledby": heading ? headingId : void 0
    }
  };
}
var MenuSection = forwardRef(
  ({
    item,
    state,
    as,
    variant,
    color: color2,
    disableAnimation,
    onAction,
    closeOnSelect,
    className,
    classNames,
    showDivider = false,
    hideSelectedIcon,
    dividerProps = {},
    itemClasses,
    title,
    ...otherProps
  }, _2) => {
    const Component = as || "li";
    const slots = reactExports.useMemo(() => menuSection(), []);
    const baseStyles = clsx$1(classNames == null ? void 0 : classNames.base, className);
    const dividerStyles = clsx$1(classNames == null ? void 0 : classNames.divider, dividerProps == null ? void 0 : dividerProps.className);
    const { itemProps, headingProps, groupProps } = $3e5eb2498db5b506$export$73f7a44322579622({
      heading: item.rendered,
      "aria-label": item["aria-label"]
    });
    return /* @__PURE__ */ jsxRuntimeExports.jsxs(
      Component,
      {
        "data-slot": "base",
        ...$3ef42575df84b30b$export$9d1611c77c2fe928(itemProps, otherProps),
        className: slots.base({ class: baseStyles }),
        children: [
          item.rendered && /* @__PURE__ */ jsxRuntimeExports.jsx(
            "span",
            {
              ...headingProps,
              className: slots.heading({ class: classNames == null ? void 0 : classNames.heading }),
              "data-slot": "heading",
              children: item.rendered
            }
          ),
          /* @__PURE__ */ jsxRuntimeExports.jsxs(
            "ul",
            {
              ...groupProps,
              className: slots.group({ class: classNames == null ? void 0 : classNames.group }),
              "data-has-title": !!item.rendered,
              "data-slot": "group",
              children: [
                [...item.childNodes].map((node) => {
                  const { key: nodeKey, props: nodeProps } = node;
                  let menuItem2 = /* @__PURE__ */ jsxRuntimeExports.jsx(
                    menu_item_default,
                    {
                      classNames: itemClasses,
                      closeOnSelect,
                      color: color2,
                      disableAnimation,
                      hideSelectedIcon,
                      item: node,
                      state,
                      variant,
                      onAction,
                      ...nodeProps
                    },
                    nodeKey
                  );
                  if (node.wrapper) {
                    menuItem2 = node.wrapper(menuItem2);
                  }
                  return menuItem2;
                }),
                showDivider && /* @__PURE__ */ jsxRuntimeExports.jsx(
                  divider_default,
                  {
                    as: "li",
                    className: slots.divider({
                      class: dividerStyles
                    }),
                    ...dividerProps
                  }
                )
              ]
            }
          )
        ]
      }
    );
  }
);
MenuSection.displayName = "NextUI.MenuSection";
var menu_section_default = MenuSection;
function useMenu(props) {
  var _a;
  const globalContext = useProviderContext();
  const {
    as,
    ref,
    variant,
    color: color2,
    children,
    disableAnimation = (_a = globalContext == null ? void 0 : globalContext.disableAnimation) != null ? _a : false,
    onAction,
    closeOnSelect,
    itemClasses,
    className,
    state: propState,
    topContent,
    bottomContent,
    hideEmptyContent = false,
    hideSelectedIcon = false,
    emptyContent = "No items.",
    menuProps: userMenuProps,
    onClose,
    classNames,
    ...otherProps
  } = props;
  const Component = as || "ul";
  const domRef = useDOMRef(ref);
  const shouldFilterDOMProps = typeof Component === "string";
  const innerState = $875d6693e12af071$export$728d6ba534403756({ ...otherProps, ...userMenuProps, children });
  const state = propState || innerState;
  const { menuProps } = useMenu$1({ ...otherProps, ...userMenuProps }, state, domRef);
  const slots = reactExports.useMemo(() => menu({ className }), [className]);
  const baseStyles = clsx$1(classNames == null ? void 0 : classNames.base, className);
  const getBaseProps = (props2 = {}) => {
    return {
      ref: domRef,
      "data-slot": "base",
      className: slots.base({ class: baseStyles }),
      ...filterDOMProps(otherProps, {
        enabled: shouldFilterDOMProps
      }),
      ...props2
    };
  };
  const getListProps = (props2 = {}) => {
    return {
      "data-slot": "list",
      className: slots.list({ class: classNames == null ? void 0 : classNames.list }),
      ...menuProps,
      ...props2
    };
  };
  const getEmptyContentProps = (props2 = {}) => {
    return {
      children: emptyContent,
      className: slots.emptyContent({ class: classNames == null ? void 0 : classNames.emptyContent }),
      ...props2
    };
  };
  return {
    Component,
    state,
    variant,
    color: color2,
    disableAnimation,
    onAction,
    onClose,
    topContent,
    bottomContent,
    closeOnSelect,
    className,
    itemClasses,
    getBaseProps,
    getListProps,
    hideEmptyContent,
    hideSelectedIcon,
    getEmptyContentProps
  };
}
function Menu(props, ref) {
  const {
    Component,
    state,
    closeOnSelect,
    color: color2,
    disableAnimation,
    hideSelectedIcon,
    hideEmptyContent,
    variant,
    onClose,
    onAction,
    topContent,
    bottomContent,
    itemClasses,
    getBaseProps,
    getListProps,
    getEmptyContentProps
  } = useMenu({ ...props, ref });
  const content = /* @__PURE__ */ jsxRuntimeExports.jsxs(Component, { ...getListProps(), children: [
    !state.collection.size && !hideEmptyContent && /* @__PURE__ */ jsxRuntimeExports.jsx("li", { children: /* @__PURE__ */ jsxRuntimeExports.jsx("div", { ...getEmptyContentProps() }) }),
    [...state.collection].map((item) => {
      const itemProps = {
        closeOnSelect,
        color: color2,
        disableAnimation,
        item,
        state,
        variant,
        onClose,
        onAction,
        hideSelectedIcon,
        ...item.props
      };
      if (item.type === "section") {
        return /* @__PURE__ */ jsxRuntimeExports.jsx(menu_section_default, { ...itemProps, itemClasses }, item.key);
      }
      let menuItem2 = /* @__PURE__ */ jsxRuntimeExports.jsx(menu_item_default, { ...itemProps, classNames: itemClasses }, item.key);
      if (item.wrapper) {
        menuItem2 = item.wrapper(menuItem2);
      }
      return menuItem2;
    })
  ] });
  return /* @__PURE__ */ jsxRuntimeExports.jsxs("div", { ...getBaseProps(), children: [
    topContent,
    content,
    bottomContent
  ] });
}
var menu_default = forwardRef(Menu);
Menu.displayName = "NextUI.Menu";
var MenuItemBase = $c1d7fb2ec91bae71$export$6d08773d2e66f8f2;
var menu_item_base_default = MenuItemBase;
function DropdownMenu(props, ref) {
  const { getMenuProps } = useDropdownContext();
  return /* @__PURE__ */ jsxRuntimeExports.jsx(popover_content_default, { children: /* @__PURE__ */ jsxRuntimeExports.jsx($9bf71ea28793e738$export$20e40289641fbbb6, { contain: true, restoreFocus: true, children: /* @__PURE__ */ jsxRuntimeExports.jsx(menu_default, { ...getMenuProps(props, ref) }) }) });
}
var dropdown_menu_default = forwardRef(DropdownMenu);
DropdownMenu.displayName = "NextUI.DropdownMenu";
var DropdownTrigger = forwardRef((props, _2) => {
  const { getMenuTriggerProps } = useDropdownContext();
  const { children, ...otherProps } = props;
  return /* @__PURE__ */ jsxRuntimeExports.jsx(popover_trigger_default, { ...getMenuTriggerProps(otherProps), children });
});
DropdownTrigger.displayName = "NextUI.DropdownTrigger";
var dropdown_trigger_default = DropdownTrigger;
function $a28c903ee9ad8dc5$export$79fefeb1c2091ac3(props) {
  let overlayTriggerState = $fc909762b330b746$export$61c6a8c84e605fb6(props);
  let [focusStrategy, setFocusStrategy] = reactExports.useState(null);
  let [expandedKeysStack, setExpandedKeysStack] = reactExports.useState([]);
  let closeAll = () => {
    setExpandedKeysStack([]);
    overlayTriggerState.close();
  };
  let openSubmenu = (triggerKey, level) => {
    setExpandedKeysStack((oldStack) => {
      if (level > oldStack.length) return oldStack;
      return [
        ...oldStack.slice(0, level),
        triggerKey
      ];
    });
  };
  let closeSubmenu = (triggerKey, level) => {
    setExpandedKeysStack((oldStack) => {
      let key = oldStack[level];
      if (key === triggerKey) return oldStack.slice(0, level);
      else return oldStack;
    });
  };
  return {
    focusStrategy,
    ...overlayTriggerState,
    open(focusStrategy2 = null) {
      setFocusStrategy(focusStrategy2);
      overlayTriggerState.open();
    },
    toggle(focusStrategy2 = null) {
      setFocusStrategy(focusStrategy2);
      overlayTriggerState.toggle();
    },
    close() {
      closeAll();
    },
    expandedKeysStack,
    openSubmenu,
    closeSubmenu
  };
}
var getMenuItem = (props, key) => {
  if (props) {
    const mergedChildren = Array.isArray(props.children) ? props.children : [...(props == null ? void 0 : props.items) || []];
    if (mergedChildren && mergedChildren.length) {
      const item = mergedChildren.find((item2) => {
        if (item2.key === key) {
          return item2;
        }
      }) || {};
      return item;
    }
  }
  return null;
};
var getCloseOnSelect = (props, key, item) => {
  const mergedItem = item || getMenuItem(props, key);
  if (mergedItem && mergedItem.props && "closeOnSelect" in mergedItem.props) {
    return mergedItem.props.closeOnSelect;
  }
  return props == null ? void 0 : props.closeOnSelect;
};
function useDropdown(props) {
  var _a;
  const globalContext = useProviderContext();
  const {
    as,
    triggerRef: triggerRefProp,
    isOpen,
    defaultOpen,
    onOpenChange,
    isDisabled,
    type: type2 = "menu",
    trigger = "press",
    placement = "bottom",
    closeOnSelect = true,
    shouldBlockScroll = true,
    classNames: classNamesProp,
    disableAnimation = (_a = globalContext == null ? void 0 : globalContext.disableAnimation) != null ? _a : false,
    onClose,
    className,
    ...otherProps
  } = props;
  const Component = as || "div";
  const triggerRef = reactExports.useRef(null);
  const menuTriggerRef = triggerRefProp || triggerRef;
  const menuRef = reactExports.useRef(null);
  const popoverRef = reactExports.useRef(null);
  const state = $a28c903ee9ad8dc5$export$79fefeb1c2091ac3({
    trigger,
    isOpen,
    defaultOpen,
    onOpenChange: (isOpen2) => {
      onOpenChange == null ? void 0 : onOpenChange(isOpen2);
      if (!isOpen2) {
        onClose == null ? void 0 : onClose();
      }
    }
  });
  const { menuTriggerProps, menuProps } = $168583247155ddda$export$dc9c12ed27dd1b49(
    { type: type2, trigger, isDisabled },
    state,
    menuTriggerRef
  );
  const classNames = reactExports.useMemo(
    () => dropdown({
      className
    }),
    [className]
  );
  const onMenuAction = (menuCloseOnSelect) => {
    if (menuCloseOnSelect !== void 0 && !menuCloseOnSelect) {
      return;
    }
    if (closeOnSelect) {
      state.close();
    }
  };
  const getPopoverProps = (props2 = {}) => {
    const popoverProps = $3ef42575df84b30b$export$9d1611c77c2fe928(otherProps, props2);
    return {
      state,
      placement,
      ref: popoverRef,
      disableAnimation,
      shouldBlockScroll,
      scrollRef: menuRef,
      triggerRef: menuTriggerRef,
      ...popoverProps,
      classNames: {
        ...classNamesProp,
        ...props2.classNames,
        content: clsx$1(classNames, classNamesProp == null ? void 0 : classNamesProp.content, props2.className)
      },
      shouldCloseOnInteractOutside: (popoverProps == null ? void 0 : popoverProps.shouldCloseOnInteractOutside) ? popoverProps.shouldCloseOnInteractOutside : (element) => ariaShouldCloseOnInteractOutside(element, triggerRef, state)
    };
  };
  const getMenuTriggerProps = (originalProps = {}, _ref = null) => {
    const { onPress, onPressStart, ...otherMenuTriggerProps } = menuTriggerProps;
    return {
      ...$3ef42575df84b30b$export$9d1611c77c2fe928(otherMenuTriggerProps, { isDisabled }, originalProps),
      ref: mergeRefs(_ref, triggerRef)
    };
  };
  const getMenuProps = (props2, _ref = null) => {
    return {
      ref: mergeRefs(_ref, menuRef),
      menuProps,
      closeOnSelect,
      ...$3ef42575df84b30b$export$9d1611c77c2fe928(props2, {
        onAction: (key, item) => {
          const closeOnSelect2 = getCloseOnSelect(props2, key, item);
          onMenuAction(closeOnSelect2);
        },
        onClose: state.close
      })
    };
  };
  return {
    Component,
    menuRef,
    menuProps,
    classNames,
    closeOnSelect,
    onClose: state.close,
    autoFocus: state.focusStrategy || true,
    disableAnimation,
    getPopoverProps,
    getMenuProps,
    getMenuTriggerProps
  };
}
var Dropdown = (props) => {
  const { children, ...otherProps } = props;
  const context = useDropdown(otherProps);
  const [menuTrigger, menu2] = React$1.Children.toArray(children);
  return /* @__PURE__ */ jsxRuntimeExports.jsx(DropdownProvider, { value: context, children: /* @__PURE__ */ jsxRuntimeExports.jsxs(popover_default, { ...context.getPopoverProps(), children: [
    menuTrigger,
    menu2
  ] }) });
};
Dropdown.displayName = "NextUI.Dropdown";
var dropdown_default = Dropdown;
function useImage(originalProps) {
  var _a, _b;
  const globalContext = useProviderContext();
  const [props, variantProps2] = mapPropsVariants(originalProps, image.variantKeys);
  const {
    ref,
    as,
    src,
    className,
    classNames,
    loading,
    isBlurred,
    fallbackSrc,
    isLoading: isLoadingProp,
    disableSkeleton = !!fallbackSrc,
    removeWrapper = false,
    onError,
    onLoad,
    srcSet,
    sizes,
    crossOrigin,
    ...otherProps
  } = props;
  const imageStatus = useImage$1({
    src,
    loading,
    onError,
    onLoad,
    ignoreFallback: false,
    srcSet,
    sizes,
    crossOrigin
  });
  const disableAnimation = (_b = (_a = originalProps.disableAnimation) != null ? _a : globalContext == null ? void 0 : globalContext.disableAnimation) != null ? _b : false;
  const isImgLoaded = imageStatus === "loaded" && !isLoadingProp;
  const isLoading = imageStatus === "loading" || isLoadingProp;
  const isZoomed = originalProps.isZoomed;
  const Component = as || "img";
  const domRef = useDOMRef(ref);
  const { w: w2, h } = reactExports.useMemo(() => {
    return {
      w: props.width ? typeof props.width === "number" ? `${props.width}px` : props.width : "fit-content",
      h: props.height ? typeof props.height === "number" ? `${props.height}px` : props.height : "auto"
    };
  }, [props == null ? void 0 : props.width, props == null ? void 0 : props.height]);
  const showFallback = (!src || !isImgLoaded) && !!fallbackSrc;
  const showSkeleton = isLoading && !disableSkeleton;
  const slots = reactExports.useMemo(
    () => image({
      ...variantProps2,
      disableAnimation,
      showSkeleton
    }),
    [objectToDeps(variantProps2), disableAnimation, showSkeleton]
  );
  const baseStyles = clsx$1(className, classNames == null ? void 0 : classNames.img);
  const getImgProps = (props2 = {}) => {
    const imgStyles = clsx$1(baseStyles, props2 == null ? void 0 : props2.className);
    return {
      src,
      ref: domRef,
      "data-loaded": dataAttr(isImgLoaded),
      className: slots.img({ class: imgStyles }),
      loading,
      srcSet,
      sizes,
      crossOrigin,
      ...otherProps,
      style: {
        ...(otherProps == null ? void 0 : otherProps.height) && { height: h },
        ...props2.style,
        ...otherProps.style
      }
    };
  };
  const getWrapperProps = reactExports.useCallback(() => {
    const fallbackStyle = showFallback ? {
      backgroundImage: `url(${fallbackSrc})`
    } : {};
    return {
      className: slots.wrapper({ class: classNames == null ? void 0 : classNames.wrapper }),
      style: {
        ...fallbackStyle,
        maxWidth: w2
      }
    };
  }, [slots, showFallback, fallbackSrc, classNames == null ? void 0 : classNames.wrapper]);
  const getBlurredImgProps = reactExports.useCallback(() => {
    return {
      src,
      "aria-hidden": dataAttr(true),
      className: slots.blurredImg({ class: classNames == null ? void 0 : classNames.blurredImg })
    };
  }, [slots, src, classNames == null ? void 0 : classNames.blurredImg]);
  return {
    Component,
    domRef,
    slots,
    classNames,
    isBlurred,
    disableSkeleton,
    fallbackSrc,
    removeWrapper,
    isZoomed,
    isLoading,
    getImgProps,
    getWrapperProps,
    getBlurredImgProps
  };
}
var Image$1 = forwardRef((props, ref) => {
  const {
    Component,
    domRef,
    slots,
    classNames,
    isBlurred,
    isZoomed,
    fallbackSrc,
    removeWrapper,
    disableSkeleton,
    getImgProps,
    getWrapperProps,
    getBlurredImgProps
  } = useImage({
    ...props,
    ref
  });
  const img = /* @__PURE__ */ jsxRuntimeExports.jsx(Component, { ref: domRef, ...getImgProps() });
  if (removeWrapper) {
    return img;
  }
  const zoomed = /* @__PURE__ */ jsxRuntimeExports.jsx("div", { className: slots.zoomedWrapper({ class: classNames == null ? void 0 : classNames.zoomedWrapper }), children: img });
  if (isBlurred) {
    return /* @__PURE__ */ jsxRuntimeExports.jsxs("div", { ...getWrapperProps(), children: [
      isZoomed ? zoomed : img,
      reactExports.cloneElement(img, getBlurredImgProps())
    ] });
  }
  if (isZoomed || !disableSkeleton || fallbackSrc) {
    return /* @__PURE__ */ jsxRuntimeExports.jsxs("div", { ...getWrapperProps(), children: [
      " ",
      isZoomed ? zoomed : img
    ] });
  }
  return img;
});
Image$1.displayName = "NextUI.Image";
var image_default = Image$1;
var [NavbarProvider, useNavbarContext] = createContext2({
  name: "NavbarContext",
  strict: true,
  errorMessage: "useNavbarContext: `context` is undefined. Seems you forgot to wrap component within <Navbar />"
});
var menuVariants = {
  enter: {
    height: "calc(100vh - var(--navbar-height))",
    transition: {
      duration: 0.3,
      easings: "easeOut"
    }
  },
  exit: {
    height: 0,
    transition: {
      duration: 0.25,
      easings: "easeIn"
    }
  }
};
var NavbarMenu = forwardRef((props, ref) => {
  var _a, _b;
  const { className, children, portalContainer, motionProps, style, ...otherProps } = props;
  const domRef = useDOMRef(ref);
  const { slots, isMenuOpen, height, disableAnimation, classNames } = useNavbarContext();
  const styles = clsx$1(classNames == null ? void 0 : classNames.menu, className);
  const MenuWrapper = reactExports.useCallback(
    ({ children: children2 }) => {
      return /* @__PURE__ */ jsxRuntimeExports.jsx(ReactRemoveScroll, { forwardProps: true, enabled: isMenuOpen, removeScrollBar: false, children: children2 });
    },
    [isMenuOpen]
  );
  const contents = disableAnimation ? /* @__PURE__ */ jsxRuntimeExports.jsx(MenuWrapper, { children: /* @__PURE__ */ jsxRuntimeExports.jsx(
    "ul",
    {
      ref: domRef,
      className: (_a = slots.menu) == null ? void 0 : _a.call(slots, { class: styles }),
      "data-open": dataAttr(isMenuOpen),
      style: {
        "--navbar-height": typeof height === "number" ? `${height}px` : height
      },
      ...otherProps,
      children
    }
  ) }) : /* @__PURE__ */ jsxRuntimeExports.jsx(AnimatePresence, { mode: "wait", children: isMenuOpen ? /* @__PURE__ */ jsxRuntimeExports.jsx(LazyMotion, { features: domAnimation, children: /* @__PURE__ */ jsxRuntimeExports.jsx(MenuWrapper, { children: /* @__PURE__ */ jsxRuntimeExports.jsx(
    m.ul,
    {
      ref: domRef,
      layoutScroll: true,
      animate: "enter",
      className: (_b = slots.menu) == null ? void 0 : _b.call(slots, { class: styles }),
      "data-open": dataAttr(isMenuOpen),
      exit: "exit",
      initial: "exit",
      style: {
        "--navbar-height": typeof height === "number" ? `${height}px` : height,
        ...style
      },
      variants: menuVariants,
      ...$3ef42575df84b30b$export$9d1611c77c2fe928(motionProps, otherProps),
      children
    }
  ) }) }) : null });
  return /* @__PURE__ */ jsxRuntimeExports.jsx($337b884510726a0d$export$c6fdb837b070b4ff, { portalContainer, children: contents });
});
NavbarMenu.displayName = "NextUI.NavbarMenu";
var navbar_menu_default = NavbarMenu;
var hideOnScrollVariants = {
  visible: {
    y: 0,
    transition: {
      ease: TRANSITION_EASINGS.easeOut
    }
  },
  hidden: {
    y: "-100%",
    transition: {
      ease: TRANSITION_EASINGS.easeIn
    }
  }
};
var isBrowser = typeof window !== "undefined";
function getScrollPosition(element) {
  if (!isBrowser)
    return { x: 0, y: 0 };
  if (!element) {
    return { x: window.scrollX, y: window.scrollY };
  }
  return { x: element.scrollLeft, y: element.scrollTop };
}
var useScrollPosition = (props) => {
  const { elementRef, delay = 30, callback, isEnabled } = props;
  const position = reactExports.useRef(
    isEnabled ? getScrollPosition(elementRef == null ? void 0 : elementRef.current) : { x: 0, y: 0 }
  );
  const throttleTimeout = reactExports.useRef(null);
  const handler = reactExports.useCallback(() => {
    const currPos = getScrollPosition(elementRef == null ? void 0 : elementRef.current);
    if (typeof callback === "function") {
      callback({ prevPos: position.current, currPos });
    }
    position.current = currPos;
    throttleTimeout.current = null;
  }, [callback, elementRef]);
  reactExports.useEffect(() => {
    if (!isEnabled)
      return;
    const handleScroll2 = () => {
      if (delay) {
        if (throttleTimeout.current) {
          clearTimeout(throttleTimeout.current);
        }
        throttleTimeout.current = setTimeout(handler, delay);
      } else {
        handler();
      }
    };
    const target = (elementRef == null ? void 0 : elementRef.current) || window;
    target.addEventListener("scroll", handleScroll2);
    return () => {
      target.removeEventListener("scroll", handleScroll2);
      if (throttleTimeout.current) {
        clearTimeout(throttleTimeout.current);
        throttleTimeout.current = null;
      }
    };
  }, [elementRef == null ? void 0 : elementRef.current, delay, handler, isEnabled]);
  return position.current;
};
function useNavbar(originalProps) {
  var _a, _b;
  const globalContext = useProviderContext();
  const [props, variantProps2] = mapPropsVariants(originalProps, navbar.variantKeys);
  const {
    ref,
    as,
    parentRef,
    height = "4rem",
    shouldHideOnScroll = false,
    disableScrollHandler = false,
    onScrollPositionChange,
    isMenuOpen: isMenuOpenProp,
    isMenuDefaultOpen,
    onMenuOpenChange = () => {
    },
    motionProps,
    className,
    classNames,
    ...otherProps
  } = props;
  const Component = as || "nav";
  const disableAnimation = (_b = (_a = originalProps.disableAnimation) != null ? _a : globalContext == null ? void 0 : globalContext.disableAnimation) != null ? _b : false;
  const domRef = useDOMRef(ref);
  const prevWidth = reactExports.useRef(0);
  const navHeight = reactExports.useRef(0);
  const [isHidden, setIsHidden] = reactExports.useState(false);
  const handleMenuOpenChange = reactExports.useCallback(
    (isOpen) => {
      onMenuOpenChange(isOpen || false);
    },
    [onMenuOpenChange]
  );
  const [isMenuOpen, setIsMenuOpen] = $458b0a5536c1a7cf$export$40bfa8c7b0832715$1(
    isMenuOpenProp,
    isMenuDefaultOpen != null ? isMenuDefaultOpen : false,
    handleMenuOpenChange
  );
  const updateWidth = () => {
    if (domRef.current) {
      const width = domRef.current.offsetWidth;
      if (width !== prevWidth.current) {
        prevWidth.current = width;
      }
    }
  };
  $9daab02d461809db$export$683480f191c0e3ea({
    ref: domRef,
    onResize: () => {
      var _a2;
      const currentWidth = (_a2 = domRef.current) == null ? void 0 : _a2.offsetWidth;
      if (currentWidth !== prevWidth.current) {
        updateWidth();
        setIsMenuOpen(false);
      }
    }
  });
  reactExports.useEffect(() => {
    var _a2;
    updateWidth();
    navHeight.current = ((_a2 = domRef.current) == null ? void 0 : _a2.offsetHeight) || 0;
  }, []);
  const slots = reactExports.useMemo(
    () => navbar({
      ...variantProps2,
      disableAnimation,
      hideOnScroll: shouldHideOnScroll
    }),
    [objectToDeps(variantProps2), disableAnimation, shouldHideOnScroll]
  );
  const baseStyles = clsx$1(classNames == null ? void 0 : classNames.base, className);
  useScrollPosition({
    elementRef: parentRef,
    isEnabled: shouldHideOnScroll || !disableScrollHandler,
    callback: ({ prevPos, currPos }) => {
      onScrollPositionChange == null ? void 0 : onScrollPositionChange(currPos.y);
      if (shouldHideOnScroll) {
        setIsHidden((prev) => {
          const next = currPos.y > prevPos.y && currPos.y > navHeight.current;
          return next !== prev ? next : prev;
        });
      }
    }
  });
  const getBaseProps = (props2 = {}) => ({
    ...$3ef42575df84b30b$export$9d1611c77c2fe928(otherProps, props2),
    "data-hidden": dataAttr(isHidden),
    "data-menu-open": dataAttr(isMenuOpen),
    ref: domRef,
    className: slots.base({ class: clsx$1(baseStyles, props2 == null ? void 0 : props2.className) }),
    style: {
      "--navbar-height": typeof height === "number" ? `${height}px` : height,
      ...otherProps == null ? void 0 : otherProps.style,
      ...props2 == null ? void 0 : props2.style
    }
  });
  const getWrapperProps = (props2 = {}) => ({
    ...props2,
    "data-menu-open": dataAttr(isMenuOpen),
    className: slots.wrapper({ class: clsx$1(classNames == null ? void 0 : classNames.wrapper, props2 == null ? void 0 : props2.className) })
  });
  return {
    Component,
    slots,
    domRef,
    height,
    isHidden,
    disableAnimation,
    shouldHideOnScroll,
    isMenuOpen,
    classNames,
    setIsMenuOpen,
    motionProps,
    getBaseProps,
    getWrapperProps
  };
}
var Navbar = forwardRef((props, ref) => {
  const { children, ...otherProps } = props;
  const context = useNavbar({ ...otherProps, ref });
  const Component = context.Component;
  const [childrenWithoutMenu, menu2] = pickChildren(children, navbar_menu_default);
  const content = /* @__PURE__ */ jsxRuntimeExports.jsxs(jsxRuntimeExports.Fragment, { children: [
    /* @__PURE__ */ jsxRuntimeExports.jsx("header", { ...context.getWrapperProps(), children: childrenWithoutMenu }),
    menu2
  ] });
  return /* @__PURE__ */ jsxRuntimeExports.jsx(NavbarProvider, { value: context, children: context.shouldHideOnScroll ? /* @__PURE__ */ jsxRuntimeExports.jsx(LazyMotion, { features: domAnimation, children: /* @__PURE__ */ jsxRuntimeExports.jsx(
    m.nav,
    {
      animate: context.isHidden ? "hidden" : "visible",
      initial: false,
      variants: hideOnScrollVariants,
      ...$3ef42575df84b30b$export$9d1611c77c2fe928(context.getBaseProps(), context.motionProps),
      children: content
    }
  ) }) : /* @__PURE__ */ jsxRuntimeExports.jsx(Component, { ...context.getBaseProps(), children: content }) });
});
Navbar.displayName = "NextUI.Navbar";
var navbar_default = Navbar;
var NavbarContent = forwardRef((props, ref) => {
  var _a;
  const { as, className, children, justify = "start", ...otherProps } = props;
  const Component = as || "ul";
  const domRef = useDOMRef(ref);
  const { slots, classNames } = useNavbarContext();
  const styles = clsx$1(classNames == null ? void 0 : classNames.content, className);
  return /* @__PURE__ */ jsxRuntimeExports.jsx(
    Component,
    {
      ref: domRef,
      className: (_a = slots.content) == null ? void 0 : _a.call(slots, { class: styles }),
      "data-justify": justify,
      ...otherProps,
      children
    }
  );
});
NavbarContent.displayName = "NextUI.NavbarContent";
var navbar_content_default = NavbarContent;
var NavbarItem = forwardRef((props, ref) => {
  var _a;
  const { as, className, children, isActive: isActive2, ...otherProps } = props;
  const Component = as || "li";
  const domRef = useDOMRef(ref);
  const { slots, classNames } = useNavbarContext();
  const styles = clsx$1(classNames == null ? void 0 : classNames.item, className);
  return /* @__PURE__ */ jsxRuntimeExports.jsx(
    Component,
    {
      ref: domRef,
      className: (_a = slots.item) == null ? void 0 : _a.call(slots, { class: styles }),
      "data-active": dataAttr(isActive2),
      ...otherProps,
      children
    }
  );
});
NavbarItem.displayName = "NextUI.NavbarItem";
var navbar_item_default = NavbarItem;
const $aa519ee6cf463259$export$d6c8d9636a3dc49c = /* @__PURE__ */ new WeakMap();
function $aa519ee6cf463259$export$68e648cbec363a18(state, index) {
  let data = $aa519ee6cf463259$export$d6c8d9636a3dc49c.get(state);
  if (!data) throw new Error("Unknown slider state");
  return `${data.id}-${index}`;
}
function $bcca50147b47f54d$export$56b2c08e277f365(props, state, trackRef) {
  let { labelProps, fieldProps } = $d191a55c9702f145$export$8467354a121f1b9f(props);
  let isVertical = props.orientation === "vertical";
  var _labelProps_id;
  $aa519ee6cf463259$export$d6c8d9636a3dc49c.set(state, {
    id: (_labelProps_id = labelProps.id) !== null && _labelProps_id !== void 0 ? _labelProps_id : fieldProps.id,
    "aria-describedby": props["aria-describedby"],
    "aria-details": props["aria-details"]
  });
  let { direction } = $18f2051aff69b9bf$export$43bb16f9c6d9e3f7();
  let { addGlobalListener, removeGlobalListener } = $03deb23ff14920c4$export$4eaf04e54aa8eed6();
  const realTimeTrackDraggingIndex = reactExports.useRef(null);
  const reverseX = direction === "rtl";
  const currentPosition = reactExports.useRef(null);
  const { moveProps } = $e8a7022cf87cba2a$export$36da96379f79f245({
    onMoveStart() {
      currentPosition.current = null;
    },
    onMove({ deltaX, deltaY }) {
      let { height, width } = trackRef.current.getBoundingClientRect();
      let size2 = isVertical ? height : width;
      if (currentPosition.current == null) currentPosition.current = state.getThumbPercent(realTimeTrackDraggingIndex.current) * size2;
      let delta = isVertical ? deltaY : deltaX;
      if (isVertical || reverseX) delta = -delta;
      currentPosition.current += delta;
      if (realTimeTrackDraggingIndex.current != null && trackRef.current) {
        const percent2 = $9446cca9a3875146$export$7d15b64cf5a3a4c4(currentPosition.current / size2, 0, 1);
        state.setThumbPercent(realTimeTrackDraggingIndex.current, percent2);
      }
    },
    onMoveEnd() {
      if (realTimeTrackDraggingIndex.current != null) {
        state.setThumbDragging(realTimeTrackDraggingIndex.current, false);
        realTimeTrackDraggingIndex.current = null;
      }
    }
  });
  let currentPointer = reactExports.useRef(void 0);
  let onDownTrack = (e, id2, clientX, clientY) => {
    if (trackRef.current && !props.isDisabled && state.values.every((_2, i) => !state.isThumbDragging(i))) {
      let { height, width, top, left } = trackRef.current.getBoundingClientRect();
      let size2 = isVertical ? height : width;
      const trackPosition = isVertical ? top : left;
      const clickPosition = isVertical ? clientY : clientX;
      const offset = clickPosition - trackPosition;
      let percent2 = offset / size2;
      if (direction === "rtl" || isVertical) percent2 = 1 - percent2;
      let value = state.getPercentValue(percent2);
      let closestThumb;
      let split = state.values.findIndex((v2) => value - v2 < 0);
      if (split === 0) closestThumb = split;
      else if (split === -1) closestThumb = state.values.length - 1;
      else {
        let lastLeft = state.values[split - 1];
        let firstRight = state.values[split];
        if (Math.abs(lastLeft - value) < Math.abs(firstRight - value)) closestThumb = split - 1;
        else closestThumb = split;
      }
      if (closestThumb >= 0 && state.isThumbEditable(closestThumb)) {
        e.preventDefault();
        realTimeTrackDraggingIndex.current = closestThumb;
        state.setFocusedThumb(closestThumb);
        currentPointer.current = id2;
        state.setThumbDragging(realTimeTrackDraggingIndex.current, true);
        state.setThumbValue(closestThumb, value);
        addGlobalListener(window, "mouseup", onUpTrack, false);
        addGlobalListener(window, "touchend", onUpTrack, false);
        addGlobalListener(window, "pointerup", onUpTrack, false);
      } else realTimeTrackDraggingIndex.current = null;
    }
  };
  let onUpTrack = (e) => {
    var _e_changedTouches;
    var _e_pointerId;
    let id2 = (_e_pointerId = e.pointerId) !== null && _e_pointerId !== void 0 ? _e_pointerId : (_e_changedTouches = e.changedTouches) === null || _e_changedTouches === void 0 ? void 0 : _e_changedTouches[0].identifier;
    if (id2 === currentPointer.current) {
      if (realTimeTrackDraggingIndex.current != null) {
        state.setThumbDragging(realTimeTrackDraggingIndex.current, false);
        realTimeTrackDraggingIndex.current = null;
      }
      removeGlobalListener(window, "mouseup", onUpTrack, false);
      removeGlobalListener(window, "touchend", onUpTrack, false);
      removeGlobalListener(window, "pointerup", onUpTrack, false);
    }
  };
  if ("htmlFor" in labelProps && labelProps.htmlFor) {
    delete labelProps.htmlFor;
    labelProps.onClick = () => {
      var _document_getElementById;
      (_document_getElementById = document.getElementById($aa519ee6cf463259$export$68e648cbec363a18(state, 0))) === null || _document_getElementById === void 0 ? void 0 : _document_getElementById.focus();
      $507fabe10e71c6fb$export$8397ddfc504fdb9a("keyboard");
    };
  }
  return {
    labelProps,
    // The root element of the Slider will have role="group" to group together
    // all the thumb inputs in the Slider.  The label of the Slider will
    // be used to label the group.
    groupProps: {
      role: "group",
      ...fieldProps
    },
    trackProps: $3ef42575df84b30b$export$9d1611c77c2fe928({
      onMouseDown(e) {
        if (e.button !== 0 || e.altKey || e.ctrlKey || e.metaKey) return;
        onDownTrack(e, void 0, e.clientX, e.clientY);
      },
      onPointerDown(e) {
        if (e.pointerType === "mouse" && (e.button !== 0 || e.altKey || e.ctrlKey || e.metaKey)) return;
        onDownTrack(e, e.pointerId, e.clientX, e.clientY);
      },
      onTouchStart(e) {
        onDownTrack(e, e.changedTouches[0].identifier, e.changedTouches[0].clientX, e.changedTouches[0].clientY);
      },
      style: {
        position: "relative",
        touchAction: "none"
      }
    }, moveProps),
    outputProps: {
      htmlFor: state.values.map((_2, index) => $aa519ee6cf463259$export$68e648cbec363a18(state, index)).join(" "),
      "aria-live": "off"
    }
  };
}
function $47b897dc8cdb026b$export$8d15029008292ae(opts, state) {
  let { index = 0, isRequired, validationState, isInvalid, trackRef, inputRef, orientation = state.orientation, name } = opts;
  let isDisabled = opts.isDisabled || state.isDisabled;
  let isVertical = orientation === "vertical";
  let { direction } = $18f2051aff69b9bf$export$43bb16f9c6d9e3f7();
  let { addGlobalListener, removeGlobalListener } = $03deb23ff14920c4$export$4eaf04e54aa8eed6();
  let data = $aa519ee6cf463259$export$d6c8d9636a3dc49c.get(state);
  var _opts_arialabelledby;
  const { labelProps, fieldProps } = $d191a55c9702f145$export$8467354a121f1b9f({
    ...opts,
    id: $aa519ee6cf463259$export$68e648cbec363a18(state, index),
    "aria-labelledby": `${data.id} ${(_opts_arialabelledby = opts["aria-labelledby"]) !== null && _opts_arialabelledby !== void 0 ? _opts_arialabelledby : ""}`.trim()
  });
  const value = state.values[index];
  const focusInput = reactExports.useCallback(() => {
    if (inputRef.current) $7215afc6de606d6b$export$de79e2c695e052f3(inputRef.current);
  }, [
    inputRef
  ]);
  const isFocused = state.focusedThumb === index;
  reactExports.useEffect(() => {
    if (isFocused) focusInput();
  }, [
    isFocused,
    focusInput
  ]);
  let reverseX = direction === "rtl";
  let currentPosition = reactExports.useRef(null);
  let { keyboardProps } = $46d819fcbaf35654$export$8f71654801c2f7cd({
    onKeyDown(e) {
      let { getThumbMaxValue, getThumbMinValue, decrementThumb, incrementThumb, setThumbValue, setThumbDragging, pageSize } = state;
      if (!/^(PageUp|PageDown|Home|End)$/.test(e.key)) {
        e.continuePropagation();
        return;
      }
      e.preventDefault();
      setThumbDragging(index, true);
      switch (e.key) {
        case "PageUp":
          incrementThumb(index, pageSize);
          break;
        case "PageDown":
          decrementThumb(index, pageSize);
          break;
        case "Home":
          setThumbValue(index, getThumbMinValue(index));
          break;
        case "End":
          setThumbValue(index, getThumbMaxValue(index));
          break;
      }
      setThumbDragging(index, false);
    }
  });
  let { moveProps } = $e8a7022cf87cba2a$export$36da96379f79f245({
    onMoveStart() {
      currentPosition.current = null;
      state.setThumbDragging(index, true);
    },
    onMove({ deltaX, deltaY, pointerType, shiftKey }) {
      const { getThumbPercent, setThumbPercent, decrementThumb, incrementThumb, step, pageSize } = state;
      let { width, height } = trackRef.current.getBoundingClientRect();
      let size2 = isVertical ? height : width;
      if (currentPosition.current == null) currentPosition.current = getThumbPercent(index) * size2;
      if (pointerType === "keyboard") {
        if (deltaX > 0 && reverseX || deltaX < 0 && !reverseX || deltaY > 0) decrementThumb(index, shiftKey ? pageSize : step);
        else incrementThumb(index, shiftKey ? pageSize : step);
      } else {
        let delta = isVertical ? deltaY : deltaX;
        if (isVertical || reverseX) delta = -delta;
        currentPosition.current += delta;
        setThumbPercent(index, $9446cca9a3875146$export$7d15b64cf5a3a4c4(currentPosition.current / size2, 0, 1));
      }
    },
    onMoveEnd() {
      state.setThumbDragging(index, false);
    }
  });
  state.setThumbEditable(index, !isDisabled);
  const { focusableProps } = $e6afbd83fe6ebbd2$export$4c014de7c8940b4c($3ef42575df84b30b$export$9d1611c77c2fe928(opts, {
    onFocus: () => state.setFocusedThumb(index),
    onBlur: () => state.setFocusedThumb(void 0)
  }), inputRef);
  let currentPointer = reactExports.useRef(void 0);
  let onDown = (id2) => {
    focusInput();
    currentPointer.current = id2;
    state.setThumbDragging(index, true);
    addGlobalListener(window, "mouseup", onUp, false);
    addGlobalListener(window, "touchend", onUp, false);
    addGlobalListener(window, "pointerup", onUp, false);
  };
  let onUp = (e) => {
    var _e_changedTouches;
    var _e_pointerId;
    let id2 = (_e_pointerId = e.pointerId) !== null && _e_pointerId !== void 0 ? _e_pointerId : (_e_changedTouches = e.changedTouches) === null || _e_changedTouches === void 0 ? void 0 : _e_changedTouches[0].identifier;
    if (id2 === currentPointer.current) {
      focusInput();
      state.setThumbDragging(index, false);
      removeGlobalListener(window, "mouseup", onUp, false);
      removeGlobalListener(window, "touchend", onUp, false);
      removeGlobalListener(window, "pointerup", onUp, false);
    }
  };
  let thumbPosition = state.getThumbPercent(index);
  if (isVertical || direction === "rtl") thumbPosition = 1 - thumbPosition;
  let interactions = !isDisabled ? $3ef42575df84b30b$export$9d1611c77c2fe928(keyboardProps, moveProps, {
    onMouseDown: (e) => {
      if (e.button !== 0 || e.altKey || e.ctrlKey || e.metaKey) return;
      onDown();
    },
    onPointerDown: (e) => {
      if (e.button !== 0 || e.altKey || e.ctrlKey || e.metaKey) return;
      onDown(e.pointerId);
    },
    onTouchStart: (e) => {
      onDown(e.changedTouches[0].identifier);
    }
  }) : {};
  $99facab73266f662$export$5add1d006293d136(inputRef, value, (v2) => {
    state.setThumbValue(index, v2);
  });
  return {
    inputProps: $3ef42575df84b30b$export$9d1611c77c2fe928(focusableProps, fieldProps, {
      type: "range",
      tabIndex: !isDisabled ? 0 : void 0,
      min: state.getThumbMinValue(index),
      max: state.getThumbMaxValue(index),
      step: state.step,
      value,
      name,
      disabled: isDisabled,
      "aria-orientation": orientation,
      "aria-valuetext": state.getThumbValueLabel(index),
      "aria-required": isRequired || void 0,
      "aria-invalid": isInvalid || validationState === "invalid" || void 0,
      "aria-errormessage": opts["aria-errormessage"],
      "aria-describedby": [
        data["aria-describedby"],
        opts["aria-describedby"]
      ].filter(Boolean).join(" "),
      "aria-details": [
        data["aria-details"],
        opts["aria-details"]
      ].filter(Boolean).join(" "),
      onChange: (e) => {
        state.setThumbValue(index, parseFloat(e.target.value));
      }
    }),
    thumbProps: {
      ...interactions,
      style: {
        position: "absolute",
        [isVertical ? "top" : "left"]: `${thumbPosition * 100}%`,
        transform: "translate(-50%, -50%)",
        touchAction: "none"
      }
    },
    labelProps,
    isDragging: state.isThumbDragging(index),
    isDisabled,
    isFocused
  };
}
function useSliderThumb(props) {
  const {
    ref,
    as,
    state,
    index,
    name,
    trackRef,
    className,
    tooltipProps,
    isVertical,
    showTooltip,
    formatOptions,
    renderThumb,
    ...otherProps
  } = props;
  const Component = as || "div";
  const domRef = useDOMRef(ref);
  const inputRef = reactExports.useRef(null);
  const numberFormatter = $a916eb452884faea$export$b7a616150fdb9f44(formatOptions);
  const { thumbProps, inputProps, isDragging, isFocused } = $47b897dc8cdb026b$export$8d15029008292ae(
    {
      index,
      trackRef,
      inputRef,
      name,
      ...otherProps
    },
    state
  );
  const { hoverProps, isHovered } = $6179b936705e76d3$export$ae780daf29e6d456({
    isDisabled: state.isDisabled
  });
  const { focusProps, isFocusVisible } = $f7dceffc5ad7768b$export$4e328f61c538687f();
  const { pressProps, isPressed } = $f6c31cce2adf654f$export$45712eceda6fad21({
    isDisabled: state.isDisabled
  });
  const getThumbProps = (props2 = {}) => {
    return {
      ref: domRef,
      "data-slot": "thumb",
      "data-hover": dataAttr(isHovered),
      "data-pressed": dataAttr(isPressed),
      "data-dragging": dataAttr(isDragging),
      "data-focused": dataAttr(isFocused),
      "data-focus-visible": dataAttr(isFocusVisible),
      ...$3ef42575df84b30b$export$9d1611c77c2fe928(thumbProps, pressProps, hoverProps, otherProps),
      className,
      ...props2
    };
  };
  const getTooltipProps = () => {
    const value = numberFormatter ? numberFormatter.format(state.values[index != null ? index : 0]) : state.values[index != null ? index : 0];
    return {
      ...tooltipProps,
      placement: (tooltipProps == null ? void 0 : tooltipProps.placement) ? tooltipProps == null ? void 0 : tooltipProps.placement : isVertical ? "right" : "top",
      content: (tooltipProps == null ? void 0 : tooltipProps.content) ? tooltipProps == null ? void 0 : tooltipProps.content : value,
      updatePositionDeps: [isDragging, isHovered, value],
      isOpen: (tooltipProps == null ? void 0 : tooltipProps.isOpen) !== void 0 ? tooltipProps == null ? void 0 : tooltipProps.isOpen : isHovered || isDragging
    };
  };
  const getInputProps = (props2 = {}) => {
    return {
      ref: inputRef,
      ...$3ef42575df84b30b$export$9d1611c77c2fe928(inputProps, focusProps),
      ...props2
    };
  };
  return {
    Component,
    index,
    showTooltip,
    renderThumb,
    getThumbProps,
    getTooltipProps,
    getInputProps
  };
}
var SliderThumb = forwardRef((props, ref) => {
  const {
    Component,
    index,
    renderThumb,
    showTooltip,
    getTooltipProps,
    getThumbProps,
    getInputProps
  } = useSliderThumb({
    ...props,
    ref
  });
  const thumbProps = {
    ...getThumbProps(),
    index,
    children: /* @__PURE__ */ jsxRuntimeExports.jsx($5c3e21d68f1c4674$export$439d29a4e110a164, { children: /* @__PURE__ */ jsxRuntimeExports.jsx("input", { ...getInputProps() }) })
  };
  const content = renderFn({
    Component,
    props: thumbProps,
    renderCustom: renderThumb
  });
  return showTooltip ? /* @__PURE__ */ jsxRuntimeExports.jsx(tooltip_default, { ...getTooltipProps(), children: content }) : content;
});
SliderThumb.displayName = "NextUI.SliderThumb";
var slider_thumb_default = SliderThumb;
const $28f99e3e86e6ec45$var$DEFAULT_MIN_VALUE = 0;
const $28f99e3e86e6ec45$var$DEFAULT_MAX_VALUE = 100;
const $28f99e3e86e6ec45$var$DEFAULT_STEP_VALUE = 1;
function $28f99e3e86e6ec45$export$e5fda3247f5d67f9(props) {
  const { isDisabled = false, minValue = $28f99e3e86e6ec45$var$DEFAULT_MIN_VALUE, maxValue = $28f99e3e86e6ec45$var$DEFAULT_MAX_VALUE, numberFormatter: formatter, step = $28f99e3e86e6ec45$var$DEFAULT_STEP_VALUE, orientation = "horizontal" } = props;
  let pageSize = reactExports.useMemo(() => {
    let calcPageSize = (maxValue - minValue) / 10;
    calcPageSize = $9446cca9a3875146$export$cb6e0bb50bc19463(calcPageSize, 0, calcPageSize + step, step);
    return Math.max(calcPageSize, step);
  }, [
    step,
    maxValue,
    minValue
  ]);
  let restrictValues = reactExports.useCallback((values2) => values2 === null || values2 === void 0 ? void 0 : values2.map((val, idx) => {
    let min = idx === 0 ? minValue : val[idx - 1];
    let max = idx === values2.length - 1 ? maxValue : val[idx + 1];
    return $9446cca9a3875146$export$cb6e0bb50bc19463(val, min, max, step);
  }), [
    minValue,
    maxValue,
    step
  ]);
  let value = reactExports.useMemo(() => restrictValues($28f99e3e86e6ec45$var$convertValue(props.value)), [
    props.value
  ]);
  let defaultValue = reactExports.useMemo(() => {
    var _convertValue;
    return restrictValues((_convertValue = $28f99e3e86e6ec45$var$convertValue(props.defaultValue)) !== null && _convertValue !== void 0 ? _convertValue : [
      minValue
    ]);
  }, [
    props.defaultValue,
    minValue
  ]);
  let onChange = $28f99e3e86e6ec45$var$createOnChange(props.value, props.defaultValue, props.onChange);
  let onChangeEnd = $28f99e3e86e6ec45$var$createOnChange(props.value, props.defaultValue, props.onChangeEnd);
  const [values, setValuesState] = $458b0a5536c1a7cf$export$40bfa8c7b0832715$1(value, defaultValue, onChange);
  const [isDraggings, setDraggingsState] = reactExports.useState(new Array(values.length).fill(false));
  const isEditablesRef = reactExports.useRef(new Array(values.length).fill(true));
  const [focusedIndex, setFocusedIndex] = reactExports.useState(void 0);
  const valuesRef = reactExports.useRef(values);
  const isDraggingsRef = reactExports.useRef(isDraggings);
  let setValues = (values2) => {
    valuesRef.current = values2;
    setValuesState(values2);
  };
  let setDraggings = (draggings) => {
    isDraggingsRef.current = draggings;
    setDraggingsState(draggings);
  };
  function getValuePercent(value2) {
    return (value2 - minValue) / (maxValue - minValue);
  }
  function getThumbMinValue(index) {
    return index === 0 ? minValue : values[index - 1];
  }
  function getThumbMaxValue(index) {
    return index === values.length - 1 ? maxValue : values[index + 1];
  }
  function isThumbEditable(index) {
    return isEditablesRef.current[index];
  }
  function setThumbEditable(index, editable) {
    isEditablesRef.current[index] = editable;
  }
  function updateValue(index, value2) {
    if (isDisabled || !isThumbEditable(index)) return;
    const thisMin = getThumbMinValue(index);
    const thisMax = getThumbMaxValue(index);
    value2 = $9446cca9a3875146$export$cb6e0bb50bc19463(value2, thisMin, thisMax, step);
    let newValues = $28f99e3e86e6ec45$var$replaceIndex(valuesRef.current, index, value2);
    setValues(newValues);
  }
  function updateDragging(index, dragging) {
    if (isDisabled || !isThumbEditable(index)) return;
    if (dragging) valuesRef.current = values;
    const wasDragging = isDraggingsRef.current[index];
    isDraggingsRef.current = $28f99e3e86e6ec45$var$replaceIndex(isDraggingsRef.current, index, dragging);
    setDraggings(isDraggingsRef.current);
    if (onChangeEnd && wasDragging && !isDraggingsRef.current.some(Boolean)) onChangeEnd(valuesRef.current);
  }
  function getFormattedValue(value2) {
    return formatter.format(value2);
  }
  function setThumbPercent(index, percent2) {
    updateValue(index, getPercentValue(percent2));
  }
  function getRoundedValue(value2) {
    return Math.round((value2 - minValue) / step) * step + minValue;
  }
  function getPercentValue(percent2) {
    const val = percent2 * (maxValue - minValue) + minValue;
    return $9446cca9a3875146$export$7d15b64cf5a3a4c4(getRoundedValue(val), minValue, maxValue);
  }
  function incrementThumb(index, stepSize = 1) {
    let s = Math.max(stepSize, step);
    updateValue(index, $9446cca9a3875146$export$cb6e0bb50bc19463(values[index] + s, minValue, maxValue, step));
  }
  function decrementThumb(index, stepSize = 1) {
    let s = Math.max(stepSize, step);
    updateValue(index, $9446cca9a3875146$export$cb6e0bb50bc19463(values[index] - s, minValue, maxValue, step));
  }
  return {
    values,
    getThumbValue: (index) => values[index],
    setThumbValue: updateValue,
    setThumbPercent,
    isThumbDragging: (index) => isDraggings[index],
    setThumbDragging: updateDragging,
    focusedThumb: focusedIndex,
    setFocusedThumb: setFocusedIndex,
    getThumbPercent: (index) => getValuePercent(values[index]),
    getValuePercent,
    getThumbValueLabel: (index) => getFormattedValue(values[index]),
    getFormattedValue,
    getThumbMinValue,
    getThumbMaxValue,
    getPercentValue,
    isThumbEditable,
    setThumbEditable,
    incrementThumb,
    decrementThumb,
    step,
    pageSize,
    orientation,
    isDisabled
  };
}
function $28f99e3e86e6ec45$var$replaceIndex(array, index, value) {
  if (array[index] === value) return array;
  return [
    ...array.slice(0, index),
    value,
    ...array.slice(index + 1)
  ];
}
function $28f99e3e86e6ec45$var$convertValue(value) {
  if (value == null) return void 0;
  return Array.isArray(value) ? value : [
    value
  ];
}
function $28f99e3e86e6ec45$var$createOnChange(value, defaultValue, onChange) {
  return (newValue) => {
    if (typeof value === "number" || typeof defaultValue === "number") onChange === null || onChange === void 0 ? void 0 : onChange(newValue[0]);
    else onChange === null || onChange === void 0 ? void 0 : onChange(newValue);
  };
}
function useSlider(originalProps) {
  var _a, _b, _c, _d;
  const globalContext = useProviderContext();
  const [props, variantProps2] = mapPropsVariants(originalProps, slider.variantKeys);
  const {
    ref,
    as,
    name,
    label,
    formatOptions,
    value: valueProp,
    maxValue = 100,
    minValue = 0,
    step = 1,
    showSteps = false,
    showTooltip = false,
    orientation = "horizontal",
    marks = [],
    startContent,
    endContent,
    fillOffset: fillOffset2,
    className,
    classNames,
    renderThumb,
    renderLabel,
    renderValue,
    onChange,
    onChangeEnd,
    getValue: getValue2,
    tooltipValueFormatOptions = formatOptions,
    tooltipProps: userTooltipProps = {},
    ...otherProps
  } = props;
  const Component = as || "div";
  const shouldFilterDOMProps = typeof Component === "string";
  const disableAnimation = (_b = (_a = originalProps == null ? void 0 : originalProps.disableAnimation) != null ? _a : globalContext == null ? void 0 : globalContext.disableAnimation) != null ? _b : false;
  const domRef = useDOMRef(ref);
  const trackRef = reactExports.useRef(null);
  const numberFormatter = $a916eb452884faea$export$b7a616150fdb9f44(formatOptions);
  const { direction } = $18f2051aff69b9bf$export$43bb16f9c6d9e3f7();
  const clampValue = reactExports.useCallback(
    (valueToClamp) => Math.min(Math.max(valueToClamp, minValue), maxValue),
    [minValue, maxValue]
  );
  const validatedValue = reactExports.useMemo(() => {
    if (valueProp === void 0)
      return void 0;
    if (Array.isArray(valueProp)) {
      return valueProp.map(clampValue);
    }
    return clampValue(valueProp);
  }, [valueProp, clampValue]);
  const state = $28f99e3e86e6ec45$export$e5fda3247f5d67f9({
    ...otherProps,
    value: validatedValue,
    isDisabled: (_c = originalProps == null ? void 0 : originalProps.isDisabled) != null ? _c : false,
    orientation,
    step,
    minValue,
    maxValue,
    numberFormatter,
    onChange,
    onChangeEnd
  });
  const tooltipProps = {
    offset: 5,
    delay: 0,
    size: "sm",
    showArrow: true,
    color: (originalProps == null ? void 0 : originalProps.color) ? originalProps == null ? void 0 : originalProps.color : (_d = slider.defaultVariants) == null ? void 0 : _d.color,
    isDisabled: originalProps.isDisabled,
    ...userTooltipProps
  };
  const { groupProps, trackProps, labelProps, outputProps } = $bcca50147b47f54d$export$56b2c08e277f365(
    originalProps,
    state,
    trackRef
  );
  const { isHovered, hoverProps } = $6179b936705e76d3$export$ae780daf29e6d456({ isDisabled: originalProps.isDisabled });
  const baseStyles = clsx$1(classNames == null ? void 0 : classNames.base, className);
  const isVertical = orientation === "vertical";
  const hasMarks = (marks == null ? void 0 : marks.length) > 0;
  const hasSingleThumb = fillOffset2 === void 0 ? state.values.length === 1 : false;
  const slots = reactExports.useMemo(
    () => slider({
      ...variantProps2,
      hasMarks,
      disableAnimation,
      hasSingleThumb,
      isVertical,
      className
    }),
    [objectToDeps(variantProps2), isVertical, disableAnimation, hasSingleThumb, hasMarks, className]
  );
  const [startOffset, endOffset] = [
    state.values.length > 1 ? state.getThumbPercent(0) : fillOffset2 !== void 0 ? state.getValuePercent(fillOffset2) : 0,
    state.getThumbPercent(state.values.length - 1)
  ].sort();
  const value = state.values.length === 1 ? numberFormatter.format(state.values[0]) : numberFormatter.formatRange(state.values[0], state.values[state.values.length - 1]);
  const steps = showSteps ? Math.floor((maxValue - minValue) / step) + 1 : 0;
  const getBaseProps = (props2 = {}) => {
    return {
      ref: domRef,
      "data-orientation": state.orientation,
      "data-slot": "base",
      "data-hover": isHovered,
      className: slots.base({ class: baseStyles }),
      ...$3ef42575df84b30b$export$9d1611c77c2fe928(
        groupProps,
        hoverProps,
        filterDOMProps(otherProps, {
          enabled: shouldFilterDOMProps
        }),
        filterDOMProps(props2)
      )
    };
  };
  const getLabelWrapperProps = (props2 = {}) => {
    return {
      className: slots.labelWrapper({ class: classNames == null ? void 0 : classNames.labelWrapper }),
      "data-slot": "labelWrapper",
      ...props2
    };
  };
  const getLabelProps = (props2 = {}) => {
    return {
      "data-slot": "label",
      className: slots.label({ class: classNames == null ? void 0 : classNames.label }),
      children: label,
      ...labelProps,
      ...props2
    };
  };
  const getValueProps = (props2 = {}) => {
    return {
      "data-slot": "value",
      className: slots.value({ class: classNames == null ? void 0 : classNames.value }),
      children: getValue2 && typeof getValue2 === "function" ? getValue2(state.values) : value,
      ...outputProps,
      ...props2
    };
  };
  const getTrackProps = (props2 = {}) => {
    return {
      ref: trackRef,
      "data-slot": "track",
      "data-thumb-hidden": !!(originalProps == null ? void 0 : originalProps.hideThumb),
      "data-vertical": isVertical,
      className: slots.track({ class: classNames == null ? void 0 : classNames.track }),
      ...trackProps,
      ...props2
    };
  };
  const getTrackWrapperProps = (props2 = {}) => {
    return {
      "data-slot": "track-wrapper",
      className: slots.trackWrapper({ class: classNames == null ? void 0 : classNames.trackWrapper }),
      ...props2
    };
  };
  const getFillerProps = (props2 = {}) => {
    return {
      "data-slot": "filler",
      className: slots.filler({ class: classNames == null ? void 0 : classNames.filler }),
      ...props2,
      style: {
        ...props2.style,
        [isVertical ? "bottom" : direction === "rtl" ? "right" : "left"]: `${startOffset * 100}%`,
        ...isVertical ? {
          height: `${(endOffset - startOffset) * 100}%`
        } : {
          width: `${(endOffset - startOffset) * 100}%`
        }
      }
    };
  };
  const getThumbProps = (index) => {
    return {
      name,
      index,
      state,
      trackRef,
      orientation,
      isVertical,
      tooltipProps,
      showTooltip,
      renderThumb,
      formatOptions: tooltipValueFormatOptions,
      className: slots.thumb({ class: classNames == null ? void 0 : classNames.thumb })
    };
  };
  const getStepProps = (index) => {
    const percent2 = state.getValuePercent(index * step + minValue);
    return {
      className: slots.step({ class: classNames == null ? void 0 : classNames.step }),
      "data-slot": "step",
      "data-in-range": percent2 <= endOffset && percent2 >= startOffset,
      style: {
        [isVertical ? "bottom" : direction === "rtl" ? "right" : "left"]: `${percent2 * 100}%`
      }
    };
  };
  const getMarkProps = (mark) => {
    const percent2 = state.getValuePercent(mark.value);
    return {
      className: slots.mark({ class: classNames == null ? void 0 : classNames.mark }),
      "data-slot": "mark",
      "data-in-range": percent2 <= endOffset && percent2 >= startOffset,
      style: {
        [isVertical ? "bottom" : direction === "rtl" ? "right" : "left"]: `${percent2 * 100}%`
      },
      onMouseDown: (e) => e.stopPropagation(),
      onPointerDown: (e) => e.stopPropagation(),
      onClick: (e) => {
        e.stopPropagation();
        if (state.values.length === 1) {
          state.setThumbPercent(0, percent2);
        } else {
          const leftThumbVal = state.values[0];
          const rightThumbVal = state.values[1];
          if (mark.value < leftThumbVal) {
            state.setThumbPercent(0, percent2);
          } else if (mark.value > rightThumbVal) {
            state.setThumbPercent(1, percent2);
          } else if (Math.abs(mark.value - leftThumbVal) < Math.abs(mark.value - rightThumbVal)) {
            state.setThumbPercent(0, percent2);
          } else {
            state.setThumbPercent(1, percent2);
          }
        }
      }
    };
  };
  const getStartContentProps = (props2 = {}) => ({
    "data-slot": "startContent",
    className: slots.startContent({ class: classNames == null ? void 0 : classNames.startContent }),
    ...props2
  });
  const getEndContentProps = (props2 = {}) => ({
    "data-slot": "endContent",
    className: slots.endContent({ class: classNames == null ? void 0 : classNames.endContent }),
    ...props2
  });
  return {
    Component,
    state,
    value,
    domRef,
    label,
    steps,
    marks,
    startContent,
    endContent,
    getStepProps,
    getBaseProps,
    getValue: getValue2,
    renderLabel,
    renderValue,
    getTrackWrapperProps,
    getLabelWrapperProps,
    getLabelProps,
    getValueProps,
    getTrackProps,
    getFillerProps,
    getThumbProps,
    getMarkProps,
    getStartContentProps,
    getEndContentProps
  };
}
var Slider = forwardRef((props, ref) => {
  const {
    Component,
    state,
    label,
    steps,
    marks,
    startContent,
    endContent,
    getStepProps,
    getBaseProps,
    renderValue,
    renderLabel,
    getTrackWrapperProps,
    getLabelWrapperProps,
    getLabelProps,
    getValueProps,
    getTrackProps,
    getFillerProps,
    getThumbProps,
    getMarkProps,
    getStartContentProps,
    getEndContentProps
  } = useSlider({ ...props, ref });
  return /* @__PURE__ */ jsxRuntimeExports.jsxs(Component, { ...getBaseProps(), children: [
    label && /* @__PURE__ */ jsxRuntimeExports.jsxs("div", { ...getLabelWrapperProps(), children: [
      renderFn({
        Component: "label",
        props: getLabelProps(),
        renderCustom: renderLabel
      }),
      renderFn({
        Component: "output",
        props: getValueProps(),
        renderCustom: renderValue
      })
    ] }),
    /* @__PURE__ */ jsxRuntimeExports.jsxs("div", { ...getTrackWrapperProps(), children: [
      startContent && /* @__PURE__ */ jsxRuntimeExports.jsx("div", { ...getStartContentProps(), children: startContent }),
      /* @__PURE__ */ jsxRuntimeExports.jsxs("div", { ...getTrackProps(), children: [
        /* @__PURE__ */ jsxRuntimeExports.jsx("div", { ...getFillerProps() }),
        Number.isFinite(steps) && Array.from({ length: steps }, (_2, index) => /* @__PURE__ */ jsxRuntimeExports.jsx("div", { ...getStepProps(index) }, index)),
        state.values.map((_2, index) => /* @__PURE__ */ jsxRuntimeExports.jsx(slider_thumb_default, { ...getThumbProps(index) }, index)),
        (marks == null ? void 0 : marks.length) > 0 && marks.map((mark, index) => /* @__PURE__ */ jsxRuntimeExports.jsx("div", { ...getMarkProps(mark), children: mark.label }, index))
      ] }),
      endContent && /* @__PURE__ */ jsxRuntimeExports.jsx("div", { ...getEndContentProps(), children: endContent })
    ] })
  ] });
});
Slider.displayName = "NextUI.Slider";
var slider_default = Slider;
/**
 * @remix-run/router v1.20.0
 *
 * Copyright (c) Remix Software Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE.md file in the root directory of this source tree.
 *
 * @license MIT
 */
function _extends$9() {
  _extends$9 = Object.assign ? Object.assign.bind() : function(target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i];
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }
    return target;
  };
  return _extends$9.apply(this, arguments);
}
var Action;
(function(Action2) {
  Action2["Pop"] = "POP";
  Action2["Push"] = "PUSH";
  Action2["Replace"] = "REPLACE";
})(Action || (Action = {}));
const PopStateEventType = "popstate";
function createHashHistory(options) {
  if (options === void 0) {
    options = {};
  }
  function createHashLocation(window2, globalHistory) {
    let {
      pathname = "/",
      search: search2 = "",
      hash = ""
    } = parsePath(window2.location.hash.substr(1));
    if (!pathname.startsWith("/") && !pathname.startsWith(".")) {
      pathname = "/" + pathname;
    }
    return createLocation(
      "",
      {
        pathname,
        search: search2,
        hash
      },
      // state defaults to `null` because `window.history.state` does
      globalHistory.state && globalHistory.state.usr || null,
      globalHistory.state && globalHistory.state.key || "default"
    );
  }
  function createHashHref(window2, to) {
    let base = window2.document.querySelector("base");
    let href = "";
    if (base && base.getAttribute("href")) {
      let url = window2.location.href;
      let hashIndex = url.indexOf("#");
      href = hashIndex === -1 ? url : url.slice(0, hashIndex);
    }
    return href + "#" + (typeof to === "string" ? to : createPath(to));
  }
  function validateHashLocation(location2, to) {
    warning(location2.pathname.charAt(0) === "/", "relative pathnames are not supported in hash history.push(" + JSON.stringify(to) + ")");
  }
  return getUrlBasedHistory(createHashLocation, createHashHref, validateHashLocation, options);
}
function invariant(value, message) {
  if (value === false || value === null || typeof value === "undefined") {
    throw new Error(message);
  }
}
function warning(cond, message) {
  if (!cond) {
    if (typeof console !== "undefined") console.warn(message);
    try {
      throw new Error(message);
    } catch (e) {
    }
  }
}
function createKey$1() {
  return Math.random().toString(36).substr(2, 8);
}
function getHistoryState(location2, index) {
  return {
    usr: location2.state,
    key: location2.key,
    idx: index
  };
}
function createLocation(current, to, state, key) {
  if (state === void 0) {
    state = null;
  }
  let location2 = _extends$9({
    pathname: typeof current === "string" ? current : current.pathname,
    search: "",
    hash: ""
  }, typeof to === "string" ? parsePath(to) : to, {
    state,
    // TODO: This could be cleaned up.  push/replace should probably just take
    // full Locations now and avoid the need to run through this flow at all
    // But that's a pretty big refactor to the current test suite so going to
    // keep as is for the time being and just let any incoming keys take precedence
    key: to && to.key || key || createKey$1()
  });
  return location2;
}
function createPath(_ref) {
  let {
    pathname = "/",
    search: search2 = "",
    hash = ""
  } = _ref;
  if (search2 && search2 !== "?") pathname += search2.charAt(0) === "?" ? search2 : "?" + search2;
  if (hash && hash !== "#") pathname += hash.charAt(0) === "#" ? hash : "#" + hash;
  return pathname;
}
function parsePath(path) {
  let parsedPath = {};
  if (path) {
    let hashIndex = path.indexOf("#");
    if (hashIndex >= 0) {
      parsedPath.hash = path.substr(hashIndex);
      path = path.substr(0, hashIndex);
    }
    let searchIndex = path.indexOf("?");
    if (searchIndex >= 0) {
      parsedPath.search = path.substr(searchIndex);
      path = path.substr(0, searchIndex);
    }
    if (path) {
      parsedPath.pathname = path;
    }
  }
  return parsedPath;
}
function getUrlBasedHistory(getLocation, createHref, validateLocation, options) {
  if (options === void 0) {
    options = {};
  }
  let {
    window: window2 = document.defaultView,
    v5Compat = false
  } = options;
  let globalHistory = window2.history;
  let action = Action.Pop;
  let listener = null;
  let index = getIndex();
  if (index == null) {
    index = 0;
    globalHistory.replaceState(_extends$9({}, globalHistory.state, {
      idx: index
    }), "");
  }
  function getIndex() {
    let state = globalHistory.state || {
      idx: null
    };
    return state.idx;
  }
  function handlePop() {
    action = Action.Pop;
    let nextIndex = getIndex();
    let delta = nextIndex == null ? null : nextIndex - index;
    index = nextIndex;
    if (listener) {
      listener({
        action,
        location: history2.location,
        delta
      });
    }
  }
  function push(to, state) {
    action = Action.Push;
    let location2 = createLocation(history2.location, to, state);
    if (validateLocation) validateLocation(location2, to);
    index = getIndex() + 1;
    let historyState = getHistoryState(location2, index);
    let url = history2.createHref(location2);
    try {
      globalHistory.pushState(historyState, "", url);
    } catch (error) {
      if (error instanceof DOMException && error.name === "DataCloneError") {
        throw error;
      }
      window2.location.assign(url);
    }
    if (v5Compat && listener) {
      listener({
        action,
        location: history2.location,
        delta: 1
      });
    }
  }
  function replace(to, state) {
    action = Action.Replace;
    let location2 = createLocation(history2.location, to, state);
    if (validateLocation) validateLocation(location2, to);
    index = getIndex();
    let historyState = getHistoryState(location2, index);
    let url = history2.createHref(location2);
    globalHistory.replaceState(historyState, "", url);
    if (v5Compat && listener) {
      listener({
        action,
        location: history2.location,
        delta: 0
      });
    }
  }
  function createURL(to) {
    let base = window2.location.origin !== "null" ? window2.location.origin : window2.location.href;
    let href = typeof to === "string" ? to : createPath(to);
    href = href.replace(/ $/, "%20");
    invariant(base, "No window.location.(origin|href) available to create URL for href: " + href);
    return new URL(href, base);
  }
  let history2 = {
    get action() {
      return action;
    },
    get location() {
      return getLocation(window2, globalHistory);
    },
    listen(fn) {
      if (listener) {
        throw new Error("A history only accepts one active listener");
      }
      window2.addEventListener(PopStateEventType, handlePop);
      listener = fn;
      return () => {
        window2.removeEventListener(PopStateEventType, handlePop);
        listener = null;
      };
    },
    createHref(to) {
      return createHref(window2, to);
    },
    createURL,
    encodeLocation(to) {
      let url = createURL(to);
      return {
        pathname: url.pathname,
        search: url.search,
        hash: url.hash
      };
    },
    push,
    replace,
    go(n2) {
      return globalHistory.go(n2);
    }
  };
  return history2;
}
var ResultType;
(function(ResultType2) {
  ResultType2["data"] = "data";
  ResultType2["deferred"] = "deferred";
  ResultType2["redirect"] = "redirect";
  ResultType2["error"] = "error";
})(ResultType || (ResultType = {}));
const immutableRouteKeys = /* @__PURE__ */ new Set(["lazy", "caseSensitive", "path", "id", "index", "children"]);
function isIndexRoute(route) {
  return route.index === true;
}
function convertRoutesToDataRoutes(routes, mapRouteProperties2, parentPath, manifest) {
  if (parentPath === void 0) {
    parentPath = [];
  }
  if (manifest === void 0) {
    manifest = {};
  }
  return routes.map((route, index) => {
    let treePath = [...parentPath, String(index)];
    let id2 = typeof route.id === "string" ? route.id : treePath.join("-");
    invariant(route.index !== true || !route.children, "Cannot specify children on an index route");
    invariant(!manifest[id2], 'Found a route id collision on id "' + id2 + `".  Route id's must be globally unique within Data Router usages`);
    if (isIndexRoute(route)) {
      let indexRoute = _extends$9({}, route, mapRouteProperties2(route), {
        id: id2
      });
      manifest[id2] = indexRoute;
      return indexRoute;
    } else {
      let pathOrLayoutRoute = _extends$9({}, route, mapRouteProperties2(route), {
        id: id2,
        children: void 0
      });
      manifest[id2] = pathOrLayoutRoute;
      if (route.children) {
        pathOrLayoutRoute.children = convertRoutesToDataRoutes(route.children, mapRouteProperties2, treePath, manifest);
      }
      return pathOrLayoutRoute;
    }
  });
}
function matchRoutes(routes, locationArg, basename) {
  if (basename === void 0) {
    basename = "/";
  }
  return matchRoutesImpl(routes, locationArg, basename, false);
}
function matchRoutesImpl(routes, locationArg, basename, allowPartial) {
  let location2 = typeof locationArg === "string" ? parsePath(locationArg) : locationArg;
  let pathname = stripBasename(location2.pathname || "/", basename);
  if (pathname == null) {
    return null;
  }
  let branches = flattenRoutes(routes);
  rankRouteBranches(branches);
  let matches = null;
  for (let i = 0; matches == null && i < branches.length; ++i) {
    let decoded = decodePath(pathname);
    matches = matchRouteBranch(branches[i], decoded, allowPartial);
  }
  return matches;
}
function convertRouteMatchToUiMatch(match, loaderData) {
  let {
    route,
    pathname,
    params
  } = match;
  return {
    id: route.id,
    pathname,
    params,
    data: loaderData[route.id],
    handle: route.handle
  };
}
function flattenRoutes(routes, branches, parentsMeta, parentPath) {
  if (branches === void 0) {
    branches = [];
  }
  if (parentsMeta === void 0) {
    parentsMeta = [];
  }
  if (parentPath === void 0) {
    parentPath = "";
  }
  let flattenRoute = (route, index, relativePath) => {
    let meta = {
      relativePath: relativePath === void 0 ? route.path || "" : relativePath,
      caseSensitive: route.caseSensitive === true,
      childrenIndex: index,
      route
    };
    if (meta.relativePath.startsWith("/")) {
      invariant(meta.relativePath.startsWith(parentPath), 'Absolute route path "' + meta.relativePath + '" nested under path ' + ('"' + parentPath + '" is not valid. An absolute child route path ') + "must start with the combined path of all its parent routes.");
      meta.relativePath = meta.relativePath.slice(parentPath.length);
    }
    let path = joinPaths([parentPath, meta.relativePath]);
    let routesMeta = parentsMeta.concat(meta);
    if (route.children && route.children.length > 0) {
      invariant(
        // Our types know better, but runtime JS may not!
        // @ts-expect-error
        route.index !== true,
        "Index routes must not have child routes. Please remove " + ('all child routes from route path "' + path + '".')
      );
      flattenRoutes(route.children, branches, routesMeta, path);
    }
    if (route.path == null && !route.index) {
      return;
    }
    branches.push({
      path,
      score: computeScore$2(path, route.index),
      routesMeta
    });
  };
  routes.forEach((route, index) => {
    var _route$path;
    if (route.path === "" || !((_route$path = route.path) != null && _route$path.includes("?"))) {
      flattenRoute(route, index);
    } else {
      for (let exploded of explodeOptionalSegments(route.path)) {
        flattenRoute(route, index, exploded);
      }
    }
  });
  return branches;
}
function explodeOptionalSegments(path) {
  let segments = path.split("/");
  if (segments.length === 0) return [];
  let [first, ...rest] = segments;
  let isOptional = first.endsWith("?");
  let required = first.replace(/\?$/, "");
  if (rest.length === 0) {
    return isOptional ? [required, ""] : [required];
  }
  let restExploded = explodeOptionalSegments(rest.join("/"));
  let result = [];
  result.push(...restExploded.map((subpath) => subpath === "" ? required : [required, subpath].join("/")));
  if (isOptional) {
    result.push(...restExploded);
  }
  return result.map((exploded) => path.startsWith("/") && exploded === "" ? "/" : exploded);
}
function rankRouteBranches(branches) {
  branches.sort((a2, b) => a2.score !== b.score ? b.score - a2.score : compareIndexes(a2.routesMeta.map((meta) => meta.childrenIndex), b.routesMeta.map((meta) => meta.childrenIndex)));
}
const paramRe = /^:[\w-]+$/;
const dynamicSegmentValue = 3;
const indexRouteValue = 2;
const emptySegmentValue = 1;
const staticSegmentValue = 10;
const splatPenalty = -2;
const isSplat = (s) => s === "*";
function computeScore$2(path, index) {
  let segments = path.split("/");
  let initialScore = segments.length;
  if (segments.some(isSplat)) {
    initialScore += splatPenalty;
  }
  if (index) {
    initialScore += indexRouteValue;
  }
  return segments.filter((s) => !isSplat(s)).reduce((score, segment) => score + (paramRe.test(segment) ? dynamicSegmentValue : segment === "" ? emptySegmentValue : staticSegmentValue), initialScore);
}
function compareIndexes(a2, b) {
  let siblings = a2.length === b.length && a2.slice(0, -1).every((n2, i) => n2 === b[i]);
  return siblings ? (
    // If two routes are siblings, we should try to match the earlier sibling
    // first. This allows people to have fine-grained control over the matching
    // behavior by simply putting routes with identical paths in the order they
    // want them tried.
    a2[a2.length - 1] - b[b.length - 1]
  ) : (
    // Otherwise, it doesn't really make sense to rank non-siblings by index,
    // so they sort equally.
    0
  );
}
function matchRouteBranch(branch, pathname, allowPartial) {
  if (allowPartial === void 0) {
    allowPartial = false;
  }
  let {
    routesMeta
  } = branch;
  let matchedParams = {};
  let matchedPathname = "/";
  let matches = [];
  for (let i = 0; i < routesMeta.length; ++i) {
    let meta = routesMeta[i];
    let end = i === routesMeta.length - 1;
    let remainingPathname = matchedPathname === "/" ? pathname : pathname.slice(matchedPathname.length) || "/";
    let match = matchPath({
      path: meta.relativePath,
      caseSensitive: meta.caseSensitive,
      end
    }, remainingPathname);
    let route = meta.route;
    if (!match && end && allowPartial && !routesMeta[routesMeta.length - 1].route.index) {
      match = matchPath({
        path: meta.relativePath,
        caseSensitive: meta.caseSensitive,
        end: false
      }, remainingPathname);
    }
    if (!match) {
      return null;
    }
    Object.assign(matchedParams, match.params);
    matches.push({
      // TODO: Can this as be avoided?
      params: matchedParams,
      pathname: joinPaths([matchedPathname, match.pathname]),
      pathnameBase: normalizePathname(joinPaths([matchedPathname, match.pathnameBase])),
      route
    });
    if (match.pathnameBase !== "/") {
      matchedPathname = joinPaths([matchedPathname, match.pathnameBase]);
    }
  }
  return matches;
}
function matchPath(pattern, pathname) {
  if (typeof pattern === "string") {
    pattern = {
      path: pattern,
      caseSensitive: false,
      end: true
    };
  }
  let [matcher, compiledParams] = compilePath(pattern.path, pattern.caseSensitive, pattern.end);
  let match = pathname.match(matcher);
  if (!match) return null;
  let matchedPathname = match[0];
  let pathnameBase = matchedPathname.replace(/(.)\/+$/, "$1");
  let captureGroups = match.slice(1);
  let params = compiledParams.reduce((memo2, _ref, index) => {
    let {
      paramName,
      isOptional
    } = _ref;
    if (paramName === "*") {
      let splatValue = captureGroups[index] || "";
      pathnameBase = matchedPathname.slice(0, matchedPathname.length - splatValue.length).replace(/(.)\/+$/, "$1");
    }
    const value = captureGroups[index];
    if (isOptional && !value) {
      memo2[paramName] = void 0;
    } else {
      memo2[paramName] = (value || "").replace(/%2F/g, "/");
    }
    return memo2;
  }, {});
  return {
    params,
    pathname: matchedPathname,
    pathnameBase,
    pattern
  };
}
function compilePath(path, caseSensitive, end) {
  if (caseSensitive === void 0) {
    caseSensitive = false;
  }
  if (end === void 0) {
    end = true;
  }
  warning(path === "*" || !path.endsWith("*") || path.endsWith("/*"), 'Route path "' + path + '" will be treated as if it were ' + ('"' + path.replace(/\*$/, "/*") + '" because the `*` character must ') + "always follow a `/` in the pattern. To get rid of this warning, " + ('please change the route path to "' + path.replace(/\*$/, "/*") + '".'));
  let params = [];
  let regexpSource = "^" + path.replace(/\/*\*?$/, "").replace(/^\/*/, "/").replace(/[\\.*+^${}|()[\]]/g, "\\$&").replace(/\/:([\w-]+)(\?)?/g, (_2, paramName, isOptional) => {
    params.push({
      paramName,
      isOptional: isOptional != null
    });
    return isOptional ? "/?([^\\/]+)?" : "/([^\\/]+)";
  });
  if (path.endsWith("*")) {
    params.push({
      paramName: "*"
    });
    regexpSource += path === "*" || path === "/*" ? "(.*)$" : "(?:\\/(.+)|\\/*)$";
  } else if (end) {
    regexpSource += "\\/*$";
  } else if (path !== "" && path !== "/") {
    regexpSource += "(?:(?=\\/|$))";
  } else ;
  let matcher = new RegExp(regexpSource, caseSensitive ? void 0 : "i");
  return [matcher, params];
}
function decodePath(value) {
  try {
    return value.split("/").map((v2) => decodeURIComponent(v2).replace(/\//g, "%2F")).join("/");
  } catch (error) {
    warning(false, 'The URL path "' + value + '" could not be decoded because it is is a malformed URL segment. This is probably due to a bad percent ' + ("encoding (" + error + ")."));
    return value;
  }
}
function stripBasename(pathname, basename) {
  if (basename === "/") return pathname;
  if (!pathname.toLowerCase().startsWith(basename.toLowerCase())) {
    return null;
  }
  let startIndex = basename.endsWith("/") ? basename.length - 1 : basename.length;
  let nextChar = pathname.charAt(startIndex);
  if (nextChar && nextChar !== "/") {
    return null;
  }
  return pathname.slice(startIndex) || "/";
}
function resolvePath(to, fromPathname) {
  if (fromPathname === void 0) {
    fromPathname = "/";
  }
  let {
    pathname: toPathname,
    search: search2 = "",
    hash = ""
  } = typeof to === "string" ? parsePath(to) : to;
  let pathname = toPathname ? toPathname.startsWith("/") ? toPathname : resolvePathname(toPathname, fromPathname) : fromPathname;
  return {
    pathname,
    search: normalizeSearch(search2),
    hash: normalizeHash(hash)
  };
}
function resolvePathname(relativePath, fromPathname) {
  let segments = fromPathname.replace(/\/+$/, "").split("/");
  let relativeSegments = relativePath.split("/");
  relativeSegments.forEach((segment) => {
    if (segment === "..") {
      if (segments.length > 1) segments.pop();
    } else if (segment !== ".") {
      segments.push(segment);
    }
  });
  return segments.length > 1 ? segments.join("/") : "/";
}
function getInvalidPathError(char, field, dest, path) {
  return "Cannot include a '" + char + "' character in a manually specified " + ("`to." + field + "` field [" + JSON.stringify(path) + "].  Please separate it out to the ") + ("`to." + dest + "` field. Alternatively you may provide the full path as ") + 'a string in <Link to="..."> and the router will parse it for you.';
}
function getPathContributingMatches(matches) {
  return matches.filter((match, index) => index === 0 || match.route.path && match.route.path.length > 0);
}
function getResolveToMatches(matches, v7_relativeSplatPath) {
  let pathMatches = getPathContributingMatches(matches);
  if (v7_relativeSplatPath) {
    return pathMatches.map((match, idx) => idx === pathMatches.length - 1 ? match.pathname : match.pathnameBase);
  }
  return pathMatches.map((match) => match.pathnameBase);
}
function resolveTo(toArg, routePathnames, locationPathname, isPathRelative) {
  if (isPathRelative === void 0) {
    isPathRelative = false;
  }
  let to;
  if (typeof toArg === "string") {
    to = parsePath(toArg);
  } else {
    to = _extends$9({}, toArg);
    invariant(!to.pathname || !to.pathname.includes("?"), getInvalidPathError("?", "pathname", "search", to));
    invariant(!to.pathname || !to.pathname.includes("#"), getInvalidPathError("#", "pathname", "hash", to));
    invariant(!to.search || !to.search.includes("#"), getInvalidPathError("#", "search", "hash", to));
  }
  let isEmptyPath = toArg === "" || to.pathname === "";
  let toPathname = isEmptyPath ? "/" : to.pathname;
  let from;
  if (toPathname == null) {
    from = locationPathname;
  } else {
    let routePathnameIndex = routePathnames.length - 1;
    if (!isPathRelative && toPathname.startsWith("..")) {
      let toSegments = toPathname.split("/");
      while (toSegments[0] === "..") {
        toSegments.shift();
        routePathnameIndex -= 1;
      }
      to.pathname = toSegments.join("/");
    }
    from = routePathnameIndex >= 0 ? routePathnames[routePathnameIndex] : "/";
  }
  let path = resolvePath(to, from);
  let hasExplicitTrailingSlash = toPathname && toPathname !== "/" && toPathname.endsWith("/");
  let hasCurrentTrailingSlash = (isEmptyPath || toPathname === ".") && locationPathname.endsWith("/");
  if (!path.pathname.endsWith("/") && (hasExplicitTrailingSlash || hasCurrentTrailingSlash)) {
    path.pathname += "/";
  }
  return path;
}
const joinPaths = (paths) => paths.join("/").replace(/\/\/+/g, "/");
const normalizePathname = (pathname) => pathname.replace(/\/+$/, "").replace(/^\/*/, "/");
const normalizeSearch = (search2) => !search2 || search2 === "?" ? "" : search2.startsWith("?") ? search2 : "?" + search2;
const normalizeHash = (hash) => !hash || hash === "#" ? "" : hash.startsWith("#") ? hash : "#" + hash;
class ErrorResponseImpl {
  constructor(status, statusText, data, internal) {
    if (internal === void 0) {
      internal = false;
    }
    this.status = status;
    this.statusText = statusText || "";
    this.internal = internal;
    if (data instanceof Error) {
      this.data = data.toString();
      this.error = data;
    } else {
      this.data = data;
    }
  }
}
function isRouteErrorResponse(error) {
  return error != null && typeof error.status === "number" && typeof error.statusText === "string" && typeof error.internal === "boolean" && "data" in error;
}
const validMutationMethodsArr = ["post", "put", "patch", "delete"];
const validMutationMethods = new Set(validMutationMethodsArr);
const validRequestMethodsArr = ["get", ...validMutationMethodsArr];
const validRequestMethods = new Set(validRequestMethodsArr);
const redirectStatusCodes = /* @__PURE__ */ new Set([301, 302, 303, 307, 308]);
const redirectPreserveMethodStatusCodes = /* @__PURE__ */ new Set([307, 308]);
const IDLE_NAVIGATION = {
  state: "idle",
  location: void 0,
  formMethod: void 0,
  formAction: void 0,
  formEncType: void 0,
  formData: void 0,
  json: void 0,
  text: void 0
};
const IDLE_FETCHER = {
  state: "idle",
  data: void 0,
  formMethod: void 0,
  formAction: void 0,
  formEncType: void 0,
  formData: void 0,
  json: void 0,
  text: void 0
};
const IDLE_BLOCKER = {
  state: "unblocked",
  proceed: void 0,
  reset: void 0,
  location: void 0
};
const ABSOLUTE_URL_REGEX = /^(?:[a-z][a-z0-9+.-]*:|\/\/)/i;
const defaultMapRouteProperties = (route) => ({
  hasErrorBoundary: Boolean(route.hasErrorBoundary)
});
const TRANSITIONS_STORAGE_KEY = "remix-router-transitions";
function createRouter(init) {
  const routerWindow = init.window ? init.window : typeof window !== "undefined" ? window : void 0;
  const isBrowser2 = typeof routerWindow !== "undefined" && typeof routerWindow.document !== "undefined" && typeof routerWindow.document.createElement !== "undefined";
  const isServer = !isBrowser2;
  invariant(init.routes.length > 0, "You must provide a non-empty routes array to createRouter");
  let mapRouteProperties2;
  if (init.mapRouteProperties) {
    mapRouteProperties2 = init.mapRouteProperties;
  } else if (init.detectErrorBoundary) {
    let detectErrorBoundary = init.detectErrorBoundary;
    mapRouteProperties2 = (route) => ({
      hasErrorBoundary: detectErrorBoundary(route)
    });
  } else {
    mapRouteProperties2 = defaultMapRouteProperties;
  }
  let manifest = {};
  let dataRoutes = convertRoutesToDataRoutes(init.routes, mapRouteProperties2, void 0, manifest);
  let inFlightDataRoutes;
  let basename = init.basename || "/";
  let dataStrategyImpl = init.dataStrategy || defaultDataStrategy;
  let patchRoutesOnNavigationImpl = init.patchRoutesOnNavigation;
  let future = _extends$9({
    v7_fetcherPersist: false,
    v7_normalizeFormMethod: false,
    v7_partialHydration: false,
    v7_prependBasename: false,
    v7_relativeSplatPath: false,
    v7_skipActionErrorRevalidation: false
  }, init.future);
  let unlistenHistory = null;
  let subscribers = /* @__PURE__ */ new Set();
  let savedScrollPositions = null;
  let getScrollRestorationKey = null;
  let getScrollPosition2 = null;
  let initialScrollRestored = init.hydrationData != null;
  let initialMatches = matchRoutes(dataRoutes, init.history.location, basename);
  let initialErrors = null;
  if (initialMatches == null && !patchRoutesOnNavigationImpl) {
    let error = getInternalRouterError(404, {
      pathname: init.history.location.pathname
    });
    let {
      matches,
      route
    } = getShortCircuitMatches(dataRoutes);
    initialMatches = matches;
    initialErrors = {
      [route.id]: error
    };
  }
  if (initialMatches && !init.hydrationData) {
    let fogOfWar = checkFogOfWar(initialMatches, dataRoutes, init.history.location.pathname);
    if (fogOfWar.active) {
      initialMatches = null;
    }
  }
  let initialized;
  if (!initialMatches) {
    initialized = false;
    initialMatches = [];
    if (future.v7_partialHydration) {
      let fogOfWar = checkFogOfWar(null, dataRoutes, init.history.location.pathname);
      if (fogOfWar.active && fogOfWar.matches) {
        initialMatches = fogOfWar.matches;
      }
    }
  } else if (initialMatches.some((m2) => m2.route.lazy)) {
    initialized = false;
  } else if (!initialMatches.some((m2) => m2.route.loader)) {
    initialized = true;
  } else if (future.v7_partialHydration) {
    let loaderData = init.hydrationData ? init.hydrationData.loaderData : null;
    let errors = init.hydrationData ? init.hydrationData.errors : null;
    if (errors) {
      let idx = initialMatches.findIndex((m2) => errors[m2.route.id] !== void 0);
      initialized = initialMatches.slice(0, idx + 1).every((m2) => !shouldLoadRouteOnHydration(m2.route, loaderData, errors));
    } else {
      initialized = initialMatches.every((m2) => !shouldLoadRouteOnHydration(m2.route, loaderData, errors));
    }
  } else {
    initialized = init.hydrationData != null;
  }
  let router2;
  let state = {
    historyAction: init.history.action,
    location: init.history.location,
    matches: initialMatches,
    initialized,
    navigation: IDLE_NAVIGATION,
    // Don't restore on initial updateState() if we were SSR'd
    restoreScrollPosition: init.hydrationData != null ? false : null,
    preventScrollReset: false,
    revalidation: "idle",
    loaderData: init.hydrationData && init.hydrationData.loaderData || {},
    actionData: init.hydrationData && init.hydrationData.actionData || null,
    errors: init.hydrationData && init.hydrationData.errors || initialErrors,
    fetchers: /* @__PURE__ */ new Map(),
    blockers: /* @__PURE__ */ new Map()
  };
  let pendingAction = Action.Pop;
  let pendingPreventScrollReset = false;
  let pendingNavigationController;
  let pendingViewTransitionEnabled = false;
  let appliedViewTransitions = /* @__PURE__ */ new Map();
  let removePageHideEventListener = null;
  let isUninterruptedRevalidation = false;
  let isRevalidationRequired = false;
  let cancelledDeferredRoutes = [];
  let cancelledFetcherLoads = /* @__PURE__ */ new Set();
  let fetchControllers = /* @__PURE__ */ new Map();
  let incrementingLoadId = 0;
  let pendingNavigationLoadId = -1;
  let fetchReloadIds = /* @__PURE__ */ new Map();
  let fetchRedirectIds = /* @__PURE__ */ new Set();
  let fetchLoadMatches = /* @__PURE__ */ new Map();
  let activeFetchers = /* @__PURE__ */ new Map();
  let deletedFetchers = /* @__PURE__ */ new Set();
  let activeDeferreds = /* @__PURE__ */ new Map();
  let blockerFunctions = /* @__PURE__ */ new Map();
  let unblockBlockerHistoryUpdate = void 0;
  function initialize() {
    unlistenHistory = init.history.listen((_ref) => {
      let {
        action: historyAction,
        location: location2,
        delta
      } = _ref;
      if (unblockBlockerHistoryUpdate) {
        unblockBlockerHistoryUpdate();
        unblockBlockerHistoryUpdate = void 0;
        return;
      }
      warning(blockerFunctions.size === 0 || delta != null, "You are trying to use a blocker on a POP navigation to a location that was not created by @remix-run/router. This will fail silently in production. This can happen if you are navigating outside the router via `window.history.pushState`/`window.location.hash` instead of using router navigation APIs.  This can also happen if you are using createHashRouter and the user manually changes the URL.");
      let blockerKey = shouldBlockNavigation({
        currentLocation: state.location,
        nextLocation: location2,
        historyAction
      });
      if (blockerKey && delta != null) {
        let nextHistoryUpdatePromise = new Promise((resolve) => {
          unblockBlockerHistoryUpdate = resolve;
        });
        init.history.go(delta * -1);
        updateBlocker(blockerKey, {
          state: "blocked",
          location: location2,
          proceed() {
            updateBlocker(blockerKey, {
              state: "proceeding",
              proceed: void 0,
              reset: void 0,
              location: location2
            });
            nextHistoryUpdatePromise.then(() => init.history.go(delta));
          },
          reset() {
            let blockers = new Map(state.blockers);
            blockers.set(blockerKey, IDLE_BLOCKER);
            updateState({
              blockers
            });
          }
        });
        return;
      }
      return startNavigation(historyAction, location2);
    });
    if (isBrowser2) {
      restoreAppliedTransitions(routerWindow, appliedViewTransitions);
      let _saveAppliedTransitions = () => persistAppliedTransitions(routerWindow, appliedViewTransitions);
      routerWindow.addEventListener("pagehide", _saveAppliedTransitions);
      removePageHideEventListener = () => routerWindow.removeEventListener("pagehide", _saveAppliedTransitions);
    }
    if (!state.initialized) {
      startNavigation(Action.Pop, state.location, {
        initialHydration: true
      });
    }
    return router2;
  }
  function dispose() {
    if (unlistenHistory) {
      unlistenHistory();
    }
    if (removePageHideEventListener) {
      removePageHideEventListener();
    }
    subscribers.clear();
    pendingNavigationController && pendingNavigationController.abort();
    state.fetchers.forEach((_2, key) => deleteFetcher(key));
    state.blockers.forEach((_2, key) => deleteBlocker(key));
  }
  function subscribe2(fn) {
    subscribers.add(fn);
    return () => subscribers.delete(fn);
  }
  function updateState(newState, opts) {
    if (opts === void 0) {
      opts = {};
    }
    state = _extends$9({}, state, newState);
    let completedFetchers = [];
    let deletedFetchersKeys = [];
    if (future.v7_fetcherPersist) {
      state.fetchers.forEach((fetcher, key) => {
        if (fetcher.state === "idle") {
          if (deletedFetchers.has(key)) {
            deletedFetchersKeys.push(key);
          } else {
            completedFetchers.push(key);
          }
        }
      });
    }
    [...subscribers].forEach((subscriber) => subscriber(state, {
      deletedFetchers: deletedFetchersKeys,
      viewTransitionOpts: opts.viewTransitionOpts,
      flushSync: opts.flushSync === true
    }));
    if (future.v7_fetcherPersist) {
      completedFetchers.forEach((key) => state.fetchers.delete(key));
      deletedFetchersKeys.forEach((key) => deleteFetcher(key));
    }
  }
  function completeNavigation(location2, newState, _temp) {
    var _location$state, _location$state2;
    let {
      flushSync
    } = _temp === void 0 ? {} : _temp;
    let isActionReload = state.actionData != null && state.navigation.formMethod != null && isMutationMethod(state.navigation.formMethod) && state.navigation.state === "loading" && ((_location$state = location2.state) == null ? void 0 : _location$state._isRedirect) !== true;
    let actionData;
    if (newState.actionData) {
      if (Object.keys(newState.actionData).length > 0) {
        actionData = newState.actionData;
      } else {
        actionData = null;
      }
    } else if (isActionReload) {
      actionData = state.actionData;
    } else {
      actionData = null;
    }
    let loaderData = newState.loaderData ? mergeLoaderData(state.loaderData, newState.loaderData, newState.matches || [], newState.errors) : state.loaderData;
    let blockers = state.blockers;
    if (blockers.size > 0) {
      blockers = new Map(blockers);
      blockers.forEach((_2, k2) => blockers.set(k2, IDLE_BLOCKER));
    }
    let preventScrollReset = pendingPreventScrollReset === true || state.navigation.formMethod != null && isMutationMethod(state.navigation.formMethod) && ((_location$state2 = location2.state) == null ? void 0 : _location$state2._isRedirect) !== true;
    if (inFlightDataRoutes) {
      dataRoutes = inFlightDataRoutes;
      inFlightDataRoutes = void 0;
    }
    if (isUninterruptedRevalidation) ;
    else if (pendingAction === Action.Pop) ;
    else if (pendingAction === Action.Push) {
      init.history.push(location2, location2.state);
    } else if (pendingAction === Action.Replace) {
      init.history.replace(location2, location2.state);
    }
    let viewTransitionOpts;
    if (pendingAction === Action.Pop) {
      let priorPaths = appliedViewTransitions.get(state.location.pathname);
      if (priorPaths && priorPaths.has(location2.pathname)) {
        viewTransitionOpts = {
          currentLocation: state.location,
          nextLocation: location2
        };
      } else if (appliedViewTransitions.has(location2.pathname)) {
        viewTransitionOpts = {
          currentLocation: location2,
          nextLocation: state.location
        };
      }
    } else if (pendingViewTransitionEnabled) {
      let toPaths = appliedViewTransitions.get(state.location.pathname);
      if (toPaths) {
        toPaths.add(location2.pathname);
      } else {
        toPaths = /* @__PURE__ */ new Set([location2.pathname]);
        appliedViewTransitions.set(state.location.pathname, toPaths);
      }
      viewTransitionOpts = {
        currentLocation: state.location,
        nextLocation: location2
      };
    }
    updateState(_extends$9({}, newState, {
      actionData,
      loaderData,
      historyAction: pendingAction,
      location: location2,
      initialized: true,
      navigation: IDLE_NAVIGATION,
      revalidation: "idle",
      restoreScrollPosition: getSavedScrollPosition(location2, newState.matches || state.matches),
      preventScrollReset,
      blockers
    }), {
      viewTransitionOpts,
      flushSync: flushSync === true
    });
    pendingAction = Action.Pop;
    pendingPreventScrollReset = false;
    pendingViewTransitionEnabled = false;
    isUninterruptedRevalidation = false;
    isRevalidationRequired = false;
    cancelledDeferredRoutes = [];
  }
  async function navigate(to, opts) {
    if (typeof to === "number") {
      init.history.go(to);
      return;
    }
    let normalizedPath = normalizeTo(state.location, state.matches, basename, future.v7_prependBasename, to, future.v7_relativeSplatPath, opts == null ? void 0 : opts.fromRouteId, opts == null ? void 0 : opts.relative);
    let {
      path,
      submission,
      error
    } = normalizeNavigateOptions(future.v7_normalizeFormMethod, false, normalizedPath, opts);
    let currentLocation = state.location;
    let nextLocation = createLocation(state.location, path, opts && opts.state);
    nextLocation = _extends$9({}, nextLocation, init.history.encodeLocation(nextLocation));
    let userReplace = opts && opts.replace != null ? opts.replace : void 0;
    let historyAction = Action.Push;
    if (userReplace === true) {
      historyAction = Action.Replace;
    } else if (userReplace === false) ;
    else if (submission != null && isMutationMethod(submission.formMethod) && submission.formAction === state.location.pathname + state.location.search) {
      historyAction = Action.Replace;
    }
    let preventScrollReset = opts && "preventScrollReset" in opts ? opts.preventScrollReset === true : void 0;
    let flushSync = (opts && opts.flushSync) === true;
    let blockerKey = shouldBlockNavigation({
      currentLocation,
      nextLocation,
      historyAction
    });
    if (blockerKey) {
      updateBlocker(blockerKey, {
        state: "blocked",
        location: nextLocation,
        proceed() {
          updateBlocker(blockerKey, {
            state: "proceeding",
            proceed: void 0,
            reset: void 0,
            location: nextLocation
          });
          navigate(to, opts);
        },
        reset() {
          let blockers = new Map(state.blockers);
          blockers.set(blockerKey, IDLE_BLOCKER);
          updateState({
            blockers
          });
        }
      });
      return;
    }
    return await startNavigation(historyAction, nextLocation, {
      submission,
      // Send through the formData serialization error if we have one so we can
      // render at the right error boundary after we match routes
      pendingError: error,
      preventScrollReset,
      replace: opts && opts.replace,
      enableViewTransition: opts && opts.viewTransition,
      flushSync
    });
  }
  function revalidate() {
    interruptActiveLoads();
    updateState({
      revalidation: "loading"
    });
    if (state.navigation.state === "submitting") {
      return;
    }
    if (state.navigation.state === "idle") {
      startNavigation(state.historyAction, state.location, {
        startUninterruptedRevalidation: true
      });
      return;
    }
    startNavigation(pendingAction || state.historyAction, state.navigation.location, {
      overrideNavigation: state.navigation,
      // Proxy through any rending view transition
      enableViewTransition: pendingViewTransitionEnabled === true
    });
  }
  async function startNavigation(historyAction, location2, opts) {
    pendingNavigationController && pendingNavigationController.abort();
    pendingNavigationController = null;
    pendingAction = historyAction;
    isUninterruptedRevalidation = (opts && opts.startUninterruptedRevalidation) === true;
    saveScrollPosition(state.location, state.matches);
    pendingPreventScrollReset = (opts && opts.preventScrollReset) === true;
    pendingViewTransitionEnabled = (opts && opts.enableViewTransition) === true;
    let routesToUse = inFlightDataRoutes || dataRoutes;
    let loadingNavigation = opts && opts.overrideNavigation;
    let matches = matchRoutes(routesToUse, location2, basename);
    let flushSync = (opts && opts.flushSync) === true;
    let fogOfWar = checkFogOfWar(matches, routesToUse, location2.pathname);
    if (fogOfWar.active && fogOfWar.matches) {
      matches = fogOfWar.matches;
    }
    if (!matches) {
      let {
        error,
        notFoundMatches,
        route
      } = handleNavigational404(location2.pathname);
      completeNavigation(location2, {
        matches: notFoundMatches,
        loaderData: {},
        errors: {
          [route.id]: error
        }
      }, {
        flushSync
      });
      return;
    }
    if (state.initialized && !isRevalidationRequired && isHashChangeOnly(state.location, location2) && !(opts && opts.submission && isMutationMethod(opts.submission.formMethod))) {
      completeNavigation(location2, {
        matches
      }, {
        flushSync
      });
      return;
    }
    pendingNavigationController = new AbortController();
    let request = createClientSideRequest(init.history, location2, pendingNavigationController.signal, opts && opts.submission);
    let pendingActionResult;
    if (opts && opts.pendingError) {
      pendingActionResult = [findNearestBoundary(matches).route.id, {
        type: ResultType.error,
        error: opts.pendingError
      }];
    } else if (opts && opts.submission && isMutationMethod(opts.submission.formMethod)) {
      let actionResult = await handleAction(request, location2, opts.submission, matches, fogOfWar.active, {
        replace: opts.replace,
        flushSync
      });
      if (actionResult.shortCircuited) {
        return;
      }
      if (actionResult.pendingActionResult) {
        let [routeId, result] = actionResult.pendingActionResult;
        if (isErrorResult(result) && isRouteErrorResponse(result.error) && result.error.status === 404) {
          pendingNavigationController = null;
          completeNavigation(location2, {
            matches: actionResult.matches,
            loaderData: {},
            errors: {
              [routeId]: result.error
            }
          });
          return;
        }
      }
      matches = actionResult.matches || matches;
      pendingActionResult = actionResult.pendingActionResult;
      loadingNavigation = getLoadingNavigation(location2, opts.submission);
      flushSync = false;
      fogOfWar.active = false;
      request = createClientSideRequest(init.history, request.url, request.signal);
    }
    let {
      shortCircuited,
      matches: updatedMatches,
      loaderData,
      errors
    } = await handleLoaders(request, location2, matches, fogOfWar.active, loadingNavigation, opts && opts.submission, opts && opts.fetcherSubmission, opts && opts.replace, opts && opts.initialHydration === true, flushSync, pendingActionResult);
    if (shortCircuited) {
      return;
    }
    pendingNavigationController = null;
    completeNavigation(location2, _extends$9({
      matches: updatedMatches || matches
    }, getActionDataForCommit(pendingActionResult), {
      loaderData,
      errors
    }));
  }
  async function handleAction(request, location2, submission, matches, isFogOfWar, opts) {
    if (opts === void 0) {
      opts = {};
    }
    interruptActiveLoads();
    let navigation = getSubmittingNavigation(location2, submission);
    updateState({
      navigation
    }, {
      flushSync: opts.flushSync === true
    });
    if (isFogOfWar) {
      let discoverResult = await discoverRoutes(matches, location2.pathname, request.signal);
      if (discoverResult.type === "aborted") {
        return {
          shortCircuited: true
        };
      } else if (discoverResult.type === "error") {
        let boundaryId = findNearestBoundary(discoverResult.partialMatches).route.id;
        return {
          matches: discoverResult.partialMatches,
          pendingActionResult: [boundaryId, {
            type: ResultType.error,
            error: discoverResult.error
          }]
        };
      } else if (!discoverResult.matches) {
        let {
          notFoundMatches,
          error,
          route
        } = handleNavigational404(location2.pathname);
        return {
          matches: notFoundMatches,
          pendingActionResult: [route.id, {
            type: ResultType.error,
            error
          }]
        };
      } else {
        matches = discoverResult.matches;
      }
    }
    let result;
    let actionMatch = getTargetMatch(matches, location2);
    if (!actionMatch.route.action && !actionMatch.route.lazy) {
      result = {
        type: ResultType.error,
        error: getInternalRouterError(405, {
          method: request.method,
          pathname: location2.pathname,
          routeId: actionMatch.route.id
        })
      };
    } else {
      let results = await callDataStrategy("action", state, request, [actionMatch], matches, null);
      result = results[actionMatch.route.id];
      if (request.signal.aborted) {
        return {
          shortCircuited: true
        };
      }
    }
    if (isRedirectResult(result)) {
      let replace;
      if (opts && opts.replace != null) {
        replace = opts.replace;
      } else {
        let location3 = normalizeRedirectLocation(result.response.headers.get("Location"), new URL(request.url), basename);
        replace = location3 === state.location.pathname + state.location.search;
      }
      await startRedirectNavigation(request, result, true, {
        submission,
        replace
      });
      return {
        shortCircuited: true
      };
    }
    if (isDeferredResult(result)) {
      throw getInternalRouterError(400, {
        type: "defer-action"
      });
    }
    if (isErrorResult(result)) {
      let boundaryMatch = findNearestBoundary(matches, actionMatch.route.id);
      if ((opts && opts.replace) !== true) {
        pendingAction = Action.Push;
      }
      return {
        matches,
        pendingActionResult: [boundaryMatch.route.id, result]
      };
    }
    return {
      matches,
      pendingActionResult: [actionMatch.route.id, result]
    };
  }
  async function handleLoaders(request, location2, matches, isFogOfWar, overrideNavigation, submission, fetcherSubmission, replace, initialHydration, flushSync, pendingActionResult) {
    let loadingNavigation = overrideNavigation || getLoadingNavigation(location2, submission);
    let activeSubmission = submission || fetcherSubmission || getSubmissionFromNavigation(loadingNavigation);
    let shouldUpdateNavigationState = !isUninterruptedRevalidation && (!future.v7_partialHydration || !initialHydration);
    if (isFogOfWar) {
      if (shouldUpdateNavigationState) {
        let actionData = getUpdatedActionData(pendingActionResult);
        updateState(_extends$9({
          navigation: loadingNavigation
        }, actionData !== void 0 ? {
          actionData
        } : {}), {
          flushSync
        });
      }
      let discoverResult = await discoverRoutes(matches, location2.pathname, request.signal);
      if (discoverResult.type === "aborted") {
        return {
          shortCircuited: true
        };
      } else if (discoverResult.type === "error") {
        let boundaryId = findNearestBoundary(discoverResult.partialMatches).route.id;
        return {
          matches: discoverResult.partialMatches,
          loaderData: {},
          errors: {
            [boundaryId]: discoverResult.error
          }
        };
      } else if (!discoverResult.matches) {
        let {
          error,
          notFoundMatches,
          route
        } = handleNavigational404(location2.pathname);
        return {
          matches: notFoundMatches,
          loaderData: {},
          errors: {
            [route.id]: error
          }
        };
      } else {
        matches = discoverResult.matches;
      }
    }
    let routesToUse = inFlightDataRoutes || dataRoutes;
    let [matchesToLoad, revalidatingFetchers] = getMatchesToLoad(init.history, state, matches, activeSubmission, location2, future.v7_partialHydration && initialHydration === true, future.v7_skipActionErrorRevalidation, isRevalidationRequired, cancelledDeferredRoutes, cancelledFetcherLoads, deletedFetchers, fetchLoadMatches, fetchRedirectIds, routesToUse, basename, pendingActionResult);
    cancelActiveDeferreds((routeId) => !(matches && matches.some((m2) => m2.route.id === routeId)) || matchesToLoad && matchesToLoad.some((m2) => m2.route.id === routeId));
    pendingNavigationLoadId = ++incrementingLoadId;
    if (matchesToLoad.length === 0 && revalidatingFetchers.length === 0) {
      let updatedFetchers2 = markFetchRedirectsDone();
      completeNavigation(location2, _extends$9({
        matches,
        loaderData: {},
        // Commit pending error if we're short circuiting
        errors: pendingActionResult && isErrorResult(pendingActionResult[1]) ? {
          [pendingActionResult[0]]: pendingActionResult[1].error
        } : null
      }, getActionDataForCommit(pendingActionResult), updatedFetchers2 ? {
        fetchers: new Map(state.fetchers)
      } : {}), {
        flushSync
      });
      return {
        shortCircuited: true
      };
    }
    if (shouldUpdateNavigationState) {
      let updates = {};
      if (!isFogOfWar) {
        updates.navigation = loadingNavigation;
        let actionData = getUpdatedActionData(pendingActionResult);
        if (actionData !== void 0) {
          updates.actionData = actionData;
        }
      }
      if (revalidatingFetchers.length > 0) {
        updates.fetchers = getUpdatedRevalidatingFetchers(revalidatingFetchers);
      }
      updateState(updates, {
        flushSync
      });
    }
    revalidatingFetchers.forEach((rf2) => {
      abortFetcher(rf2.key);
      if (rf2.controller) {
        fetchControllers.set(rf2.key, rf2.controller);
      }
    });
    let abortPendingFetchRevalidations = () => revalidatingFetchers.forEach((f2) => abortFetcher(f2.key));
    if (pendingNavigationController) {
      pendingNavigationController.signal.addEventListener("abort", abortPendingFetchRevalidations);
    }
    let {
      loaderResults,
      fetcherResults
    } = await callLoadersAndMaybeResolveData(state, matches, matchesToLoad, revalidatingFetchers, request);
    if (request.signal.aborted) {
      return {
        shortCircuited: true
      };
    }
    if (pendingNavigationController) {
      pendingNavigationController.signal.removeEventListener("abort", abortPendingFetchRevalidations);
    }
    revalidatingFetchers.forEach((rf2) => fetchControllers.delete(rf2.key));
    let redirect = findRedirect(loaderResults);
    if (redirect) {
      await startRedirectNavigation(request, redirect.result, true, {
        replace
      });
      return {
        shortCircuited: true
      };
    }
    redirect = findRedirect(fetcherResults);
    if (redirect) {
      fetchRedirectIds.add(redirect.key);
      await startRedirectNavigation(request, redirect.result, true, {
        replace
      });
      return {
        shortCircuited: true
      };
    }
    let {
      loaderData,
      errors
    } = processLoaderData(state, matches, loaderResults, pendingActionResult, revalidatingFetchers, fetcherResults, activeDeferreds);
    activeDeferreds.forEach((deferredData, routeId) => {
      deferredData.subscribe((aborted) => {
        if (aborted || deferredData.done) {
          activeDeferreds.delete(routeId);
        }
      });
    });
    if (future.v7_partialHydration && initialHydration && state.errors) {
      errors = _extends$9({}, state.errors, errors);
    }
    let updatedFetchers = markFetchRedirectsDone();
    let didAbortFetchLoads = abortStaleFetchLoads(pendingNavigationLoadId);
    let shouldUpdateFetchers = updatedFetchers || didAbortFetchLoads || revalidatingFetchers.length > 0;
    return _extends$9({
      matches,
      loaderData,
      errors
    }, shouldUpdateFetchers ? {
      fetchers: new Map(state.fetchers)
    } : {});
  }
  function getUpdatedActionData(pendingActionResult) {
    if (pendingActionResult && !isErrorResult(pendingActionResult[1])) {
      return {
        [pendingActionResult[0]]: pendingActionResult[1].data
      };
    } else if (state.actionData) {
      if (Object.keys(state.actionData).length === 0) {
        return null;
      } else {
        return state.actionData;
      }
    }
  }
  function getUpdatedRevalidatingFetchers(revalidatingFetchers) {
    revalidatingFetchers.forEach((rf2) => {
      let fetcher = state.fetchers.get(rf2.key);
      let revalidatingFetcher = getLoadingFetcher(void 0, fetcher ? fetcher.data : void 0);
      state.fetchers.set(rf2.key, revalidatingFetcher);
    });
    return new Map(state.fetchers);
  }
  function fetch2(key, routeId, href, opts) {
    if (isServer) {
      throw new Error("router.fetch() was called during the server render, but it shouldn't be. You are likely calling a useFetcher() method in the body of your component. Try moving it to a useEffect or a callback.");
    }
    abortFetcher(key);
    let flushSync = (opts && opts.flushSync) === true;
    let routesToUse = inFlightDataRoutes || dataRoutes;
    let normalizedPath = normalizeTo(state.location, state.matches, basename, future.v7_prependBasename, href, future.v7_relativeSplatPath, routeId, opts == null ? void 0 : opts.relative);
    let matches = matchRoutes(routesToUse, normalizedPath, basename);
    let fogOfWar = checkFogOfWar(matches, routesToUse, normalizedPath);
    if (fogOfWar.active && fogOfWar.matches) {
      matches = fogOfWar.matches;
    }
    if (!matches) {
      setFetcherError(key, routeId, getInternalRouterError(404, {
        pathname: normalizedPath
      }), {
        flushSync
      });
      return;
    }
    let {
      path,
      submission,
      error
    } = normalizeNavigateOptions(future.v7_normalizeFormMethod, true, normalizedPath, opts);
    if (error) {
      setFetcherError(key, routeId, error, {
        flushSync
      });
      return;
    }
    let match = getTargetMatch(matches, path);
    let preventScrollReset = (opts && opts.preventScrollReset) === true;
    if (submission && isMutationMethod(submission.formMethod)) {
      handleFetcherAction(key, routeId, path, match, matches, fogOfWar.active, flushSync, preventScrollReset, submission);
      return;
    }
    fetchLoadMatches.set(key, {
      routeId,
      path
    });
    handleFetcherLoader(key, routeId, path, match, matches, fogOfWar.active, flushSync, preventScrollReset, submission);
  }
  async function handleFetcherAction(key, routeId, path, match, requestMatches, isFogOfWar, flushSync, preventScrollReset, submission) {
    interruptActiveLoads();
    fetchLoadMatches.delete(key);
    function detectAndHandle405Error(m2) {
      if (!m2.route.action && !m2.route.lazy) {
        let error = getInternalRouterError(405, {
          method: submission.formMethod,
          pathname: path,
          routeId
        });
        setFetcherError(key, routeId, error, {
          flushSync
        });
        return true;
      }
      return false;
    }
    if (!isFogOfWar && detectAndHandle405Error(match)) {
      return;
    }
    let existingFetcher = state.fetchers.get(key);
    updateFetcherState(key, getSubmittingFetcher(submission, existingFetcher), {
      flushSync
    });
    let abortController = new AbortController();
    let fetchRequest = createClientSideRequest(init.history, path, abortController.signal, submission);
    if (isFogOfWar) {
      let discoverResult = await discoverRoutes(requestMatches, path, fetchRequest.signal);
      if (discoverResult.type === "aborted") {
        return;
      } else if (discoverResult.type === "error") {
        setFetcherError(key, routeId, discoverResult.error, {
          flushSync
        });
        return;
      } else if (!discoverResult.matches) {
        setFetcherError(key, routeId, getInternalRouterError(404, {
          pathname: path
        }), {
          flushSync
        });
        return;
      } else {
        requestMatches = discoverResult.matches;
        match = getTargetMatch(requestMatches, path);
        if (detectAndHandle405Error(match)) {
          return;
        }
      }
    }
    fetchControllers.set(key, abortController);
    let originatingLoadId = incrementingLoadId;
    let actionResults = await callDataStrategy("action", state, fetchRequest, [match], requestMatches, key);
    let actionResult = actionResults[match.route.id];
    if (fetchRequest.signal.aborted) {
      if (fetchControllers.get(key) === abortController) {
        fetchControllers.delete(key);
      }
      return;
    }
    if (future.v7_fetcherPersist && deletedFetchers.has(key)) {
      if (isRedirectResult(actionResult) || isErrorResult(actionResult)) {
        updateFetcherState(key, getDoneFetcher(void 0));
        return;
      }
    } else {
      if (isRedirectResult(actionResult)) {
        fetchControllers.delete(key);
        if (pendingNavigationLoadId > originatingLoadId) {
          updateFetcherState(key, getDoneFetcher(void 0));
          return;
        } else {
          fetchRedirectIds.add(key);
          updateFetcherState(key, getLoadingFetcher(submission));
          return startRedirectNavigation(fetchRequest, actionResult, false, {
            fetcherSubmission: submission,
            preventScrollReset
          });
        }
      }
      if (isErrorResult(actionResult)) {
        setFetcherError(key, routeId, actionResult.error);
        return;
      }
    }
    if (isDeferredResult(actionResult)) {
      throw getInternalRouterError(400, {
        type: "defer-action"
      });
    }
    let nextLocation = state.navigation.location || state.location;
    let revalidationRequest = createClientSideRequest(init.history, nextLocation, abortController.signal);
    let routesToUse = inFlightDataRoutes || dataRoutes;
    let matches = state.navigation.state !== "idle" ? matchRoutes(routesToUse, state.navigation.location, basename) : state.matches;
    invariant(matches, "Didn't find any matches after fetcher action");
    let loadId = ++incrementingLoadId;
    fetchReloadIds.set(key, loadId);
    let loadFetcher = getLoadingFetcher(submission, actionResult.data);
    state.fetchers.set(key, loadFetcher);
    let [matchesToLoad, revalidatingFetchers] = getMatchesToLoad(init.history, state, matches, submission, nextLocation, false, future.v7_skipActionErrorRevalidation, isRevalidationRequired, cancelledDeferredRoutes, cancelledFetcherLoads, deletedFetchers, fetchLoadMatches, fetchRedirectIds, routesToUse, basename, [match.route.id, actionResult]);
    revalidatingFetchers.filter((rf2) => rf2.key !== key).forEach((rf2) => {
      let staleKey = rf2.key;
      let existingFetcher2 = state.fetchers.get(staleKey);
      let revalidatingFetcher = getLoadingFetcher(void 0, existingFetcher2 ? existingFetcher2.data : void 0);
      state.fetchers.set(staleKey, revalidatingFetcher);
      abortFetcher(staleKey);
      if (rf2.controller) {
        fetchControllers.set(staleKey, rf2.controller);
      }
    });
    updateState({
      fetchers: new Map(state.fetchers)
    });
    let abortPendingFetchRevalidations = () => revalidatingFetchers.forEach((rf2) => abortFetcher(rf2.key));
    abortController.signal.addEventListener("abort", abortPendingFetchRevalidations);
    let {
      loaderResults,
      fetcherResults
    } = await callLoadersAndMaybeResolveData(state, matches, matchesToLoad, revalidatingFetchers, revalidationRequest);
    if (abortController.signal.aborted) {
      return;
    }
    abortController.signal.removeEventListener("abort", abortPendingFetchRevalidations);
    fetchReloadIds.delete(key);
    fetchControllers.delete(key);
    revalidatingFetchers.forEach((r2) => fetchControllers.delete(r2.key));
    let redirect = findRedirect(loaderResults);
    if (redirect) {
      return startRedirectNavigation(revalidationRequest, redirect.result, false, {
        preventScrollReset
      });
    }
    redirect = findRedirect(fetcherResults);
    if (redirect) {
      fetchRedirectIds.add(redirect.key);
      return startRedirectNavigation(revalidationRequest, redirect.result, false, {
        preventScrollReset
      });
    }
    let {
      loaderData,
      errors
    } = processLoaderData(state, matches, loaderResults, void 0, revalidatingFetchers, fetcherResults, activeDeferreds);
    if (state.fetchers.has(key)) {
      let doneFetcher = getDoneFetcher(actionResult.data);
      state.fetchers.set(key, doneFetcher);
    }
    abortStaleFetchLoads(loadId);
    if (state.navigation.state === "loading" && loadId > pendingNavigationLoadId) {
      invariant(pendingAction, "Expected pending action");
      pendingNavigationController && pendingNavigationController.abort();
      completeNavigation(state.navigation.location, {
        matches,
        loaderData,
        errors,
        fetchers: new Map(state.fetchers)
      });
    } else {
      updateState({
        errors,
        loaderData: mergeLoaderData(state.loaderData, loaderData, matches, errors),
        fetchers: new Map(state.fetchers)
      });
      isRevalidationRequired = false;
    }
  }
  async function handleFetcherLoader(key, routeId, path, match, matches, isFogOfWar, flushSync, preventScrollReset, submission) {
    let existingFetcher = state.fetchers.get(key);
    updateFetcherState(key, getLoadingFetcher(submission, existingFetcher ? existingFetcher.data : void 0), {
      flushSync
    });
    let abortController = new AbortController();
    let fetchRequest = createClientSideRequest(init.history, path, abortController.signal);
    if (isFogOfWar) {
      let discoverResult = await discoverRoutes(matches, path, fetchRequest.signal);
      if (discoverResult.type === "aborted") {
        return;
      } else if (discoverResult.type === "error") {
        setFetcherError(key, routeId, discoverResult.error, {
          flushSync
        });
        return;
      } else if (!discoverResult.matches) {
        setFetcherError(key, routeId, getInternalRouterError(404, {
          pathname: path
        }), {
          flushSync
        });
        return;
      } else {
        matches = discoverResult.matches;
        match = getTargetMatch(matches, path);
      }
    }
    fetchControllers.set(key, abortController);
    let originatingLoadId = incrementingLoadId;
    let results = await callDataStrategy("loader", state, fetchRequest, [match], matches, key);
    let result = results[match.route.id];
    if (isDeferredResult(result)) {
      result = await resolveDeferredData(result, fetchRequest.signal, true) || result;
    }
    if (fetchControllers.get(key) === abortController) {
      fetchControllers.delete(key);
    }
    if (fetchRequest.signal.aborted) {
      return;
    }
    if (deletedFetchers.has(key)) {
      updateFetcherState(key, getDoneFetcher(void 0));
      return;
    }
    if (isRedirectResult(result)) {
      if (pendingNavigationLoadId > originatingLoadId) {
        updateFetcherState(key, getDoneFetcher(void 0));
        return;
      } else {
        fetchRedirectIds.add(key);
        await startRedirectNavigation(fetchRequest, result, false, {
          preventScrollReset
        });
        return;
      }
    }
    if (isErrorResult(result)) {
      setFetcherError(key, routeId, result.error);
      return;
    }
    invariant(!isDeferredResult(result), "Unhandled fetcher deferred data");
    updateFetcherState(key, getDoneFetcher(result.data));
  }
  async function startRedirectNavigation(request, redirect, isNavigation, _temp2) {
    let {
      submission,
      fetcherSubmission,
      preventScrollReset,
      replace
    } = _temp2 === void 0 ? {} : _temp2;
    if (redirect.response.headers.has("X-Remix-Revalidate")) {
      isRevalidationRequired = true;
    }
    let location2 = redirect.response.headers.get("Location");
    invariant(location2, "Expected a Location header on the redirect Response");
    location2 = normalizeRedirectLocation(location2, new URL(request.url), basename);
    let redirectLocation = createLocation(state.location, location2, {
      _isRedirect: true
    });
    if (isBrowser2) {
      let isDocumentReload = false;
      if (redirect.response.headers.has("X-Remix-Reload-Document")) {
        isDocumentReload = true;
      } else if (ABSOLUTE_URL_REGEX.test(location2)) {
        const url = init.history.createURL(location2);
        isDocumentReload = // Hard reload if it's an absolute URL to a new origin
        url.origin !== routerWindow.location.origin || // Hard reload if it's an absolute URL that does not match our basename
        stripBasename(url.pathname, basename) == null;
      }
      if (isDocumentReload) {
        if (replace) {
          routerWindow.location.replace(location2);
        } else {
          routerWindow.location.assign(location2);
        }
        return;
      }
    }
    pendingNavigationController = null;
    let redirectHistoryAction = replace === true || redirect.response.headers.has("X-Remix-Replace") ? Action.Replace : Action.Push;
    let {
      formMethod,
      formAction,
      formEncType
    } = state.navigation;
    if (!submission && !fetcherSubmission && formMethod && formAction && formEncType) {
      submission = getSubmissionFromNavigation(state.navigation);
    }
    let activeSubmission = submission || fetcherSubmission;
    if (redirectPreserveMethodStatusCodes.has(redirect.response.status) && activeSubmission && isMutationMethod(activeSubmission.formMethod)) {
      await startNavigation(redirectHistoryAction, redirectLocation, {
        submission: _extends$9({}, activeSubmission, {
          formAction: location2
        }),
        // Preserve these flags across redirects
        preventScrollReset: preventScrollReset || pendingPreventScrollReset,
        enableViewTransition: isNavigation ? pendingViewTransitionEnabled : void 0
      });
    } else {
      let overrideNavigation = getLoadingNavigation(redirectLocation, submission);
      await startNavigation(redirectHistoryAction, redirectLocation, {
        overrideNavigation,
        // Send fetcher submissions through for shouldRevalidate
        fetcherSubmission,
        // Preserve these flags across redirects
        preventScrollReset: preventScrollReset || pendingPreventScrollReset,
        enableViewTransition: isNavigation ? pendingViewTransitionEnabled : void 0
      });
    }
  }
  async function callDataStrategy(type2, state2, request, matchesToLoad, matches, fetcherKey) {
    let results;
    let dataResults = {};
    try {
      results = await callDataStrategyImpl(dataStrategyImpl, type2, state2, request, matchesToLoad, matches, fetcherKey, manifest, mapRouteProperties2);
    } catch (e) {
      matchesToLoad.forEach((m2) => {
        dataResults[m2.route.id] = {
          type: ResultType.error,
          error: e
        };
      });
      return dataResults;
    }
    for (let [routeId, result] of Object.entries(results)) {
      if (isRedirectDataStrategyResultResult(result)) {
        let response = result.result;
        dataResults[routeId] = {
          type: ResultType.redirect,
          response: normalizeRelativeRoutingRedirectResponse(response, request, routeId, matches, basename, future.v7_relativeSplatPath)
        };
      } else {
        dataResults[routeId] = await convertDataStrategyResultToDataResult(result);
      }
    }
    return dataResults;
  }
  async function callLoadersAndMaybeResolveData(state2, matches, matchesToLoad, fetchersToLoad, request) {
    let currentMatches = state2.matches;
    let loaderResultsPromise = callDataStrategy("loader", state2, request, matchesToLoad, matches, null);
    let fetcherResultsPromise = Promise.all(fetchersToLoad.map(async (f2) => {
      if (f2.matches && f2.match && f2.controller) {
        let results = await callDataStrategy("loader", state2, createClientSideRequest(init.history, f2.path, f2.controller.signal), [f2.match], f2.matches, f2.key);
        let result = results[f2.match.route.id];
        return {
          [f2.key]: result
        };
      } else {
        return Promise.resolve({
          [f2.key]: {
            type: ResultType.error,
            error: getInternalRouterError(404, {
              pathname: f2.path
            })
          }
        });
      }
    }));
    let loaderResults = await loaderResultsPromise;
    let fetcherResults = (await fetcherResultsPromise).reduce((acc, r2) => Object.assign(acc, r2), {});
    await Promise.all([resolveNavigationDeferredResults(matches, loaderResults, request.signal, currentMatches, state2.loaderData), resolveFetcherDeferredResults(matches, fetcherResults, fetchersToLoad)]);
    return {
      loaderResults,
      fetcherResults
    };
  }
  function interruptActiveLoads() {
    isRevalidationRequired = true;
    cancelledDeferredRoutes.push(...cancelActiveDeferreds());
    fetchLoadMatches.forEach((_2, key) => {
      if (fetchControllers.has(key)) {
        cancelledFetcherLoads.add(key);
      }
      abortFetcher(key);
    });
  }
  function updateFetcherState(key, fetcher, opts) {
    if (opts === void 0) {
      opts = {};
    }
    state.fetchers.set(key, fetcher);
    updateState({
      fetchers: new Map(state.fetchers)
    }, {
      flushSync: (opts && opts.flushSync) === true
    });
  }
  function setFetcherError(key, routeId, error, opts) {
    if (opts === void 0) {
      opts = {};
    }
    let boundaryMatch = findNearestBoundary(state.matches, routeId);
    deleteFetcher(key);
    updateState({
      errors: {
        [boundaryMatch.route.id]: error
      },
      fetchers: new Map(state.fetchers)
    }, {
      flushSync: (opts && opts.flushSync) === true
    });
  }
  function getFetcher(key) {
    if (future.v7_fetcherPersist) {
      activeFetchers.set(key, (activeFetchers.get(key) || 0) + 1);
      if (deletedFetchers.has(key)) {
        deletedFetchers.delete(key);
      }
    }
    return state.fetchers.get(key) || IDLE_FETCHER;
  }
  function deleteFetcher(key) {
    let fetcher = state.fetchers.get(key);
    if (fetchControllers.has(key) && !(fetcher && fetcher.state === "loading" && fetchReloadIds.has(key))) {
      abortFetcher(key);
    }
    fetchLoadMatches.delete(key);
    fetchReloadIds.delete(key);
    fetchRedirectIds.delete(key);
    deletedFetchers.delete(key);
    cancelledFetcherLoads.delete(key);
    state.fetchers.delete(key);
  }
  function deleteFetcherAndUpdateState(key) {
    if (future.v7_fetcherPersist) {
      let count = (activeFetchers.get(key) || 0) - 1;
      if (count <= 0) {
        activeFetchers.delete(key);
        deletedFetchers.add(key);
      } else {
        activeFetchers.set(key, count);
      }
    } else {
      deleteFetcher(key);
    }
    updateState({
      fetchers: new Map(state.fetchers)
    });
  }
  function abortFetcher(key) {
    let controller = fetchControllers.get(key);
    if (controller) {
      controller.abort();
      fetchControllers.delete(key);
    }
  }
  function markFetchersDone(keys2) {
    for (let key of keys2) {
      let fetcher = getFetcher(key);
      let doneFetcher = getDoneFetcher(fetcher.data);
      state.fetchers.set(key, doneFetcher);
    }
  }
  function markFetchRedirectsDone() {
    let doneKeys = [];
    let updatedFetchers = false;
    for (let key of fetchRedirectIds) {
      let fetcher = state.fetchers.get(key);
      invariant(fetcher, "Expected fetcher: " + key);
      if (fetcher.state === "loading") {
        fetchRedirectIds.delete(key);
        doneKeys.push(key);
        updatedFetchers = true;
      }
    }
    markFetchersDone(doneKeys);
    return updatedFetchers;
  }
  function abortStaleFetchLoads(landedId) {
    let yeetedKeys = [];
    for (let [key, id2] of fetchReloadIds) {
      if (id2 < landedId) {
        let fetcher = state.fetchers.get(key);
        invariant(fetcher, "Expected fetcher: " + key);
        if (fetcher.state === "loading") {
          abortFetcher(key);
          fetchReloadIds.delete(key);
          yeetedKeys.push(key);
        }
      }
    }
    markFetchersDone(yeetedKeys);
    return yeetedKeys.length > 0;
  }
  function getBlocker(key, fn) {
    let blocker = state.blockers.get(key) || IDLE_BLOCKER;
    if (blockerFunctions.get(key) !== fn) {
      blockerFunctions.set(key, fn);
    }
    return blocker;
  }
  function deleteBlocker(key) {
    state.blockers.delete(key);
    blockerFunctions.delete(key);
  }
  function updateBlocker(key, newBlocker) {
    let blocker = state.blockers.get(key) || IDLE_BLOCKER;
    invariant(blocker.state === "unblocked" && newBlocker.state === "blocked" || blocker.state === "blocked" && newBlocker.state === "blocked" || blocker.state === "blocked" && newBlocker.state === "proceeding" || blocker.state === "blocked" && newBlocker.state === "unblocked" || blocker.state === "proceeding" && newBlocker.state === "unblocked", "Invalid blocker state transition: " + blocker.state + " -> " + newBlocker.state);
    let blockers = new Map(state.blockers);
    blockers.set(key, newBlocker);
    updateState({
      blockers
    });
  }
  function shouldBlockNavigation(_ref2) {
    let {
      currentLocation,
      nextLocation,
      historyAction
    } = _ref2;
    if (blockerFunctions.size === 0) {
      return;
    }
    if (blockerFunctions.size > 1) {
      warning(false, "A router only supports one blocker at a time");
    }
    let entries = Array.from(blockerFunctions.entries());
    let [blockerKey, blockerFunction] = entries[entries.length - 1];
    let blocker = state.blockers.get(blockerKey);
    if (blocker && blocker.state === "proceeding") {
      return;
    }
    if (blockerFunction({
      currentLocation,
      nextLocation,
      historyAction
    })) {
      return blockerKey;
    }
  }
  function handleNavigational404(pathname) {
    let error = getInternalRouterError(404, {
      pathname
    });
    let routesToUse = inFlightDataRoutes || dataRoutes;
    let {
      matches,
      route
    } = getShortCircuitMatches(routesToUse);
    cancelActiveDeferreds();
    return {
      notFoundMatches: matches,
      route,
      error
    };
  }
  function cancelActiveDeferreds(predicate) {
    let cancelledRouteIds = [];
    activeDeferreds.forEach((dfd, routeId) => {
      if (!predicate || predicate(routeId)) {
        dfd.cancel();
        cancelledRouteIds.push(routeId);
        activeDeferreds.delete(routeId);
      }
    });
    return cancelledRouteIds;
  }
  function enableScrollRestoration(positions, getPosition, getKey) {
    savedScrollPositions = positions;
    getScrollPosition2 = getPosition;
    getScrollRestorationKey = getKey || null;
    if (!initialScrollRestored && state.navigation === IDLE_NAVIGATION) {
      initialScrollRestored = true;
      let y2 = getSavedScrollPosition(state.location, state.matches);
      if (y2 != null) {
        updateState({
          restoreScrollPosition: y2
        });
      }
    }
    return () => {
      savedScrollPositions = null;
      getScrollPosition2 = null;
      getScrollRestorationKey = null;
    };
  }
  function getScrollKey(location2, matches) {
    if (getScrollRestorationKey) {
      let key = getScrollRestorationKey(location2, matches.map((m2) => convertRouteMatchToUiMatch(m2, state.loaderData)));
      return key || location2.key;
    }
    return location2.key;
  }
  function saveScrollPosition(location2, matches) {
    if (savedScrollPositions && getScrollPosition2) {
      let key = getScrollKey(location2, matches);
      savedScrollPositions[key] = getScrollPosition2();
    }
  }
  function getSavedScrollPosition(location2, matches) {
    if (savedScrollPositions) {
      let key = getScrollKey(location2, matches);
      let y2 = savedScrollPositions[key];
      if (typeof y2 === "number") {
        return y2;
      }
    }
    return null;
  }
  function checkFogOfWar(matches, routesToUse, pathname) {
    if (patchRoutesOnNavigationImpl) {
      if (!matches) {
        let fogMatches = matchRoutesImpl(routesToUse, pathname, basename, true);
        return {
          active: true,
          matches: fogMatches || []
        };
      } else {
        if (Object.keys(matches[0].params).length > 0) {
          let partialMatches = matchRoutesImpl(routesToUse, pathname, basename, true);
          return {
            active: true,
            matches: partialMatches
          };
        }
      }
    }
    return {
      active: false,
      matches: null
    };
  }
  async function discoverRoutes(matches, pathname, signal) {
    if (!patchRoutesOnNavigationImpl) {
      return {
        type: "success",
        matches
      };
    }
    let partialMatches = matches;
    while (true) {
      let isNonHMR = inFlightDataRoutes == null;
      let routesToUse = inFlightDataRoutes || dataRoutes;
      let localManifest = manifest;
      try {
        await patchRoutesOnNavigationImpl({
          path: pathname,
          matches: partialMatches,
          patch: (routeId, children) => {
            if (signal.aborted) return;
            patchRoutesImpl(routeId, children, routesToUse, localManifest, mapRouteProperties2);
          }
        });
      } catch (e) {
        return {
          type: "error",
          error: e,
          partialMatches
        };
      } finally {
        if (isNonHMR && !signal.aborted) {
          dataRoutes = [...dataRoutes];
        }
      }
      if (signal.aborted) {
        return {
          type: "aborted"
        };
      }
      let newMatches = matchRoutes(routesToUse, pathname, basename);
      if (newMatches) {
        return {
          type: "success",
          matches: newMatches
        };
      }
      let newPartialMatches = matchRoutesImpl(routesToUse, pathname, basename, true);
      if (!newPartialMatches || partialMatches.length === newPartialMatches.length && partialMatches.every((m2, i) => m2.route.id === newPartialMatches[i].route.id)) {
        return {
          type: "success",
          matches: null
        };
      }
      partialMatches = newPartialMatches;
    }
  }
  function _internalSetRoutes(newRoutes) {
    manifest = {};
    inFlightDataRoutes = convertRoutesToDataRoutes(newRoutes, mapRouteProperties2, void 0, manifest);
  }
  function patchRoutes(routeId, children) {
    let isNonHMR = inFlightDataRoutes == null;
    let routesToUse = inFlightDataRoutes || dataRoutes;
    patchRoutesImpl(routeId, children, routesToUse, manifest, mapRouteProperties2);
    if (isNonHMR) {
      dataRoutes = [...dataRoutes];
      updateState({});
    }
  }
  router2 = {
    get basename() {
      return basename;
    },
    get future() {
      return future;
    },
    get state() {
      return state;
    },
    get routes() {
      return dataRoutes;
    },
    get window() {
      return routerWindow;
    },
    initialize,
    subscribe: subscribe2,
    enableScrollRestoration,
    navigate,
    fetch: fetch2,
    revalidate,
    // Passthrough to history-aware createHref used by useHref so we get proper
    // hash-aware URLs in DOM paths
    createHref: (to) => init.history.createHref(to),
    encodeLocation: (to) => init.history.encodeLocation(to),
    getFetcher,
    deleteFetcher: deleteFetcherAndUpdateState,
    dispose,
    getBlocker,
    deleteBlocker,
    patchRoutes,
    _internalFetchControllers: fetchControllers,
    _internalActiveDeferreds: activeDeferreds,
    // TODO: Remove setRoutes, it's temporary to avoid dealing with
    // updating the tree while validating the update algorithm.
    _internalSetRoutes
  };
  return router2;
}
function isSubmissionNavigation(opts) {
  return opts != null && ("formData" in opts && opts.formData != null || "body" in opts && opts.body !== void 0);
}
function normalizeTo(location2, matches, basename, prependBasename, to, v7_relativeSplatPath, fromRouteId, relative) {
  let contextualMatches;
  let activeRouteMatch;
  if (fromRouteId) {
    contextualMatches = [];
    for (let match of matches) {
      contextualMatches.push(match);
      if (match.route.id === fromRouteId) {
        activeRouteMatch = match;
        break;
      }
    }
  } else {
    contextualMatches = matches;
    activeRouteMatch = matches[matches.length - 1];
  }
  let path = resolveTo(to ? to : ".", getResolveToMatches(contextualMatches, v7_relativeSplatPath), stripBasename(location2.pathname, basename) || location2.pathname, relative === "path");
  if (to == null) {
    path.search = location2.search;
    path.hash = location2.hash;
  }
  if ((to == null || to === "" || to === ".") && activeRouteMatch) {
    let nakedIndex = hasNakedIndexQuery(path.search);
    if (activeRouteMatch.route.index && !nakedIndex) {
      path.search = path.search ? path.search.replace(/^\?/, "?index&") : "?index";
    } else if (!activeRouteMatch.route.index && nakedIndex) {
      let params = new URLSearchParams(path.search);
      let indexValues = params.getAll("index");
      params.delete("index");
      indexValues.filter((v2) => v2).forEach((v2) => params.append("index", v2));
      let qs = params.toString();
      path.search = qs ? "?" + qs : "";
    }
  }
  if (prependBasename && basename !== "/") {
    path.pathname = path.pathname === "/" ? basename : joinPaths([basename, path.pathname]);
  }
  return createPath(path);
}
function normalizeNavigateOptions(normalizeFormMethod, isFetcher, path, opts) {
  if (!opts || !isSubmissionNavigation(opts)) {
    return {
      path
    };
  }
  if (opts.formMethod && !isValidMethod(opts.formMethod)) {
    return {
      path,
      error: getInternalRouterError(405, {
        method: opts.formMethod
      })
    };
  }
  let getInvalidBodyError = () => ({
    path,
    error: getInternalRouterError(400, {
      type: "invalid-body"
    })
  });
  let rawFormMethod = opts.formMethod || "get";
  let formMethod = normalizeFormMethod ? rawFormMethod.toUpperCase() : rawFormMethod.toLowerCase();
  let formAction = stripHashFromPath(path);
  if (opts.body !== void 0) {
    if (opts.formEncType === "text/plain") {
      if (!isMutationMethod(formMethod)) {
        return getInvalidBodyError();
      }
      let text = typeof opts.body === "string" ? opts.body : opts.body instanceof FormData || opts.body instanceof URLSearchParams ? (
        // https://html.spec.whatwg.org/multipage/form-control-infrastructure.html#plain-text-form-data
        Array.from(opts.body.entries()).reduce((acc, _ref3) => {
          let [name, value] = _ref3;
          return "" + acc + name + "=" + value + "\n";
        }, "")
      ) : String(opts.body);
      return {
        path,
        submission: {
          formMethod,
          formAction,
          formEncType: opts.formEncType,
          formData: void 0,
          json: void 0,
          text
        }
      };
    } else if (opts.formEncType === "application/json") {
      if (!isMutationMethod(formMethod)) {
        return getInvalidBodyError();
      }
      try {
        let json2 = typeof opts.body === "string" ? JSON.parse(opts.body) : opts.body;
        return {
          path,
          submission: {
            formMethod,
            formAction,
            formEncType: opts.formEncType,
            formData: void 0,
            json: json2,
            text: void 0
          }
        };
      } catch (e) {
        return getInvalidBodyError();
      }
    }
  }
  invariant(typeof FormData === "function", "FormData is not available in this environment");
  let searchParams;
  let formData;
  if (opts.formData) {
    searchParams = convertFormDataToSearchParams(opts.formData);
    formData = opts.formData;
  } else if (opts.body instanceof FormData) {
    searchParams = convertFormDataToSearchParams(opts.body);
    formData = opts.body;
  } else if (opts.body instanceof URLSearchParams) {
    searchParams = opts.body;
    formData = convertSearchParamsToFormData(searchParams);
  } else if (opts.body == null) {
    searchParams = new URLSearchParams();
    formData = new FormData();
  } else {
    try {
      searchParams = new URLSearchParams(opts.body);
      formData = convertSearchParamsToFormData(searchParams);
    } catch (e) {
      return getInvalidBodyError();
    }
  }
  let submission = {
    formMethod,
    formAction,
    formEncType: opts && opts.formEncType || "application/x-www-form-urlencoded",
    formData,
    json: void 0,
    text: void 0
  };
  if (isMutationMethod(submission.formMethod)) {
    return {
      path,
      submission
    };
  }
  let parsedPath = parsePath(path);
  if (isFetcher && parsedPath.search && hasNakedIndexQuery(parsedPath.search)) {
    searchParams.append("index", "");
  }
  parsedPath.search = "?" + searchParams;
  return {
    path: createPath(parsedPath),
    submission
  };
}
function getLoaderMatchesUntilBoundary(matches, boundaryId, includeBoundary) {
  if (includeBoundary === void 0) {
    includeBoundary = false;
  }
  let index = matches.findIndex((m2) => m2.route.id === boundaryId);
  if (index >= 0) {
    return matches.slice(0, includeBoundary ? index + 1 : index);
  }
  return matches;
}
function getMatchesToLoad(history2, state, matches, submission, location2, initialHydration, skipActionErrorRevalidation, isRevalidationRequired, cancelledDeferredRoutes, cancelledFetcherLoads, deletedFetchers, fetchLoadMatches, fetchRedirectIds, routesToUse, basename, pendingActionResult) {
  let actionResult = pendingActionResult ? isErrorResult(pendingActionResult[1]) ? pendingActionResult[1].error : pendingActionResult[1].data : void 0;
  let currentUrl = history2.createURL(state.location);
  let nextUrl = history2.createURL(location2);
  let boundaryMatches = matches;
  if (initialHydration && state.errors) {
    boundaryMatches = getLoaderMatchesUntilBoundary(matches, Object.keys(state.errors)[0], true);
  } else if (pendingActionResult && isErrorResult(pendingActionResult[1])) {
    boundaryMatches = getLoaderMatchesUntilBoundary(matches, pendingActionResult[0]);
  }
  let actionStatus = pendingActionResult ? pendingActionResult[1].statusCode : void 0;
  let shouldSkipRevalidation = skipActionErrorRevalidation && actionStatus && actionStatus >= 400;
  let navigationMatches = boundaryMatches.filter((match, index) => {
    let {
      route
    } = match;
    if (route.lazy) {
      return true;
    }
    if (route.loader == null) {
      return false;
    }
    if (initialHydration) {
      return shouldLoadRouteOnHydration(route, state.loaderData, state.errors);
    }
    if (isNewLoader(state.loaderData, state.matches[index], match) || cancelledDeferredRoutes.some((id2) => id2 === match.route.id)) {
      return true;
    }
    let currentRouteMatch = state.matches[index];
    let nextRouteMatch = match;
    return shouldRevalidateLoader(match, _extends$9({
      currentUrl,
      currentParams: currentRouteMatch.params,
      nextUrl,
      nextParams: nextRouteMatch.params
    }, submission, {
      actionResult,
      actionStatus,
      defaultShouldRevalidate: shouldSkipRevalidation ? false : (
        // Forced revalidation due to submission, useRevalidator, or X-Remix-Revalidate
        isRevalidationRequired || currentUrl.pathname + currentUrl.search === nextUrl.pathname + nextUrl.search || // Search params affect all loaders
        currentUrl.search !== nextUrl.search || isNewRouteInstance(currentRouteMatch, nextRouteMatch)
      )
    }));
  });
  let revalidatingFetchers = [];
  fetchLoadMatches.forEach((f2, key) => {
    if (initialHydration || !matches.some((m2) => m2.route.id === f2.routeId) || deletedFetchers.has(key)) {
      return;
    }
    let fetcherMatches = matchRoutes(routesToUse, f2.path, basename);
    if (!fetcherMatches) {
      revalidatingFetchers.push({
        key,
        routeId: f2.routeId,
        path: f2.path,
        matches: null,
        match: null,
        controller: null
      });
      return;
    }
    let fetcher = state.fetchers.get(key);
    let fetcherMatch = getTargetMatch(fetcherMatches, f2.path);
    let shouldRevalidate = false;
    if (fetchRedirectIds.has(key)) {
      shouldRevalidate = false;
    } else if (cancelledFetcherLoads.has(key)) {
      cancelledFetcherLoads.delete(key);
      shouldRevalidate = true;
    } else if (fetcher && fetcher.state !== "idle" && fetcher.data === void 0) {
      shouldRevalidate = isRevalidationRequired;
    } else {
      shouldRevalidate = shouldRevalidateLoader(fetcherMatch, _extends$9({
        currentUrl,
        currentParams: state.matches[state.matches.length - 1].params,
        nextUrl,
        nextParams: matches[matches.length - 1].params
      }, submission, {
        actionResult,
        actionStatus,
        defaultShouldRevalidate: shouldSkipRevalidation ? false : isRevalidationRequired
      }));
    }
    if (shouldRevalidate) {
      revalidatingFetchers.push({
        key,
        routeId: f2.routeId,
        path: f2.path,
        matches: fetcherMatches,
        match: fetcherMatch,
        controller: new AbortController()
      });
    }
  });
  return [navigationMatches, revalidatingFetchers];
}
function shouldLoadRouteOnHydration(route, loaderData, errors) {
  if (route.lazy) {
    return true;
  }
  if (!route.loader) {
    return false;
  }
  let hasData = loaderData != null && loaderData[route.id] !== void 0;
  let hasError = errors != null && errors[route.id] !== void 0;
  if (!hasData && hasError) {
    return false;
  }
  if (typeof route.loader === "function" && route.loader.hydrate === true) {
    return true;
  }
  return !hasData && !hasError;
}
function isNewLoader(currentLoaderData, currentMatch, match) {
  let isNew = (
    // [a] -> [a, b]
    !currentMatch || // [a, b] -> [a, c]
    match.route.id !== currentMatch.route.id
  );
  let isMissingData = currentLoaderData[match.route.id] === void 0;
  return isNew || isMissingData;
}
function isNewRouteInstance(currentMatch, match) {
  let currentPath = currentMatch.route.path;
  return (
    // param change for this match, /users/123 -> /users/456
    currentMatch.pathname !== match.pathname || // splat param changed, which is not present in match.path
    // e.g. /files/images/avatar.jpg -> files/finances.xls
    currentPath != null && currentPath.endsWith("*") && currentMatch.params["*"] !== match.params["*"]
  );
}
function shouldRevalidateLoader(loaderMatch, arg) {
  if (loaderMatch.route.shouldRevalidate) {
    let routeChoice = loaderMatch.route.shouldRevalidate(arg);
    if (typeof routeChoice === "boolean") {
      return routeChoice;
    }
  }
  return arg.defaultShouldRevalidate;
}
function patchRoutesImpl(routeId, children, routesToUse, manifest, mapRouteProperties2) {
  var _childrenToPatch;
  let childrenToPatch;
  if (routeId) {
    let route = manifest[routeId];
    invariant(route, "No route found to patch children into: routeId = " + routeId);
    if (!route.children) {
      route.children = [];
    }
    childrenToPatch = route.children;
  } else {
    childrenToPatch = routesToUse;
  }
  let uniqueChildren = children.filter((newRoute) => !childrenToPatch.some((existingRoute) => isSameRoute(newRoute, existingRoute)));
  let newRoutes = convertRoutesToDataRoutes(uniqueChildren, mapRouteProperties2, [routeId || "_", "patch", String(((_childrenToPatch = childrenToPatch) == null ? void 0 : _childrenToPatch.length) || "0")], manifest);
  childrenToPatch.push(...newRoutes);
}
function isSameRoute(newRoute, existingRoute) {
  if ("id" in newRoute && "id" in existingRoute && newRoute.id === existingRoute.id) {
    return true;
  }
  if (!(newRoute.index === existingRoute.index && newRoute.path === existingRoute.path && newRoute.caseSensitive === existingRoute.caseSensitive)) {
    return false;
  }
  if ((!newRoute.children || newRoute.children.length === 0) && (!existingRoute.children || existingRoute.children.length === 0)) {
    return true;
  }
  return newRoute.children.every((aChild, i) => {
    var _existingRoute$childr;
    return (_existingRoute$childr = existingRoute.children) == null ? void 0 : _existingRoute$childr.some((bChild) => isSameRoute(aChild, bChild));
  });
}
async function loadLazyRouteModule(route, mapRouteProperties2, manifest) {
  if (!route.lazy) {
    return;
  }
  let lazyRoute = await route.lazy();
  if (!route.lazy) {
    return;
  }
  let routeToUpdate = manifest[route.id];
  invariant(routeToUpdate, "No route found in manifest");
  let routeUpdates = {};
  for (let lazyRouteProperty in lazyRoute) {
    let staticRouteValue = routeToUpdate[lazyRouteProperty];
    let isPropertyStaticallyDefined = staticRouteValue !== void 0 && // This property isn't static since it should always be updated based
    // on the route updates
    lazyRouteProperty !== "hasErrorBoundary";
    warning(!isPropertyStaticallyDefined, 'Route "' + routeToUpdate.id + '" has a static property "' + lazyRouteProperty + '" defined but its lazy function is also returning a value for this property. ' + ('The lazy route property "' + lazyRouteProperty + '" will be ignored.'));
    if (!isPropertyStaticallyDefined && !immutableRouteKeys.has(lazyRouteProperty)) {
      routeUpdates[lazyRouteProperty] = lazyRoute[lazyRouteProperty];
    }
  }
  Object.assign(routeToUpdate, routeUpdates);
  Object.assign(routeToUpdate, _extends$9({}, mapRouteProperties2(routeToUpdate), {
    lazy: void 0
  }));
}
async function defaultDataStrategy(_ref4) {
  let {
    matches
  } = _ref4;
  let matchesToLoad = matches.filter((m2) => m2.shouldLoad);
  let results = await Promise.all(matchesToLoad.map((m2) => m2.resolve()));
  return results.reduce((acc, result, i) => Object.assign(acc, {
    [matchesToLoad[i].route.id]: result
  }), {});
}
async function callDataStrategyImpl(dataStrategyImpl, type2, state, request, matchesToLoad, matches, fetcherKey, manifest, mapRouteProperties2, requestContext) {
  let loadRouteDefinitionsPromises = matches.map((m2) => m2.route.lazy ? loadLazyRouteModule(m2.route, mapRouteProperties2, manifest) : void 0);
  let dsMatches = matches.map((match, i) => {
    let loadRoutePromise = loadRouteDefinitionsPromises[i];
    let shouldLoad = matchesToLoad.some((m2) => m2.route.id === match.route.id);
    let resolve = async (handlerOverride) => {
      if (handlerOverride && request.method === "GET" && (match.route.lazy || match.route.loader)) {
        shouldLoad = true;
      }
      return shouldLoad ? callLoaderOrAction(type2, request, match, loadRoutePromise, handlerOverride, requestContext) : Promise.resolve({
        type: ResultType.data,
        result: void 0
      });
    };
    return _extends$9({}, match, {
      shouldLoad,
      resolve
    });
  });
  let results = await dataStrategyImpl({
    matches: dsMatches,
    request,
    params: matches[0].params,
    fetcherKey,
    context: requestContext
  });
  try {
    await Promise.all(loadRouteDefinitionsPromises);
  } catch (e) {
  }
  return results;
}
async function callLoaderOrAction(type2, request, match, loadRoutePromise, handlerOverride, staticContext) {
  let result;
  let onReject;
  let runHandler = (handler) => {
    let reject;
    let abortPromise = new Promise((_2, r2) => reject = r2);
    onReject = () => reject();
    request.signal.addEventListener("abort", onReject);
    let actualHandler = (ctx) => {
      if (typeof handler !== "function") {
        return Promise.reject(new Error("You cannot call the handler for a route which defines a boolean " + ('"' + type2 + '" [routeId: ' + match.route.id + "]")));
      }
      return handler({
        request,
        params: match.params,
        context: staticContext
      }, ...ctx !== void 0 ? [ctx] : []);
    };
    let handlerPromise = (async () => {
      try {
        let val = await (handlerOverride ? handlerOverride((ctx) => actualHandler(ctx)) : actualHandler());
        return {
          type: "data",
          result: val
        };
      } catch (e) {
        return {
          type: "error",
          result: e
        };
      }
    })();
    return Promise.race([handlerPromise, abortPromise]);
  };
  try {
    let handler = match.route[type2];
    if (loadRoutePromise) {
      if (handler) {
        let handlerError;
        let [value] = await Promise.all([
          // If the handler throws, don't let it immediately bubble out,
          // since we need to let the lazy() execution finish so we know if this
          // route has a boundary that can handle the error
          runHandler(handler).catch((e) => {
            handlerError = e;
          }),
          loadRoutePromise
        ]);
        if (handlerError !== void 0) {
          throw handlerError;
        }
        result = value;
      } else {
        await loadRoutePromise;
        handler = match.route[type2];
        if (handler) {
          result = await runHandler(handler);
        } else if (type2 === "action") {
          let url = new URL(request.url);
          let pathname = url.pathname + url.search;
          throw getInternalRouterError(405, {
            method: request.method,
            pathname,
            routeId: match.route.id
          });
        } else {
          return {
            type: ResultType.data,
            result: void 0
          };
        }
      }
    } else if (!handler) {
      let url = new URL(request.url);
      let pathname = url.pathname + url.search;
      throw getInternalRouterError(404, {
        pathname
      });
    } else {
      result = await runHandler(handler);
    }
    invariant(result.result !== void 0, "You defined " + (type2 === "action" ? "an action" : "a loader") + " for route " + ('"' + match.route.id + "\" but didn't return anything from your `" + type2 + "` ") + "function. Please return a value or `null`.");
  } catch (e) {
    return {
      type: ResultType.error,
      result: e
    };
  } finally {
    if (onReject) {
      request.signal.removeEventListener("abort", onReject);
    }
  }
  return result;
}
async function convertDataStrategyResultToDataResult(dataStrategyResult) {
  let {
    result,
    type: type2
  } = dataStrategyResult;
  if (isResponse(result)) {
    let data;
    try {
      let contentType = result.headers.get("Content-Type");
      if (contentType && /\bapplication\/json\b/.test(contentType)) {
        if (result.body == null) {
          data = null;
        } else {
          data = await result.json();
        }
      } else {
        data = await result.text();
      }
    } catch (e) {
      return {
        type: ResultType.error,
        error: e
      };
    }
    if (type2 === ResultType.error) {
      return {
        type: ResultType.error,
        error: new ErrorResponseImpl(result.status, result.statusText, data),
        statusCode: result.status,
        headers: result.headers
      };
    }
    return {
      type: ResultType.data,
      data,
      statusCode: result.status,
      headers: result.headers
    };
  }
  if (type2 === ResultType.error) {
    if (isDataWithResponseInit(result)) {
      var _result$init2;
      if (result.data instanceof Error) {
        var _result$init;
        return {
          type: ResultType.error,
          error: result.data,
          statusCode: (_result$init = result.init) == null ? void 0 : _result$init.status
        };
      }
      result = new ErrorResponseImpl(((_result$init2 = result.init) == null ? void 0 : _result$init2.status) || 500, void 0, result.data);
    }
    return {
      type: ResultType.error,
      error: result,
      statusCode: isRouteErrorResponse(result) ? result.status : void 0
    };
  }
  if (isDeferredData(result)) {
    var _result$init3, _result$init4;
    return {
      type: ResultType.deferred,
      deferredData: result,
      statusCode: (_result$init3 = result.init) == null ? void 0 : _result$init3.status,
      headers: ((_result$init4 = result.init) == null ? void 0 : _result$init4.headers) && new Headers(result.init.headers)
    };
  }
  if (isDataWithResponseInit(result)) {
    var _result$init5, _result$init6;
    return {
      type: ResultType.data,
      data: result.data,
      statusCode: (_result$init5 = result.init) == null ? void 0 : _result$init5.status,
      headers: (_result$init6 = result.init) != null && _result$init6.headers ? new Headers(result.init.headers) : void 0
    };
  }
  return {
    type: ResultType.data,
    data: result
  };
}
function normalizeRelativeRoutingRedirectResponse(response, request, routeId, matches, basename, v7_relativeSplatPath) {
  let location2 = response.headers.get("Location");
  invariant(location2, "Redirects returned/thrown from loaders/actions must have a Location header");
  if (!ABSOLUTE_URL_REGEX.test(location2)) {
    let trimmedMatches = matches.slice(0, matches.findIndex((m2) => m2.route.id === routeId) + 1);
    location2 = normalizeTo(new URL(request.url), trimmedMatches, basename, true, location2, v7_relativeSplatPath);
    response.headers.set("Location", location2);
  }
  return response;
}
function normalizeRedirectLocation(location2, currentUrl, basename) {
  if (ABSOLUTE_URL_REGEX.test(location2)) {
    let normalizedLocation = location2;
    let url = normalizedLocation.startsWith("//") ? new URL(currentUrl.protocol + normalizedLocation) : new URL(normalizedLocation);
    let isSameBasename = stripBasename(url.pathname, basename) != null;
    if (url.origin === currentUrl.origin && isSameBasename) {
      return url.pathname + url.search + url.hash;
    }
  }
  return location2;
}
function createClientSideRequest(history2, location2, signal, submission) {
  let url = history2.createURL(stripHashFromPath(location2)).toString();
  let init = {
    signal
  };
  if (submission && isMutationMethod(submission.formMethod)) {
    let {
      formMethod,
      formEncType
    } = submission;
    init.method = formMethod.toUpperCase();
    if (formEncType === "application/json") {
      init.headers = new Headers({
        "Content-Type": formEncType
      });
      init.body = JSON.stringify(submission.json);
    } else if (formEncType === "text/plain") {
      init.body = submission.text;
    } else if (formEncType === "application/x-www-form-urlencoded" && submission.formData) {
      init.body = convertFormDataToSearchParams(submission.formData);
    } else {
      init.body = submission.formData;
    }
  }
  return new Request(url, init);
}
function convertFormDataToSearchParams(formData) {
  let searchParams = new URLSearchParams();
  for (let [key, value] of formData.entries()) {
    searchParams.append(key, typeof value === "string" ? value : value.name);
  }
  return searchParams;
}
function convertSearchParamsToFormData(searchParams) {
  let formData = new FormData();
  for (let [key, value] of searchParams.entries()) {
    formData.append(key, value);
  }
  return formData;
}
function processRouteLoaderData(matches, results, pendingActionResult, activeDeferreds, skipLoaderErrorBubbling) {
  let loaderData = {};
  let errors = null;
  let statusCode;
  let foundError = false;
  let loaderHeaders = {};
  let pendingError = pendingActionResult && isErrorResult(pendingActionResult[1]) ? pendingActionResult[1].error : void 0;
  matches.forEach((match) => {
    if (!(match.route.id in results)) {
      return;
    }
    let id2 = match.route.id;
    let result = results[id2];
    invariant(!isRedirectResult(result), "Cannot handle redirect results in processLoaderData");
    if (isErrorResult(result)) {
      let error = result.error;
      if (pendingError !== void 0) {
        error = pendingError;
        pendingError = void 0;
      }
      errors = errors || {};
      {
        let boundaryMatch = findNearestBoundary(matches, id2);
        if (errors[boundaryMatch.route.id] == null) {
          errors[boundaryMatch.route.id] = error;
        }
      }
      loaderData[id2] = void 0;
      if (!foundError) {
        foundError = true;
        statusCode = isRouteErrorResponse(result.error) ? result.error.status : 500;
      }
      if (result.headers) {
        loaderHeaders[id2] = result.headers;
      }
    } else {
      if (isDeferredResult(result)) {
        activeDeferreds.set(id2, result.deferredData);
        loaderData[id2] = result.deferredData.data;
        if (result.statusCode != null && result.statusCode !== 200 && !foundError) {
          statusCode = result.statusCode;
        }
        if (result.headers) {
          loaderHeaders[id2] = result.headers;
        }
      } else {
        loaderData[id2] = result.data;
        if (result.statusCode && result.statusCode !== 200 && !foundError) {
          statusCode = result.statusCode;
        }
        if (result.headers) {
          loaderHeaders[id2] = result.headers;
        }
      }
    }
  });
  if (pendingError !== void 0 && pendingActionResult) {
    errors = {
      [pendingActionResult[0]]: pendingError
    };
    loaderData[pendingActionResult[0]] = void 0;
  }
  return {
    loaderData,
    errors,
    statusCode: statusCode || 200,
    loaderHeaders
  };
}
function processLoaderData(state, matches, results, pendingActionResult, revalidatingFetchers, fetcherResults, activeDeferreds) {
  let {
    loaderData,
    errors
  } = processRouteLoaderData(matches, results, pendingActionResult, activeDeferreds);
  revalidatingFetchers.forEach((rf2) => {
    let {
      key,
      match,
      controller
    } = rf2;
    let result = fetcherResults[key];
    invariant(result, "Did not find corresponding fetcher result");
    if (controller && controller.signal.aborted) {
      return;
    } else if (isErrorResult(result)) {
      let boundaryMatch = findNearestBoundary(state.matches, match == null ? void 0 : match.route.id);
      if (!(errors && errors[boundaryMatch.route.id])) {
        errors = _extends$9({}, errors, {
          [boundaryMatch.route.id]: result.error
        });
      }
      state.fetchers.delete(key);
    } else if (isRedirectResult(result)) {
      invariant(false, "Unhandled fetcher revalidation redirect");
    } else if (isDeferredResult(result)) {
      invariant(false, "Unhandled fetcher deferred data");
    } else {
      let doneFetcher = getDoneFetcher(result.data);
      state.fetchers.set(key, doneFetcher);
    }
  });
  return {
    loaderData,
    errors
  };
}
function mergeLoaderData(loaderData, newLoaderData, matches, errors) {
  let mergedLoaderData = _extends$9({}, newLoaderData);
  for (let match of matches) {
    let id2 = match.route.id;
    if (newLoaderData.hasOwnProperty(id2)) {
      if (newLoaderData[id2] !== void 0) {
        mergedLoaderData[id2] = newLoaderData[id2];
      }
    } else if (loaderData[id2] !== void 0 && match.route.loader) {
      mergedLoaderData[id2] = loaderData[id2];
    }
    if (errors && errors.hasOwnProperty(id2)) {
      break;
    }
  }
  return mergedLoaderData;
}
function getActionDataForCommit(pendingActionResult) {
  if (!pendingActionResult) {
    return {};
  }
  return isErrorResult(pendingActionResult[1]) ? {
    // Clear out prior actionData on errors
    actionData: {}
  } : {
    actionData: {
      [pendingActionResult[0]]: pendingActionResult[1].data
    }
  };
}
function findNearestBoundary(matches, routeId) {
  let eligibleMatches = routeId ? matches.slice(0, matches.findIndex((m2) => m2.route.id === routeId) + 1) : [...matches];
  return eligibleMatches.reverse().find((m2) => m2.route.hasErrorBoundary === true) || matches[0];
}
function getShortCircuitMatches(routes) {
  let route = routes.length === 1 ? routes[0] : routes.find((r2) => r2.index || !r2.path || r2.path === "/") || {
    id: "__shim-error-route__"
  };
  return {
    matches: [{
      params: {},
      pathname: "",
      pathnameBase: "",
      route
    }],
    route
  };
}
function getInternalRouterError(status, _temp5) {
  let {
    pathname,
    routeId,
    method,
    type: type2,
    message
  } = _temp5 === void 0 ? {} : _temp5;
  let statusText = "Unknown Server Error";
  let errorMessage = "Unknown @remix-run/router error";
  if (status === 400) {
    statusText = "Bad Request";
    if (method && pathname && routeId) {
      errorMessage = "You made a " + method + ' request to "' + pathname + '" but ' + ('did not provide a `loader` for route "' + routeId + '", ') + "so there is no way to handle the request.";
    } else if (type2 === "defer-action") {
      errorMessage = "defer() is not supported in actions";
    } else if (type2 === "invalid-body") {
      errorMessage = "Unable to encode submission body";
    }
  } else if (status === 403) {
    statusText = "Forbidden";
    errorMessage = 'Route "' + routeId + '" does not match URL "' + pathname + '"';
  } else if (status === 404) {
    statusText = "Not Found";
    errorMessage = 'No route matches URL "' + pathname + '"';
  } else if (status === 405) {
    statusText = "Method Not Allowed";
    if (method && pathname && routeId) {
      errorMessage = "You made a " + method.toUpperCase() + ' request to "' + pathname + '" but ' + ('did not provide an `action` for route "' + routeId + '", ') + "so there is no way to handle the request.";
    } else if (method) {
      errorMessage = 'Invalid request method "' + method.toUpperCase() + '"';
    }
  }
  return new ErrorResponseImpl(status || 500, statusText, new Error(errorMessage), true);
}
function findRedirect(results) {
  let entries = Object.entries(results);
  for (let i = entries.length - 1; i >= 0; i--) {
    let [key, result] = entries[i];
    if (isRedirectResult(result)) {
      return {
        key,
        result
      };
    }
  }
}
function stripHashFromPath(path) {
  let parsedPath = typeof path === "string" ? parsePath(path) : path;
  return createPath(_extends$9({}, parsedPath, {
    hash: ""
  }));
}
function isHashChangeOnly(a2, b) {
  if (a2.pathname !== b.pathname || a2.search !== b.search) {
    return false;
  }
  if (a2.hash === "") {
    return b.hash !== "";
  } else if (a2.hash === b.hash) {
    return true;
  } else if (b.hash !== "") {
    return true;
  }
  return false;
}
function isRedirectDataStrategyResultResult(result) {
  return isResponse(result.result) && redirectStatusCodes.has(result.result.status);
}
function isDeferredResult(result) {
  return result.type === ResultType.deferred;
}
function isErrorResult(result) {
  return result.type === ResultType.error;
}
function isRedirectResult(result) {
  return (result && result.type) === ResultType.redirect;
}
function isDataWithResponseInit(value) {
  return typeof value === "object" && value != null && "type" in value && "data" in value && "init" in value && value.type === "DataWithResponseInit";
}
function isDeferredData(value) {
  let deferred = value;
  return deferred && typeof deferred === "object" && typeof deferred.data === "object" && typeof deferred.subscribe === "function" && typeof deferred.cancel === "function" && typeof deferred.resolveData === "function";
}
function isResponse(value) {
  return value != null && typeof value.status === "number" && typeof value.statusText === "string" && typeof value.headers === "object" && typeof value.body !== "undefined";
}
function isValidMethod(method) {
  return validRequestMethods.has(method.toLowerCase());
}
function isMutationMethod(method) {
  return validMutationMethods.has(method.toLowerCase());
}
async function resolveNavigationDeferredResults(matches, results, signal, currentMatches, currentLoaderData) {
  let entries = Object.entries(results);
  for (let index = 0; index < entries.length; index++) {
    let [routeId, result] = entries[index];
    let match = matches.find((m2) => (m2 == null ? void 0 : m2.route.id) === routeId);
    if (!match) {
      continue;
    }
    let currentMatch = currentMatches.find((m2) => m2.route.id === match.route.id);
    let isRevalidatingLoader = currentMatch != null && !isNewRouteInstance(currentMatch, match) && (currentLoaderData && currentLoaderData[match.route.id]) !== void 0;
    if (isDeferredResult(result) && isRevalidatingLoader) {
      await resolveDeferredData(result, signal, false).then((result2) => {
        if (result2) {
          results[routeId] = result2;
        }
      });
    }
  }
}
async function resolveFetcherDeferredResults(matches, results, revalidatingFetchers) {
  for (let index = 0; index < revalidatingFetchers.length; index++) {
    let {
      key,
      routeId,
      controller
    } = revalidatingFetchers[index];
    let result = results[key];
    let match = matches.find((m2) => (m2 == null ? void 0 : m2.route.id) === routeId);
    if (!match) {
      continue;
    }
    if (isDeferredResult(result)) {
      invariant(controller, "Expected an AbortController for revalidating fetcher deferred result");
      await resolveDeferredData(result, controller.signal, true).then((result2) => {
        if (result2) {
          results[key] = result2;
        }
      });
    }
  }
}
async function resolveDeferredData(result, signal, unwrap) {
  if (unwrap === void 0) {
    unwrap = false;
  }
  let aborted = await result.deferredData.resolveData(signal);
  if (aborted) {
    return;
  }
  if (unwrap) {
    try {
      return {
        type: ResultType.data,
        data: result.deferredData.unwrappedData
      };
    } catch (e) {
      return {
        type: ResultType.error,
        error: e
      };
    }
  }
  return {
    type: ResultType.data,
    data: result.deferredData.data
  };
}
function hasNakedIndexQuery(search2) {
  return new URLSearchParams(search2).getAll("index").some((v2) => v2 === "");
}
function getTargetMatch(matches, location2) {
  let search2 = typeof location2 === "string" ? parsePath(location2).search : location2.search;
  if (matches[matches.length - 1].route.index && hasNakedIndexQuery(search2 || "")) {
    return matches[matches.length - 1];
  }
  let pathMatches = getPathContributingMatches(matches);
  return pathMatches[pathMatches.length - 1];
}
function getSubmissionFromNavigation(navigation) {
  let {
    formMethod,
    formAction,
    formEncType,
    text,
    formData,
    json: json2
  } = navigation;
  if (!formMethod || !formAction || !formEncType) {
    return;
  }
  if (text != null) {
    return {
      formMethod,
      formAction,
      formEncType,
      formData: void 0,
      json: void 0,
      text
    };
  } else if (formData != null) {
    return {
      formMethod,
      formAction,
      formEncType,
      formData,
      json: void 0,
      text: void 0
    };
  } else if (json2 !== void 0) {
    return {
      formMethod,
      formAction,
      formEncType,
      formData: void 0,
      json: json2,
      text: void 0
    };
  }
}
function getLoadingNavigation(location2, submission) {
  if (submission) {
    let navigation = {
      state: "loading",
      location: location2,
      formMethod: submission.formMethod,
      formAction: submission.formAction,
      formEncType: submission.formEncType,
      formData: submission.formData,
      json: submission.json,
      text: submission.text
    };
    return navigation;
  } else {
    let navigation = {
      state: "loading",
      location: location2,
      formMethod: void 0,
      formAction: void 0,
      formEncType: void 0,
      formData: void 0,
      json: void 0,
      text: void 0
    };
    return navigation;
  }
}
function getSubmittingNavigation(location2, submission) {
  let navigation = {
    state: "submitting",
    location: location2,
    formMethod: submission.formMethod,
    formAction: submission.formAction,
    formEncType: submission.formEncType,
    formData: submission.formData,
    json: submission.json,
    text: submission.text
  };
  return navigation;
}
function getLoadingFetcher(submission, data) {
  if (submission) {
    let fetcher = {
      state: "loading",
      formMethod: submission.formMethod,
      formAction: submission.formAction,
      formEncType: submission.formEncType,
      formData: submission.formData,
      json: submission.json,
      text: submission.text,
      data
    };
    return fetcher;
  } else {
    let fetcher = {
      state: "loading",
      formMethod: void 0,
      formAction: void 0,
      formEncType: void 0,
      formData: void 0,
      json: void 0,
      text: void 0,
      data
    };
    return fetcher;
  }
}
function getSubmittingFetcher(submission, existingFetcher) {
  let fetcher = {
    state: "submitting",
    formMethod: submission.formMethod,
    formAction: submission.formAction,
    formEncType: submission.formEncType,
    formData: submission.formData,
    json: submission.json,
    text: submission.text,
    data: existingFetcher ? existingFetcher.data : void 0
  };
  return fetcher;
}
function getDoneFetcher(data) {
  let fetcher = {
    state: "idle",
    formMethod: void 0,
    formAction: void 0,
    formEncType: void 0,
    formData: void 0,
    json: void 0,
    text: void 0,
    data
  };
  return fetcher;
}
function restoreAppliedTransitions(_window, transitions) {
  try {
    let sessionPositions = _window.sessionStorage.getItem(TRANSITIONS_STORAGE_KEY);
    if (sessionPositions) {
      let json2 = JSON.parse(sessionPositions);
      for (let [k2, v2] of Object.entries(json2 || {})) {
        if (v2 && Array.isArray(v2)) {
          transitions.set(k2, new Set(v2 || []));
        }
      }
    }
  } catch (e) {
  }
}
function persistAppliedTransitions(_window, transitions) {
  if (transitions.size > 0) {
    let json2 = {};
    for (let [k2, v2] of transitions) {
      json2[k2] = [...v2];
    }
    try {
      _window.sessionStorage.setItem(TRANSITIONS_STORAGE_KEY, JSON.stringify(json2));
    } catch (error) {
      warning(false, "Failed to save applied view transitions in sessionStorage (" + error + ").");
    }
  }
}
/**
 * React Router v6.27.0
 *
 * Copyright (c) Remix Software Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE.md file in the root directory of this source tree.
 *
 * @license MIT
 */
function _extends$8() {
  _extends$8 = Object.assign ? Object.assign.bind() : function(target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i];
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }
    return target;
  };
  return _extends$8.apply(this, arguments);
}
const DataRouterContext = /* @__PURE__ */ reactExports.createContext(null);
const DataRouterStateContext = /* @__PURE__ */ reactExports.createContext(null);
const NavigationContext = /* @__PURE__ */ reactExports.createContext(null);
const LocationContext = /* @__PURE__ */ reactExports.createContext(null);
const RouteContext = /* @__PURE__ */ reactExports.createContext({
  outlet: null,
  matches: [],
  isDataRoute: false
});
const RouteErrorContext = /* @__PURE__ */ reactExports.createContext(null);
function useInRouterContext() {
  return reactExports.useContext(LocationContext) != null;
}
function useLocation() {
  !useInRouterContext() ? invariant(false) : void 0;
  return reactExports.useContext(LocationContext).location;
}
function useIsomorphicLayoutEffect$1(cb2) {
  let isStatic = reactExports.useContext(NavigationContext).static;
  if (!isStatic) {
    reactExports.useLayoutEffect(cb2);
  }
}
function useNavigate() {
  let {
    isDataRoute
  } = reactExports.useContext(RouteContext);
  return isDataRoute ? useNavigateStable() : useNavigateUnstable();
}
function useNavigateUnstable() {
  !useInRouterContext() ? invariant(false) : void 0;
  let dataRouterContext = reactExports.useContext(DataRouterContext);
  let {
    basename,
    future,
    navigator: navigator2
  } = reactExports.useContext(NavigationContext);
  let {
    matches
  } = reactExports.useContext(RouteContext);
  let {
    pathname: locationPathname
  } = useLocation();
  let routePathnamesJson = JSON.stringify(getResolveToMatches(matches, future.v7_relativeSplatPath));
  let activeRef = reactExports.useRef(false);
  useIsomorphicLayoutEffect$1(() => {
    activeRef.current = true;
  });
  let navigate = reactExports.useCallback(function(to, options) {
    if (options === void 0) {
      options = {};
    }
    if (!activeRef.current) return;
    if (typeof to === "number") {
      navigator2.go(to);
      return;
    }
    let path = resolveTo(to, JSON.parse(routePathnamesJson), locationPathname, options.relative === "path");
    if (dataRouterContext == null && basename !== "/") {
      path.pathname = path.pathname === "/" ? basename : joinPaths([basename, path.pathname]);
    }
    (!!options.replace ? navigator2.replace : navigator2.push)(path, options.state, options);
  }, [basename, navigator2, routePathnamesJson, locationPathname, dataRouterContext]);
  return navigate;
}
function useRoutesImpl(routes, locationArg, dataRouterState, future) {
  !useInRouterContext() ? invariant(false) : void 0;
  let {
    navigator: navigator2
  } = reactExports.useContext(NavigationContext);
  let {
    matches: parentMatches
  } = reactExports.useContext(RouteContext);
  let routeMatch = parentMatches[parentMatches.length - 1];
  let parentParams = routeMatch ? routeMatch.params : {};
  routeMatch ? routeMatch.pathname : "/";
  let parentPathnameBase = routeMatch ? routeMatch.pathnameBase : "/";
  routeMatch && routeMatch.route;
  let locationFromContext = useLocation();
  let location2;
  {
    location2 = locationFromContext;
  }
  let pathname = location2.pathname || "/";
  let remainingPathname = pathname;
  if (parentPathnameBase !== "/") {
    let parentSegments = parentPathnameBase.replace(/^\//, "").split("/");
    let segments = pathname.replace(/^\//, "").split("/");
    remainingPathname = "/" + segments.slice(parentSegments.length).join("/");
  }
  let matches = matchRoutes(routes, {
    pathname: remainingPathname
  });
  let renderedMatches = _renderMatches(matches && matches.map((match) => Object.assign({}, match, {
    params: Object.assign({}, parentParams, match.params),
    pathname: joinPaths([
      parentPathnameBase,
      // Re-encode pathnames that were decoded inside matchRoutes
      navigator2.encodeLocation ? navigator2.encodeLocation(match.pathname).pathname : match.pathname
    ]),
    pathnameBase: match.pathnameBase === "/" ? parentPathnameBase : joinPaths([
      parentPathnameBase,
      // Re-encode pathnames that were decoded inside matchRoutes
      navigator2.encodeLocation ? navigator2.encodeLocation(match.pathnameBase).pathname : match.pathnameBase
    ])
  })), parentMatches, dataRouterState, future);
  return renderedMatches;
}
function DefaultErrorComponent() {
  let error = useRouteError();
  let message = isRouteErrorResponse(error) ? error.status + " " + error.statusText : error instanceof Error ? error.message : JSON.stringify(error);
  let stack = error instanceof Error ? error.stack : null;
  let lightgrey = "rgba(200,200,200, 0.5)";
  let preStyles = {
    padding: "0.5rem",
    backgroundColor: lightgrey
  };
  let devInfo = null;
  return /* @__PURE__ */ reactExports.createElement(reactExports.Fragment, null, /* @__PURE__ */ reactExports.createElement("h2", null, "Unexpected Application Error!"), /* @__PURE__ */ reactExports.createElement("h3", {
    style: {
      fontStyle: "italic"
    }
  }, message), stack ? /* @__PURE__ */ reactExports.createElement("pre", {
    style: preStyles
  }, stack) : null, devInfo);
}
const defaultErrorElement = /* @__PURE__ */ reactExports.createElement(DefaultErrorComponent, null);
class RenderErrorBoundary extends reactExports.Component {
  constructor(props) {
    super(props);
    this.state = {
      location: props.location,
      revalidation: props.revalidation,
      error: props.error
    };
  }
  static getDerivedStateFromError(error) {
    return {
      error
    };
  }
  static getDerivedStateFromProps(props, state) {
    if (state.location !== props.location || state.revalidation !== "idle" && props.revalidation === "idle") {
      return {
        error: props.error,
        location: props.location,
        revalidation: props.revalidation
      };
    }
    return {
      error: props.error !== void 0 ? props.error : state.error,
      location: state.location,
      revalidation: props.revalidation || state.revalidation
    };
  }
  componentDidCatch(error, errorInfo) {
    console.error("React Router caught the following error during render", error, errorInfo);
  }
  render() {
    return this.state.error !== void 0 ? /* @__PURE__ */ reactExports.createElement(RouteContext.Provider, {
      value: this.props.routeContext
    }, /* @__PURE__ */ reactExports.createElement(RouteErrorContext.Provider, {
      value: this.state.error,
      children: this.props.component
    })) : this.props.children;
  }
}
function RenderedRoute(_ref) {
  let {
    routeContext,
    match,
    children
  } = _ref;
  let dataRouterContext = reactExports.useContext(DataRouterContext);
  if (dataRouterContext && dataRouterContext.static && dataRouterContext.staticContext && (match.route.errorElement || match.route.ErrorBoundary)) {
    dataRouterContext.staticContext._deepestRenderedBoundaryId = match.route.id;
  }
  return /* @__PURE__ */ reactExports.createElement(RouteContext.Provider, {
    value: routeContext
  }, children);
}
function _renderMatches(matches, parentMatches, dataRouterState, future) {
  var _dataRouterState;
  if (parentMatches === void 0) {
    parentMatches = [];
  }
  if (dataRouterState === void 0) {
    dataRouterState = null;
  }
  if (future === void 0) {
    future = null;
  }
  if (matches == null) {
    var _future;
    if (!dataRouterState) {
      return null;
    }
    if (dataRouterState.errors) {
      matches = dataRouterState.matches;
    } else if ((_future = future) != null && _future.v7_partialHydration && parentMatches.length === 0 && !dataRouterState.initialized && dataRouterState.matches.length > 0) {
      matches = dataRouterState.matches;
    } else {
      return null;
    }
  }
  let renderedMatches = matches;
  let errors = (_dataRouterState = dataRouterState) == null ? void 0 : _dataRouterState.errors;
  if (errors != null) {
    let errorIndex = renderedMatches.findIndex((m2) => m2.route.id && (errors == null ? void 0 : errors[m2.route.id]) !== void 0);
    !(errorIndex >= 0) ? invariant(false) : void 0;
    renderedMatches = renderedMatches.slice(0, Math.min(renderedMatches.length, errorIndex + 1));
  }
  let renderFallback = false;
  let fallbackIndex = -1;
  if (dataRouterState && future && future.v7_partialHydration) {
    for (let i = 0; i < renderedMatches.length; i++) {
      let match = renderedMatches[i];
      if (match.route.HydrateFallback || match.route.hydrateFallbackElement) {
        fallbackIndex = i;
      }
      if (match.route.id) {
        let {
          loaderData,
          errors: errors2
        } = dataRouterState;
        let needsToRunLoader = match.route.loader && loaderData[match.route.id] === void 0 && (!errors2 || errors2[match.route.id] === void 0);
        if (match.route.lazy || needsToRunLoader) {
          renderFallback = true;
          if (fallbackIndex >= 0) {
            renderedMatches = renderedMatches.slice(0, fallbackIndex + 1);
          } else {
            renderedMatches = [renderedMatches[0]];
          }
          break;
        }
      }
    }
  }
  return renderedMatches.reduceRight((outlet, match, index) => {
    let error;
    let shouldRenderHydrateFallback = false;
    let errorElement = null;
    let hydrateFallbackElement = null;
    if (dataRouterState) {
      error = errors && match.route.id ? errors[match.route.id] : void 0;
      errorElement = match.route.errorElement || defaultErrorElement;
      if (renderFallback) {
        if (fallbackIndex < 0 && index === 0) {
          warningOnce("route-fallback");
          shouldRenderHydrateFallback = true;
          hydrateFallbackElement = null;
        } else if (fallbackIndex === index) {
          shouldRenderHydrateFallback = true;
          hydrateFallbackElement = match.route.hydrateFallbackElement || null;
        }
      }
    }
    let matches2 = parentMatches.concat(renderedMatches.slice(0, index + 1));
    let getChildren = () => {
      let children;
      if (error) {
        children = errorElement;
      } else if (shouldRenderHydrateFallback) {
        children = hydrateFallbackElement;
      } else if (match.route.Component) {
        children = /* @__PURE__ */ reactExports.createElement(match.route.Component, null);
      } else if (match.route.element) {
        children = match.route.element;
      } else {
        children = outlet;
      }
      return /* @__PURE__ */ reactExports.createElement(RenderedRoute, {
        match,
        routeContext: {
          outlet,
          matches: matches2,
          isDataRoute: dataRouterState != null
        },
        children
      });
    };
    return dataRouterState && (match.route.ErrorBoundary || match.route.errorElement || index === 0) ? /* @__PURE__ */ reactExports.createElement(RenderErrorBoundary, {
      location: dataRouterState.location,
      revalidation: dataRouterState.revalidation,
      component: errorElement,
      error,
      children: getChildren(),
      routeContext: {
        outlet: null,
        matches: matches2,
        isDataRoute: true
      }
    }) : getChildren();
  }, null);
}
var DataRouterHook$1 = /* @__PURE__ */ function(DataRouterHook2) {
  DataRouterHook2["UseBlocker"] = "useBlocker";
  DataRouterHook2["UseRevalidator"] = "useRevalidator";
  DataRouterHook2["UseNavigateStable"] = "useNavigate";
  return DataRouterHook2;
}(DataRouterHook$1 || {});
var DataRouterStateHook$1 = /* @__PURE__ */ function(DataRouterStateHook2) {
  DataRouterStateHook2["UseBlocker"] = "useBlocker";
  DataRouterStateHook2["UseLoaderData"] = "useLoaderData";
  DataRouterStateHook2["UseActionData"] = "useActionData";
  DataRouterStateHook2["UseRouteError"] = "useRouteError";
  DataRouterStateHook2["UseNavigation"] = "useNavigation";
  DataRouterStateHook2["UseRouteLoaderData"] = "useRouteLoaderData";
  DataRouterStateHook2["UseMatches"] = "useMatches";
  DataRouterStateHook2["UseRevalidator"] = "useRevalidator";
  DataRouterStateHook2["UseNavigateStable"] = "useNavigate";
  DataRouterStateHook2["UseRouteId"] = "useRouteId";
  return DataRouterStateHook2;
}(DataRouterStateHook$1 || {});
function useDataRouterContext(hookName) {
  let ctx = reactExports.useContext(DataRouterContext);
  !ctx ? invariant(false) : void 0;
  return ctx;
}
function useDataRouterState(hookName) {
  let state = reactExports.useContext(DataRouterStateContext);
  !state ? invariant(false) : void 0;
  return state;
}
function useRouteContext(hookName) {
  let route = reactExports.useContext(RouteContext);
  !route ? invariant(false) : void 0;
  return route;
}
function useCurrentRouteId(hookName) {
  let route = useRouteContext();
  let thisRoute = route.matches[route.matches.length - 1];
  !thisRoute.route.id ? invariant(false) : void 0;
  return thisRoute.route.id;
}
function useLoaderData() {
  let state = useDataRouterState(DataRouterStateHook$1.UseLoaderData);
  let routeId = useCurrentRouteId(DataRouterStateHook$1.UseLoaderData);
  if (state.errors && state.errors[routeId] != null) {
    console.error("You cannot `useLoaderData` in an errorElement (routeId: " + routeId + ")");
    return void 0;
  }
  return state.loaderData[routeId];
}
function useRouteError() {
  var _state$errors;
  let error = reactExports.useContext(RouteErrorContext);
  let state = useDataRouterState(DataRouterStateHook$1.UseRouteError);
  let routeId = useCurrentRouteId(DataRouterStateHook$1.UseRouteError);
  if (error !== void 0) {
    return error;
  }
  return (_state$errors = state.errors) == null ? void 0 : _state$errors[routeId];
}
function useNavigateStable() {
  let {
    router: router2
  } = useDataRouterContext(DataRouterHook$1.UseNavigateStable);
  let id2 = useCurrentRouteId(DataRouterStateHook$1.UseNavigateStable);
  let activeRef = reactExports.useRef(false);
  useIsomorphicLayoutEffect$1(() => {
    activeRef.current = true;
  });
  let navigate = reactExports.useCallback(function(to, options) {
    if (options === void 0) {
      options = {};
    }
    if (!activeRef.current) return;
    if (typeof to === "number") {
      router2.navigate(to);
    } else {
      router2.navigate(to, _extends$8({
        fromRouteId: id2
      }, options));
    }
  }, [router2, id2]);
  return navigate;
}
const alreadyWarned = {};
function warningOnce(key, cond, message) {
  if (!alreadyWarned[key]) {
    alreadyWarned[key] = true;
  }
}
function Router(_ref5) {
  let {
    basename: basenameProp = "/",
    children = null,
    location: locationProp,
    navigationType = Action.Pop,
    navigator: navigator2,
    static: staticProp = false,
    future
  } = _ref5;
  !!useInRouterContext() ? invariant(false) : void 0;
  let basename = basenameProp.replace(/^\/*/, "/");
  let navigationContext = reactExports.useMemo(() => ({
    basename,
    navigator: navigator2,
    static: staticProp,
    future: _extends$8({
      v7_relativeSplatPath: false
    }, future)
  }), [basename, future, navigator2, staticProp]);
  if (typeof locationProp === "string") {
    locationProp = parsePath(locationProp);
  }
  let {
    pathname = "/",
    search: search2 = "",
    hash = "",
    state = null,
    key = "default"
  } = locationProp;
  let locationContext = reactExports.useMemo(() => {
    let trailingPathname = stripBasename(pathname, basename);
    if (trailingPathname == null) {
      return null;
    }
    return {
      location: {
        pathname: trailingPathname,
        search: search2,
        hash,
        state,
        key
      },
      navigationType
    };
  }, [basename, pathname, search2, hash, state, key, navigationType]);
  if (locationContext == null) {
    return null;
  }
  return /* @__PURE__ */ reactExports.createElement(NavigationContext.Provider, {
    value: navigationContext
  }, /* @__PURE__ */ reactExports.createElement(LocationContext.Provider, {
    children,
    value: locationContext
  }));
}
new Promise(() => {
});
function mapRouteProperties(route) {
  let updates = {
    // Note: this check also occurs in createRoutesFromChildren so update
    // there if you change this -- please and thank you!
    hasErrorBoundary: route.ErrorBoundary != null || route.errorElement != null
  };
  if (route.Component) {
    Object.assign(updates, {
      element: /* @__PURE__ */ reactExports.createElement(route.Component),
      Component: void 0
    });
  }
  if (route.HydrateFallback) {
    Object.assign(updates, {
      hydrateFallbackElement: /* @__PURE__ */ reactExports.createElement(route.HydrateFallback),
      HydrateFallback: void 0
    });
  }
  if (route.ErrorBoundary) {
    Object.assign(updates, {
      errorElement: /* @__PURE__ */ reactExports.createElement(route.ErrorBoundary),
      ErrorBoundary: void 0
    });
  }
  return updates;
}
/**
 * React Router DOM v6.27.0
 *
 * Copyright (c) Remix Software Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE.md file in the root directory of this source tree.
 *
 * @license MIT
 */
function _extends$7() {
  _extends$7 = Object.assign ? Object.assign.bind() : function(target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i];
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }
    return target;
  };
  return _extends$7.apply(this, arguments);
}
const REACT_ROUTER_VERSION = "6";
try {
  window.__reactRouterVersion = REACT_ROUTER_VERSION;
} catch (e) {
}
function createHashRouter(routes, opts) {
  return createRouter({
    basename: void 0,
    future: _extends$7({}, void 0, {
      v7_prependBasename: true
    }),
    history: createHashHistory({
      window: void 0
    }),
    hydrationData: parseHydrationData(),
    routes,
    mapRouteProperties,
    dataStrategy: void 0,
    patchRoutesOnNavigation: void 0,
    window: void 0
  }).initialize();
}
function parseHydrationData() {
  var _window;
  let state = (_window = window) == null ? void 0 : _window.__staticRouterHydrationData;
  if (state && state.errors) {
    state = _extends$7({}, state, {
      errors: deserializeErrors(state.errors)
    });
  }
  return state;
}
function deserializeErrors(errors) {
  if (!errors) return null;
  let entries = Object.entries(errors);
  let serialized = {};
  for (let [key, val] of entries) {
    if (val && val.__type === "RouteErrorResponse") {
      serialized[key] = new ErrorResponseImpl(val.status, val.statusText, val.data, val.internal === true);
    } else if (val && val.__type === "Error") {
      if (val.__subType) {
        let ErrorConstructor = window[val.__subType];
        if (typeof ErrorConstructor === "function") {
          try {
            let error = new ErrorConstructor(val.message);
            error.stack = "";
            serialized[key] = error;
          } catch (e) {
          }
        }
      }
      if (serialized[key] == null) {
        let error = new Error(val.message);
        error.stack = "";
        serialized[key] = error;
      }
    } else {
      serialized[key] = val;
    }
  }
  return serialized;
}
const ViewTransitionContext = /* @__PURE__ */ reactExports.createContext({
  isTransitioning: false
});
const FetchersContext = /* @__PURE__ */ reactExports.createContext(/* @__PURE__ */ new Map());
const START_TRANSITION = "startTransition";
const startTransitionImpl = React$2[START_TRANSITION];
const FLUSH_SYNC = "flushSync";
const flushSyncImpl = ReactDOM[FLUSH_SYNC];
function startTransitionSafe(cb2) {
  if (startTransitionImpl) {
    startTransitionImpl(cb2);
  } else {
    cb2();
  }
}
function flushSyncSafe(cb2) {
  if (flushSyncImpl) {
    flushSyncImpl(cb2);
  } else {
    cb2();
  }
}
class Deferred {
  constructor() {
    this.status = "pending";
    this.promise = new Promise((resolve, reject) => {
      this.resolve = (value) => {
        if (this.status === "pending") {
          this.status = "resolved";
          resolve(value);
        }
      };
      this.reject = (reason) => {
        if (this.status === "pending") {
          this.status = "rejected";
          reject(reason);
        }
      };
    });
  }
}
function RouterProvider(_ref) {
  let {
    fallbackElement,
    router: router2,
    future
  } = _ref;
  let [state, setStateImpl] = reactExports.useState(router2.state);
  let [pendingState, setPendingState] = reactExports.useState();
  let [vtContext, setVtContext] = reactExports.useState({
    isTransitioning: false
  });
  let [renderDfd, setRenderDfd] = reactExports.useState();
  let [transition, setTransition] = reactExports.useState();
  let [interruption, setInterruption] = reactExports.useState();
  let fetcherData = reactExports.useRef(/* @__PURE__ */ new Map());
  let {
    v7_startTransition
  } = future || {};
  let optInStartTransition = reactExports.useCallback((cb2) => {
    if (v7_startTransition) {
      startTransitionSafe(cb2);
    } else {
      cb2();
    }
  }, [v7_startTransition]);
  let setState = reactExports.useCallback((newState, _ref2) => {
    let {
      deletedFetchers,
      flushSync,
      viewTransitionOpts
    } = _ref2;
    deletedFetchers.forEach((key) => fetcherData.current.delete(key));
    newState.fetchers.forEach((fetcher, key) => {
      if (fetcher.data !== void 0) {
        fetcherData.current.set(key, fetcher.data);
      }
    });
    let isViewTransitionUnavailable = router2.window == null || router2.window.document == null || typeof router2.window.document.startViewTransition !== "function";
    if (!viewTransitionOpts || isViewTransitionUnavailable) {
      if (flushSync) {
        flushSyncSafe(() => setStateImpl(newState));
      } else {
        optInStartTransition(() => setStateImpl(newState));
      }
      return;
    }
    if (flushSync) {
      flushSyncSafe(() => {
        if (transition) {
          renderDfd && renderDfd.resolve();
          transition.skipTransition();
        }
        setVtContext({
          isTransitioning: true,
          flushSync: true,
          currentLocation: viewTransitionOpts.currentLocation,
          nextLocation: viewTransitionOpts.nextLocation
        });
      });
      let t2 = router2.window.document.startViewTransition(() => {
        flushSyncSafe(() => setStateImpl(newState));
      });
      t2.finished.finally(() => {
        flushSyncSafe(() => {
          setRenderDfd(void 0);
          setTransition(void 0);
          setPendingState(void 0);
          setVtContext({
            isTransitioning: false
          });
        });
      });
      flushSyncSafe(() => setTransition(t2));
      return;
    }
    if (transition) {
      renderDfd && renderDfd.resolve();
      transition.skipTransition();
      setInterruption({
        state: newState,
        currentLocation: viewTransitionOpts.currentLocation,
        nextLocation: viewTransitionOpts.nextLocation
      });
    } else {
      setPendingState(newState);
      setVtContext({
        isTransitioning: true,
        flushSync: false,
        currentLocation: viewTransitionOpts.currentLocation,
        nextLocation: viewTransitionOpts.nextLocation
      });
    }
  }, [router2.window, transition, renderDfd, fetcherData, optInStartTransition]);
  reactExports.useLayoutEffect(() => router2.subscribe(setState), [router2, setState]);
  reactExports.useEffect(() => {
    if (vtContext.isTransitioning && !vtContext.flushSync) {
      setRenderDfd(new Deferred());
    }
  }, [vtContext]);
  reactExports.useEffect(() => {
    if (renderDfd && pendingState && router2.window) {
      let newState = pendingState;
      let renderPromise = renderDfd.promise;
      let transition2 = router2.window.document.startViewTransition(async () => {
        optInStartTransition(() => setStateImpl(newState));
        await renderPromise;
      });
      transition2.finished.finally(() => {
        setRenderDfd(void 0);
        setTransition(void 0);
        setPendingState(void 0);
        setVtContext({
          isTransitioning: false
        });
      });
      setTransition(transition2);
    }
  }, [optInStartTransition, pendingState, renderDfd, router2.window]);
  reactExports.useEffect(() => {
    if (renderDfd && pendingState && state.location.key === pendingState.location.key) {
      renderDfd.resolve();
    }
  }, [renderDfd, transition, state.location, pendingState]);
  reactExports.useEffect(() => {
    if (!vtContext.isTransitioning && interruption) {
      setPendingState(interruption.state);
      setVtContext({
        isTransitioning: true,
        flushSync: false,
        currentLocation: interruption.currentLocation,
        nextLocation: interruption.nextLocation
      });
      setInterruption(void 0);
    }
  }, [vtContext.isTransitioning, interruption]);
  reactExports.useEffect(() => {
  }, []);
  let navigator2 = reactExports.useMemo(() => {
    return {
      createHref: router2.createHref,
      encodeLocation: router2.encodeLocation,
      go: (n2) => router2.navigate(n2),
      push: (to, state2, opts) => router2.navigate(to, {
        state: state2,
        preventScrollReset: opts == null ? void 0 : opts.preventScrollReset
      }),
      replace: (to, state2, opts) => router2.navigate(to, {
        replace: true,
        state: state2,
        preventScrollReset: opts == null ? void 0 : opts.preventScrollReset
      })
    };
  }, [router2]);
  let basename = router2.basename || "/";
  let dataRouterContext = reactExports.useMemo(() => ({
    router: router2,
    navigator: navigator2,
    static: false,
    basename
  }), [router2, navigator2, basename]);
  let routerFuture = reactExports.useMemo(() => ({
    v7_relativeSplatPath: router2.future.v7_relativeSplatPath
  }), [router2.future.v7_relativeSplatPath]);
  return /* @__PURE__ */ reactExports.createElement(reactExports.Fragment, null, /* @__PURE__ */ reactExports.createElement(DataRouterContext.Provider, {
    value: dataRouterContext
  }, /* @__PURE__ */ reactExports.createElement(DataRouterStateContext.Provider, {
    value: state
  }, /* @__PURE__ */ reactExports.createElement(FetchersContext.Provider, {
    value: fetcherData.current
  }, /* @__PURE__ */ reactExports.createElement(ViewTransitionContext.Provider, {
    value: vtContext
  }, /* @__PURE__ */ reactExports.createElement(Router, {
    basename,
    location: state.location,
    navigationType: state.historyAction,
    navigator: navigator2,
    future: routerFuture
  }, state.initialized || router2.future.v7_partialHydration ? /* @__PURE__ */ reactExports.createElement(MemoizedDataRoutes, {
    routes: router2.routes,
    future: router2.future,
    state
  }) : fallbackElement))))), null);
}
const MemoizedDataRoutes = /* @__PURE__ */ reactExports.memo(DataRoutes);
function DataRoutes(_ref3) {
  let {
    routes,
    future,
    state
  } = _ref3;
  return useRoutesImpl(routes, void 0, state, future);
}
var DataRouterHook;
(function(DataRouterHook2) {
  DataRouterHook2["UseScrollRestoration"] = "useScrollRestoration";
  DataRouterHook2["UseSubmit"] = "useSubmit";
  DataRouterHook2["UseSubmitFetcher"] = "useSubmitFetcher";
  DataRouterHook2["UseFetcher"] = "useFetcher";
  DataRouterHook2["useViewTransitionState"] = "useViewTransitionState";
})(DataRouterHook || (DataRouterHook = {}));
var DataRouterStateHook;
(function(DataRouterStateHook2) {
  DataRouterStateHook2["UseFetcher"] = "useFetcher";
  DataRouterStateHook2["UseFetchers"] = "useFetchers";
  DataRouterStateHook2["UseScrollRestoration"] = "useScrollRestoration";
})(DataRouterStateHook || (DataRouterStateHook = {}));
let windowObject;
if (typeof window !== "undefined") {
  windowObject = window;
} else if (typeof self !== "undefined") {
  windowObject = self;
} else {
  windowObject = global;
}
let cancelFrame = null;
let requestFrame = null;
const TIMEOUT_DURATION = 20;
const clearTimeoutFn = windowObject.clearTimeout;
const setTimeoutFn = windowObject.setTimeout;
const cancelAnimationFrameFn = windowObject.cancelAnimationFrame || windowObject.mozCancelAnimationFrame || windowObject.webkitCancelAnimationFrame;
const requestAnimationFrameFn = windowObject.requestAnimationFrame || windowObject.mozRequestAnimationFrame || windowObject.webkitRequestAnimationFrame;
if (cancelAnimationFrameFn == null || requestAnimationFrameFn == null) {
  cancelFrame = clearTimeoutFn;
  requestFrame = function requestAnimationFrameViaSetTimeout(callback) {
    return setTimeoutFn(callback, TIMEOUT_DURATION);
  };
} else {
  cancelFrame = function cancelFrame2([animationFrameID, timeoutID]) {
    cancelAnimationFrameFn(animationFrameID);
    clearTimeoutFn(timeoutID);
  };
  requestFrame = function requestAnimationFrameWithSetTimeoutFallback(callback) {
    const animationFrameID = requestAnimationFrameFn(function animationFrameCallback() {
      clearTimeoutFn(timeoutID);
      callback();
    });
    const timeoutID = setTimeoutFn(function timeoutCallback() {
      cancelAnimationFrameFn(animationFrameID);
      callback();
    }, TIMEOUT_DURATION);
    return [animationFrameID, timeoutID];
  };
}
function createDetectElementResize(nonce) {
  let animationKeyframes;
  let animationName;
  let animationStartEvent;
  let animationStyle;
  let checkTriggers;
  let resetTriggers;
  let scrollListener;
  const attachEvent = typeof document !== "undefined" && document.attachEvent;
  if (!attachEvent) {
    resetTriggers = function(element) {
      const triggers = element.__resizeTriggers__, expand = triggers.firstElementChild, contract = triggers.lastElementChild, expandChild = expand.firstElementChild;
      contract.scrollLeft = contract.scrollWidth;
      contract.scrollTop = contract.scrollHeight;
      expandChild.style.width = expand.offsetWidth + 1 + "px";
      expandChild.style.height = expand.offsetHeight + 1 + "px";
      expand.scrollLeft = expand.scrollWidth;
      expand.scrollTop = expand.scrollHeight;
    };
    checkTriggers = function(element) {
      return element.offsetWidth !== element.__resizeLast__.width || element.offsetHeight !== element.__resizeLast__.height;
    };
    scrollListener = function(e) {
      if (e.target.className && typeof e.target.className.indexOf === "function" && e.target.className.indexOf("contract-trigger") < 0 && e.target.className.indexOf("expand-trigger") < 0) {
        return;
      }
      const element = this;
      resetTriggers(this);
      if (this.__resizeRAF__) {
        cancelFrame(this.__resizeRAF__);
      }
      this.__resizeRAF__ = requestFrame(function animationFrame() {
        if (checkTriggers(element)) {
          element.__resizeLast__.width = element.offsetWidth;
          element.__resizeLast__.height = element.offsetHeight;
          element.__resizeListeners__.forEach(function forEachResizeListener(fn) {
            fn.call(element, e);
          });
        }
      });
    };
    let animation = false;
    let keyframeprefix = "";
    animationStartEvent = "animationstart";
    const domPrefixes = "Webkit Moz O ms".split(" ");
    let startEvents = "webkitAnimationStart animationstart oAnimationStart MSAnimationStart".split(" ");
    let pfx = "";
    {
      const elm = document.createElement("fakeelement");
      if (elm.style.animationName !== void 0) {
        animation = true;
      }
      if (animation === false) {
        for (let i = 0; i < domPrefixes.length; i++) {
          if (elm.style[domPrefixes[i] + "AnimationName"] !== void 0) {
            pfx = domPrefixes[i];
            keyframeprefix = "-" + pfx.toLowerCase() + "-";
            animationStartEvent = startEvents[i];
            animation = true;
            break;
          }
        }
      }
    }
    animationName = "resizeanim";
    animationKeyframes = "@" + keyframeprefix + "keyframes " + animationName + " { from { opacity: 0; } to { opacity: 0; } } ";
    animationStyle = keyframeprefix + "animation: 1ms " + animationName + "; ";
  }
  const createStyles = function(doc) {
    if (!doc.getElementById("detectElementResize")) {
      const css = (animationKeyframes ? animationKeyframes : "") + ".resize-triggers { " + (animationStyle ? animationStyle : "") + 'visibility: hidden; opacity: 0; } .resize-triggers, .resize-triggers > div, .contract-trigger:before { content: " "; display: block; position: absolute; top: 0; left: 0; height: 100%; width: 100%; overflow: hidden; z-index: -1; } .resize-triggers > div { background: #eee; overflow: auto; } .contract-trigger:before { width: 200%; height: 200%; }', head = doc.head || doc.getElementsByTagName("head")[0], style = doc.createElement("style");
      style.id = "detectElementResize";
      style.type = "text/css";
      if (nonce != null) {
        style.setAttribute("nonce", nonce);
      }
      if (style.styleSheet) {
        style.styleSheet.cssText = css;
      } else {
        style.appendChild(doc.createTextNode(css));
      }
      head.appendChild(style);
    }
  };
  const addResizeListener = function(element, fn) {
    if (attachEvent) {
      element.attachEvent("onresize", fn);
    } else {
      if (!element.__resizeTriggers__) {
        const doc = element.ownerDocument;
        const elementStyle = windowObject.getComputedStyle(element);
        if (elementStyle && elementStyle.position === "static") {
          element.style.position = "relative";
        }
        createStyles(doc);
        element.__resizeLast__ = {};
        element.__resizeListeners__ = [];
        (element.__resizeTriggers__ = doc.createElement("div")).className = "resize-triggers";
        const expandTrigger = doc.createElement("div");
        expandTrigger.className = "expand-trigger";
        expandTrigger.appendChild(doc.createElement("div"));
        const contractTrigger = doc.createElement("div");
        contractTrigger.className = "contract-trigger";
        element.__resizeTriggers__.appendChild(expandTrigger);
        element.__resizeTriggers__.appendChild(contractTrigger);
        element.appendChild(element.__resizeTriggers__);
        resetTriggers(element);
        element.addEventListener("scroll", scrollListener, true);
        if (animationStartEvent) {
          element.__resizeTriggers__.__animationListener__ = function animationListener(e) {
            if (e.animationName === animationName) {
              resetTriggers(element);
            }
          };
          element.__resizeTriggers__.addEventListener(animationStartEvent, element.__resizeTriggers__.__animationListener__);
        }
      }
      element.__resizeListeners__.push(fn);
    }
  };
  const removeResizeListener = function(element, fn) {
    if (attachEvent) {
      element.detachEvent("onresize", fn);
    } else {
      element.__resizeListeners__.splice(element.__resizeListeners__.indexOf(fn), 1);
      if (!element.__resizeListeners__.length) {
        element.removeEventListener("scroll", scrollListener, true);
        if (element.__resizeTriggers__.__animationListener__) {
          element.__resizeTriggers__.removeEventListener(animationStartEvent, element.__resizeTriggers__.__animationListener__);
          element.__resizeTriggers__.__animationListener__ = null;
        }
        try {
          element.__resizeTriggers__ = !element.removeChild(element.__resizeTriggers__);
        } catch (e) {
        }
      }
    }
  };
  return {
    addResizeListener,
    removeResizeListener
  };
}
class AutoSizer extends reactExports.Component {
  constructor(...args) {
    super(...args);
    this.state = {
      height: this.props.defaultHeight || 0,
      scaledHeight: this.props.defaultHeight || 0,
      scaledWidth: this.props.defaultWidth || 0,
      width: this.props.defaultWidth || 0
    };
    this._autoSizer = null;
    this._detectElementResize = null;
    this._parentNode = null;
    this._resizeObserver = null;
    this._timeoutId = null;
    this._onResize = () => {
      this._timeoutId = null;
      const {
        disableHeight,
        disableWidth,
        onResize
      } = this.props;
      if (this._parentNode) {
        const style = window.getComputedStyle(this._parentNode) || {};
        const paddingLeft = parseFloat(style.paddingLeft || "0");
        const paddingRight = parseFloat(style.paddingRight || "0");
        const paddingTop = parseFloat(style.paddingTop || "0");
        const paddingBottom = parseFloat(style.paddingBottom || "0");
        const rect = this._parentNode.getBoundingClientRect();
        const scaledHeight = rect.height - paddingTop - paddingBottom;
        const scaledWidth = rect.width - paddingLeft - paddingRight;
        const height = this._parentNode.offsetHeight - paddingTop - paddingBottom;
        const width = this._parentNode.offsetWidth - paddingLeft - paddingRight;
        if (!disableHeight && (this.state.height !== height || this.state.scaledHeight !== scaledHeight) || !disableWidth && (this.state.width !== width || this.state.scaledWidth !== scaledWidth)) {
          this.setState({
            height,
            width,
            scaledHeight,
            scaledWidth
          });
          if (typeof onResize === "function") {
            onResize({
              height,
              scaledHeight,
              scaledWidth,
              width
            });
          }
        }
      }
    };
    this._setRef = (autoSizer) => {
      this._autoSizer = autoSizer;
    };
  }
  componentDidMount() {
    const {
      nonce
    } = this.props;
    const parentNode = this._autoSizer ? this._autoSizer.parentNode : null;
    if (parentNode != null && parentNode.ownerDocument && parentNode.ownerDocument.defaultView && parentNode instanceof parentNode.ownerDocument.defaultView.HTMLElement) {
      this._parentNode = parentNode;
      const ResizeObserverInstance = parentNode.ownerDocument.defaultView.ResizeObserver;
      if (ResizeObserverInstance != null) {
        this._resizeObserver = new ResizeObserverInstance(() => {
          this._timeoutId = setTimeout(this._onResize, 0);
        });
        this._resizeObserver.observe(parentNode);
      } else {
        this._detectElementResize = createDetectElementResize(nonce);
        this._detectElementResize.addResizeListener(parentNode, this._onResize);
      }
      this._onResize();
    }
  }
  componentWillUnmount() {
    if (this._parentNode) {
      if (this._detectElementResize) {
        this._detectElementResize.removeResizeListener(this._parentNode, this._onResize);
      }
      if (this._timeoutId !== null) {
        clearTimeout(this._timeoutId);
      }
      if (this._resizeObserver) {
        this._resizeObserver.disconnect();
      }
    }
  }
  render() {
    const {
      children,
      defaultHeight,
      defaultWidth,
      disableHeight = false,
      disableWidth = false,
      doNotBailOutOnEmptyChildren = false,
      nonce,
      onResize,
      style = {},
      tagName = "div",
      ...rest
    } = this.props;
    const {
      height,
      scaledHeight,
      scaledWidth,
      width
    } = this.state;
    const outerStyle = {
      overflow: "visible"
    };
    const childParams = {};
    let bailoutOnChildren = false;
    if (!disableHeight) {
      if (height === 0) {
        bailoutOnChildren = true;
      }
      outerStyle.height = 0;
      childParams.height = height;
      childParams.scaledHeight = scaledHeight;
    }
    if (!disableWidth) {
      if (width === 0) {
        bailoutOnChildren = true;
      }
      outerStyle.width = 0;
      childParams.width = width;
      childParams.scaledWidth = scaledWidth;
    }
    if (doNotBailOutOnEmptyChildren) {
      bailoutOnChildren = false;
    }
    return reactExports.createElement(tagName, {
      ref: this._setRef,
      style: {
        ...outerStyle,
        ...style
      },
      ...rest
    }, !bailoutOnChildren && children(childParams));
  }
}
function _assertThisInitialized(e) {
  if (void 0 === e) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
  return e;
}
function _setPrototypeOf$1(t2, e) {
  return _setPrototypeOf$1 = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function(t3, e2) {
    return t3.__proto__ = e2, t3;
  }, _setPrototypeOf$1(t2, e);
}
function _inheritsLoose$1(t2, o) {
  t2.prototype = Object.create(o.prototype), t2.prototype.constructor = t2, _setPrototypeOf$1(t2, o);
}
var safeIsNaN$1 = Number.isNaN || function ponyfill(value) {
  return typeof value === "number" && value !== value;
};
function isEqual$2(first, second) {
  if (first === second) {
    return true;
  }
  if (safeIsNaN$1(first) && safeIsNaN$1(second)) {
    return true;
  }
  return false;
}
function areInputsEqual$1(newInputs, lastInputs) {
  if (newInputs.length !== lastInputs.length) {
    return false;
  }
  for (var i = 0; i < newInputs.length; i++) {
    if (!isEqual$2(newInputs[i], lastInputs[i])) {
      return false;
    }
  }
  return true;
}
function memoizeOne$1(resultFn, isEqual2) {
  if (isEqual2 === void 0) {
    isEqual2 = areInputsEqual$1;
  }
  var lastThis;
  var lastArgs = [];
  var lastResult;
  var calledOnce = false;
  function memoized() {
    var newArgs = [];
    for (var _i = 0; _i < arguments.length; _i++) {
      newArgs[_i] = arguments[_i];
    }
    if (calledOnce && lastThis === this && isEqual2(newArgs, lastArgs)) {
      return lastResult;
    }
    lastResult = resultFn.apply(this, newArgs);
    calledOnce = true;
    lastThis = this;
    lastArgs = newArgs;
    return lastResult;
  }
  return memoized;
}
var hasNativePerformanceNow = typeof performance === "object" && typeof performance.now === "function";
var now$1 = hasNativePerformanceNow ? function() {
  return performance.now();
} : function() {
  return Date.now();
};
function cancelTimeout(timeoutID) {
  cancelAnimationFrame(timeoutID.id);
}
function requestTimeout(callback, delay) {
  var start = now$1();
  function tick() {
    if (now$1() - start >= delay) {
      callback.call(null);
    } else {
      timeoutID.id = requestAnimationFrame(tick);
    }
  }
  var timeoutID = {
    id: requestAnimationFrame(tick)
  };
  return timeoutID;
}
var size = -1;
function getScrollbarSize(recalculate) {
  if (recalculate === void 0) {
    recalculate = false;
  }
  if (size === -1 || recalculate) {
    var div = document.createElement("div");
    var style = div.style;
    style.width = "50px";
    style.height = "50px";
    style.overflow = "scroll";
    document.body.appendChild(div);
    size = div.offsetWidth - div.clientWidth;
    document.body.removeChild(div);
  }
  return size;
}
var cachedRTLResult = null;
function getRTLOffsetType(recalculate) {
  if (recalculate === void 0) {
    recalculate = false;
  }
  if (cachedRTLResult === null || recalculate) {
    var outerDiv = document.createElement("div");
    var outerStyle = outerDiv.style;
    outerStyle.width = "50px";
    outerStyle.height = "50px";
    outerStyle.overflow = "scroll";
    outerStyle.direction = "rtl";
    var innerDiv = document.createElement("div");
    var innerStyle = innerDiv.style;
    innerStyle.width = "100px";
    innerStyle.height = "100px";
    outerDiv.appendChild(innerDiv);
    document.body.appendChild(outerDiv);
    if (outerDiv.scrollLeft > 0) {
      cachedRTLResult = "positive-descending";
    } else {
      outerDiv.scrollLeft = 1;
      if (outerDiv.scrollLeft === 0) {
        cachedRTLResult = "negative";
      } else {
        cachedRTLResult = "positive-ascending";
      }
    }
    document.body.removeChild(outerDiv);
    return cachedRTLResult;
  }
  return cachedRTLResult;
}
var IS_SCROLLING_DEBOUNCE_INTERVAL$1 = 150;
var defaultItemKey$1 = function defaultItemKey3(index, data) {
  return index;
};
function createListComponent(_ref) {
  var _class2;
  var getItemOffset3 = _ref.getItemOffset, getEstimatedTotalSize4 = _ref.getEstimatedTotalSize, getItemSize3 = _ref.getItemSize, getOffsetForIndexAndAlignment5 = _ref.getOffsetForIndexAndAlignment, getStartIndexForOffset3 = _ref.getStartIndexForOffset, getStopIndexForStartIndex3 = _ref.getStopIndexForStartIndex, initInstanceProps5 = _ref.initInstanceProps, shouldResetStyleCacheOnItemSizeChange = _ref.shouldResetStyleCacheOnItemSizeChange, validateProps5 = _ref.validateProps;
  return _class2 = /* @__PURE__ */ function(_PureComponent) {
    _inheritsLoose$1(List, _PureComponent);
    function List(props) {
      var _this;
      _this = _PureComponent.call(this, props) || this;
      _this._instanceProps = initInstanceProps5(_this.props, _assertThisInitialized(_this));
      _this._outerRef = void 0;
      _this._resetIsScrollingTimeoutId = null;
      _this.state = {
        instance: _assertThisInitialized(_this),
        isScrolling: false,
        scrollDirection: "forward",
        scrollOffset: typeof _this.props.initialScrollOffset === "number" ? _this.props.initialScrollOffset : 0,
        scrollUpdateWasRequested: false
      };
      _this._callOnItemsRendered = void 0;
      _this._callOnItemsRendered = memoizeOne$1(function(overscanStartIndex, overscanStopIndex, visibleStartIndex, visibleStopIndex) {
        return _this.props.onItemsRendered({
          overscanStartIndex,
          overscanStopIndex,
          visibleStartIndex,
          visibleStopIndex
        });
      });
      _this._callOnScroll = void 0;
      _this._callOnScroll = memoizeOne$1(function(scrollDirection, scrollOffset3, scrollUpdateWasRequested) {
        return _this.props.onScroll({
          scrollDirection,
          scrollOffset: scrollOffset3,
          scrollUpdateWasRequested
        });
      });
      _this._getItemStyle = void 0;
      _this._getItemStyle = function(index) {
        var _this$props = _this.props, direction = _this$props.direction, itemSize = _this$props.itemSize, layout = _this$props.layout;
        var itemStyleCache = _this._getItemStyleCache(shouldResetStyleCacheOnItemSizeChange && itemSize, shouldResetStyleCacheOnItemSizeChange && layout, shouldResetStyleCacheOnItemSizeChange && direction);
        var style;
        if (itemStyleCache.hasOwnProperty(index)) {
          style = itemStyleCache[index];
        } else {
          var _offset = getItemOffset3(_this.props, index, _this._instanceProps);
          var size2 = getItemSize3(_this.props, index, _this._instanceProps);
          var isHorizontal = direction === "horizontal" || layout === "horizontal";
          var isRtl = direction === "rtl";
          var offsetHorizontal = isHorizontal ? _offset : 0;
          itemStyleCache[index] = style = {
            position: "absolute",
            left: isRtl ? void 0 : offsetHorizontal,
            right: isRtl ? offsetHorizontal : void 0,
            top: !isHorizontal ? _offset : 0,
            height: !isHorizontal ? size2 : "100%",
            width: isHorizontal ? size2 : "100%"
          };
        }
        return style;
      };
      _this._getItemStyleCache = void 0;
      _this._getItemStyleCache = memoizeOne$1(function(_2, __, ___) {
        return {};
      });
      _this._onScrollHorizontal = function(event) {
        var _event$currentTarget = event.currentTarget, clientWidth = _event$currentTarget.clientWidth, scrollLeft = _event$currentTarget.scrollLeft, scrollWidth = _event$currentTarget.scrollWidth;
        _this.setState(function(prevState) {
          if (prevState.scrollOffset === scrollLeft) {
            return null;
          }
          var direction = _this.props.direction;
          var scrollOffset3 = scrollLeft;
          if (direction === "rtl") {
            switch (getRTLOffsetType()) {
              case "negative":
                scrollOffset3 = -scrollLeft;
                break;
              case "positive-descending":
                scrollOffset3 = scrollWidth - clientWidth - scrollLeft;
                break;
            }
          }
          scrollOffset3 = Math.max(0, Math.min(scrollOffset3, scrollWidth - clientWidth));
          return {
            isScrolling: true,
            scrollDirection: prevState.scrollOffset < scrollOffset3 ? "forward" : "backward",
            scrollOffset: scrollOffset3,
            scrollUpdateWasRequested: false
          };
        }, _this._resetIsScrollingDebounced);
      };
      _this._onScrollVertical = function(event) {
        var _event$currentTarget2 = event.currentTarget, clientHeight = _event$currentTarget2.clientHeight, scrollHeight = _event$currentTarget2.scrollHeight, scrollTop = _event$currentTarget2.scrollTop;
        _this.setState(function(prevState) {
          if (prevState.scrollOffset === scrollTop) {
            return null;
          }
          var scrollOffset3 = Math.max(0, Math.min(scrollTop, scrollHeight - clientHeight));
          return {
            isScrolling: true,
            scrollDirection: prevState.scrollOffset < scrollOffset3 ? "forward" : "backward",
            scrollOffset: scrollOffset3,
            scrollUpdateWasRequested: false
          };
        }, _this._resetIsScrollingDebounced);
      };
      _this._outerRefSetter = function(ref) {
        var outerRef = _this.props.outerRef;
        _this._outerRef = ref;
        if (typeof outerRef === "function") {
          outerRef(ref);
        } else if (outerRef != null && typeof outerRef === "object" && outerRef.hasOwnProperty("current")) {
          outerRef.current = ref;
        }
      };
      _this._resetIsScrollingDebounced = function() {
        if (_this._resetIsScrollingTimeoutId !== null) {
          cancelTimeout(_this._resetIsScrollingTimeoutId);
        }
        _this._resetIsScrollingTimeoutId = requestTimeout(_this._resetIsScrolling, IS_SCROLLING_DEBOUNCE_INTERVAL$1);
      };
      _this._resetIsScrolling = function() {
        _this._resetIsScrollingTimeoutId = null;
        _this.setState({
          isScrolling: false
        }, function() {
          _this._getItemStyleCache(-1, null);
        });
      };
      return _this;
    }
    List.getDerivedStateFromProps = function getDerivedStateFromProps(nextProps, prevState) {
      validateSharedProps$1(nextProps, prevState);
      validateProps5(nextProps);
      return null;
    };
    var _proto = List.prototype;
    _proto.scrollTo = function scrollTo5(scrollOffset3) {
      scrollOffset3 = Math.max(0, scrollOffset3);
      this.setState(function(prevState) {
        if (prevState.scrollOffset === scrollOffset3) {
          return null;
        }
        return {
          scrollDirection: prevState.scrollOffset < scrollOffset3 ? "forward" : "backward",
          scrollOffset: scrollOffset3,
          scrollUpdateWasRequested: true
        };
      }, this._resetIsScrollingDebounced);
    };
    _proto.scrollToItem = function scrollToItem(index, align) {
      if (align === void 0) {
        align = "auto";
      }
      var _this$props2 = this.props, itemCount = _this$props2.itemCount, layout = _this$props2.layout;
      var scrollOffset3 = this.state.scrollOffset;
      index = Math.max(0, Math.min(index, itemCount - 1));
      var scrollbarSize = 0;
      if (this._outerRef) {
        var outerRef = this._outerRef;
        if (layout === "vertical") {
          scrollbarSize = outerRef.scrollWidth > outerRef.clientWidth ? getScrollbarSize() : 0;
        } else {
          scrollbarSize = outerRef.scrollHeight > outerRef.clientHeight ? getScrollbarSize() : 0;
        }
      }
      this.scrollTo(getOffsetForIndexAndAlignment5(this.props, index, align, scrollOffset3, this._instanceProps, scrollbarSize));
    };
    _proto.componentDidMount = function componentDidMount() {
      var _this$props3 = this.props, direction = _this$props3.direction, initialScrollOffset = _this$props3.initialScrollOffset, layout = _this$props3.layout;
      if (typeof initialScrollOffset === "number" && this._outerRef != null) {
        var outerRef = this._outerRef;
        if (direction === "horizontal" || layout === "horizontal") {
          outerRef.scrollLeft = initialScrollOffset;
        } else {
          outerRef.scrollTop = initialScrollOffset;
        }
      }
      this._callPropsCallbacks();
    };
    _proto.componentDidUpdate = function componentDidUpdate() {
      var _this$props4 = this.props, direction = _this$props4.direction, layout = _this$props4.layout;
      var _this$state = this.state, scrollOffset3 = _this$state.scrollOffset, scrollUpdateWasRequested = _this$state.scrollUpdateWasRequested;
      if (scrollUpdateWasRequested && this._outerRef != null) {
        var outerRef = this._outerRef;
        if (direction === "horizontal" || layout === "horizontal") {
          if (direction === "rtl") {
            switch (getRTLOffsetType()) {
              case "negative":
                outerRef.scrollLeft = -scrollOffset3;
                break;
              case "positive-ascending":
                outerRef.scrollLeft = scrollOffset3;
                break;
              default:
                var clientWidth = outerRef.clientWidth, scrollWidth = outerRef.scrollWidth;
                outerRef.scrollLeft = scrollWidth - clientWidth - scrollOffset3;
                break;
            }
          } else {
            outerRef.scrollLeft = scrollOffset3;
          }
        } else {
          outerRef.scrollTop = scrollOffset3;
        }
      }
      this._callPropsCallbacks();
    };
    _proto.componentWillUnmount = function componentWillUnmount() {
      if (this._resetIsScrollingTimeoutId !== null) {
        cancelTimeout(this._resetIsScrollingTimeoutId);
      }
    };
    _proto.render = function render() {
      var _this$props5 = this.props, children = _this$props5.children, className = _this$props5.className, direction = _this$props5.direction, height = _this$props5.height, innerRef = _this$props5.innerRef, innerElementType = _this$props5.innerElementType, innerTagName = _this$props5.innerTagName, itemCount = _this$props5.itemCount, itemData = _this$props5.itemData, _this$props5$itemKey = _this$props5.itemKey, itemKey = _this$props5$itemKey === void 0 ? defaultItemKey$1 : _this$props5$itemKey, layout = _this$props5.layout, outerElementType = _this$props5.outerElementType, outerTagName = _this$props5.outerTagName, style = _this$props5.style, useIsScrolling = _this$props5.useIsScrolling, width = _this$props5.width;
      var isScrolling = this.state.isScrolling;
      var isHorizontal = direction === "horizontal" || layout === "horizontal";
      var onScroll = isHorizontal ? this._onScrollHorizontal : this._onScrollVertical;
      var _this$_getRangeToRend = this._getRangeToRender(), startIndex = _this$_getRangeToRend[0], stopIndex = _this$_getRangeToRend[1];
      var items = [];
      if (itemCount > 0) {
        for (var _index = startIndex; _index <= stopIndex; _index++) {
          items.push(reactExports.createElement(children, {
            data: itemData,
            key: itemKey(_index, itemData),
            index: _index,
            isScrolling: useIsScrolling ? isScrolling : void 0,
            style: this._getItemStyle(_index)
          }));
        }
      }
      var estimatedTotalSize = getEstimatedTotalSize4(this.props, this._instanceProps);
      return reactExports.createElement(outerElementType || outerTagName || "div", {
        className,
        onScroll,
        ref: this._outerRefSetter,
        style: _extends$a({
          position: "relative",
          height,
          width,
          overflow: "auto",
          WebkitOverflowScrolling: "touch",
          willChange: "transform",
          direction
        }, style)
      }, reactExports.createElement(innerElementType || innerTagName || "div", {
        children: items,
        ref: innerRef,
        style: {
          height: isHorizontal ? "100%" : estimatedTotalSize,
          pointerEvents: isScrolling ? "none" : void 0,
          width: isHorizontal ? estimatedTotalSize : "100%"
        }
      }));
    };
    _proto._callPropsCallbacks = function _callPropsCallbacks() {
      if (typeof this.props.onItemsRendered === "function") {
        var itemCount = this.props.itemCount;
        if (itemCount > 0) {
          var _this$_getRangeToRend2 = this._getRangeToRender(), _overscanStartIndex = _this$_getRangeToRend2[0], _overscanStopIndex = _this$_getRangeToRend2[1], _visibleStartIndex = _this$_getRangeToRend2[2], _visibleStopIndex = _this$_getRangeToRend2[3];
          this._callOnItemsRendered(_overscanStartIndex, _overscanStopIndex, _visibleStartIndex, _visibleStopIndex);
        }
      }
      if (typeof this.props.onScroll === "function") {
        var _this$state2 = this.state, _scrollDirection = _this$state2.scrollDirection, _scrollOffset = _this$state2.scrollOffset, _scrollUpdateWasRequested = _this$state2.scrollUpdateWasRequested;
        this._callOnScroll(_scrollDirection, _scrollOffset, _scrollUpdateWasRequested);
      }
    };
    _proto._getRangeToRender = function _getRangeToRender() {
      var _this$props6 = this.props, itemCount = _this$props6.itemCount, overscanCount = _this$props6.overscanCount;
      var _this$state3 = this.state, isScrolling = _this$state3.isScrolling, scrollDirection = _this$state3.scrollDirection, scrollOffset3 = _this$state3.scrollOffset;
      if (itemCount === 0) {
        return [0, 0, 0, 0];
      }
      var startIndex = getStartIndexForOffset3(this.props, scrollOffset3, this._instanceProps);
      var stopIndex = getStopIndexForStartIndex3(this.props, startIndex, scrollOffset3, this._instanceProps);
      var overscanBackward = !isScrolling || scrollDirection === "backward" ? Math.max(1, overscanCount) : 1;
      var overscanForward = !isScrolling || scrollDirection === "forward" ? Math.max(1, overscanCount) : 1;
      return [Math.max(0, startIndex - overscanBackward), Math.max(0, Math.min(itemCount - 1, stopIndex + overscanForward)), startIndex, stopIndex];
    };
    return List;
  }(reactExports.PureComponent), _class2.defaultProps = {
    direction: "ltr",
    itemData: void 0,
    layout: "vertical",
    overscanCount: 2,
    useIsScrolling: false
  }, _class2;
}
var validateSharedProps$1 = function validateSharedProps3(_ref2, _ref3) {
  _ref2.children;
  _ref2.direction;
  _ref2.height;
  _ref2.layout;
  _ref2.innerTagName;
  _ref2.outerTagName;
  _ref2.width;
  _ref3.instance;
};
var FixedSizeList = /* @__PURE__ */ createListComponent({
  getItemOffset: function getItemOffset2(_ref, index) {
    var itemSize = _ref.itemSize;
    return index * itemSize;
  },
  getItemSize: function getItemSize2(_ref2, index) {
    var itemSize = _ref2.itemSize;
    return itemSize;
  },
  getEstimatedTotalSize: function getEstimatedTotalSize3(_ref3) {
    var itemCount = _ref3.itemCount, itemSize = _ref3.itemSize;
    return itemSize * itemCount;
  },
  getOffsetForIndexAndAlignment: function getOffsetForIndexAndAlignment4(_ref4, index, align, scrollOffset3, instanceProps, scrollbarSize) {
    var direction = _ref4.direction, height = _ref4.height, itemCount = _ref4.itemCount, itemSize = _ref4.itemSize, layout = _ref4.layout, width = _ref4.width;
    var isHorizontal = direction === "horizontal" || layout === "horizontal";
    var size2 = isHorizontal ? width : height;
    var lastItemOffset = Math.max(0, itemCount * itemSize - size2);
    var maxOffset = Math.min(lastItemOffset, index * itemSize);
    var minOffset = Math.max(0, index * itemSize - size2 + itemSize + scrollbarSize);
    if (align === "smart") {
      if (scrollOffset3 >= minOffset - size2 && scrollOffset3 <= maxOffset + size2) {
        align = "auto";
      } else {
        align = "center";
      }
    }
    switch (align) {
      case "start":
        return maxOffset;
      case "end":
        return minOffset;
      case "center": {
        var middleOffset = Math.round(minOffset + (maxOffset - minOffset) / 2);
        if (middleOffset < Math.ceil(size2 / 2)) {
          return 0;
        } else if (middleOffset > lastItemOffset + Math.floor(size2 / 2)) {
          return lastItemOffset;
        } else {
          return middleOffset;
        }
      }
      case "auto":
      default:
        if (scrollOffset3 >= minOffset && scrollOffset3 <= maxOffset) {
          return scrollOffset3;
        } else if (scrollOffset3 < minOffset) {
          return minOffset;
        } else {
          return maxOffset;
        }
    }
  },
  getStartIndexForOffset: function getStartIndexForOffset2(_ref5, offset) {
    var itemCount = _ref5.itemCount, itemSize = _ref5.itemSize;
    return Math.max(0, Math.min(itemCount - 1, Math.floor(offset / itemSize)));
  },
  getStopIndexForStartIndex: function getStopIndexForStartIndex2(_ref6, startIndex, scrollOffset3) {
    var direction = _ref6.direction, height = _ref6.height, itemCount = _ref6.itemCount, itemSize = _ref6.itemSize, layout = _ref6.layout, width = _ref6.width;
    var isHorizontal = direction === "horizontal" || layout === "horizontal";
    var offset = startIndex * itemSize;
    var size2 = isHorizontal ? width : height;
    var numVisibleItems = Math.ceil((size2 + scrollOffset3 - offset) / itemSize);
    return Math.max(0, Math.min(
      itemCount - 1,
      startIndex + numVisibleItems - 1
      // -1 is because stop index is inclusive
    ));
  },
  initInstanceProps: function initInstanceProps4(props) {
  },
  shouldResetStyleCacheOnItemSizeChange: true,
  validateProps: function validateProps4(_ref7) {
    _ref7.itemSize;
  }
});
function shallowDiffers(prev, next) {
  for (var attribute in prev) {
    if (!(attribute in next)) {
      return true;
    }
  }
  for (var _attribute in next) {
    if (prev[_attribute] !== next[_attribute]) {
      return true;
    }
  }
  return false;
}
var _excluded = ["style"], _excluded2 = ["style"];
function areEqual(prevProps, nextProps) {
  var prevStyle = prevProps.style, prevRest = _objectWithoutPropertiesLoose(prevProps, _excluded);
  var nextStyle = nextProps.style, nextRest = _objectWithoutPropertiesLoose(nextProps, _excluded2);
  return !shallowDiffers(prevStyle, nextStyle) && !shallowDiffers(prevRest, nextRest);
}
const inMemoryData = /* @__PURE__ */ new Map();
function useLocalStorageState(key, options) {
  const serializer = options == null ? void 0 : options.serializer;
  const [defaultValue] = reactExports.useState(options == null ? void 0 : options.defaultValue);
  return useLocalStorage(key, defaultValue, options == null ? void 0 : options.storageSync, serializer == null ? void 0 : serializer.parse, serializer == null ? void 0 : serializer.stringify);
}
function useLocalStorage(key, defaultValue, storageSync = true, parse2 = parseJSON, stringify = JSON.stringify) {
  const storageItem = reactExports.useRef({
    string: null,
    parsed: void 0
  });
  const value = reactExports.useSyncExternalStore(
    // useSyncExternalStore.subscribe
    reactExports.useCallback((onStoreChange) => {
      const onChange = (localKey) => {
        if (key === localKey) {
          onStoreChange();
        }
      };
      callbacks.add(onChange);
      return () => {
        callbacks.delete(onChange);
      };
    }, [key]),
    // useSyncExternalStore.getSnapshot
    () => {
      const string = goodTry(() => localStorage.getItem(key)) ?? null;
      if (inMemoryData.has(key)) {
        storageItem.current.parsed = inMemoryData.get(key);
      } else if (string !== storageItem.current.string) {
        let parsed;
        try {
          parsed = string === null ? defaultValue : parse2(string);
        } catch {
          parsed = defaultValue;
        }
        storageItem.current.parsed = parsed;
      }
      storageItem.current.string = string;
      if (defaultValue !== void 0 && string === null) {
        goodTry(() => {
          const string2 = stringify(defaultValue);
          localStorage.setItem(key, string2);
          storageItem.current = { string: string2, parsed: defaultValue };
        });
      }
      return storageItem.current.parsed;
    },
    // useSyncExternalStore.getServerSnapshot
    () => defaultValue
  );
  const setState = reactExports.useCallback((newValue) => {
    const value2 = newValue instanceof Function ? newValue(storageItem.current.parsed) : newValue;
    try {
      localStorage.setItem(key, stringify(value2));
      inMemoryData.delete(key);
    } catch {
      inMemoryData.set(key, value2);
    }
    triggerCallbacks(key);
  }, [key, stringify]);
  const removeItem2 = reactExports.useCallback(() => {
    goodTry(() => localStorage.removeItem(key));
    inMemoryData.delete(key);
    triggerCallbacks(key);
  }, [key]);
  reactExports.useEffect(() => {
    if (!storageSync) {
      return void 0;
    }
    const onStorage = (e) => {
      if (e.key === key && e.storageArea === goodTry(() => localStorage)) {
        triggerCallbacks(key);
      }
    };
    window.addEventListener("storage", onStorage);
    return () => window.removeEventListener("storage", onStorage);
  }, [key, storageSync]);
  return reactExports.useMemo(() => [
    value,
    setState,
    {
      isPersistent: value === defaultValue || !inMemoryData.has(key),
      removeItem: removeItem2
    }
  ], [key, setState, value, defaultValue, removeItem2]);
}
const callbacks = /* @__PURE__ */ new Set();
function triggerCallbacks(key) {
  for (const callback of [...callbacks]) {
    callback(key);
  }
}
function parseJSON(value) {
  return value === "undefined" ? void 0 : JSON.parse(value);
}
function goodTry(tryFn) {
  try {
    return tryFn();
  } catch {
  }
}
/**
 * @license lucide-react v0.447.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
const toKebabCase = (string) => string.replace(/([a-z0-9])([A-Z])/g, "$1-$2").toLowerCase();
const mergeClasses = (...classes) => classes.filter((className, index, array) => {
  return Boolean(className) && array.indexOf(className) === index;
}).join(" ");
/**
 * @license lucide-react v0.447.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
var defaultAttributes = {
  xmlns: "http://www.w3.org/2000/svg",
  width: 24,
  height: 24,
  viewBox: "0 0 24 24",
  fill: "none",
  stroke: "currentColor",
  strokeWidth: 2,
  strokeLinecap: "round",
  strokeLinejoin: "round"
};
/**
 * @license lucide-react v0.447.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
const Icon = reactExports.forwardRef(
  ({
    color: color2 = "currentColor",
    size: size2 = 24,
    strokeWidth = 2,
    absoluteStrokeWidth,
    className = "",
    children,
    iconNode,
    ...rest
  }, ref) => {
    return reactExports.createElement(
      "svg",
      {
        ref,
        ...defaultAttributes,
        width: size2,
        height: size2,
        stroke: color2,
        strokeWidth: absoluteStrokeWidth ? Number(strokeWidth) * 24 / Number(size2) : strokeWidth,
        className: mergeClasses("lucide", className),
        ...rest
      },
      [
        ...iconNode.map(([tag, attrs]) => reactExports.createElement(tag, attrs)),
        ...Array.isArray(children) ? children : [children]
      ]
    );
  }
);
/**
 * @license lucide-react v0.447.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
const createLucideIcon = (iconName, iconNode) => {
  const Component = reactExports.forwardRef(
    ({ className, ...props }, ref) => reactExports.createElement(Icon, {
      ref,
      iconNode,
      className: mergeClasses(`lucide-${toKebabCase(iconName)}`, className),
      ...props
    })
  );
  Component.displayName = `${iconName}`;
  return Component;
};
/**
 * @license lucide-react v0.447.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
const AArrowDown = createLucideIcon("AArrowDown", [
  ["path", { d: "M3.5 13h6", key: "p1my2r" }],
  ["path", { d: "m2 16 4.5-9 4.5 9", key: "ndf0b3" }],
  ["path", { d: "M18 7v9", key: "pknjwm" }],
  ["path", { d: "m14 12 4 4 4-4", key: "buelq4" }]
]);
/**
 * @license lucide-react v0.447.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
const AArrowUp = createLucideIcon("AArrowUp", [
  ["path", { d: "M3.5 13h6", key: "p1my2r" }],
  ["path", { d: "m2 16 4.5-9 4.5 9", key: "ndf0b3" }],
  ["path", { d: "M18 16V7", key: "ty0viw" }],
  ["path", { d: "m14 11 4-4 4 4", key: "1pu57t" }]
]);
/**
 * @license lucide-react v0.447.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
const ArrowBigDown = createLucideIcon("ArrowBigDown", [
  ["path", { d: "M15 6v6h4l-7 7-7-7h4V6h6z", key: "1thax2" }]
]);
/**
 * @license lucide-react v0.447.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
const ArrowBigUpDash = createLucideIcon("ArrowBigUpDash", [
  ["path", { d: "M9 19h6", key: "456am0" }],
  ["path", { d: "M9 15v-3H5l7-7 7 7h-4v3H9z", key: "1r2uve" }]
]);
/**
 * @license lucide-react v0.447.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
const ArrowDown01 = createLucideIcon("ArrowDown01", [
  ["path", { d: "m3 16 4 4 4-4", key: "1co6wj" }],
  ["path", { d: "M7 20V4", key: "1yoxec" }],
  ["rect", { x: "15", y: "4", width: "4", height: "6", ry: "2", key: "1bwicg" }],
  ["path", { d: "M17 20v-6h-2", key: "1qp1so" }],
  ["path", { d: "M15 20h4", key: "1j968p" }]
]);
/**
 * @license lucide-react v0.447.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
const ArrowDown10 = createLucideIcon("ArrowDown10", [
  ["path", { d: "m3 16 4 4 4-4", key: "1co6wj" }],
  ["path", { d: "M7 20V4", key: "1yoxec" }],
  ["path", { d: "M17 10V4h-2", key: "zcsr5x" }],
  ["path", { d: "M15 10h4", key: "id2lce" }],
  ["rect", { x: "15", y: "14", width: "4", height: "6", ry: "2", key: "33xykx" }]
]);
/**
 * @license lucide-react v0.447.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
const ArrowDownAZ = createLucideIcon("ArrowDownAZ", [
  ["path", { d: "m3 16 4 4 4-4", key: "1co6wj" }],
  ["path", { d: "M7 20V4", key: "1yoxec" }],
  ["path", { d: "M20 8h-5", key: "1vsyxs" }],
  ["path", { d: "M15 10V6.5a2.5 2.5 0 0 1 5 0V10", key: "ag13bf" }],
  ["path", { d: "M15 14h5l-5 6h5", key: "ur5jdg" }]
]);
/**
 * @license lucide-react v0.447.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
const ArrowDownUp = createLucideIcon("ArrowDownUp", [
  ["path", { d: "m3 16 4 4 4-4", key: "1co6wj" }],
  ["path", { d: "M7 20V4", key: "1yoxec" }],
  ["path", { d: "m21 8-4-4-4 4", key: "1c9v7m" }],
  ["path", { d: "M17 4v16", key: "7dpous" }]
]);
/**
 * @license lucide-react v0.447.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
const ArrowDownZA = createLucideIcon("ArrowDownZA", [
  ["path", { d: "m3 16 4 4 4-4", key: "1co6wj" }],
  ["path", { d: "M7 4v16", key: "1glfcx" }],
  ["path", { d: "M15 4h5l-5 6h5", key: "8asdl1" }],
  ["path", { d: "M15 20v-3.5a2.5 2.5 0 0 1 5 0V20", key: "r6l5cz" }],
  ["path", { d: "M20 18h-5", key: "18j1r2" }]
]);
/**
 * @license lucide-react v0.447.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
const ArrowUpDown = createLucideIcon("ArrowUpDown", [
  ["path", { d: "m21 16-4 4-4-4", key: "f6ql7i" }],
  ["path", { d: "M17 20V4", key: "1ejh1v" }],
  ["path", { d: "m3 8 4-4 4 4", key: "11wl7u" }],
  ["path", { d: "M7 4v16", key: "1glfcx" }]
]);
/**
 * @license lucide-react v0.447.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
const AudioLines = createLucideIcon("AudioLines", [
  ["path", { d: "M2 10v3", key: "1fnikh" }],
  ["path", { d: "M6 6v11", key: "11sgs0" }],
  ["path", { d: "M10 3v18", key: "yhl04a" }],
  ["path", { d: "M14 8v7", key: "3a1oy3" }],
  ["path", { d: "M18 5v13", key: "123xd1" }],
  ["path", { d: "M22 10v3", key: "154ddg" }]
]);
/**
 * @license lucide-react v0.447.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
const CalendarPlus = createLucideIcon("CalendarPlus", [
  ["path", { d: "M8 2v4", key: "1cmpym" }],
  ["path", { d: "M16 2v4", key: "4m81vk" }],
  ["path", { d: "M21 13V6a2 2 0 0 0-2-2H5a2 2 0 0 0-2 2v14a2 2 0 0 0 2 2h8", key: "3spt84" }],
  ["path", { d: "M3 10h18", key: "8toen8" }],
  ["path", { d: "M16 19h6", key: "xwg31i" }],
  ["path", { d: "M19 16v6", key: "tddt3s" }]
]);
/**
 * @license lucide-react v0.447.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
const CaseSensitive = createLucideIcon("CaseSensitive", [
  ["path", { d: "m3 15 4-8 4 8", key: "1vwr6u" }],
  ["path", { d: "M4 13h6", key: "1r9ots" }],
  ["circle", { cx: "18", cy: "12", r: "3", key: "1kchzo" }],
  ["path", { d: "M21 9v6", key: "anns31" }]
]);
/**
 * @license lucide-react v0.447.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
const Check = createLucideIcon("Check", [["path", { d: "M20 6 9 17l-5-5", key: "1gmf2c" }]]);
/**
 * @license lucide-react v0.447.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
const CircleX = createLucideIcon("CircleX", [
  ["circle", { cx: "12", cy: "12", r: "10", key: "1mglay" }],
  ["path", { d: "m15 9-6 6", key: "1uzhvr" }],
  ["path", { d: "m9 9 6 6", key: "z0biqf" }]
]);
/**
 * @license lucide-react v0.447.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
const Columns2 = createLucideIcon("Columns2", [
  ["rect", { width: "18", height: "18", x: "3", y: "3", rx: "2", key: "afitv7" }],
  ["path", { d: "M12 3v18", key: "108xh3" }]
]);
/**
 * @license lucide-react v0.447.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
const Dices = createLucideIcon("Dices", [
  ["rect", { width: "12", height: "12", x: "2", y: "10", rx: "2", ry: "2", key: "6agr2n" }],
  [
    "path",
    { d: "m17.92 14 3.5-3.5a2.24 2.24 0 0 0 0-3l-5-4.92a2.24 2.24 0 0 0-3 0L10 6", key: "1o487t" }
  ],
  ["path", { d: "M6 18h.01", key: "uhywen" }],
  ["path", { d: "M10 14h.01", key: "ssrbsk" }],
  ["path", { d: "M15 6h.01", key: "cblpky" }],
  ["path", { d: "M18 9h.01", key: "2061c0" }]
]);
/**
 * @license lucide-react v0.447.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
const Filter = createLucideIcon("Filter", [
  ["polygon", { points: "22 3 2 3 10 12.46 10 19 14 21 14 12.46 22 3", key: "1yg77f" }]
]);
/**
 * @license lucide-react v0.447.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
const FlagOff = createLucideIcon("FlagOff", [
  ["path", { d: "M8 2c3 0 5 2 8 2s4-1 4-1v11", key: "9rwyz9" }],
  ["path", { d: "M4 22V4", key: "1plyxx" }],
  ["path", { d: "M4 15s1-1 4-1 5 2 8 2", key: "1myooe" }],
  ["line", { x1: "2", x2: "22", y1: "2", y2: "22", key: "a6p6uj" }]
]);
/**
 * @license lucide-react v0.447.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
const Github = createLucideIcon("Github", [
  [
    "path",
    {
      d: "M15 22v-4a4.8 4.8 0 0 0-1-3.5c3 0 6-2 6-5.5.08-1.25-.27-2.48-1-3.5.28-1.15.28-2.35 0-3.5 0 0-1 0-3 1.5-2.64-.5-5.36-.5-8 0C6 2 5 2 5 2c-.3 1.15-.3 2.35 0 3.5A5.403 5.403 0 0 0 4 9c0 3.5 3 5.5 6 5.5-.39.49-.68 1.05-.85 1.65-.17.6-.22 1.23-.15 1.85v4",
      key: "tonef"
    }
  ],
  ["path", { d: "M9 18c-4.51 2-5-2-7-2", key: "9comsn" }]
]);
/**
 * @license lucide-react v0.447.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
const Guitar = createLucideIcon("Guitar", [
  ["path", { d: "m11.9 12.1 4.514-4.514", key: "109xqo" }],
  [
    "path",
    {
      d: "M20.1 2.3a1 1 0 0 0-1.4 0l-1.114 1.114A2 2 0 0 0 17 4.828v1.344a2 2 0 0 1-.586 1.414A2 2 0 0 1 17.828 7h1.344a2 2 0 0 0 1.414-.586L21.7 5.3a1 1 0 0 0 0-1.4z",
      key: "txyc8t"
    }
  ],
  ["path", { d: "m6 16 2 2", key: "16qmzd" }],
  [
    "path",
    {
      d: "M8.2 9.9C8.7 8.8 9.8 8 11 8c2.8 0 5 2.2 5 5 0 1.2-.8 2.3-1.9 2.8l-.9.4A2 2 0 0 0 12 18a4 4 0 0 1-4 4c-3.3 0-6-2.7-6-6a4 4 0 0 1 4-4 2 2 0 0 0 1.8-1.2z",
      key: "1u8q3z"
    }
  ],
  ["circle", { cx: "11.5", cy: "12.5", r: ".5", fill: "currentColor", key: "16onso" }]
]);
/**
 * @license lucide-react v0.447.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
const Handshake = createLucideIcon("Handshake", [
  ["path", { d: "m11 17 2 2a1 1 0 1 0 3-3", key: "efffak" }],
  [
    "path",
    {
      d: "m14 14 2.5 2.5a1 1 0 1 0 3-3l-3.88-3.88a3 3 0 0 0-4.24 0l-.88.88a1 1 0 1 1-3-3l2.81-2.81a5.79 5.79 0 0 1 7.06-.87l.47.28a2 2 0 0 0 1.42.25L21 4",
      key: "9pr0kb"
    }
  ],
  ["path", { d: "m21 3 1 11h-2", key: "1tisrp" }],
  ["path", { d: "M3 3 2 14l6.5 6.5a1 1 0 1 0 3-3", key: "1uvwmv" }],
  ["path", { d: "M3 4h8", key: "1ep09j" }]
]);
/**
 * @license lucide-react v0.447.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
const Images = createLucideIcon("Images", [
  ["path", { d: "M18 22H4a2 2 0 0 1-2-2V6", key: "pblm9e" }],
  ["path", { d: "m22 13-1.296-1.296a2.41 2.41 0 0 0-3.408 0L11 18", key: "nf6bnh" }],
  ["circle", { cx: "12", cy: "8", r: "2", key: "1822b1" }],
  ["rect", { width: "16", height: "16", x: "6", y: "2", rx: "2", key: "12espp" }]
]);
/**
 * @license lucide-react v0.447.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
const Instagram = createLucideIcon("Instagram", [
  ["rect", { width: "20", height: "20", x: "2", y: "2", rx: "5", ry: "5", key: "2e1cvw" }],
  ["path", { d: "M16 11.37A4 4 0 1 1 12.63 8 4 4 0 0 1 16 11.37z", key: "9exkf1" }],
  ["line", { x1: "17.5", x2: "17.51", y1: "6.5", y2: "6.5", key: "r4j83e" }]
]);
/**
 * @license lucide-react v0.447.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
const Languages = createLucideIcon("Languages", [
  ["path", { d: "m5 8 6 6", key: "1wu5hv" }],
  ["path", { d: "m4 14 6-6 2-3", key: "1k1g8d" }],
  ["path", { d: "M2 5h12", key: "or177f" }],
  ["path", { d: "M7 2h1", key: "1t2jsx" }],
  ["path", { d: "m22 22-5-10-5 10", key: "don7ne" }],
  ["path", { d: "M14 18h6", key: "1m8k6r" }]
]);
/**
 * @license lucide-react v0.447.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
const MicVocal = createLucideIcon("MicVocal", [
  [
    "path",
    {
      d: "m11 7.601-5.994 8.19a1 1 0 0 0 .1 1.298l.817.818a1 1 0 0 0 1.314.087L15.09 12",
      key: "80a601"
    }
  ],
  [
    "path",
    {
      d: "M16.5 21.174C15.5 20.5 14.372 20 13 20c-2.058 0-3.928 2.356-6 2-2.072-.356-2.775-3.369-1.5-4.5",
      key: "j0ngtp"
    }
  ],
  ["circle", { cx: "16", cy: "7", r: "5", key: "d08jfb" }]
]);
/**
 * @license lucide-react v0.447.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
const Minus = createLucideIcon("Minus", [["path", { d: "M5 12h14", key: "1ays0h" }]]);
/**
 * @license lucide-react v0.447.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
const MoveDiagonal = createLucideIcon("MoveDiagonal", [
  ["polyline", { points: "13 5 19 5 19 11", key: "11219e" }],
  ["polyline", { points: "11 19 5 19 5 13", key: "sfq3wq" }],
  ["line", { x1: "19", x2: "5", y1: "5", y2: "19", key: "1x9vlm" }]
]);
/**
 * @license lucide-react v0.447.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
const MoveHorizontal = createLucideIcon("MoveHorizontal", [
  ["polyline", { points: "18 8 22 12 18 16", key: "1hqrds" }],
  ["polyline", { points: "6 8 2 12 6 16", key: "f0ernq" }],
  ["line", { x1: "2", x2: "22", y1: "12", y2: "12", key: "1dnqot" }]
]);
/**
 * @license lucide-react v0.447.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
const Music = createLucideIcon("Music", [
  ["path", { d: "M9 18V5l12-2v13", key: "1jmyc2" }],
  ["circle", { cx: "6", cy: "18", r: "3", key: "fqmcym" }],
  ["circle", { cx: "18", cy: "16", r: "3", key: "1hluhg" }]
]);
/**
 * @license lucide-react v0.447.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
const Plus = createLucideIcon("Plus", [
  ["path", { d: "M5 12h14", key: "1ays0h" }],
  ["path", { d: "M12 5v14", key: "s699le" }]
]);
/**
 * @license lucide-react v0.447.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
const Repeat = createLucideIcon("Repeat", [
  ["path", { d: "m17 2 4 4-4 4", key: "nntrym" }],
  ["path", { d: "M3 11v-1a4 4 0 0 1 4-4h14", key: "84bu3i" }],
  ["path", { d: "m7 22-4-4 4-4", key: "1wqhfi" }],
  ["path", { d: "M21 13v1a4 4 0 0 1-4 4H3", key: "1rx37r" }]
]);
/**
 * @license lucide-react v0.447.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
const Search$1 = createLucideIcon("Search", [
  ["circle", { cx: "11", cy: "11", r: "8", key: "4ej97u" }],
  ["path", { d: "m21 21-4.3-4.3", key: "1qie3q" }]
]);
/**
 * @license lucide-react v0.447.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
const Strikethrough = createLucideIcon("Strikethrough", [
  ["path", { d: "M16 4H9a3 3 0 0 0-2.83 4", key: "43sutm" }],
  ["path", { d: "M14 12a4 4 0 0 1 0 8H6", key: "nlfj13" }],
  ["line", { x1: "4", x2: "20", y1: "12", y2: "12", key: "1e0a9i" }]
]);
/**
 * @license lucide-react v0.447.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
const Undo2 = createLucideIcon("Undo2", [
  ["path", { d: "M9 14 4 9l5-5", key: "102s5s" }],
  ["path", { d: "M4 9h10.5a5.5 5.5 0 0 1 5.5 5.5a5.5 5.5 0 0 1-5.5 5.5H11", key: "f3b9sd" }]
]);
function useMediaQuery(query) {
  const subscribe2 = reactExports.useCallback(
    (callback) => {
      const matchMedia = window.matchMedia(query);
      matchMedia.addEventListener("change", callback);
      return () => {
        matchMedia.removeEventListener("change", callback);
      };
    },
    [query]
  );
  const getSnapshot = () => {
    return window.matchMedia(query).matches;
  };
  const getServerSnapshot = () => {
    throw Error("useMediaQuery is a client-only hook");
  };
  return reactExports.useSyncExternalStore(subscribe2, getSnapshot, getServerSnapshot);
}
const language2iso = {
  "czech": "cz",
  "english": "gb",
  "german": "de",
  "slovak": "sk",
  "polish": "pl",
  "spanish": "uy",
  "romanian": "ro",
  "finnish": "fi",
  "estonian": "ee",
  "french": "fr",
  "italian": "it",
  "portuguese": "br",
  "icelandic": "is",
  "all": "un",
  "other": "un"
};
function convert2flag(language) {
  language = language.toLowerCase();
  if (language in language2iso) {
    return "https://flagcdn.com/" + language2iso[language] + ".svg";
  } else if (language === "russian") {
    return "https://upload.wikimedia.org/wikipedia/commons/thumb/6/6b/Flag_of_Mordor.svg/800px-Flag_of_Mordor.svg.png";
  } else {
    return /* @__PURE__ */ jsxRuntimeExports.jsx(FlagOff, {});
  }
}
function LanguageFlag({ language }) {
  return /* @__PURE__ */ jsxRuntimeExports.jsx(avatar_default, { alt: language, className: "w-6 h-6 shadow-black", src: convert2flag(language) });
}
function languageChoices(languages, selectedLanguage, setSelectedLanguage) {
  function capitalizeFirstLetter(str2) {
    if (!str2) return "";
    const firstCodePoint = str2.codePointAt(0);
    const index = firstCodePoint > 65535 ? 2 : 1;
    return String.fromCodePoint(firstCodePoint).toUpperCase() + str2.slice(index);
  }
  let language_choices = Object.keys(languages).map((language) => ({ text: capitalizeFirstLetter(language), value: language }));
  language_choices.unshift({ text: "All", value: "all" });
  return language_choices.map((choice) => /* @__PURE__ */ jsxRuntimeExports.jsx(menu_item_base_default, { closeOnSelect: false, startContent: /* @__PURE__ */ jsxRuntimeExports.jsx(LanguageFlag, { language: choice.text }), endContent: selectedLanguage === choice.value ? /* @__PURE__ */ jsxRuntimeExports.jsx(Check, {}) : "", onClick: () => setSelectedLanguage(choice.value), children: choice.text }, choice.value));
}
function LanguageFilter({ languages, selectedLanguage, setSelectedLanguage, iconOnly }) {
  return /* @__PURE__ */ jsxRuntimeExports.jsxs(dropdown_default, { children: [
    /* @__PURE__ */ jsxRuntimeExports.jsx(dropdown_trigger_default, { children: /* @__PURE__ */ jsxRuntimeExports.jsx(
      button_default,
      {
        color: "primary",
        variant: selectedLanguage == "all" ? "ghost" : "solid",
        startContent: iconOnly ? "" : /* @__PURE__ */ jsxRuntimeExports.jsx(Languages, {}),
        isIconOnly: !iconOnly,
        disableAnimation: true,
        children: iconOnly ? "Languages" : ""
      }
    ) }),
    /* @__PURE__ */ jsxRuntimeExports.jsx(dropdown_menu_default, { "aria-label": "Language Choices", children: languageChoices(languages, selectedLanguage, setSelectedLanguage) })
  ] });
}
function LanguageFilterDropdownSection(languages, selectedLanguage, setSelectedLanguage) {
  return /* @__PURE__ */ jsxRuntimeExports.jsx(menu_section_base_default, { title: "Select languages", children: languageChoices(languages, selectedLanguage, setSelectedLanguage) });
}
function VocalRangeSlider({ maxRange, vocalRange, setVocalRange }) {
  return /* @__PURE__ */ jsxRuntimeExports.jsx(
    slider_default,
    {
      label: "Semitones",
      step: 1,
      minValue: 0,
      maxValue: maxRange,
      defaultValue: vocalRange === "all" ? [0, maxRange] : vocalRange,
      formatOptions: { style: "decimal" },
      className: "max-w-md",
      onChangeEnd: (value) => {
        setVocalRange(value);
      }
    }
  );
}
function VocalRangeFilter({ maxRange, vocalRange, setVocalRange, iconOnly }) {
  return /* @__PURE__ */ jsxRuntimeExports.jsxs(dropdown_default, { children: [
    /* @__PURE__ */ jsxRuntimeExports.jsx(dropdown_trigger_default, { children: /* @__PURE__ */ jsxRuntimeExports.jsx(
      button_default,
      {
        variant: vocalRange === "all" ? "ghost" : "solid",
        color: "primary",
        disableAnimation: true,
        startContent: iconOnly ? "" : /* @__PURE__ */ jsxRuntimeExports.jsx(Music, {}),
        isIconOnly: !iconOnly,
        children: iconOnly ? "Range" : ""
      }
    ) }),
    /* @__PURE__ */ jsxRuntimeExports.jsxs(dropdown_menu_default, { "aria-label": "Vocal range filter slider", children: [
      /* @__PURE__ */ jsxRuntimeExports.jsx(menu_item_base_default, { closeOnSelect: false, children: /* @__PURE__ */ jsxRuntimeExports.jsx(VocalRangeSlider, { maxRange, vocalRange, setVocalRange }) }, "slider"),
      /* @__PURE__ */ jsxRuntimeExports.jsx(menu_item_base_default, { onClick: () => setVocalRange("all"), children: "Reset" }, "reset")
    ] })
  ] });
}
function VocalRangeDropdownSection(maxRange, vocalRange, setVocalRange) {
  return /* @__PURE__ */ jsxRuntimeExports.jsxs(menu_section_base_default, { showDivider: true, title: "Select song range", children: [
    /* @__PURE__ */ jsxRuntimeExports.jsx(menu_item_base_default, { closeOnSelect: false, children: /* @__PURE__ */ jsxRuntimeExports.jsx(VocalRangeSlider, { maxRange, vocalRange, setVocalRange: (range) => setVocalRange(range) }) }, "slider"),
    /* @__PURE__ */ jsxRuntimeExports.jsx(menu_item_base_default, { onClick: () => setVocalRange("all"), children: "Reset" }, "reset")
  ] });
}
function FilterButtons({ languages, filterSettings, setFilterSettings, maxRange }) {
  const iconOnly = useMediaQuery(
    "only screen and (min-width : 1000px)"
  );
  return /* @__PURE__ */ jsxRuntimeExports.jsxs(button_group_default, { children: [
    /* @__PURE__ */ jsxRuntimeExports.jsx(
      button_default,
      {
        isIconOnly: true,
        color: "primary",
        variant: "bordered",
        "data-hover": false,
        disableAnimation: true,
        disableRipple: true,
        children: /* @__PURE__ */ jsxRuntimeExports.jsx(Filter, { className: "stroke-gray-400" })
      }
    ),
    /* @__PURE__ */ jsxRuntimeExports.jsx(LanguageFilter, { languages, selectedLanguage: filterSettings.language, setSelectedLanguage: (language) => setFilterSettings({ ...filterSettings, language }), iconOnly }),
    /* @__PURE__ */ jsxRuntimeExports.jsx(button_default, { fullWidth: true, disableAnimation: true, color: "primary", variant: filterSettings.capo ? "solid" : "bordered", onClick: () => {
      setFilterSettings({ ...filterSettings, capo: !filterSettings.capo });
    }, startContent: iconOnly ? "" : /* @__PURE__ */ jsxRuntimeExports.jsx(Handshake, {}), isIconOnly: !iconOnly, children: iconOnly ? "Capo" : "" }),
    /* @__PURE__ */ jsxRuntimeExports.jsx(VocalRangeFilter, { maxRange, vocalRange: filterSettings.vocal_range, setVocalRange: (range) => setFilterSettings({ ...filterSettings, vocal_range: range }), iconOnly })
  ] });
}
function Filtering({ languages, filterSettings, setFilterSettings, maxRange }) {
  const filterActive = filterSettings.language === "all" && filterSettings.vocal_range === "all" && filterSettings.capo;
  const setVocalRange = (range) => setFilterSettings({ ...filterSettings, vocal_range: range });
  const flipCapoSetting = () => setFilterSettings({ ...filterSettings, capo: !filterSettings.capo });
  const setSelectedLanguage = (language) => setFilterSettings({ ...filterSettings, language });
  return /* @__PURE__ */ jsxRuntimeExports.jsxs(jsxRuntimeExports.Fragment, { children: [
    /* @__PURE__ */ jsxRuntimeExports.jsx("div", { className: "hidden lg:flex", children: /* @__PURE__ */ jsxRuntimeExports.jsx(FilterButtons, { languages, filterSettings, setFilterSettings, maxRange }) }),
    /* @__PURE__ */ jsxRuntimeExports.jsx("div", { className: "lg:hidden", children: /* @__PURE__ */ jsxRuntimeExports.jsxs(dropdown_default, { backdrop: "opaque", disableAnimation: true, children: [
      /* @__PURE__ */ jsxRuntimeExports.jsx(dropdown_trigger_default, { children: /* @__PURE__ */ jsxRuntimeExports.jsx(
        button_default,
        {
          variant: filterActive ? "ghost" : "solid",
          color: "primary",
          disableAnimation: true,
          startContent: /* @__PURE__ */ jsxRuntimeExports.jsx(Filter, {}),
          isIconOnly: true
        }
      ) }),
      /* @__PURE__ */ jsxRuntimeExports.jsxs(dropdown_menu_default, { "aria-label": "Filtering", className: "dropdown-scroll no-scrollbar", children: [
        /* @__PURE__ */ jsxRuntimeExports.jsx(menu_section_base_default, { showDivider: true, children: /* @__PURE__ */ jsxRuntimeExports.jsx(menu_item_base_default, { onClick: flipCapoSetting, closeOnSelect: false, endContent: filterSettings.capo ? /* @__PURE__ */ jsxRuntimeExports.jsx(Check, {}) : "", children: "Allow capo" }, "slider") }),
        VocalRangeDropdownSection(maxRange, filterSettings.vocal_range, setVocalRange),
        LanguageFilterDropdownSection(languages, filterSettings.language, setSelectedLanguage)
      ] })
    ] }) })
  ] });
}
function Randomize({ filteredSongs, setSelectedSong }) {
  function selectSong() {
    setSelectedSong(filteredSongs[Math.floor(Math.random() * filteredSongs.length)]);
  }
  return /* @__PURE__ */ jsxRuntimeExports.jsx(button_default, { color: "primary", isIconOnly: true, onClick: selectSong, variant: "ghost", children: /* @__PURE__ */ jsxRuntimeExports.jsx(Dices, {}) });
}
function isArray$4(value) {
  return !Array.isArray ? getTag$2(value) === "[object Array]" : Array.isArray(value);
}
const INFINITY = 1 / 0;
function baseToString(value) {
  if (typeof value == "string") {
    return value;
  }
  let result = value + "";
  return result == "0" && 1 / value == -INFINITY ? "-0" : result;
}
function toString(value) {
  return value == null ? "" : baseToString(value);
}
function isString(value) {
  return typeof value === "string";
}
function isNumber(value) {
  return typeof value === "number";
}
function isBoolean$1(value) {
  return value === true || value === false || isObjectLike$6(value) && getTag$2(value) == "[object Boolean]";
}
function isObject$5(value) {
  return typeof value === "object";
}
function isObjectLike$6(value) {
  return isObject$5(value) && value !== null;
}
function isDefined(value) {
  return value !== void 0 && value !== null;
}
function isBlank(value) {
  return !value.trim().length;
}
function getTag$2(value) {
  return value == null ? value === void 0 ? "[object Undefined]" : "[object Null]" : Object.prototype.toString.call(value);
}
const EXTENDED_SEARCH_UNAVAILABLE = "Extended search is not available";
const INCORRECT_INDEX_TYPE = "Incorrect 'index' type";
const LOGICAL_SEARCH_INVALID_QUERY_FOR_KEY = (key) => `Invalid value for key ${key}`;
const PATTERN_LENGTH_TOO_LARGE = (max) => `Pattern length exceeds max of ${max}.`;
const MISSING_KEY_PROPERTY = (name) => `Missing ${name} property in key`;
const INVALID_KEY_WEIGHT_VALUE = (key) => `Property 'weight' in key '${key}' must be a positive integer`;
const hasOwn = Object.prototype.hasOwnProperty;
class KeyStore {
  constructor(keys2) {
    this._keys = [];
    this._keyMap = {};
    let totalWeight = 0;
    keys2.forEach((key) => {
      let obj = createKey(key);
      this._keys.push(obj);
      this._keyMap[obj.id] = obj;
      totalWeight += obj.weight;
    });
    this._keys.forEach((key) => {
      key.weight /= totalWeight;
    });
  }
  get(keyId) {
    return this._keyMap[keyId];
  }
  keys() {
    return this._keys;
  }
  toJSON() {
    return JSON.stringify(this._keys);
  }
}
function createKey(key) {
  let path = null;
  let id2 = null;
  let src = null;
  let weight = 1;
  let getFn = null;
  if (isString(key) || isArray$4(key)) {
    src = key;
    path = createKeyPath(key);
    id2 = createKeyId(key);
  } else {
    if (!hasOwn.call(key, "name")) {
      throw new Error(MISSING_KEY_PROPERTY("name"));
    }
    const name = key.name;
    src = name;
    if (hasOwn.call(key, "weight")) {
      weight = key.weight;
      if (weight <= 0) {
        throw new Error(INVALID_KEY_WEIGHT_VALUE(name));
      }
    }
    path = createKeyPath(name);
    id2 = createKeyId(name);
    getFn = key.getFn;
  }
  return { path, id: id2, weight, src, getFn };
}
function createKeyPath(key) {
  return isArray$4(key) ? key : key.split(".");
}
function createKeyId(key) {
  return isArray$4(key) ? key.join(".") : key;
}
function get(obj, path) {
  let list = [];
  let arr = false;
  const deepGet = (obj2, path2, index) => {
    if (!isDefined(obj2)) {
      return;
    }
    if (!path2[index]) {
      list.push(obj2);
    } else {
      let key = path2[index];
      const value = obj2[key];
      if (!isDefined(value)) {
        return;
      }
      if (index === path2.length - 1 && (isString(value) || isNumber(value) || isBoolean$1(value))) {
        list.push(toString(value));
      } else if (isArray$4(value)) {
        arr = true;
        for (let i = 0, len = value.length; i < len; i += 1) {
          deepGet(value[i], path2, index + 1);
        }
      } else if (path2.length) {
        deepGet(value, path2, index + 1);
      }
    }
  };
  deepGet(obj, isString(path) ? path.split(".") : path, 0);
  return arr ? list : list[0];
}
const MatchOptions = {
  // Whether the matches should be included in the result set. When `true`, each record in the result
  // set will include the indices of the matched characters.
  // These can consequently be used for highlighting purposes.
  includeMatches: false,
  // When `true`, the matching function will continue to the end of a search pattern even if
  // a perfect match has already been located in the string.
  findAllMatches: false,
  // Minimum number of characters that must be matched before a result is considered a match
  minMatchCharLength: 1
};
const BasicOptions = {
  // When `true`, the algorithm continues searching to the end of the input even if a perfect
  // match is found before the end of the same input.
  isCaseSensitive: false,
  // When true, the matching function will continue to the end of a search pattern even if
  includeScore: false,
  // List of properties that will be searched. This also supports nested properties.
  keys: [],
  // Whether to sort the result list, by score
  shouldSort: true,
  // Default sort function: sort by ascending score, ascending index
  sortFn: (a2, b) => a2.score === b.score ? a2.idx < b.idx ? -1 : 1 : a2.score < b.score ? -1 : 1
};
const FuzzyOptions = {
  // Approximately where in the text is the pattern expected to be found?
  location: 0,
  // At what point does the match algorithm give up. A threshold of '0.0' requires a perfect match
  // (of both letters and location), a threshold of '1.0' would match anything.
  threshold: 0.6,
  // Determines how close the match must be to the fuzzy location (specified above).
  // An exact letter match which is 'distance' characters away from the fuzzy location
  // would score as a complete mismatch. A distance of '0' requires the match be at
  // the exact location specified, a threshold of '1000' would require a perfect match
  // to be within 800 characters of the fuzzy location to be found using a 0.8 threshold.
  distance: 100
};
const AdvancedOptions = {
  // When `true`, it enables the use of unix-like search commands
  useExtendedSearch: false,
  // The get function to use when fetching an object's properties.
  // The default will search nested paths *ie foo.bar.baz*
  getFn: get,
  // When `true`, search will ignore `location` and `distance`, so it won't matter
  // where in the string the pattern appears.
  // More info: https://fusejs.io/concepts/scoring-theory.html#fuzziness-score
  ignoreLocation: false,
  // When `true`, the calculation for the relevance score (used for sorting) will
  // ignore the field-length norm.
  // More info: https://fusejs.io/concepts/scoring-theory.html#field-length-norm
  ignoreFieldNorm: false,
  // The weight to determine how much field length norm effects scoring.
  fieldNormWeight: 1
};
var Config = {
  ...BasicOptions,
  ...MatchOptions,
  ...FuzzyOptions,
  ...AdvancedOptions
};
const SPACE = /[^ ]+/g;
function norm(weight = 1, mantissa = 3) {
  const cache = /* @__PURE__ */ new Map();
  const m2 = Math.pow(10, mantissa);
  return {
    get(value) {
      const numTokens = value.match(SPACE).length;
      if (cache.has(numTokens)) {
        return cache.get(numTokens);
      }
      const norm2 = 1 / Math.pow(numTokens, 0.5 * weight);
      const n2 = parseFloat(Math.round(norm2 * m2) / m2);
      cache.set(numTokens, n2);
      return n2;
    },
    clear() {
      cache.clear();
    }
  };
}
class FuseIndex {
  constructor({
    getFn = Config.getFn,
    fieldNormWeight = Config.fieldNormWeight
  } = {}) {
    this.norm = norm(fieldNormWeight, 3);
    this.getFn = getFn;
    this.isCreated = false;
    this.setIndexRecords();
  }
  setSources(docs = []) {
    this.docs = docs;
  }
  setIndexRecords(records = []) {
    this.records = records;
  }
  setKeys(keys2 = []) {
    this.keys = keys2;
    this._keysMap = {};
    keys2.forEach((key, idx) => {
      this._keysMap[key.id] = idx;
    });
  }
  create() {
    if (this.isCreated || !this.docs.length) {
      return;
    }
    this.isCreated = true;
    if (isString(this.docs[0])) {
      this.docs.forEach((doc, docIndex) => {
        this._addString(doc, docIndex);
      });
    } else {
      this.docs.forEach((doc, docIndex) => {
        this._addObject(doc, docIndex);
      });
    }
    this.norm.clear();
  }
  // Adds a doc to the end of the index
  add(doc) {
    const idx = this.size();
    if (isString(doc)) {
      this._addString(doc, idx);
    } else {
      this._addObject(doc, idx);
    }
  }
  // Removes the doc at the specified index of the index
  removeAt(idx) {
    this.records.splice(idx, 1);
    for (let i = idx, len = this.size(); i < len; i += 1) {
      this.records[i].i -= 1;
    }
  }
  getValueForItemAtKeyId(item, keyId) {
    return item[this._keysMap[keyId]];
  }
  size() {
    return this.records.length;
  }
  _addString(doc, docIndex) {
    if (!isDefined(doc) || isBlank(doc)) {
      return;
    }
    let record = {
      v: doc,
      i: docIndex,
      n: this.norm.get(doc)
    };
    this.records.push(record);
  }
  _addObject(doc, docIndex) {
    let record = { i: docIndex, $: {} };
    this.keys.forEach((key, keyIndex) => {
      let value = key.getFn ? key.getFn(doc) : this.getFn(doc, key.path);
      if (!isDefined(value)) {
        return;
      }
      if (isArray$4(value)) {
        let subRecords = [];
        const stack = [{ nestedArrIndex: -1, value }];
        while (stack.length) {
          const { nestedArrIndex, value: value2 } = stack.pop();
          if (!isDefined(value2)) {
            continue;
          }
          if (isString(value2) && !isBlank(value2)) {
            let subRecord = {
              v: value2,
              i: nestedArrIndex,
              n: this.norm.get(value2)
            };
            subRecords.push(subRecord);
          } else if (isArray$4(value2)) {
            value2.forEach((item, k2) => {
              stack.push({
                nestedArrIndex: k2,
                value: item
              });
            });
          } else ;
        }
        record.$[keyIndex] = subRecords;
      } else if (isString(value) && !isBlank(value)) {
        let subRecord = {
          v: value,
          n: this.norm.get(value)
        };
        record.$[keyIndex] = subRecord;
      }
    });
    this.records.push(record);
  }
  toJSON() {
    return {
      keys: this.keys,
      records: this.records
    };
  }
}
function createIndex(keys2, docs, { getFn = Config.getFn, fieldNormWeight = Config.fieldNormWeight } = {}) {
  const myIndex = new FuseIndex({ getFn, fieldNormWeight });
  myIndex.setKeys(keys2.map(createKey));
  myIndex.setSources(docs);
  myIndex.create();
  return myIndex;
}
function parseIndex(data, { getFn = Config.getFn, fieldNormWeight = Config.fieldNormWeight } = {}) {
  const { keys: keys2, records } = data;
  const myIndex = new FuseIndex({ getFn, fieldNormWeight });
  myIndex.setKeys(keys2);
  myIndex.setIndexRecords(records);
  return myIndex;
}
function computeScore$1(pattern, {
  errors = 0,
  currentLocation = 0,
  expectedLocation = 0,
  distance = Config.distance,
  ignoreLocation = Config.ignoreLocation
} = {}) {
  const accuracy = errors / pattern.length;
  if (ignoreLocation) {
    return accuracy;
  }
  const proximity = Math.abs(expectedLocation - currentLocation);
  if (!distance) {
    return proximity ? 1 : accuracy;
  }
  return accuracy + proximity / distance;
}
function convertMaskToIndices(matchmask = [], minMatchCharLength = Config.minMatchCharLength) {
  let indices = [];
  let start = -1;
  let end = -1;
  let i = 0;
  for (let len = matchmask.length; i < len; i += 1) {
    let match = matchmask[i];
    if (match && start === -1) {
      start = i;
    } else if (!match && start !== -1) {
      end = i - 1;
      if (end - start + 1 >= minMatchCharLength) {
        indices.push([start, end]);
      }
      start = -1;
    }
  }
  if (matchmask[i - 1] && i - start >= minMatchCharLength) {
    indices.push([start, i - 1]);
  }
  return indices;
}
const MAX_BITS = 32;
function search(text, pattern, patternAlphabet, {
  location: location2 = Config.location,
  distance = Config.distance,
  threshold = Config.threshold,
  findAllMatches = Config.findAllMatches,
  minMatchCharLength = Config.minMatchCharLength,
  includeMatches = Config.includeMatches,
  ignoreLocation = Config.ignoreLocation
} = {}) {
  if (pattern.length > MAX_BITS) {
    throw new Error(PATTERN_LENGTH_TOO_LARGE(MAX_BITS));
  }
  const patternLen = pattern.length;
  const textLen = text.length;
  const expectedLocation = Math.max(0, Math.min(location2, textLen));
  let currentThreshold = threshold;
  let bestLocation = expectedLocation;
  const computeMatches = minMatchCharLength > 1 || includeMatches;
  const matchMask = computeMatches ? Array(textLen) : [];
  let index;
  while ((index = text.indexOf(pattern, bestLocation)) > -1) {
    let score = computeScore$1(pattern, {
      currentLocation: index,
      expectedLocation,
      distance,
      ignoreLocation
    });
    currentThreshold = Math.min(score, currentThreshold);
    bestLocation = index + patternLen;
    if (computeMatches) {
      let i = 0;
      while (i < patternLen) {
        matchMask[index + i] = 1;
        i += 1;
      }
    }
  }
  bestLocation = -1;
  let lastBitArr = [];
  let finalScore = 1;
  let binMax = patternLen + textLen;
  const mask = 1 << patternLen - 1;
  for (let i = 0; i < patternLen; i += 1) {
    let binMin = 0;
    let binMid = binMax;
    while (binMin < binMid) {
      const score2 = computeScore$1(pattern, {
        errors: i,
        currentLocation: expectedLocation + binMid,
        expectedLocation,
        distance,
        ignoreLocation
      });
      if (score2 <= currentThreshold) {
        binMin = binMid;
      } else {
        binMax = binMid;
      }
      binMid = Math.floor((binMax - binMin) / 2 + binMin);
    }
    binMax = binMid;
    let start = Math.max(1, expectedLocation - binMid + 1);
    let finish = findAllMatches ? textLen : Math.min(expectedLocation + binMid, textLen) + patternLen;
    let bitArr = Array(finish + 2);
    bitArr[finish + 1] = (1 << i) - 1;
    for (let j = finish; j >= start; j -= 1) {
      let currentLocation = j - 1;
      let charMatch = patternAlphabet[text.charAt(currentLocation)];
      if (computeMatches) {
        matchMask[currentLocation] = +!!charMatch;
      }
      bitArr[j] = (bitArr[j + 1] << 1 | 1) & charMatch;
      if (i) {
        bitArr[j] |= (lastBitArr[j + 1] | lastBitArr[j]) << 1 | 1 | lastBitArr[j + 1];
      }
      if (bitArr[j] & mask) {
        finalScore = computeScore$1(pattern, {
          errors: i,
          currentLocation,
          expectedLocation,
          distance,
          ignoreLocation
        });
        if (finalScore <= currentThreshold) {
          currentThreshold = finalScore;
          bestLocation = currentLocation;
          if (bestLocation <= expectedLocation) {
            break;
          }
          start = Math.max(1, 2 * expectedLocation - bestLocation);
        }
      }
    }
    const score = computeScore$1(pattern, {
      errors: i + 1,
      currentLocation: expectedLocation,
      expectedLocation,
      distance,
      ignoreLocation
    });
    if (score > currentThreshold) {
      break;
    }
    lastBitArr = bitArr;
  }
  const result = {
    isMatch: bestLocation >= 0,
    // Count exact matches (those with a score of 0) to be "almost" exact
    score: Math.max(1e-3, finalScore)
  };
  if (computeMatches) {
    const indices = convertMaskToIndices(matchMask, minMatchCharLength);
    if (!indices.length) {
      result.isMatch = false;
    } else if (includeMatches) {
      result.indices = indices;
    }
  }
  return result;
}
function createPatternAlphabet(pattern) {
  let mask = {};
  for (let i = 0, len = pattern.length; i < len; i += 1) {
    const char = pattern.charAt(i);
    mask[char] = (mask[char] || 0) | 1 << len - i - 1;
  }
  return mask;
}
class BitapSearch {
  constructor(pattern, {
    location: location2 = Config.location,
    threshold = Config.threshold,
    distance = Config.distance,
    includeMatches = Config.includeMatches,
    findAllMatches = Config.findAllMatches,
    minMatchCharLength = Config.minMatchCharLength,
    isCaseSensitive = Config.isCaseSensitive,
    ignoreLocation = Config.ignoreLocation
  } = {}) {
    this.options = {
      location: location2,
      threshold,
      distance,
      includeMatches,
      findAllMatches,
      minMatchCharLength,
      isCaseSensitive,
      ignoreLocation
    };
    this.pattern = isCaseSensitive ? pattern : pattern.toLowerCase();
    this.chunks = [];
    if (!this.pattern.length) {
      return;
    }
    const addChunk = (pattern2, startIndex) => {
      this.chunks.push({
        pattern: pattern2,
        alphabet: createPatternAlphabet(pattern2),
        startIndex
      });
    };
    const len = this.pattern.length;
    if (len > MAX_BITS) {
      let i = 0;
      const remainder = len % MAX_BITS;
      const end = len - remainder;
      while (i < end) {
        addChunk(this.pattern.substr(i, MAX_BITS), i);
        i += MAX_BITS;
      }
      if (remainder) {
        const startIndex = len - MAX_BITS;
        addChunk(this.pattern.substr(startIndex), startIndex);
      }
    } else {
      addChunk(this.pattern, 0);
    }
  }
  searchIn(text) {
    const { isCaseSensitive, includeMatches } = this.options;
    if (!isCaseSensitive) {
      text = text.toLowerCase();
    }
    if (this.pattern === text) {
      let result2 = {
        isMatch: true,
        score: 0
      };
      if (includeMatches) {
        result2.indices = [[0, text.length - 1]];
      }
      return result2;
    }
    const {
      location: location2,
      distance,
      threshold,
      findAllMatches,
      minMatchCharLength,
      ignoreLocation
    } = this.options;
    let allIndices = [];
    let totalScore = 0;
    let hasMatches = false;
    this.chunks.forEach(({ pattern, alphabet, startIndex }) => {
      const { isMatch, score, indices } = search(text, pattern, alphabet, {
        location: location2 + startIndex,
        distance,
        threshold,
        findAllMatches,
        minMatchCharLength,
        includeMatches,
        ignoreLocation
      });
      if (isMatch) {
        hasMatches = true;
      }
      totalScore += score;
      if (isMatch && indices) {
        allIndices = [...allIndices, ...indices];
      }
    });
    let result = {
      isMatch: hasMatches,
      score: hasMatches ? totalScore / this.chunks.length : 1
    };
    if (hasMatches && includeMatches) {
      result.indices = allIndices;
    }
    return result;
  }
}
class BaseMatch {
  constructor(pattern) {
    this.pattern = pattern;
  }
  static isMultiMatch(pattern) {
    return getMatch(pattern, this.multiRegex);
  }
  static isSingleMatch(pattern) {
    return getMatch(pattern, this.singleRegex);
  }
  search() {
  }
}
function getMatch(pattern, exp) {
  const matches = pattern.match(exp);
  return matches ? matches[1] : null;
}
class ExactMatch extends BaseMatch {
  constructor(pattern) {
    super(pattern);
  }
  static get type() {
    return "exact";
  }
  static get multiRegex() {
    return /^="(.*)"$/;
  }
  static get singleRegex() {
    return /^=(.*)$/;
  }
  search(text) {
    const isMatch = text === this.pattern;
    return {
      isMatch,
      score: isMatch ? 0 : 1,
      indices: [0, this.pattern.length - 1]
    };
  }
}
class InverseExactMatch extends BaseMatch {
  constructor(pattern) {
    super(pattern);
  }
  static get type() {
    return "inverse-exact";
  }
  static get multiRegex() {
    return /^!"(.*)"$/;
  }
  static get singleRegex() {
    return /^!(.*)$/;
  }
  search(text) {
    const index = text.indexOf(this.pattern);
    const isMatch = index === -1;
    return {
      isMatch,
      score: isMatch ? 0 : 1,
      indices: [0, text.length - 1]
    };
  }
}
class PrefixExactMatch extends BaseMatch {
  constructor(pattern) {
    super(pattern);
  }
  static get type() {
    return "prefix-exact";
  }
  static get multiRegex() {
    return /^\^"(.*)"$/;
  }
  static get singleRegex() {
    return /^\^(.*)$/;
  }
  search(text) {
    const isMatch = text.startsWith(this.pattern);
    return {
      isMatch,
      score: isMatch ? 0 : 1,
      indices: [0, this.pattern.length - 1]
    };
  }
}
class InversePrefixExactMatch extends BaseMatch {
  constructor(pattern) {
    super(pattern);
  }
  static get type() {
    return "inverse-prefix-exact";
  }
  static get multiRegex() {
    return /^!\^"(.*)"$/;
  }
  static get singleRegex() {
    return /^!\^(.*)$/;
  }
  search(text) {
    const isMatch = !text.startsWith(this.pattern);
    return {
      isMatch,
      score: isMatch ? 0 : 1,
      indices: [0, text.length - 1]
    };
  }
}
class SuffixExactMatch extends BaseMatch {
  constructor(pattern) {
    super(pattern);
  }
  static get type() {
    return "suffix-exact";
  }
  static get multiRegex() {
    return /^"(.*)"\$$/;
  }
  static get singleRegex() {
    return /^(.*)\$$/;
  }
  search(text) {
    const isMatch = text.endsWith(this.pattern);
    return {
      isMatch,
      score: isMatch ? 0 : 1,
      indices: [text.length - this.pattern.length, text.length - 1]
    };
  }
}
class InverseSuffixExactMatch extends BaseMatch {
  constructor(pattern) {
    super(pattern);
  }
  static get type() {
    return "inverse-suffix-exact";
  }
  static get multiRegex() {
    return /^!"(.*)"\$$/;
  }
  static get singleRegex() {
    return /^!(.*)\$$/;
  }
  search(text) {
    const isMatch = !text.endsWith(this.pattern);
    return {
      isMatch,
      score: isMatch ? 0 : 1,
      indices: [0, text.length - 1]
    };
  }
}
class FuzzyMatch extends BaseMatch {
  constructor(pattern, {
    location: location2 = Config.location,
    threshold = Config.threshold,
    distance = Config.distance,
    includeMatches = Config.includeMatches,
    findAllMatches = Config.findAllMatches,
    minMatchCharLength = Config.minMatchCharLength,
    isCaseSensitive = Config.isCaseSensitive,
    ignoreLocation = Config.ignoreLocation
  } = {}) {
    super(pattern);
    this._bitapSearch = new BitapSearch(pattern, {
      location: location2,
      threshold,
      distance,
      includeMatches,
      findAllMatches,
      minMatchCharLength,
      isCaseSensitive,
      ignoreLocation
    });
  }
  static get type() {
    return "fuzzy";
  }
  static get multiRegex() {
    return /^"(.*)"$/;
  }
  static get singleRegex() {
    return /^(.*)$/;
  }
  search(text) {
    return this._bitapSearch.searchIn(text);
  }
}
class IncludeMatch extends BaseMatch {
  constructor(pattern) {
    super(pattern);
  }
  static get type() {
    return "include";
  }
  static get multiRegex() {
    return /^'"(.*)"$/;
  }
  static get singleRegex() {
    return /^'(.*)$/;
  }
  search(text) {
    let location2 = 0;
    let index;
    const indices = [];
    const patternLen = this.pattern.length;
    while ((index = text.indexOf(this.pattern, location2)) > -1) {
      location2 = index + patternLen;
      indices.push([index, location2 - 1]);
    }
    const isMatch = !!indices.length;
    return {
      isMatch,
      score: isMatch ? 0 : 1,
      indices
    };
  }
}
const searchers = [
  ExactMatch,
  IncludeMatch,
  PrefixExactMatch,
  InversePrefixExactMatch,
  InverseSuffixExactMatch,
  SuffixExactMatch,
  InverseExactMatch,
  FuzzyMatch
];
const searchersLen = searchers.length;
const SPACE_RE = / +(?=(?:[^\"]*\"[^\"]*\")*[^\"]*$)/;
const OR_TOKEN = "|";
function parseQuery(pattern, options = {}) {
  return pattern.split(OR_TOKEN).map((item) => {
    let query = item.trim().split(SPACE_RE).filter((item2) => item2 && !!item2.trim());
    let results = [];
    for (let i = 0, len = query.length; i < len; i += 1) {
      const queryItem = query[i];
      let found = false;
      let idx = -1;
      while (!found && ++idx < searchersLen) {
        const searcher = searchers[idx];
        let token = searcher.isMultiMatch(queryItem);
        if (token) {
          results.push(new searcher(token, options));
          found = true;
        }
      }
      if (found) {
        continue;
      }
      idx = -1;
      while (++idx < searchersLen) {
        const searcher = searchers[idx];
        let token = searcher.isSingleMatch(queryItem);
        if (token) {
          results.push(new searcher(token, options));
          break;
        }
      }
    }
    return results;
  });
}
const MultiMatchSet = /* @__PURE__ */ new Set([FuzzyMatch.type, IncludeMatch.type]);
class ExtendedSearch {
  constructor(pattern, {
    isCaseSensitive = Config.isCaseSensitive,
    includeMatches = Config.includeMatches,
    minMatchCharLength = Config.minMatchCharLength,
    ignoreLocation = Config.ignoreLocation,
    findAllMatches = Config.findAllMatches,
    location: location2 = Config.location,
    threshold = Config.threshold,
    distance = Config.distance
  } = {}) {
    this.query = null;
    this.options = {
      isCaseSensitive,
      includeMatches,
      minMatchCharLength,
      findAllMatches,
      ignoreLocation,
      location: location2,
      threshold,
      distance
    };
    this.pattern = isCaseSensitive ? pattern : pattern.toLowerCase();
    this.query = parseQuery(this.pattern, this.options);
  }
  static condition(_2, options) {
    return options.useExtendedSearch;
  }
  searchIn(text) {
    const query = this.query;
    if (!query) {
      return {
        isMatch: false,
        score: 1
      };
    }
    const { includeMatches, isCaseSensitive } = this.options;
    text = isCaseSensitive ? text : text.toLowerCase();
    let numMatches = 0;
    let allIndices = [];
    let totalScore = 0;
    for (let i = 0, qLen = query.length; i < qLen; i += 1) {
      const searchers2 = query[i];
      allIndices.length = 0;
      numMatches = 0;
      for (let j = 0, pLen = searchers2.length; j < pLen; j += 1) {
        const searcher = searchers2[j];
        const { isMatch, indices, score } = searcher.search(text);
        if (isMatch) {
          numMatches += 1;
          totalScore += score;
          if (includeMatches) {
            const type2 = searcher.constructor.type;
            if (MultiMatchSet.has(type2)) {
              allIndices = [...allIndices, ...indices];
            } else {
              allIndices.push(indices);
            }
          }
        } else {
          totalScore = 0;
          numMatches = 0;
          allIndices.length = 0;
          break;
        }
      }
      if (numMatches) {
        let result = {
          isMatch: true,
          score: totalScore / numMatches
        };
        if (includeMatches) {
          result.indices = allIndices;
        }
        return result;
      }
    }
    return {
      isMatch: false,
      score: 1
    };
  }
}
const registeredSearchers = [];
function register(...args) {
  registeredSearchers.push(...args);
}
function createSearcher(pattern, options) {
  for (let i = 0, len = registeredSearchers.length; i < len; i += 1) {
    let searcherClass = registeredSearchers[i];
    if (searcherClass.condition(pattern, options)) {
      return new searcherClass(pattern, options);
    }
  }
  return new BitapSearch(pattern, options);
}
const LogicalOperator = {
  AND: "$and",
  OR: "$or"
};
const KeyType = {
  PATH: "$path",
  PATTERN: "$val"
};
const isExpression = (query) => !!(query[LogicalOperator.AND] || query[LogicalOperator.OR]);
const isPath = (query) => !!query[KeyType.PATH];
const isLeaf = (query) => !isArray$4(query) && isObject$5(query) && !isExpression(query);
const convertToExplicit = (query) => ({
  [LogicalOperator.AND]: Object.keys(query).map((key) => ({
    [key]: query[key]
  }))
});
function parse(query, options, { auto: auto2 = true } = {}) {
  const next = (query2) => {
    let keys2 = Object.keys(query2);
    const isQueryPath = isPath(query2);
    if (!isQueryPath && keys2.length > 1 && !isExpression(query2)) {
      return next(convertToExplicit(query2));
    }
    if (isLeaf(query2)) {
      const key = isQueryPath ? query2[KeyType.PATH] : keys2[0];
      const pattern = isQueryPath ? query2[KeyType.PATTERN] : query2[key];
      if (!isString(pattern)) {
        throw new Error(LOGICAL_SEARCH_INVALID_QUERY_FOR_KEY(key));
      }
      const obj = {
        keyId: createKeyId(key),
        pattern
      };
      if (auto2) {
        obj.searcher = createSearcher(pattern, options);
      }
      return obj;
    }
    let node = {
      children: [],
      operator: keys2[0]
    };
    keys2.forEach((key) => {
      const value = query2[key];
      if (isArray$4(value)) {
        value.forEach((item) => {
          node.children.push(next(item));
        });
      }
    });
    return node;
  };
  if (!isExpression(query)) {
    query = convertToExplicit(query);
  }
  return next(query);
}
function computeScore(results, { ignoreFieldNorm = Config.ignoreFieldNorm }) {
  results.forEach((result) => {
    let totalScore = 1;
    result.matches.forEach(({ key, norm: norm2, score }) => {
      const weight = key ? key.weight : null;
      totalScore *= Math.pow(
        score === 0 && weight ? Number.EPSILON : score,
        (weight || 1) * (ignoreFieldNorm ? 1 : norm2)
      );
    });
    result.score = totalScore;
  });
}
function transformMatches(result, data) {
  const matches = result.matches;
  data.matches = [];
  if (!isDefined(matches)) {
    return;
  }
  matches.forEach((match) => {
    if (!isDefined(match.indices) || !match.indices.length) {
      return;
    }
    const { indices, value } = match;
    let obj = {
      indices,
      value
    };
    if (match.key) {
      obj.key = match.key.src;
    }
    if (match.idx > -1) {
      obj.refIndex = match.idx;
    }
    data.matches.push(obj);
  });
}
function transformScore(result, data) {
  data.score = result.score;
}
function format(results, docs, {
  includeMatches = Config.includeMatches,
  includeScore = Config.includeScore
} = {}) {
  const transformers = [];
  if (includeMatches) transformers.push(transformMatches);
  if (includeScore) transformers.push(transformScore);
  return results.map((result) => {
    const { idx } = result;
    const data = {
      item: docs[idx],
      refIndex: idx
    };
    if (transformers.length) {
      transformers.forEach((transformer) => {
        transformer(result, data);
      });
    }
    return data;
  });
}
class Fuse {
  constructor(docs, options = {}, index) {
    this.options = { ...Config, ...options };
    if (this.options.useExtendedSearch && false) {
      throw new Error(EXTENDED_SEARCH_UNAVAILABLE);
    }
    this._keyStore = new KeyStore(this.options.keys);
    this.setCollection(docs, index);
  }
  setCollection(docs, index) {
    this._docs = docs;
    if (index && !(index instanceof FuseIndex)) {
      throw new Error(INCORRECT_INDEX_TYPE);
    }
    this._myIndex = index || createIndex(this.options.keys, this._docs, {
      getFn: this.options.getFn,
      fieldNormWeight: this.options.fieldNormWeight
    });
  }
  add(doc) {
    if (!isDefined(doc)) {
      return;
    }
    this._docs.push(doc);
    this._myIndex.add(doc);
  }
  remove(predicate = () => false) {
    const results = [];
    for (let i = 0, len = this._docs.length; i < len; i += 1) {
      const doc = this._docs[i];
      if (predicate(doc, i)) {
        this.removeAt(i);
        i -= 1;
        len -= 1;
        results.push(doc);
      }
    }
    return results;
  }
  removeAt(idx) {
    this._docs.splice(idx, 1);
    this._myIndex.removeAt(idx);
  }
  getIndex() {
    return this._myIndex;
  }
  search(query, { limit = -1 } = {}) {
    const {
      includeMatches,
      includeScore,
      shouldSort,
      sortFn,
      ignoreFieldNorm
    } = this.options;
    let results = isString(query) ? isString(this._docs[0]) ? this._searchStringList(query) : this._searchObjectList(query) : this._searchLogical(query);
    computeScore(results, { ignoreFieldNorm });
    if (shouldSort) {
      results.sort(sortFn);
    }
    if (isNumber(limit) && limit > -1) {
      results = results.slice(0, limit);
    }
    return format(results, this._docs, {
      includeMatches,
      includeScore
    });
  }
  _searchStringList(query) {
    const searcher = createSearcher(query, this.options);
    const { records } = this._myIndex;
    const results = [];
    records.forEach(({ v: text, i: idx, n: norm2 }) => {
      if (!isDefined(text)) {
        return;
      }
      const { isMatch, score, indices } = searcher.searchIn(text);
      if (isMatch) {
        results.push({
          item: text,
          idx,
          matches: [{ score, value: text, norm: norm2, indices }]
        });
      }
    });
    return results;
  }
  _searchLogical(query) {
    const expression = parse(query, this.options);
    const evaluate = (node, item, idx) => {
      if (!node.children) {
        const { keyId, searcher } = node;
        const matches = this._findMatches({
          key: this._keyStore.get(keyId),
          value: this._myIndex.getValueForItemAtKeyId(item, keyId),
          searcher
        });
        if (matches && matches.length) {
          return [
            {
              idx,
              item,
              matches
            }
          ];
        }
        return [];
      }
      const res = [];
      for (let i = 0, len = node.children.length; i < len; i += 1) {
        const child = node.children[i];
        const result = evaluate(child, item, idx);
        if (result.length) {
          res.push(...result);
        } else if (node.operator === LogicalOperator.AND) {
          return [];
        }
      }
      return res;
    };
    const records = this._myIndex.records;
    const resultMap = {};
    const results = [];
    records.forEach(({ $: item, i: idx }) => {
      if (isDefined(item)) {
        let expResults = evaluate(expression, item, idx);
        if (expResults.length) {
          if (!resultMap[idx]) {
            resultMap[idx] = { idx, item, matches: [] };
            results.push(resultMap[idx]);
          }
          expResults.forEach(({ matches }) => {
            resultMap[idx].matches.push(...matches);
          });
        }
      }
    });
    return results;
  }
  _searchObjectList(query) {
    const searcher = createSearcher(query, this.options);
    const { keys: keys2, records } = this._myIndex;
    const results = [];
    records.forEach(({ $: item, i: idx }) => {
      if (!isDefined(item)) {
        return;
      }
      let matches = [];
      keys2.forEach((key, keyIndex) => {
        matches.push(
          ...this._findMatches({
            key,
            value: item[keyIndex],
            searcher
          })
        );
      });
      if (matches.length) {
        results.push({
          idx,
          item,
          matches
        });
      }
    });
    return results;
  }
  _findMatches({ key, value, searcher }) {
    if (!isDefined(value)) {
      return [];
    }
    let matches = [];
    if (isArray$4(value)) {
      value.forEach(({ v: text, i: idx, n: norm2 }) => {
        if (!isDefined(text)) {
          return;
        }
        const { isMatch, score, indices } = searcher.searchIn(text);
        if (isMatch) {
          matches.push({
            score,
            key,
            value: text,
            idx,
            norm: norm2,
            indices
          });
        }
      });
    } else {
      const { v: text, n: norm2 } = value;
      const { isMatch, score, indices } = searcher.searchIn(text);
      if (isMatch) {
        matches.push({ score, key, value: text, norm: norm2, indices });
      }
    }
    return matches;
  }
}
Fuse.version = "7.0.0";
Fuse.createIndex = createIndex;
Fuse.parseIndex = parseIndex;
Fuse.config = Config;
{
  Fuse.parseQuery = parse;
}
{
  register(ExtendedSearch);
}
function Search({ songs, setSearchResults, query, setQuery }) {
  const options = {
    includeScore: true,
    keys: ["artist", "title"],
    ignoreLocation: true,
    threshold: 0.4
  };
  const fuse = new Fuse(songs, options);
  function search2(e) {
    const newQuery = e.target.value;
    setQuery(newQuery);
    if (newQuery != "") {
      const searchResults = fuse.search(newQuery);
      setSearchResults(searchResults.map((r2) => r2.item));
    } else {
      setSearchResults(songs);
    }
  }
  return /* @__PURE__ */ jsxRuntimeExports.jsx(input_default, { className: "w-full sm:max-w", color: query ? "primary" : "bg-primary-500", isClearable: true, onChange: search2, placeholder: "Search", size: "md", startContent: /* @__PURE__ */ jsxRuntimeExports.jsx(Search$1, {}), type: "text" });
}
const month_names = ["January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December"];
function progressColor(range) {
  if (!range) {
    return "default";
  }
  if (range < 12) {
    return "success";
  } else if (range < 18) {
    return "warning";
  } else {
    return "danger";
  }
}
function VocalRangeIndicator({ song, maxRange }) {
  let songRangeSemitones = song.range.semitones;
  return /* @__PURE__ */ jsxRuntimeExports.jsx(circular_progress_default, { "aria-label": "vocal range", color: progressColor(songRangeSemitones), formatOptions: { style: "decimal" }, maxValue: maxRange, showValueLabel: !!songRangeSemitones, size: "md", strokeWidth: 3, value: songRangeSemitones ? songRangeSemitones : maxRange });
}
function SongRow({ song, setSelectedSong, maxRange }) {
  const imageURL = "/domcikuv-zpevnik-v2/songs/illustrations/" + song.chordproFile.split(".")[0] + `/${song.illustration_author}.webp`;
  return /* @__PURE__ */ jsxRuntimeExports.jsx("div", { className: "h-[70px] flex items-center container max-w-2xl mx-auto px-4", children: /* @__PURE__ */ jsxRuntimeExports.jsx(
    "div",
    {
      className: "flex h-14 min-w-72 w-full rounded-full song-row-bg-image",
      style: { backgroundImage: `url(${imageURL})` },
      onClick: () => {
        setSelectedSong(song);
      },
      children: /* @__PURE__ */ jsxRuntimeExports.jsxs("div", { className: "flex relative h-full w-full items-center rounded-full p-1 backdrop-blur-md song-row-bg-image shadow-black row-text-shadow", children: [
        /* @__PURE__ */ jsxRuntimeExports.jsx(avatar_default, { className: "absolute -left-1 top-0 bottom-0 m-auto song-avatar z-10 w-16 h-16 text-large", fallback: /* @__PURE__ */ jsxRuntimeExports.jsx(Instagram, { size: 24 }), showFallback: true, src: imageURL }),
        /* @__PURE__ */ jsxRuntimeExports.jsxs("div", { className: "flex relative h-12 song-row w-full backdrop-blur-lg bg-white/70 hover:bg-white/90 dark:bg-black/70 rounded-full", children: [
          /* @__PURE__ */ jsxRuntimeExports.jsx("div", { className: "flex basis-[12%] min-w-[72px] rounded-l-full content-center justify-center relative" }),
          /* @__PURE__ */ jsxRuntimeExports.jsxs("div", { className: "flex-auto min-w-40 flex-col text-left content-center", children: [
            /* @__PURE__ */ jsxRuntimeExports.jsx("h2", { className: "text-sm font-bold truncate", children: song.title }),
            /* @__PURE__ */ jsxRuntimeExports.jsx("h3", { className: "text-sm opacity-50 truncate", children: song.artist })
          ] }),
          /* @__PURE__ */ jsxRuntimeExports.jsxs("div", { className: "flex basis-1/6 min-w-12 flex-col content-center justify-center hidden sm:flex text-center", children: [
            /* @__PURE__ */ jsxRuntimeExports.jsx("h3", { className: "text-xs opacity-70", children: month_names[song.dateAdded.month - 1] }),
            /* @__PURE__ */ jsxRuntimeExports.jsx("h2", { className: "text-sm opacity-70", children: song.dateAdded.year })
          ] }),
          /* @__PURE__ */ jsxRuntimeExports.jsxs("div", { className: "basis-1/12 text-center content-center justify-center hidden lg:flex flex-col", children: [
            /* @__PURE__ */ jsxRuntimeExports.jsx("h2", { className: "text-xs opacity-70", children: "Capo" }),
            /* @__PURE__ */ jsxRuntimeExports.jsx("h3", { className: "text-sm opacity-70", children: song.capo })
          ] }),
          /* @__PURE__ */ jsxRuntimeExports.jsx("div", { className: "hidden basis-[10%] sm:flex content-center justify-center", children: /* @__PURE__ */ jsxRuntimeExports.jsx("div", { className: "flex items-center", children: /* @__PURE__ */ jsxRuntimeExports.jsx(VocalRangeIndicator, { song, maxRange }) }) }),
          /* @__PURE__ */ jsxRuntimeExports.jsx("div", { className: "flex basis-1/12 min-w-12 items-center justify-end p-2", children: /* @__PURE__ */ jsxRuntimeExports.jsx(LanguageFlag, { language: song.language }) })
        ] })
      ] })
    }
  ) });
}
const letterSortingIcons = {
  ascending: /* @__PURE__ */ jsxRuntimeExports.jsx(ArrowDownAZ, {}),
  descending: /* @__PURE__ */ jsxRuntimeExports.jsx(ArrowDownZA, {})
};
const numberSortingIcons = {
  ascending: /* @__PURE__ */ jsxRuntimeExports.jsx(ArrowDown01, {}),
  descending: /* @__PURE__ */ jsxRuntimeExports.jsx(ArrowDown10, {})
};
const categories = [
  { field: "title", title: "Title", icon: /* @__PURE__ */ jsxRuntimeExports.jsx(AudioLines, {}), sorting_icons: letterSortingIcons },
  { field: "artist", title: "Artist", icon: /* @__PURE__ */ jsxRuntimeExports.jsx(MicVocal, {}), sorting_icons: letterSortingIcons },
  { field: "dateAdded", title: "Date Added", icon: /* @__PURE__ */ jsxRuntimeExports.jsx(CalendarPlus, {}), sorting_icons: numberSortingIcons },
  { field: "range", title: "Range", icon: /* @__PURE__ */ jsxRuntimeExports.jsx(Music, {}), sorting_icons: numberSortingIcons }
];
function isActive(sorting_field, button_field) {
  return sorting_field === button_field;
}
function toggleSortOrder(sort_order) {
  return sort_order === "descending" ? "ascending" : "descending";
}
function activeCategory(sorting_field) {
  return categories.find((cat) => cat.field === sorting_field);
}
function SortButtons({ sortByField, setSortField, sortOrder, setSortOrder }) {
  return /* @__PURE__ */ jsxRuntimeExports.jsxs(button_group_default, { children: [
    categories.map((category) => /* @__PURE__ */ jsxRuntimeExports.jsx(button_default, { color: "primary", variant: isActive(sortByField, category.field) ? "solid" : "ghost", size: "md", className: "max-w-24", onClick: () => {
      setSortField(category.field);
    }, children: category.title }, category.field)),
    /* @__PURE__ */ jsxRuntimeExports.jsx(button_default, { isIconOnly: true, color: "primary", onClick: () => setSortOrder(toggleSortOrder(sortOrder)), children: activeCategory(sortByField).sorting_icons[sortOrder] })
  ] });
}
function SortButtonMobile({ sortByField, setSortField, sortOrder, setSortOrder }) {
  return /* @__PURE__ */ jsxRuntimeExports.jsxs(dropdown_default, { closeOnSelect: false, backdrop: "opaque", disableAnimation: true, children: [
    /* @__PURE__ */ jsxRuntimeExports.jsx(dropdown_trigger_default, { children: /* @__PURE__ */ jsxRuntimeExports.jsx(
      button_default,
      {
        variant: "ghost",
        color: "primary",
        isIconOnly: true,
        children: /* @__PURE__ */ jsxRuntimeExports.jsx(ArrowDownUp, {})
      }
    ) }),
    /* @__PURE__ */ jsxRuntimeExports.jsxs(dropdown_menu_default, { variant: "faded", "aria-label": "Sorting dropdown menu", className: "dropdown-scroll", children: [
      /* @__PURE__ */ jsxRuntimeExports.jsx(menu_section_base_default, { title: "Sorting method", showDivider: true, children: categories.map((category) => /* @__PURE__ */ jsxRuntimeExports.jsx(
        menu_item_base_default,
        {
          startContent: category.icon,
          endContent: isActive(sortByField, category.field) ? /* @__PURE__ */ jsxRuntimeExports.jsx(Check, {}) : "",
          onPress: () => setSortField(category.field),
          children: category.title
        },
        category.field
      )) }),
      /* @__PURE__ */ jsxRuntimeExports.jsxs(menu_section_base_default, { title: "Direction", children: [
        /* @__PURE__ */ jsxRuntimeExports.jsx(
          menu_item_base_default,
          {
            startContent: activeCategory(sortByField).sorting_icons.ascending,
            endContent: sortOrder === "ascending" ? /* @__PURE__ */ jsxRuntimeExports.jsx(Check, {}) : "",
            onPress: () => setSortOrder("ascending"),
            children: "Ascending"
          },
          "ascending_sort"
        ),
        /* @__PURE__ */ jsxRuntimeExports.jsx(
          menu_item_base_default,
          {
            startContent: activeCategory(sortByField).sorting_icons.descending,
            endContent: sortOrder === "descending" ? /* @__PURE__ */ jsxRuntimeExports.jsx(Check, {}) : "",
            onPress: () => setSortOrder("descending"),
            children: "Descending"
          },
          "descending_sort"
        )
      ] })
    ] })
  ] });
}
function Sorting({ sortSettings, setSortSettings }) {
  function setSortField(field) {
    setSortSettings({
      ...sortSettings,
      field
    });
  }
  function setSortOrder(order) {
    setSortSettings({ ...sortSettings, order });
  }
  return /* @__PURE__ */ jsxRuntimeExports.jsxs(jsxRuntimeExports.Fragment, { children: [
    /* @__PURE__ */ jsxRuntimeExports.jsx("div", { className: "max-lg:hidden", children: /* @__PURE__ */ jsxRuntimeExports.jsx(SortButtons, { sortByField: sortSettings.field, setSortField, sortOrder: sortSettings.order, setSortOrder }) }),
    /* @__PURE__ */ jsxRuntimeExports.jsx("div", { className: "lg:hidden", children: /* @__PURE__ */ jsxRuntimeExports.jsx(SortButtonMobile, { sortByField: sortSettings.field, setSortField, sortOrder: sortSettings.order, setSortOrder }) })
  ] });
}
var safeIsNaN = Number.isNaN || function ponyfill2(value) {
  return typeof value === "number" && value !== value;
};
function isEqual$1(first, second) {
  if (first === second) {
    return true;
  }
  if (safeIsNaN(first) && safeIsNaN(second)) {
    return true;
  }
  return false;
}
function areInputsEqual(newInputs, lastInputs) {
  if (newInputs.length !== lastInputs.length) {
    return false;
  }
  for (var i = 0; i < newInputs.length; i++) {
    if (!isEqual$1(newInputs[i], lastInputs[i])) {
      return false;
    }
  }
  return true;
}
function memoizeOne(resultFn, isEqual2) {
  if (isEqual2 === void 0) {
    isEqual2 = areInputsEqual;
  }
  var cache = null;
  function memoized() {
    var newArgs = [];
    for (var _i = 0; _i < arguments.length; _i++) {
      newArgs[_i] = arguments[_i];
    }
    if (cache && cache.lastThis === this && isEqual2(newArgs, cache.lastArgs)) {
      return cache.lastResult;
    }
    var lastResult = resultFn.apply(this, newArgs);
    cache = {
      lastResult,
      lastArgs: newArgs,
      lastThis: this
    };
    return lastResult;
  }
  memoized.clear = function clear() {
    cache = null;
  };
  return memoized;
}
function Gallery() {
  let navigate = useNavigate();
  return /* @__PURE__ */ jsxRuntimeExports.jsx(button_default, { color: "primary", isIconOnly: true, onClick: () => navigate("gallery"), variant: "ghost", children: /* @__PURE__ */ jsxRuntimeExports.jsx(Images, {}) });
}
const SongRowMemo = reactExports.memo(({ data, index, style }) => {
  const { songDB, setSelectedSong, filteredAndSortedSongs } = data;
  if (index < 1) {
    return /* @__PURE__ */ jsxRuntimeExports.jsx("div", { style });
  } else {
    return /* @__PURE__ */ jsxRuntimeExports.jsx("div", { style, children: /* @__PURE__ */ jsxRuntimeExports.jsx(SongRow, { maxRange: songDB.maxRange, setSelectedSong, song: filteredAndSortedSongs[index - 1] }) });
  }
}, areEqual);
const createSongRowData = memoizeOne((filteredAndSortedSongs, songDB, setSelectedSong) => ({
  filteredAndSortedSongs,
  songDB,
  setSelectedSong
}));
const SongList = () => {
  const songDB = useLoaderData();
  const songs = songDB.songs;
  const [searchResults, setSearchResults] = reactExports.useState(songs);
  const [selectedSong, setSelectedSong] = reactExports.useState(null);
  const [query, setQuery] = reactExports.useState("");
  const [sortSettings, setSortSettings] = useLocalStorageState("settings/sortSettings", {
    defaultValue: {
      order: "ascending",
      field: "title"
    }
  });
  const [filterSettings, setFilterSettings] = useLocalStorageState("settings/filterSettings", {
    defaultValue: {
      language: "all",
      vocal_range: "all",
      capo: true
    }
  });
  reactExports.useEffect(
    function removeQuery() {
      setQuery("");
      setSearchResults(songs);
    },
    [sortSettings]
  );
  const filteredAndSortedSongs = reactExports.useMemo(() => {
    let results = filterCapo(searchResults, filterSettings.capo);
    results = filterVocalRange(results, filterSettings.vocal_range);
    results = filterLanguage(results, filterSettings.language);
    if (query === "") {
      results = sortFunc(results, sortSettings.field, sortSettings.order);
    }
    return results;
  }, [sortSettings, filterSettings, searchResults, query]);
  let navigate = useNavigate();
  reactExports.useEffect(
    function showSong() {
      const routeChange = (song) => {
        let path = `song/${song.id}`;
        navigate(path);
      };
      if (selectedSong) {
        console.log(`Selected song: ${selectedSong.artist}: ${selectedSong.title}`);
        routeChange(selectedSong);
      }
    },
    [selectedSong]
  );
  function sortFunc(results, sortByField, sortOrder) {
    const compare = (a2, b) => {
      var _a, _b, _c, _d, _e, _f;
      if (sortByField === "range") {
        const aSemi = ((_a = a2.range) == null ? void 0 : _a.semitones) || -Infinity;
        const bSemi = ((_b = b.range) == null ? void 0 : _b.semitones) || -Infinity;
        return aSemi === bSemi ? a2.title.localeCompare(b.title) : aSemi - bSemi;
      }
      if (sortByField === "dateAdded") {
        const aDate = ((_c = a2.dateAdded) == null ? void 0 : _c.year) * 12 + ((_d = a2.dateAdded) == null ? void 0 : _d.month);
        const bDate = ((_e = b.dateAdded) == null ? void 0 : _e.year) * 12 + ((_f = b.dateAdded) == null ? void 0 : _f.month);
        return aDate === bDate ? a2.title.localeCompare(b.title) : aDate - bDate;
      }
      return a2[sortByField].localeCompare(b[sortByField]);
    };
    const sortedResults = results.slice().sort(compare);
    return sortOrder === "ascending" ? sortedResults : sortedResults.reverse();
  }
  function filterLanguage(songs2, selectedLanguage) {
    if (selectedLanguage != "all") {
      return songs2.filter((song) => song.language === selectedLanguage);
    } else {
      return songs2;
    }
  }
  function filterCapo(songs2, allowCapo) {
    if (allowCapo) {
      return songs2;
    } else {
      return songs2.filter((song) => song.capo == 0);
    }
  }
  function filterVocalRange(songs2, vocalRange) {
    function inRange(x2, min, max) {
      return (x2 - min) * (x2 - max) <= 0;
    }
    if (vocalRange === "all") {
      return songs2;
    } else {
      return songs2.filter((song) => inRange(song.range.semitones, vocalRange[0], vocalRange[1]));
    }
  }
  const [showNavbar, setShowNavbar] = reactExports.useState(true);
  const [initialRenderDone, setInitialRenderDone] = reactExports.useState(false);
  function onScroll({
    scrollDirection,
    scrollOffset: scrollOffset3,
    scrollUpdateWasRequested
  }) {
    sessionStorage.setItem("scrollOffset", scrollOffset3);
    if (!initialRenderDone) {
      setInitialRenderDone(true);
      return;
    }
    if (scrollDirection === "forward") {
      setShowNavbar(false);
    } else if (scrollDirection === "backward") {
      setShowNavbar(true);
    }
  }
  const songRowData = createSongRowData(filteredAndSortedSongs, songDB, setSelectedSong);
  return /* @__PURE__ */ jsxRuntimeExports.jsxs("main", { className: "light text-foreground bg-background h-screen w-screen", children: [
    /* @__PURE__ */ jsxRuntimeExports.jsx(navbar_default, { maxWidth: "2xl", isBordered: true, className: `navbar shadow-black ${showNavbar ? "visible-navbar" : "hidden-navbar"}`, children: /* @__PURE__ */ jsxRuntimeExports.jsxs(navbar_content_default, { as: "div", justify: "center", className: "sm:flex gap-2  sm:gap-4 w-full", children: [
      /* @__PURE__ */ jsxRuntimeExports.jsx(navbar_item_default, { className: "", children: /* @__PURE__ */ jsxRuntimeExports.jsx(Sorting, { sortSettings, setSortSettings }) }),
      /* @__PURE__ */ jsxRuntimeExports.jsx(navbar_item_default, { isActive: true, className: "w-full", children: /* @__PURE__ */ jsxRuntimeExports.jsx(Search, { songs, setSearchResults, query, setQuery }) }),
      /* @__PURE__ */ jsxRuntimeExports.jsxs(navbar_item_default, { className: "flex flex-row gap-1 sm:gap-4 flex-nowrap", children: [
        /* @__PURE__ */ jsxRuntimeExports.jsx(Filtering, { languages: songDB.languages, filterSettings, setFilterSettings, maxRange: songDB.maxRange }),
        /* @__PURE__ */ jsxRuntimeExports.jsx(Randomize, { filteredSongs: songs, setSelectedSong }),
        /* @__PURE__ */ jsxRuntimeExports.jsx(Gallery, {})
      ] })
    ] }) }),
    /* @__PURE__ */ jsxRuntimeExports.jsx("div", { className: "flex h-full w-full no-scrollbar", children: /* @__PURE__ */ jsxRuntimeExports.jsx(AutoSizer, { children: ({ height, width }) => /* @__PURE__ */ jsxRuntimeExports.jsx(FixedSizeList, { height, itemCount: filteredAndSortedSongs.length + 1, itemSize: 70, width, onScroll, itemData: songRowData, itemKey: (index) => index > 1 ? filteredAndSortedSongs[index - 1].id : "blank" + index, overscanCount: 30, initialScrollOffset: parseInt(sessionStorage.getItem("scrollOffset") || "0", 10), children: SongRowMemo }) }) })
  ] });
};
function ErrorPage() {
  const error = useRouteError();
  console.error(error);
  return /* @__PURE__ */ jsxRuntimeExports.jsx("div", { className: "text-center flex h-screen", id: "error-page", children: /* @__PURE__ */ jsxRuntimeExports.jsxs("div", { className: "m-auto", children: [
    /* @__PURE__ */ jsxRuntimeExports.jsx("h1", { className: "text-3xl font-bold", children: "Sorryjako!" }),
    /* @__PURE__ */ jsxRuntimeExports.jsx("p", { children: "An unexpected error has occurred." }),
    /* @__PURE__ */ jsxRuntimeExports.jsx("p", { children: /* @__PURE__ */ jsxRuntimeExports.jsx("i", { children: error.statusText || error.message }) })
  ] }) });
}
var __defProp2 = Object.defineProperty;
var __getOwnPropSymbols = Object.getOwnPropertySymbols;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __propIsEnum = Object.prototype.propertyIsEnumerable;
var __defNormalProp2 = (obj, key, value) => key in obj ? __defProp2(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;
var __spreadValues = (a2, b) => {
  for (var prop in b || (b = {}))
    if (__hasOwnProp.call(b, prop))
      __defNormalProp2(a2, prop, b[prop]);
  if (__getOwnPropSymbols)
    for (var prop of __getOwnPropSymbols(b)) {
      if (__propIsEnum.call(b, prop))
        __defNormalProp2(a2, prop, b[prop]);
    }
  return a2;
};
var __objRest = (source, exclude) => {
  var target = {};
  for (var prop in source)
    if (__hasOwnProp.call(source, prop) && exclude.indexOf(prop) < 0)
      target[prop] = source[prop];
  if (source != null && __getOwnPropSymbols)
    for (var prop of __getOwnPropSymbols(source)) {
      if (exclude.indexOf(prop) < 0 && __propIsEnum.call(source, prop))
        target[prop] = source[prop];
    }
  return target;
};
function throttleAnimationFrame(func) {
  let wait = false;
  return () => {
    if (!wait) {
      wait = true;
      requestAnimationFrame(() => {
        func();
        wait = false;
      });
    }
  };
}
var antiOverflowAlgo = ({
  fontSizePx,
  minFontSizePx: minFontSizePx2,
  fontSizePrecisionPx,
  updateFontSizePx,
  breakPredicate: breakPred
}) => {
  const maxIterCount = Math.ceil(1 / fontSizePrecisionPx);
  let iterCount = 0;
  while (fontSizePx > minFontSizePx2 && iterCount < maxIterCount) {
    if (breakPred())
      break;
    fontSizePx = updateFontSizePx(fontSizePx - fontSizePrecisionPx);
    iterCount++;
  }
};
var getContentWidth = (element) => {
  const computedStyle = getComputedStyle(element);
  return element.clientWidth - parseFloat(computedStyle.paddingLeft) - parseFloat(computedStyle.paddingRight);
};
var getContentHeight = (element) => {
  const computedStyle = getComputedStyle(element);
  return element.clientHeight - parseFloat(computedStyle.paddingTop) - parseFloat(computedStyle.paddingBottom);
};
var multilineAlgo = (opts) => {
  opts.innerEl.style.whiteSpace = "nowrap";
  onelineAlgo(opts);
  if (opts.innerEl.scrollWidth > getContentWidth(opts.containerEl)) {
    opts.innerEl.style.whiteSpace = "normal";
  }
};
var onelineAlgo = ({
  innerEl,
  containerEl,
  fontSizePx,
  minFontSizePx: minFontSizePx2,
  maxFontSizePx: maxFontSizePx2,
  fontSizePrecisionPx,
  updateFontSizePx
}) => {
  const maxIterCount = 10;
  let iterCount = 0;
  let prevOverflowFactor = 1;
  while (iterCount < maxIterCount) {
    const w0 = innerEl.scrollWidth;
    const w1 = getContentWidth(containerEl);
    const canGrow = fontSizePx < maxFontSizePx2 && w0 < w1;
    const canShrink = fontSizePx > minFontSizePx2 && w0 > w1;
    const overflowFactor = w0 / w1;
    if (prevOverflowFactor === overflowFactor) {
      break;
    }
    if (!(canGrow || canShrink)) {
      break;
    }
    const updatePx = fontSizePx / overflowFactor - fontSizePx;
    const prevFontSizePx = fontSizePx;
    fontSizePx = updateFontSizePx(fontSizePx + updatePx);
    if (Math.abs(fontSizePx - prevFontSizePx) <= fontSizePrecisionPx) {
      break;
    }
    prevOverflowFactor = overflowFactor;
    iterCount++;
  }
  antiOverflowAlgo({
    fontSizePx,
    minFontSizePx: minFontSizePx2,
    updateFontSizePx,
    fontSizePrecisionPx,
    breakPredicate: () => innerEl.scrollWidth <= getContentWidth(containerEl)
  });
};
var boxAlgo = ({
  innerEl,
  containerEl,
  fontSizePx,
  minFontSizePx: minFontSizePx2,
  maxFontSizePx: maxFontSizePx2,
  fontSizePrecisionPx,
  updateFontSizePx
}) => {
  const maxIterCount = 100;
  fontSizePx = updateFontSizePx((maxFontSizePx2 - minFontSizePx2) * 0.5);
  let updatePx = (maxFontSizePx2 - minFontSizePx2) * 0.25;
  let iterCount = 0;
  while (updatePx > fontSizePrecisionPx && iterCount < maxIterCount) {
    const w0 = innerEl.scrollWidth;
    const w1 = getContentWidth(containerEl);
    const h0 = innerEl.scrollHeight;
    const h1 = getContentHeight(containerEl);
    if (w0 === w1 && h0 === h1)
      break;
    if (fontSizePx < maxFontSizePx2 && w0 <= w1 && h0 <= h1) {
      fontSizePx = updateFontSizePx(fontSizePx + updatePx);
    } else if (fontSizePx > minFontSizePx2 && (w0 > w1 || h0 > h1)) {
      fontSizePx = updateFontSizePx(fontSizePx - updatePx);
    }
    updatePx *= 0.5;
    iterCount++;
  }
  antiOverflowAlgo({
    fontSizePx,
    minFontSizePx: minFontSizePx2,
    updateFontSizePx,
    fontSizePrecisionPx,
    breakPredicate: () => innerEl.scrollWidth <= getContentWidth(containerEl) && innerEl.scrollHeight <= getContentHeight(containerEl)
  });
};
function updateTextSize({
  innerEl,
  containerEl,
  mode = "multiline",
  minFontSizePx: minFontSizePx2 = 8,
  maxFontSizePx: maxFontSizePx2 = 160,
  fontSizePrecisionPx = 0.1
}) {
  performance.now();
  if (!isFinite(minFontSizePx2)) {
    throw new Error(`Invalid minFontSizePx (${minFontSizePx2})`);
  }
  if (!isFinite(minFontSizePx2)) {
    throw new Error(`Invalid maxFontSizePx (${maxFontSizePx2})`);
  }
  if (!isFinite(fontSizePrecisionPx) || fontSizePrecisionPx === 0) {
    throw new Error(`Invalid fontSizePrecisionPx (${fontSizePrecisionPx})`);
  }
  if (containerEl.children.length > 1) {
    console.warn(
      `AutoTextSize has ${containerEl.children.length - 1} siblings. This may interfere with the algorithm.`
    );
  }
  const containerStyles = {
    // Necessary to correctly compute the dimensions `innerEl`.
    display: "flex",
    alignItems: "start"
  };
  const innerStyles = {
    display: "block"
    // Necessary to compute dimensions.
  };
  if (mode === "oneline") {
    innerStyles.whiteSpace = "nowrap";
  } else if (mode === "multiline") {
    innerStyles.wordBreak = "break-word";
  } else if (mode === "box") {
    innerStyles.whiteSpace = "pre-wrap";
    innerStyles.wordBreak = "break-word";
  } else if (mode === "boxoneline") {
    innerStyles.whiteSpace = "nowrap";
  }
  Object.assign(containerEl.style, containerStyles);
  Object.assign(innerEl.style, innerStyles);
  const fontSizeStr = window.getComputedStyle(innerEl, null).getPropertyValue("font-size");
  let fontSizePx = parseFloat(fontSizeStr);
  const updateFontSizePx = (px2) => {
    px2 = Math.min(Math.max(px2, minFontSizePx2), maxFontSizePx2);
    fontSizePx = px2;
    innerEl.style.fontSize = `${fontSizePx}px`;
    return fontSizePx;
  };
  if (fontSizePx > maxFontSizePx2 || fontSizePx < minFontSizePx2) {
    updateFontSizePx(fontSizePx);
  }
  const algoOpts = {
    innerEl,
    containerEl,
    fontSizePx,
    minFontSizePx: minFontSizePx2,
    maxFontSizePx: maxFontSizePx2,
    fontSizePrecisionPx,
    updateFontSizePx
  };
  if (mode === "oneline") {
    onelineAlgo(algoOpts);
  } else if (mode === "multiline") {
    multilineAlgo(algoOpts);
  } else if (mode === "box") {
    boxAlgo(algoOpts);
  } else if (mode === "boxoneline") {
    boxAlgo(algoOpts);
  }
}
function autoTextSize({
  innerEl,
  containerEl,
  mode,
  minFontSizePx: minFontSizePx2,
  maxFontSizePx: maxFontSizePx2,
  fontSizePrecisionPx
}) {
  let containerDimensions = void 0;
  const throttledUpdateTextSize = throttleAnimationFrame(() => {
    updateTextSize({
      innerEl,
      containerEl,
      mode,
      maxFontSizePx: maxFontSizePx2,
      minFontSizePx: minFontSizePx2,
      fontSizePrecisionPx
    });
    containerDimensions = [
      getContentWidth(containerEl),
      getContentHeight(containerEl)
    ];
  });
  const resizeObserver = new ResizeObserver(() => {
    const prevContainerDimensions = containerDimensions;
    containerDimensions = [
      getContentWidth(containerEl),
      getContentHeight(containerEl)
    ];
    if ((prevContainerDimensions == null ? void 0 : prevContainerDimensions[0]) !== containerDimensions[0] || (prevContainerDimensions == null ? void 0 : prevContainerDimensions[1]) !== containerDimensions[1]) {
      throttledUpdateTextSize();
    }
  });
  resizeObserver.observe(containerEl);
  throttledUpdateTextSize.disconnect = () => resizeObserver.disconnect();
  return throttledUpdateTextSize;
}
function AutoTextSize(_a) {
  var _b = _a, {
    mode,
    minFontSizePx: minFontSizePx2,
    maxFontSizePx: maxFontSizePx2,
    fontSizePrecisionPx,
    as: Comp = "div",
    children
  } = _b, rest = __objRest(_b, [
    "mode",
    "minFontSizePx",
    "maxFontSizePx",
    "fontSizePrecisionPx",
    "as",
    // TODO: The `...rest` props are not typed to reflect another `as`.
    "children"
  ]);
  const updateTextSizeRef = reactExports.useRef();
  reactExports.useEffect(() => {
    var _a2;
    return (_a2 = updateTextSizeRef.current) == null ? void 0 : _a2.call(updateTextSizeRef);
  }, [children]);
  const refCallback = reactExports.useCallback(
    (innerEl) => {
      var _a2;
      (_a2 = updateTextSizeRef.current) == null ? void 0 : _a2.disconnect();
      const containerEl = innerEl == null ? void 0 : innerEl.parentElement;
      if (!innerEl || !containerEl)
        return;
      updateTextSizeRef.current = autoTextSize({
        innerEl,
        containerEl,
        mode,
        minFontSizePx: minFontSizePx2,
        maxFontSizePx: maxFontSizePx2,
        fontSizePrecisionPx
      });
    },
    [mode, minFontSizePx2, maxFontSizePx2, fontSizePrecisionPx]
  );
  return /* @__PURE__ */ React$1.createElement(Comp, __spreadValues({ ref: refCallback }, rest), children);
}
const minFontSizePx = 4;
const maxFontSizePx = 160;
const fontSizeLimits = (fontSize) => Math.min(Math.max(minFontSizePx, fontSize), maxFontSizePx);
function FontSizeSettings({ fontSize, setFontSize, fitScreenMode, setfitScreenMode }) {
  const fontSizeStep = 1.1;
  return /* @__PURE__ */ jsxRuntimeExports.jsxs(jsxRuntimeExports.Fragment, { children: [
    /* @__PURE__ */ jsxRuntimeExports.jsx("div", { className: "hidden sm:flex", children: /* @__PURE__ */ jsxRuntimeExports.jsxs(button_group_default, { children: [
      /* @__PURE__ */ jsxRuntimeExports.jsx(button_default, { color: "primary", isIconOnly: true, onClick: () => {
        setfitScreenMode("none");
        setFontSize(fontSizeLimits(fontSize / fontSizeStep));
      }, variant: "ghost", children: /* @__PURE__ */ jsxRuntimeExports.jsx(AArrowDown, {}) }),
      /* @__PURE__ */ jsxRuntimeExports.jsx(button_default, { color: "primary", isIconOnly: true, id: "fitXYButton", "aria-label": "fitXY", onClick: () => {
        setfitScreenMode("XY");
      }, variant: fitScreenMode === "XY" ? "solid" : "ghost", children: /* @__PURE__ */ jsxRuntimeExports.jsx(MoveDiagonal, {}) }),
      /* @__PURE__ */ jsxRuntimeExports.jsx(button_default, { color: "primary", isIconOnly: true, id: "fitXButton", "aria-label": "fitX", onClick: () => {
        setfitScreenMode("X");
      }, variant: fitScreenMode === "X" ? "solid" : "ghost", children: /* @__PURE__ */ jsxRuntimeExports.jsx(MoveHorizontal, {}) }),
      /* @__PURE__ */ jsxRuntimeExports.jsx(button_default, { color: "primary", isIconOnly: true, onClick: () => {
        setfitScreenMode("none");
        setFontSize(fontSizeLimits(fontSize * fontSizeStep));
      }, variant: "ghost", children: /* @__PURE__ */ jsxRuntimeExports.jsx(AArrowUp, {}) })
    ] }) }),
    /* @__PURE__ */ jsxRuntimeExports.jsx("div", { className: "flex sm:hidden", children: /* @__PURE__ */ jsxRuntimeExports.jsxs(dropdown_default, { closeOnSelect: false, disableAnimation: true, children: [
      /* @__PURE__ */ jsxRuntimeExports.jsx(dropdown_trigger_default, { children: /* @__PURE__ */ jsxRuntimeExports.jsx(
        button_default,
        {
          variant: "ghost",
          color: "primary",
          isIconOnly: true,
          id: "font_size_settings",
          children: /* @__PURE__ */ jsxRuntimeExports.jsx(CaseSensitive, {})
        }
      ) }),
      /* @__PURE__ */ jsxRuntimeExports.jsxs(dropdown_menu_default, { "aria-label": "Change font size", children: [
        /* @__PURE__ */ jsxRuntimeExports.jsx(menu_item_base_default, { startContent: /* @__PURE__ */ jsxRuntimeExports.jsx(MoveDiagonal, {}), id: "fitXYDropdown", onClick: () => {
          setfitScreenMode("XY");
        }, children: "Fit screen" }, "fitXYDropdown"),
        /* @__PURE__ */ jsxRuntimeExports.jsx(menu_item_base_default, { startContent: /* @__PURE__ */ jsxRuntimeExports.jsx(MoveHorizontal, {}), id: "fitXDropdown", onClick: () => {
          setfitScreenMode("X");
        }, children: "Fit screen width" }, "fitXDropdown"),
        /* @__PURE__ */ jsxRuntimeExports.jsx(menu_item_base_default, { startContent: /* @__PURE__ */ jsxRuntimeExports.jsx(Plus, {}), onClick: () => {
          setfitScreenMode("none");
          setFontSize(fontSizeLimits(fontSize * fontSizeStep));
        }, children: "Increase font size" }, "+"),
        /* @__PURE__ */ jsxRuntimeExports.jsx(menu_item_base_default, { startContent: /* @__PURE__ */ jsxRuntimeExports.jsx(Minus, {}), onClick: () => {
          setfitScreenMode("none");
          setFontSize(fontSizeLimits(fontSize / fontSizeStep));
        }, children: "Decrease font size" }, "-")
      ] })
    ] }) })
  ] });
}
const LoopNoteIcon = () => {
  return /* @__PURE__ */ jsxRuntimeExports.jsx(
    "svg",
    {
      xmlns: "http://www.w3.org/2000/svg",
      width: "24",
      height: "24",
      viewBox: "0 0 531.12134 487.28763",
      fill: "none",
      stroke: "currentColor",
      children: /* @__PURE__ */ jsxRuntimeExports.jsxs(
        "g",
        {
          transform: "matrix(0.1,0,0,-0.1,9.4062996,499.50655)",
          fill: "currentColor",
          stroke: "none",
          id: "g2",
          children: [
            /* @__PURE__ */ jsxRuntimeExports.jsx(
              "path",
              {
                d: "M 2165,4890 C 1859,4864 1586,4788 1303,4649 688,4347 236,3787 70,3120 19,2918 6,2797 6,2560 6,2404 10,2314 23,2230 71,1922 175,1628 323,1381 564,979 896,671 1303,471 c 299,-147 559,-217 900,-242 128,-10 151,-9 171,4 29,19 37,48 22,79 -10,21 -20,24 -111,30 -388,28 -638,91 -925,234 -450,224 -799,574 -1016,1018 -296,609 -296,1323 0,1932 323,662 946,1115 1691,1229 151,24 470,24 620,1 814,-127 1465,-641 1764,-1393 70,-177 124,-401 137,-563 l 6,-85 -169,168 c -93,92 -177,167 -187,167 -22,0 -66,-44 -66,-67 0,-9 104,-122 232,-250 181,-182 238,-233 258,-233 20,0 76,51 258,233 223,224 245,251 224,283 -15,22 -50,34 -74,25 -13,-5 -95,-82 -183,-170 -107,-108 -162,-156 -167,-148 -4,7 -8,28 -8,47 0,61 -29,231 -60,357 -227,909 -998,1606 -1930,1743 -152,22 -390,31 -525,20 z",
                style: { display: "inline", stroke: "currentColor", strokeWidth: 300.126, strokeOpacity: 1 },
                id: "path1"
              }
            ),
            /* @__PURE__ */ jsxRuntimeExports.jsx(
              "path",
              {
                "inkscape:original-d": "M 0,0",
                "inkscape:path-effect": "#path-effect21",
                d: "m 2411,3694 c -453,-156 -830,-289 -838,-295 -20,-17 -16,-50 32,-283 l 45,-217 v -518 -518 l -64,-7 c -223,-23 -387,-171 -388,-351 0,-90 24,-155 84,-220 91,-100 202,-146 348,-146 180,0 326,81 402,223 l 23,43 3,776 2,776 73,27 c 149,53 860,296 869,296 4,0 8,-231 8,-514 v -513 l -68,-6 c -126,-10 -245,-72 -314,-163 -175,-230 4,-531 327,-551 198,-13 370,79 443,235 l 27,57 3,815 3,815 -51,239 c -27,132 -50,243 -50,247 0,18 -34,39 -63,38 -18,0 -403,-129 -856,-285 z",
                id: "path21"
              }
            ),
            /* @__PURE__ */ jsxRuntimeExports.jsx(
              "path",
              {
                d: "m 2411,3694 c -453,-156 -830,-289 -838,-295 -20,-17 -16,-50 32,-283 l 45,-217 v -518 -518 l -64,-7 c -223,-23 -387,-171 -388,-351 0,-90 24,-155 84,-220 91,-100 202,-146 348,-146 180,0 326,81 402,223 l 23,43 3,776 2,776 73,27 c 149,53 860,296 869,296 4,0 8,-231 8,-514 v -513 l -68,-6 c -126,-10 -245,-72 -314,-163 -175,-230 4,-531 327,-551 198,-13 370,79 443,235 l 27,57 3,815 3,815 -51,239 c -27,132 -50,243 -50,247 0,18 -34,39 -63,38 -18,0 -403,-129 -856,-285 z m 819,139 c 0,-5 18,-93 40,-197 l 40,-189 v -649 c 0,-356 -3,-648 -6,-648 -3,0 -19,9 -34,20 -16,12 -54,32 -85,45 l -55,25 v 577 c 0,522 -2,578 -17,595 -9,10 -24,18 -34,18 -10,0 -262,-84 -561,-186 -362,-124 -549,-193 -560,-206 -17,-19 -18,-64 -18,-649 0,-346 -2,-629 -5,-629 -2,0 -25,13 -51,30 -26,16 -62,34 -81,41 l -33,11 v 535 536 l -42,199 c -22,109 -39,201 -35,204 3,3 254,91 559,196 304,104 641,220 748,258 192,67 230,77 230,63 z m -85,-1737 c 104,-47 154,-115 155,-209 1,-203 -305,-310 -512,-178 -144,92 -143,274 2,366 68,43 119,55 210,52 67,-2 98,-9 145,-31 z M 1777,1705 c 173,-79 215,-245 91,-361 -125,-119 -360,-117 -483,3 -136,132 -57,330 152,383 65,16 176,5 240,-25 z",
                id: "path2"
              }
            )
          ]
        }
      )
    }
  );
};
function SpaceSavingSettings({ chordsHidden, setChordsHidden, repeatParts, setRepeatParts, repeatVerseChords, setRepeatVerseChords, twoColumns, settwoColumns }) {
  return /* @__PURE__ */ jsxRuntimeExports.jsxs(jsxRuntimeExports.Fragment, { children: [
    /* @__PURE__ */ jsxRuntimeExports.jsx("div", { className: "hidden xs:flex", children: /* @__PURE__ */ jsxRuntimeExports.jsxs(button_group_default, { children: [
      /* @__PURE__ */ jsxRuntimeExports.jsx(button_default, { color: "primary", isIconOnly: true, onClick: () => {
        setChordsHidden(!chordsHidden);
      }, variant: chordsHidden ? "ghost" : "solid", children: /* @__PURE__ */ jsxRuntimeExports.jsx(Guitar, {}) }),
      /* @__PURE__ */ jsxRuntimeExports.jsx(button_default, { color: "primary", isIconOnly: true, onClick: () => {
        setRepeatParts(!repeatParts);
      }, variant: repeatParts ? "solid" : "ghost", children: /* @__PURE__ */ jsxRuntimeExports.jsx(Repeat, {}) }),
      /* @__PURE__ */ jsxRuntimeExports.jsx(button_default, { color: "primary", isIconOnly: true, onClick: () => {
        setRepeatVerseChords(!repeatVerseChords);
      }, variant: repeatVerseChords ? "solid" : "ghost", children: LoopNoteIcon() }),
      /* @__PURE__ */ jsxRuntimeExports.jsx(button_default, { color: "primary", isIconOnly: true, onClick: () => {
        settwoColumns(!twoColumns);
      }, variant: twoColumns ? "solid" : "ghost", children: /* @__PURE__ */ jsxRuntimeExports.jsx(Columns2, {}) })
    ] }) }),
    /* @__PURE__ */ jsxRuntimeExports.jsx("div", { className: "flex xs:hidden", children: /* @__PURE__ */ jsxRuntimeExports.jsxs(dropdown_default, { closeOnSelect: false, disableAnimation: true, children: [
      /* @__PURE__ */ jsxRuntimeExports.jsx(dropdown_trigger_default, { children: /* @__PURE__ */ jsxRuntimeExports.jsx(
        button_default,
        {
          variant: "ghost",
          color: "primary",
          isIconOnly: true,
          children: /* @__PURE__ */ jsxRuntimeExports.jsx(Strikethrough, {})
        }
      ) }),
      /* @__PURE__ */ jsxRuntimeExports.jsxs(dropdown_menu_default, { "aria-label": "Change font size", children: [
        /* @__PURE__ */ jsxRuntimeExports.jsx(menu_item_base_default, { startContent: /* @__PURE__ */ jsxRuntimeExports.jsx(Guitar, {}), onClick: () => {
          setChordsHidden(!chordsHidden);
        }, endContent: chordsHidden ? /* @__PURE__ */ jsxRuntimeExports.jsx(Check, {}) : "", children: "Hide chords" }, "hide_chords"),
        /* @__PURE__ */ jsxRuntimeExports.jsx(menu_item_base_default, { startContent: /* @__PURE__ */ jsxRuntimeExports.jsx(Repeat, {}), onClick: () => {
          setRepeatParts(!repeatParts);
        }, endContent: !repeatParts ? /* @__PURE__ */ jsxRuntimeExports.jsx(Check, {}) : "", children: "Hide repeated parts" }, "hide_repeat_parts"),
        /* @__PURE__ */ jsxRuntimeExports.jsx(menu_item_base_default, { startContent: LoopNoteIcon(), onClick: () => {
          setRepeatVerseChords(!repeatVerseChords);
        }, endContent: !repeatVerseChords ? /* @__PURE__ */ jsxRuntimeExports.jsx(Check, {}) : "", children: "Hide chords in repeated parts" }, "hide_repeated_chords"),
        /* @__PURE__ */ jsxRuntimeExports.jsx(menu_item_base_default, { startContent: /* @__PURE__ */ jsxRuntimeExports.jsx(Columns2, {}), onClick: () => {
          settwoColumns(!twoColumns);
        }, endContent: !twoColumns ? /* @__PURE__ */ jsxRuntimeExports.jsx(Check, {}) : "", children: "Show in two columns" }, "show_two_columns")
      ] })
    ] }) })
  ] });
}
const renderKeys = ["C", "C#", "D", "Es", "E", "F", "F#", "G", "As", "A", "B", "H"];
const german2English = {
  "C": "C",
  "C#": "C#",
  "D": "D",
  "Es": "Eb",
  "E": "E",
  "F": "F",
  "F#": "F#",
  "G": "G",
  "As": "Ab",
  "A": "A",
  "B": "Bb",
  "H": "B"
};
const english2German = {
  "C": "C",
  "C#": "C#",
  "D": "D",
  "Eb": "Es",
  "E": "E",
  "F": "F",
  "F#": "F#",
  "G": "G",
  "Ab": "As",
  "A": "A",
  "Bb": "B",
  "B": "H"
};
function TransposeButtons({ songRenderKey, setSongRenderKey }) {
  function getKeyIndex(key) {
    return renderKeys.map((x2) => x2.toLowerCase()).indexOf(key.toLowerCase());
  }
  return /* @__PURE__ */ jsxRuntimeExports.jsxs(jsxRuntimeExports.Fragment, { children: [
    /* @__PURE__ */ jsxRuntimeExports.jsx("div", { className: "hidden md:flex", children: /* @__PURE__ */ jsxRuntimeExports.jsx(button_group_default, { children: renderKeys.map((chord) => /* @__PURE__ */ jsxRuntimeExports.jsx(
      button_default,
      {
        className: "w-1/12",
        color: "primary",
        isIconOnly: true,
        name: "transpose_selection",
        onClick: () => {
          setSongRenderKey(german2English[chord]);
        },
        variant: songRenderKey && songRenderKey.toLowerCase() == chord.toLowerCase() ? "solid" : "ghost",
        children: chord
      },
      `transpose_selection_${chord}`
    )) }) }),
    /* @__PURE__ */ jsxRuntimeExports.jsx("div", { className: "md:hidden", children: /* @__PURE__ */ jsxRuntimeExports.jsxs(button_group_default, { children: [
      /* @__PURE__ */ jsxRuntimeExports.jsx(button_default, { color: "primary", isIconOnly: true, onClick: () => setSongRenderKey(german2English[renderKeys[(getKeyIndex(songRenderKey) + 11) % 12]]), variant: "ghost", children: "-" }),
      /* @__PURE__ */ jsxRuntimeExports.jsx(button_default, { color: "primary", isIconOnly: true, onClick: () => setSongRenderKey(german2English[renderKeys[(getKeyIndex(songRenderKey) + 1) % 12]]), variant: "ghost", children: "+" })
    ] }) })
  ] });
}
function TransposeSettings({ songRenderKey, setSongRenderKey }) {
  const safeSongRenderKey = english2German[songRenderKey == null ? void 0 : songRenderKey.replace("m", "")].toLowerCase();
  return /* @__PURE__ */ jsxRuntimeExports.jsxs(jsxRuntimeExports.Fragment, { children: [
    /* @__PURE__ */ jsxRuntimeExports.jsx("div", { className: "hidden lg:flex", children: /* @__PURE__ */ jsxRuntimeExports.jsx(button_group_default, { children: renderKeys.map((chord) => /* @__PURE__ */ jsxRuntimeExports.jsx(
      button_default,
      {
        className: "w-1/12",
        color: "primary",
        isIconOnly: true,
        name: "transpose_selection",
        onClick: () => {
          setSongRenderKey(german2English[chord]);
        },
        variant: safeSongRenderKey && safeSongRenderKey == chord.toLowerCase() ? "solid" : "ghost",
        children: chord
      },
      `transpose_selection_${chord}`
    )) }) }),
    /* @__PURE__ */ jsxRuntimeExports.jsx("div", { className: "lg:hidden", children: /* @__PURE__ */ jsxRuntimeExports.jsxs(dropdown_default, { closeOnSelect: false, disableAnimation: true, children: [
      /* @__PURE__ */ jsxRuntimeExports.jsx(dropdown_trigger_default, { children: /* @__PURE__ */ jsxRuntimeExports.jsx(
        button_default,
        {
          variant: "ghost",
          color: "primary",
          isIconOnly: true,
          children: /* @__PURE__ */ jsxRuntimeExports.jsx(ArrowUpDown, {})
        }
      ) }),
      /* @__PURE__ */ jsxRuntimeExports.jsx(dropdown_menu_default, { "aria-label": "Tranpose chords", children: /* @__PURE__ */ jsxRuntimeExports.jsx(menu_item_base_default, { children: /* @__PURE__ */ jsxRuntimeExports.jsx(TransposeButtons, { setSongRenderKey, songRenderKey: safeSongRenderKey }) }) })
    ] }) })
  ] });
}
var chordprojectParser_bundle = { exports: {} };
(function(module, exports) {
  !function(t2, e) {
    module.exports = e();
  }(self, function() {
    return (() => {
      var t2, e, s, a2, r2, i, n2, o = { d: (t3, e2) => {
        for (var s2 in e2) o.o(e2, s2) && !o.o(t3, s2) && Object.defineProperty(t3, s2, { enumerable: true, get: e2[s2] });
      }, o: (t3, e2) => Object.prototype.hasOwnProperty.call(t3, e2), r: (t3) => {
        "undefined" != typeof Symbol && Symbol.toStringTag && Object.defineProperty(t3, Symbol.toStringTag, { value: "Module" }), Object.defineProperty(t3, "__esModule", { value: true });
      } }, l2 = {};
      o.r(l2), o.d(l2, { Chord: () => T2, ChordDiagram: () => R2, ChordLyricsPair: () => C2, ChordProFormatter: () => W2, ChordProParser: () => w2, FormatterSettings: () => P2, HtmlFormatter: () => U2, Key: () => _2, MusicAccidental: () => s, MusicLetter: () => e, MusicNote: () => g2, ParserWarning: () => O2, Song: () => v2, TextFormatter: () => j, TimeSignature: () => M2, Transposer: () => k2 }), function(t3) {
        t3.Lyrics = "lyrics", t3.Comment = "comment", t3.Empty = "empty", t3.Custom = "custom", t3.Tabs = "tabs", t3.Unknown = "unknown";
      }(t2 || (t2 = {}));
      class h {
        constructor(e2) {
          this._lineType = t2.Unknown, this._lineType = e2;
        }
        get lineType() {
          return this._lineType;
        }
      }
      class u2 extends h {
        constructor(e2) {
          super(t2.Comment), this._comment = e2;
        }
        clone() {
          return new u2(this._comment);
        }
        get comment() {
          return this._comment;
        }
      }
      class c extends h {
        clone() {
          return new c();
        }
        constructor() {
          super(t2.Empty);
        }
      }
      class d extends h {
        constructor(e2 = []) {
          super(t2.Lyrics), this._pairs = [], this._pairs = e2;
        }
        clone() {
          let t3 = [];
          return this._pairs.forEach((e2) => {
            t3.push(e2.clone());
          }), new d(t3);
        }
        get pairs() {
          return this._pairs;
        }
        addPair(t3) {
          this._pairs.push(t3);
        }
      }
      class m2 extends h {
        constructor(e2) {
          super(t2.Tabs), this._value = e2;
        }
        clone() {
          return new m2(this.value);
        }
        get value() {
          return this._value;
        }
      }
      class p2 extends h {
        constructor(e2, s2) {
          super(t2.Custom), this._name = e2, this._value = s2;
        }
        clone() {
          return new p2(this.name, this.value);
        }
        get name() {
          return this._name;
        }
        get value() {
          return this._value;
        }
      }
      class g2 {
        constructor(t3, e2 = s.none) {
          this.letter = t3, this.accidental = e2;
        }
        toString() {
          return this.accidental === s.none ? e[this.letter] : e[this.letter] + s[this.accidental];
        }
        clone() {
          return new g2(this.letter, this.accidental);
        }
        static parse(t3) {
          if (!t3) return;
          const a3 = t3.trim().match(/^(?<letter>[A-G])(?<symbol>(#{1,2}|b{1,2}|x))?$/);
          if (!a3 || !a3.groups) return;
          const r3 = a3.groups.letter, i2 = e[r3];
          if (null == i2) return;
          let n3 = a3.groups.symbol;
          "x" == n3 && (n3 = "##");
          const o2 = s[n3];
          return new g2(i2, o2);
        }
        equals(t3) {
          return !!t3 && t3.toString() === this.toString();
        }
      }
      !function(t3) {
        t3[t3.A = 0] = "A", t3[t3.B = 1] = "B", t3[t3.C = 2] = "C", t3[t3.D = 3] = "D", t3[t3.E = 4] = "E", t3[t3.F = 5] = "F", t3[t3.G = 6] = "G";
      }(e || (e = {})), function(t3) {
        t3[t3.b = 0] = "b", t3[t3.bb = 1] = "bb", t3[t3["#"] = 2] = "#", t3[t3["##"] = 3] = "##", t3[t3.none = 4] = "none";
      }(s || (s = {}));
      class _2 {
        constructor(t3, e2 = a2.Major) {
          this.note = t3, this.mode = e2;
        }
        clone() {
          return new _2(this.note.clone(), this.mode);
        }
        static parse(t3) {
          if (!t3) return;
          const e2 = t3.trim().match(/^(?<note>[A-G](#{1,2}|b{1,2}|x)?)(?<mode>m?)$/);
          if (!e2 || !e2.groups) return;
          const s2 = g2.parse(e2.groups.note);
          if (null == s2) return;
          const r3 = "m" === e2.groups.mode ? a2.Minor : a2.Major;
          return new _2(s2, r3);
        }
        toString() {
          return this.note.toString() + (this.mode == a2.Major ? "" : "m");
        }
        equals(t3) {
          return this.toString() == t3.toString();
        }
      }
      !function(t3) {
        t3[t3.Major = 0] = "Major", t3[t3.Minor = 1] = "Minor";
      }(a2 || (a2 = {}));
      class T2 {
        constructor(t3, e2 = "", s2 = null) {
          this.key = t3, this.type = e2, this.bass = s2;
        }
        clone() {
          var t3;
          return new T2(this.key.clone(), this.type, null === (t3 = this.bass) || void 0 === t3 ? void 0 : t3.clone());
        }
        static parse(t3) {
          if (!t3) return;
          const e2 = (t3 = t3.trim()).match(T2.chordRegex);
          if (!e2 || !e2.groups) return;
          const s2 = e2.groups.note, a3 = _2.parse(s2);
          if (null == a3) return;
          const r3 = e2.groups.type, i2 = e2.groups.bass, n3 = g2.parse(i2);
          return new T2(a3, r3, n3);
        }
        toString(t3 = true, e2 = true) {
          var s2 = this.key.toString();
          return t3 && (s2 += this.type), e2 && this.bass && (s2 += "/" + this.bass.toString()), s2;
        }
        toSimpleString() {
          return this.toString(false, false);
        }
        equals(t3) {
          return !!t3 && t3.toString() === this.toString();
        }
      }
      T2.chordRegex = /^(?<note>[A-G](#{1,2}|b{1,2}|x)?(min|m(?!aj)|-)?)(?<type>(?!\/).*?)?(?:$|(?:\/(?<bass>[A-G](#{1,2}|b{1,2}|x)?)))$/, function(t3) {
        t3.Lyrics = "lyrics", t3.Tabs = "tabs", t3.None = "none";
      }(r2 || (r2 = {}));
      class f2 {
        constructor(t3) {
          this._sectionType = r2.None, this._lines = [], this._sectionType = t3;
        }
        get lines() {
          return this._lines;
        }
        get sectionType() {
          return this._sectionType;
        }
      }
      !function(t3) {
        t3.Chorus = "chorus", t3.Verse = "verse", t3.Bridge = "bridge", t3.Custom = "custom", t3.None = "none";
      }(i || (i = {}));
      class E2 extends f2 {
        constructor(t3) {
          super(r2.Lyrics), this._type = t3;
        }
        get type() {
          return this._type;
        }
        addLine(t3) {
          this._lines.push(t3);
        }
      }
      class b extends E2 {
        constructor(t3, e2, s2 = null) {
          super(t3), this._name = e2, this._value = s2;
        }
        clone() {
          let t3 = new b(this.type, this._name, this._value);
          return this._lines.forEach((e2) => {
            t3.addLine(e2.clone());
          }), t3;
        }
        get name() {
          return this._name;
        }
        get value() {
          return this._value;
        }
      }
      class S2 extends E2 {
        clone() {
          let t3 = new S2();
          return this._lines.forEach((e2) => {
            t3.addLine(e2.clone());
          }), t3;
        }
        constructor() {
          super(i.None);
        }
      }
      class y2 extends f2 {
        constructor(t3 = null) {
          super(r2.Tabs), this._value = null, this._value = t3;
        }
        clone() {
          let t3 = new y2(this._value);
          return this._lines.forEach((e2) => {
            t3.addLine(e2.clone());
          }), t3;
        }
        get value() {
          return this._value;
        }
        addLine(t3) {
          this.lines.push(t3);
        }
      }
      class M2 {
        constructor(t3, e2) {
          this.topNumber = t3, this.bottomNumber = e2;
        }
        toString() {
          return `${this.topNumber.toString()}/${this.bottomNumber.toString()}`;
        }
      }
      class v2 {
        constructor() {
          this.title = null, this.subtitle = null, this.albums = [], this.artists = [], this.composers = [], this.arrangers = [], this.lyricists = [], this.year = null, this.copyright = null, this.key = null, this.capo = 0, this.duration = null, this.time = null, this.tempo = null, this.customMetadatas = [], this.userDiagrams = [], this.rawContent = "", this.sections = [];
        }
        getLyrics() {
          let t3 = [];
          return this.sections.forEach((e2) => {
            e2 instanceof E2 && e2.lines.forEach((e3) => {
              let s2 = "";
              e3 instanceof d && e3.pairs.forEach((t4) => {
                t4.lyrics && (s2 += t4.lyrics);
              }), s2 = s2.trim(), s2 && t3.push(s2);
            });
          }), t3;
        }
        getAllChords() {
          let t3 = [];
          return this.sections.forEach((e2) => {
            e2 instanceof E2 && e2.lines.forEach((e3) => {
              e3 instanceof d && e3.pairs.forEach((e4) => {
                if (e4.hasChord()) {
                  const s2 = e4.chord;
                  t3.push(s2);
                }
              });
            });
          }), t3;
        }
        getUniqueChords() {
          const t3 = this.getAllChords();
          let e2 = [];
          return t3.forEach((t4) => {
            e2.find((e3) => e3.equals(t4)) || e2.push(t4);
          }), e2;
        }
        getPossibleKey() {
          const t3 = this.getAllChords();
          if (0 == t3.length) return;
          const e2 = t3[0].key, s2 = t3[t3.length - 1].key;
          if (e2.equals(s2)) return e2.clone();
          let a3 = [];
          t3.forEach((t4) => {
            let e3 = a3.find((e4) => e4.key.equals(t4.key));
            e3 ? e3.count++ : a3.push({ count: 0, key: t4.key.clone() });
          }), a3.sort((t4, e3) => e3.count - t4.count);
          let r3 = a3[0], i2 = a3.find((t4) => t4.key.equals(e2)).count, n3 = a3.find((t4) => t4.key.equals(s2)).count;
          return r3.count > i2 && r3.count > n3 ? r3.key.clone() : i2 > n3 ? e2.clone() : s2.clone();
        }
        clone() {
          let t3 = new v2();
          return t3.albums = this.albums, t3.arrangers = this.arrangers, t3.artists = this.artists, t3.capo = this.capo, t3.composers = this.composers, t3.copyright = this.copyright, t3.customMetadatas = this.customMetadatas, t3.duration = this.duration, t3.lyricists = this.lyricists, t3.rawContent = this.rawContent, t3.subtitle = this.subtitle, t3.tempo = this.tempo, t3.title = this.title, t3.year = this.year, this.time && (t3.time = new M2(this.time.bottomNumber, this.time.topNumber)), this.key && (t3.key = this.key.clone()), this.userDiagrams.forEach((e2) => {
            t3.userDiagrams.push(e2.clone());
          }), this.sections.forEach((e2) => {
            t3.sections.push(e2.clone());
          }), t3;
        }
      }
      class R2 {
        constructor(t3, e2, s2 = [], a3 = 1) {
          this._chord = t3, this._frets = e2, this._fingers = s2, this._variation = a3;
        }
        get chord() {
          return this._chord;
        }
        get frets() {
          return this._frets;
        }
        get fingers() {
          return this._fingers;
        }
        get variation() {
          return this._variation;
        }
        clone() {
          return new R2(this._chord.clone(), [...this._frets], [...this._fingers], this.variation);
        }
        static parse(t3) {
          var e2, s2;
          const a3 = t3.match(/^\{define: (?<chord>([A-G][#bx]{0,2})(.*?)(?: |(?:\/([A-G][#bx]{0,2})))) *base-fret (?<basefret>[1-9][0-9]?) *frets(?<frets>( [0-9xNn]){6})( *fingers(?<fingers>( [0-5]){6}))?\}$/);
          if (!a3 || a3.length < 1 || !a3.groups) return;
          const r3 = a3.groups.chord, i2 = parseInt(a3.groups.basefret, 10), n3 = null === (e2 = a3.groups.fingers) || void 0 === e2 ? void 0 : e2.trim().split(" ").map(Number), o2 = null === (s2 = a3.groups.frets) || void 0 === s2 ? void 0 : s2.trim().split(" "), l3 = [];
          o2.forEach((t4) => {
            const e3 = parseInt(t4, 10);
            let s3 = isNaN(e3) ? -1 : e3;
            i2 > 1 && s3 > 0 && (s3 += i2 - 1), l3.push(s3);
          });
          const h2 = T2.parse(r3);
          return h2 && l3 && !isNaN(i2) ? new R2(h2, l3, n3) : void 0;
        }
        hasBarre() {
          return this.barre() > 0;
        }
        barre() {
          const t3 = this.frets.filter((t4) => 0 != t4), e2 = this.fingers.filter((t4) => 1 === t4);
          return t3.length < this.frets.length || e2.length <= 1 ? 0 : this.fretsRange()[0];
        }
        fretsRange(t3 = true) {
          const e2 = t3 ? -1 : 0, s2 = this._frets.filter((t4) => t4 > e2);
          return [Math.min(...s2), Math.max(...s2)];
        }
        getRelativeFrets() {
          let t3 = this.fretsRange(false), e2 = t3[0], s2 = t3[1];
          (e2 < 1 || s2 < 4) && (e2 = 1);
          const a3 = -(e2 - 1);
          return [e2, this.tryMovingFrets(a3)[1]];
        }
        tryMovingFrets(t3) {
          return 0 === t3 ? [true, this._frets] : t3 > this.fretsRange()[0] ? [false, this._frets] : [true, this._frets.map((e2) => e2 < 1 ? e2 : e2 + t3)];
        }
      }
      class C2 {
        constructor(t3, e2 = null, s2 = null) {
          this.lyrics = t3, this.chord = e2, this.text = s2;
        }
        clone() {
          var t3;
          return new C2(this.lyrics, null === (t3 = this.chord) || void 0 === t3 ? void 0 : t3.clone(), this.text);
        }
        hasChord() {
          return null !== this.chord;
        }
        hasText() {
          return null !== this.text;
        }
        static parse(t3) {
          const e2 = t3.match(/\[(?<value>.*?)\]/);
          if (!e2 || !e2.groups) return [true, new C2(t3)];
          const s2 = e2.groups.value, a3 = t3.substring(s2.length + 2, t3.length);
          return this.createChordLyricsPair(a3, s2);
        }
        static parseLine(t3) {
          const e2 = [], s2 = /\[(?<value>.*?)\]/g;
          if (!s2.test(t3)) return e2.push([true, new C2(t3)]), e2;
          let a3;
          s2.lastIndex = 0;
          let r3 = 0, i2 = null;
          for (; a3 = s2.exec(t3); ) {
            const n4 = t3.substring(r3, a3.index);
            n4 && e2.push(this.createChordLyricsPair(n4, i2)), i2 = a3.groups.value, r3 = s2.lastIndex;
          }
          const n3 = t3.substring(r3, t3.length);
          return n3 && e2.push(this.createChordLyricsPair(n3, i2)), e2;
        }
        static createChordLyricsPair(t3, e2) {
          let s2 = null, a3 = null;
          (null == e2 ? void 0 : e2.startsWith("*")) ? a3 = e2.substring(1, e2.length) : s2 = e2 ? T2.parse(e2) : null;
          const r3 = new C2(t3, s2, a3), i2 = void 0 !== s2;
          return i2 || (r3.text = e2), [i2, r3];
        }
      }
      class O2 {
        constructor(t3, e2) {
          this._message = t3, this._lineNumber = e2;
        }
        toString() {
          return `Warning: ${this._message} on line ${this._lineNumber}`;
        }
      }
      class N2 {
      }
      N2.ALBUM = "album", N2.ARRANGER = "arranger", N2.ARTIST = "artist", N2.CAPO = "capo", N2.COMMENT = "comment", N2.DEFINE = "define", N2.COMPOSER = "composer", N2.COPYRIGHT = "copyright", N2.DURATION = "duration", N2.END_OF_BRIDGE = "end_of_bridge", N2.END_OF_CHORUS = "end_of_chorus", N2.END_OF_TAB = "end_of_tab", N2.END_OF_VERSE = "end_of_verse", N2.KEY = "key", N2.LYRICIST = "lyricist", N2.START_OF_BRIDGE = "start_of_bridge", N2.START_OF_CHORUS = "start_of_chorus", N2.START_OF_TAB = "start_of_tab", N2.START_OF_VERSE = "start_of_verse", N2.SUBTITLE = "subtitle", N2.TEMPO = "tempo", N2.TIME = "time", N2.TITLE = "title", N2.YEAR = "year", N2.TITLE_SHORT = "t", N2.SUBTITLE_SHORT = "st", N2.COMMENT_SHORT = "c", N2.START_OF_CHORUS_SHORT = "soc", N2.END_OF_CHORUS_SHORT = "eoc", N2.START_OF_VERSE_SHORT = "sov", N2.END_OF_VERSE_SHORT = "eov", N2.START_OF_BRIDGE_SHORT = "sob", N2.END_OF_BRIDGE_SHORT = "eob", N2.START_OF_TAB_SHORT = "sot", N2.END_OF_TAB_SHORT = "eot", N2.META_TAGS = [N2.ALBUM, N2.ARRANGER, N2.ARTIST, N2.CAPO, N2.COMPOSER, N2.COPYRIGHT, N2.DURATION, N2.KEY, N2.LYRICIST, N2.TEMPO, N2.TIME, N2.TITLE, N2.SUBTITLE, N2.YEAR], N2.START_BLOCK_TAGS = [N2.START_OF_BRIDGE, N2.START_OF_CHORUS, N2.START_OF_TAB, N2.START_OF_VERSE], N2.END_BLOCK_TAGS = [N2.END_OF_BRIDGE, N2.END_OF_CHORUS, N2.END_OF_TAB, N2.END_OF_VERSE], function(t3) {
        t3[t3.Metadata = 0] = "Metadata", t3[t3.CustomMetadata = 1] = "CustomMetadata", t3[t3.StartOfBlock = 2] = "StartOfBlock", t3[t3.EndOfBlock = 3] = "EndOfBlock", t3[t3.Comment = 4] = "Comment", t3[t3.Define = 5] = "Define", t3[t3.Custom = 6] = "Custom", t3[t3.None = 7] = "None";
      }(n2 || (n2 = {}));
      class A2 {
        constructor() {
          this._originalName = "", this._value = null, this._type = n2.None;
        }
        get value() {
          return this._value;
        }
        get type() {
          return this._type;
        }
        get shortName() {
          return A2.getShortName(this._originalName);
        }
        get longName() {
          return A2.getLongName(this._originalName);
        }
        static getLongName(t3) {
          if (!t3) return t3;
          const e2 = this.ALIASES.find((e3) => e3.shortName === t3);
          return e2 ? e2.longName : t3;
        }
        static getShortName(t3) {
          if (!t3) return t3;
          const e2 = this.ALIASES.find((e3) => e3.longName === t3);
          return e2 ? e2.shortName : t3;
        }
        static parse(t3) {
          const e2 = t3.trim();
          if (this.CUSTOM_META_TAG_REGEX.test(e2)) {
            let t4 = this.parseRegex(e2, this.CUSTOM_META_TAG_REGEX);
            return t4 && (t4._type = n2.Custom), t4;
          }
          if (this.META_TAG_REGEX.test(e2)) {
            let t4 = this.parseRegex(e2, this.META_TAG_REGEX);
            return t4 && (t4._type = N2.META_TAGS.find((e3) => e3 === t4.longName) ? t4._type = n2.Metadata : t4._type = n2.CustomMetadata), t4;
          }
          if (this.TAG_REGEX.test(e2)) {
            let t4 = this.parseRegex(e2, this.TAG_REGEX);
            if (t4) {
              if (N2.META_TAGS.find((e3) => e3 === t4.longName)) t4._type = n2.Metadata;
              else if (t4.longName.startsWith("start_of_")) t4._type = n2.StartOfBlock;
              else if (t4.longName.startsWith("end_of_")) t4._type = n2.EndOfBlock;
              else if (t4.longName === N2.DEFINE) t4._type = n2.Define;
              else {
                if (t4.longName !== N2.COMMENT) return;
                t4._type = n2.Comment;
              }
              return t4;
            }
          }
        }
        static parseRegex(t3, e2) {
          let s2 = new A2();
          const a3 = t3.trim().match(e2);
          if (a3 && a3.groups) {
            if (!a3.groups.name) return;
            return s2._originalName = a3.groups.name, a3.groups.value && (s2._value = a3.groups.value), s2;
          }
        }
      }
      A2.ALIASES = [{ shortName: N2.TITLE_SHORT, longName: N2.TITLE }, { shortName: N2.SUBTITLE_SHORT, longName: N2.SUBTITLE }, { shortName: N2.COMMENT_SHORT, longName: N2.COMMENT }, { shortName: N2.START_OF_BRIDGE_SHORT, longName: N2.START_OF_BRIDGE }, { shortName: N2.END_OF_BRIDGE_SHORT, longName: N2.END_OF_BRIDGE }, { shortName: N2.START_OF_CHORUS_SHORT, longName: N2.START_OF_CHORUS }, { shortName: N2.END_OF_CHORUS_SHORT, longName: N2.END_OF_CHORUS }, { shortName: N2.START_OF_VERSE_SHORT, longName: N2.START_OF_VERSE }, { shortName: N2.END_OF_VERSE_SHORT, longName: N2.END_OF_VERSE }, { shortName: N2.START_OF_TAB_SHORT, longName: N2.START_OF_TAB }, { shortName: N2.END_OF_TAB_SHORT, longName: N2.END_OF_TAB }], A2.META_TAG_REGEX = /^meta:\s*(?<name>[^:\s]+)(\s*(?<value>.+))?$/, A2.TAG_REGEX = /^(?<name>[^:\s]+)(:?\s*(?<value>.+))?$/, A2.CUSTOM_META_TAG_REGEX = /^(?<name>x_[^:]+)(:?\s*(?<value>.+))?$/;
      class w2 {
        constructor() {
          this._currentLineIndex = 0, this.TAG_REGEX = /\{(?<value>.*)\}/, this.TAB_LINE_REGEX = /^[aA-zZ]\|[^ ]+$/, this.CHORD_REGEX = /\[(.*?)\]/g, this.SPLIT_CHORD_REGEX = /(?=\[.*?\])/g, this._song = new v2(), this._currentSection = new S2(), this._currentSectionTagName = null, this._warnings = [];
        }
        get warnings() {
          return this._warnings;
        }
        parse(t3) {
          if (!t3.trim()) return this.addWarning("The song sheet is empty"), new v2();
          this._song.rawContent = t3;
          const e2 = t3.split(/\r\n|\r|\n/);
          for (; !e2[0].trim(); ) e2.splice(0, 1);
          return e2.forEach((t4) => {
            this.parseLine(t4), this._currentLineIndex++;
          }), this.completeCurrentSection(), this._song.key, this._song;
        }
        parseLine(t3) {
          if (t3 = t3.trim()) if (this.TAG_REGEX.test(t3)) this.parseTag(t3);
          else switch (this._currentSection.sectionType) {
            case r2.Tabs:
              this.parseTabLine(t3);
              break;
            case r2.Lyrics:
              this.parseLyricsLine(t3);
          }
          else this.addLine(new c());
        }
        parseTabLine(t3) {
          this._currentSection instanceof y2 ? (this.TAB_LINE_REGEX.test(t3) || this.addWarning("This tabs line is invalid. It must starts with the string name and a pipe."), this.addLine(new m2(t3))) : this.addWarning("Internal error: wrong section type");
        }
        parseLyricsLine(t3) {
          if (this._currentSection instanceof E2) {
            const e2 = t3.replace(this.CHORD_REGEX, "");
            /[\[\]\{\}]/.test(e2) && this.addWarning("The lyrics line contains invalid characters or unclosed chords.");
            const s2 = t3.split(this.SPLIT_CHORD_REGEX), a3 = [];
            s2.forEach((t4) => {
              const e3 = C2.parse(t4);
              e3[0] || (e3[1].lyrics.trim() ? this.addWarning(`Cannot parse the chord '${e3[1].text}' before the lyrics '${e3[1].lyrics.trim()}'`) : this.addWarning(`Cannot parse the chord '${e3[1].text}'`)), a3.push(e3[1]);
            });
            const r3 = new d(a3);
            this.addLine(r3);
          } else this.addWarning("Internal error: wrong section type");
        }
        parseTag(t3) {
          const e2 = t3.match(this.TAG_REGEX);
          if (!e2 || !e2.groups || !e2.groups.value) return void this.addWarning("Invalid tag.");
          const s2 = A2.parse(e2.groups.value.trim());
          if (s2) switch (s2.type) {
            case n2.Metadata:
              this.parseMetadataTag(s2.longName, s2.value);
              break;
            case n2.Comment:
              this.parseCommentTag(s2.value);
              break;
            case n2.Define:
              this.parseDefineTag(s2.value);
              break;
            case n2.Custom:
              this.parseCustomTag(s2.longName, s2.value);
              break;
            case n2.CustomMetadata:
              this.parseCustomMetadataTag(s2.longName, s2.value);
            case n2.StartOfBlock:
              this.parseStartOfBlockTag(s2.longName, s2.value);
              break;
            case n2.EndOfBlock:
              this.parseEndOfBlockTag(s2.longName);
              break;
            default:
              this.addWarning("Unknown tag type.");
          }
          else this.addWarning("Unknown or mal-formatted tag.");
        }
        parseCommentTag(t3) {
          t3 ? this.addLine(new u2(t3)) : this.addWarning("The comment tag must have a value");
        }
        parseDefineTag(t3) {
          if (!t3) return void this.addWarning("The define tag must have a value");
          const e2 = R2.parse(t3);
          e2 ? this._song.userDiagrams.push(e2) : this.addWarning("The define tag is invalid");
        }
        parseCustomTag(t3, e2) {
          this.addLine(new p2(t3, e2));
        }
        parseStartOfBlockTag(t3, e2) {
          null !== this._currentSectionTagName && this.addWarning(`The section tag ${this._currentSectionTagName} must be closed before starting a new section`), this.completeCurrentSection();
          const s2 = t3.replace("start_of_", "");
          this._currentSectionTagName = s2;
          const a3 = N2.START_BLOCK_TAGS.find((e3) => e3 === t3);
          if (a3) switch (a3) {
            case N2.START_OF_BRIDGE:
              return void (this._currentSection = new b(i.Bridge, s2, e2));
            case N2.START_OF_CHORUS:
              return void (this._currentSection = new b(i.Chorus, s2, e2));
            case N2.START_OF_VERSE:
              return void (this._currentSection = new b(i.Verse, s2, e2));
            case N2.START_OF_TAB:
              return void (this._currentSection = new y2(e2));
          }
          else this._currentSection = new b(i.Custom, s2, e2);
        }
        parseEndOfBlockTag(t3) {
          this._currentSectionTagName ? (t3.replace("end_of_", "") !== this._currentSectionTagName && this.addWarning("The end of section tag does not match the start of section tag."), this.completeCurrentSection()) : this.addWarning("This end of section tag is useless and will be ignore.");
        }
        completeCurrentSection() {
          this._currentSection.lines.length > 0 && this._song.sections.push(this._currentSection), this._currentSection = new S2(), this._currentSectionTagName = null;
        }
        addLine(t3) {
          this._currentSection.sectionType !== r2.Tabs || t3 instanceof m2 ? this._currentSection.addLine(t3) : this.addWarning("Tabs section can only contains tabs lines");
        }
        parseMetadataTag(t3, e2) {
          if (e2 && e2.trim()) switch (t3) {
            case N2.ALBUM:
              this._song.albums.push(e2);
              break;
            case N2.ARRANGER:
              this._song.arrangers.push(e2);
              break;
            case N2.ARTIST:
              this._song.artists.push(e2);
              break;
            case N2.CAPO:
              this.parseCapoMetadata(e2);
              break;
            case N2.COMPOSER:
              this._song.composers.push(e2);
              break;
            case N2.COPYRIGHT:
              this._song.copyright = e2;
              break;
            case N2.DURATION:
              this.parseDurationMetadata(e2);
              break;
            case N2.KEY:
              this.parseKeyMetadata(e2);
              break;
            case N2.LYRICIST:
              this._song.lyricists.push(e2);
              break;
            case N2.TEMPO:
              this.parseTempoMetadata(e2);
              break;
            case N2.TIME:
              this.parseTimeMetadata(e2);
              break;
            case N2.TITLE:
              this._song.title = e2;
              break;
            case N2.SUBTITLE:
              this._song.subtitle = e2;
              break;
            case N2.YEAR:
              this.parseYearMetadata(e2);
              break;
            default:
              this.addWarning("Unknown metadata tag");
          }
          else this.addWarning("The metadata must have a value");
        }
        parseYearMetadata(t3) {
          const e2 = parseInt(t3, 10);
          isNaN(e2) || 4 != e2.toString().length ? this.addWarning("The year metadata must be a 4 digits number") : this._song.year = e2;
        }
        parseCapoMetadata(t3) {
          const e2 = parseInt(t3, 10);
          isNaN(e2) ? this.addWarning("The capo metadata must be a number") : this._song.capo = e2;
        }
        parseDurationMetadata(t3) {
          const e2 = t3.match(/^((?<time>[0-9]+)|(?<minutes>[0-5]?[0-9]):(?<seconds>[0-5][0-9]))$/);
          if (!e2 || !e2.groups) return void this.addWarning("The duration metadata is invalid. Must be a number or a time (eg: 5:30)");
          if (e2.groups.time) {
            const e3 = parseInt(t3, 10);
            this._song.duration = e3;
          }
          const s2 = e2.groups.minutes, a3 = e2.groups.seconds;
          s2 && a3 ? this._song.duration = 60 * parseInt(s2, 10) + parseInt(a3) : this.addWarning("The duration metadata time format is invalid");
        }
        parseTempoMetadata(t3) {
          const e2 = parseInt(t3, 10);
          isNaN(e2) ? this.addWarning("The tempo metadata must be a number") : this._song.tempo = e2;
        }
        parseKeyMetadata(t3) {
          const e2 = _2.parse(t3);
          e2 ? this._song.key = e2 : this.addWarning("The key metadata is not a valid key");
        }
        parseTimeMetadata(t3) {
          const e2 = t3.match(/^(?<top>[0-9]{1,2})\/(?<bottom>[0-9]{1,2})$/);
          if (!(e2 && e2.groups && e2.groups.top && e2.groups.bottom)) return void this.addWarning("The time metadata is invalid. Must be number/number (eg: 6/8)");
          const s2 = parseInt(e2.groups.top), a3 = parseInt(e2.groups.bottom);
          this._song.time = new M2(s2, a3);
        }
        parseCustomMetadataTag(t3, e2) {
          this._song.customMetadatas.push([t3, e2]);
        }
        addWarning(t3) {
          const e2 = new O2(t3, this._currentLineIndex + 1);
          this._warnings.push(e2);
        }
      }
      class L2 {
        static semiTonesBetween(t3, e2) {
          if (t3.equals(e2)) return 0;
          const s2 = this.notes.find((e3) => e3.letter == t3.letter).value, a3 = this.notes.find((t4) => t4.letter == e2.letter).value, r3 = this.accidentals.find((e3) => e3.accidental == t3.accidental).value, i2 = a3 + this.accidentals.find((t4) => t4.accidental == e2.accidental).value - (s2 + r3);
          return this.positiveMod(i2, 12);
        }
        static letterDiff(t3, e2) {
          if (t3 == e2) return 0;
          const s2 = this.notes.find((e3) => e3.letter == t3).index, a3 = this.notes.find((t4) => t4.letter == e2).index;
          return this.positiveMod(a3 - s2, 7);
        }
        static transpose(t3, e2, s2) {
          if (0 == e2 && 0 == s2) return t3;
          e2 = this.positiveMod(e2, 7), s2 = this.positiveMod(s2, 12);
          let a3 = (this.notes.find((e3) => e3.letter == t3.letter).index + e2) % 7, r3 = this.notes[a3], i2 = this.semiTonesBetween(t3, new g2(r3.letter)), n3 = s2 - i2;
          Math.abs(n3) > 2 && (a3 = n3 < 0 ? this.positiveMod(--a3, 7) : this.positiveMod(++a3, 7), r3 = this.notes[a3], i2 = this.semiTonesBetween(t3, new g2(r3.letter)), n3 = s2 - i2);
          const o2 = this.accidentals.find((t4) => t4.value == n3).accidental;
          return new g2(r3.letter, o2);
        }
        static positiveMod(t3, e2) {
          return (t3 % e2 + e2) % e2;
        }
      }
      L2.notes = [{ letter: e.A, index: 0, value: 0 }, { letter: e.B, index: 1, value: 2 }, { letter: e.C, index: 2, value: 3 }, { letter: e.D, index: 3, value: 5 }, { letter: e.E, index: 4, value: 7 }, { letter: e.F, index: 5, value: 8 }, { letter: e.G, index: 6, value: 10 }], L2.accidentals = [{ accidental: s.none, value: 0 }, { accidental: s["#"], value: 1 }, { accidental: s["##"], value: 2 }, { accidental: s.b, value: -1 }, { accidental: s.bb, value: -2 }];
      class k2 {
        static transpose(t3, e2) {
          let s2 = t3.clone(), a3 = s2.key ? s2.key : s2.getPossibleKey();
          if (!a3) return t3;
          const i2 = L2.letterDiff(a3.note.letter, e2.letter), n3 = L2.semiTonesBetween(a3.note, e2);
          return a3.note = e2, s2.sections.forEach((t4, e3) => {
            t4.sectionType == r2.Lyrics && t4.lines.forEach((t5, a4) => {
              t5 instanceof d && t5.pairs.forEach((t6, r3) => {
                if (t6.chord) {
                  const o2 = L2.transpose(t6.chord.key.note, i2, n3), l3 = t6.chord;
                  if (l3.key.note = o2, t6.chord.bass) {
                    const e4 = L2.transpose(t6.chord.bass, i2, n3);
                    l3.bass = e4;
                  }
                  s2.sections[e3].lines[a4].pairs[r3].chord = l3;
                }
              });
            });
          }), s2;
        }
      }
      class I2 {
        static toMinutesSeconds(t3) {
          const e2 = Math.floor(t3 / 60), s2 = t3 - 60 * e2;
          return `${e2.toLocaleString("en-US", { minimumIntegerDigits: 2, useGrouping: false })}:${s2.toLocaleString("en-US", { minimumIntegerDigits: 2, useGrouping: false })}`;
        }
        static toProperCase(t3) {
          return t3.length < 1 ? t3 : t3.charAt(0).toUpperCase() + t3.substring(1).toLocaleLowerCase();
        }
      }
      class x2 {
        constructor() {
          this.useSimpleChord = false, this.showChords = true;
        }
      }
      class H2 {
        constructor(t3 = new x2()) {
          this.settings = t3;
        }
        writeMetadata(t3, e2) {
          return e2 ? `${I2.toProperCase(t3)}: ${e2}` : I2.toProperCase(t3);
        }
        buildMetadataArray(t3, e2, s2) {
          const a3 = t3.length > 1 ? s2 : e2, r3 = t3.join(", ");
          return `${I2.toProperCase(a3)}: ${r3}`;
        }
        titleMetadata(t3) {
          return [t3];
        }
        subtitleMetadata(t3) {
          return [t3];
        }
        artistsMetadata(t3) {
          return [t3.join(", ")];
        }
        composersMetadata(t3) {
          return [this.buildMetadataArray(t3, "Composer", "Composers")];
        }
        lyricistsMetadata(t3) {
          return [this.buildMetadataArray(t3, "Lyricist", "Lyricists")];
        }
        arrangersMetadata(t3) {
          return [this.buildMetadataArray(t3, "Arranger", "Arrangers")];
        }
        yearMetadata(t3) {
          return [this.writeMetadata("Year", t3.toString())];
        }
        copyrightMetadata(t3) {
          return [this.writeMetadata("Copyright", t3)];
        }
        timeMetadata(t3) {
          return [this.writeMetadata("Time", t3)];
        }
        tempoMetadata(t3) {
          return [this.writeMetadata("Tempo", t3.toString())];
        }
        durationMetadata(t3) {
          return [this.writeMetadata("Duration", I2.toMinutesSeconds(t3))];
        }
        capoMetadata(t3) {
          return [this.writeMetadata("Capo", t3.toString())];
        }
        keyMetadata(t3) {
          return [this.writeMetadata("Key", t3)];
        }
        customMetadatas(t3) {
          let e2 = [];
          return t3.forEach((t4) => {
            e2.push(this.writeMetadata(t4[0], t4[1]));
          }), e2;
        }
        emptyLine() {
          return [""];
        }
        lyricsLine(t3) {
          let e2 = "", s2 = "", a3 = [];
          return t3.pairs.forEach((t4) => {
            let a4 = 1;
            if (this.settings.showChords) if (t4.chord) {
              let s3 = this.settings.useSimpleChord ? t4.chord.toSimpleString() : t4.chord.toString();
              e2 += s3, a4 = t4.lyrics.length - s3.length;
            } else t4.text ? (e2 += t4.text, a4 = t4.lyrics.length - t4.text.length) : a4 = t4.lyrics.length;
            a4 > 0 ? (e2 += " ".repeat(a4), s2 += t4.lyrics) : (e2 += " ", s2 += t4.lyrics + " ".repeat(Math.abs(a4) + 1));
          }), e2 = e2.trimEnd(), s2 = s2.trimEnd(), e2 && a3.push(e2), s2 && a3.push(s2), a3;
        }
        commentLine(t3) {
          return ["#" + t3.comment];
        }
        tabLine(t3) {
          return [t3.value];
        }
        customLine(t3) {
          return [];
        }
        sectionStart(t3) {
          return (t3 instanceof b || t3 instanceof y2) && t3.value ? [t3.value] : [];
        }
        sectionEnd(t3) {
          return [];
        }
        metadataStart() {
          return ["*".repeat(10)];
        }
        metadataEnd() {
          return ["*".repeat(10)];
        }
        contentStart() {
          return [];
        }
        contentEnd() {
          return [];
        }
      }
      class G2 {
        constructor(t3 = new x2()) {
          this.settings = t3;
        }
        buildMetadata(t3, e2) {
          return e2 ? `{${t3}: ${e2}}` : `{${t3}}`;
        }
        buildMetadatas(t3, e2) {
          let s2 = [];
          return e2.forEach((e3) => {
            s2.push(this.buildMetadata(t3, e3));
          }), s2;
        }
        titleMetadata(t3) {
          return [this.buildMetadata("title", t3)];
        }
        subtitleMetadata(t3) {
          return [this.buildMetadata("subtitle", t3)];
        }
        artistsMetadata(t3) {
          return this.buildMetadatas("artist", t3);
        }
        composersMetadata(t3) {
          return this.buildMetadatas("composer", t3);
        }
        lyricistsMetadata(t3) {
          return this.buildMetadatas("lyricist", t3);
        }
        arrangersMetadata(t3) {
          return this.buildMetadatas("arranger", t3);
        }
        yearMetadata(t3) {
          return [this.buildMetadata("year", t3.toString())];
        }
        copyrightMetadata(t3) {
          return [this.buildMetadata("copyright", t3)];
        }
        timeMetadata(t3) {
          return [this.buildMetadata("time", t3)];
        }
        tempoMetadata(t3) {
          return [this.buildMetadata("tempo", t3.toString())];
        }
        durationMetadata(t3) {
          return [this.buildMetadata("duration", I2.toMinutesSeconds(t3))];
        }
        capoMetadata(t3) {
          return [this.buildMetadata("capo", t3.toString())];
        }
        keyMetadata(t3) {
          return [this.buildMetadata("key", t3)];
        }
        customMetadatas(t3) {
          let e2 = [];
          return t3.forEach((t4) => {
            e2.push(this.buildMetadata(t4[0].toLowerCase(), t4[1]));
          }), e2;
        }
        emptyLine() {
          return [""];
        }
        lyricsLine(t3) {
          let e2 = "";
          return t3.pairs.forEach((t4) => {
            if (this.settings.showChords) if (t4.chord) {
              let s2 = this.settings.useSimpleChord ? t4.chord.toSimpleString() : t4.chord.toString();
              e2 += `[${s2}]${t4.lyrics}`;
            } else t4.text ? e2 += `[*${t4.text}]${t4.lyrics}` : e2 += t4.lyrics;
            else e2 += t4.lyrics;
          }), [e2.trim()];
        }
        commentLine(t3) {
          return [this.buildMetadata("comment", t3.comment)];
        }
        tabLine(t3) {
          return [t3.value];
        }
        customLine(t3) {
          return [this.buildMetadata(t3.name, t3.value)];
        }
        sectionStart(t3) {
          if (t3 instanceof b || t3 instanceof y2) {
            let e2 = t3 instanceof y2 ? "tab" : t3.name;
            return [this.buildMetadata("start_of_" + e2, t3.value)];
          }
          return [];
        }
        sectionEnd(t3) {
          if (t3 instanceof b || t3 instanceof y2) {
            let e2 = t3 instanceof y2 ? "tab" : t3.name;
            return [this.buildMetadata("end_of_" + e2, null)];
          }
          return [];
        }
        metadataStart() {
          return [];
        }
        metadataEnd() {
          return [];
        }
        contentStart() {
          return [];
        }
        contentEnd() {
          return [];
        }
      }
      class D2 {
        constructor(t3) {
          this.value = t3;
        }
        toStringLines() {
          return [this.value];
        }
      }
      class B2 {
        constructor(t3, e2, ...s2) {
          this.classNames = [], this.innerHtml = [], this.tag = t3, this.innerHtml = s2, this.classNames = e2;
        }
        toStringLines() {
          const t3 = [];
          return t3.push(`<${this.tag} class="${this.classNames.join(" ")}">`), this.innerHtml.forEach((e2) => {
            t3.push(...e2.toStringLines());
          }), t3.push(`</${this.tag}>`), t3;
        }
        addElement(...t3) {
          this.innerHtml.push(...t3);
        }
        addString(t3) {
          this.innerHtml.push(new D2(t3));
        }
      }
      class F2 {
        constructor(t3 = new x2()) {
          this.settings = t3;
        }
        buildHtmlElement(t3, e2, s2 = []) {
          return `<${t3} class="${s2.join(" ")}">${e2}</${t3}>`;
        }
        titleMetadata(t3) {
          return [this.buildHtmlElement("h1", t3, ["metadata", "title-metadata"])];
        }
        subtitleMetadata(t3) {
          return [this.buildHtmlElement("h2", t3, ["metadata", "subtitle-metadata"])];
        }
        artistsMetadata(t3) {
          return [this.buildHtmlElement("h3", t3.join(", "), ["metadata", "artist-metadata"])];
        }
        composersMetadata(t3) {
          const e2 = t3.length > 1 ? "Composers" : "Composer";
          return [this.buildHtmlElement("div", e2 + ": " + t3.join(", "), ["metadata", "composer-metadata"])];
        }
        lyricistsMetadata(t3) {
          const e2 = t3.length > 1 ? "Lyricists" : "Lyricist";
          return [this.buildHtmlElement("div", e2 + ": " + t3.join(", "), ["metadata", "lyricist-metadata"])];
        }
        arrangersMetadata(t3) {
          const e2 = t3.length > 1 ? "Arrangers" : "Arranger";
          return [this.buildHtmlElement("div", e2 + ": " + t3.join(", "), ["metadata", "arranger-metadata"])];
        }
        yearMetadata(t3) {
          return [this.buildHtmlElement("div", "Year: " + t3, ["metadata", "year-metadata"])];
        }
        copyrightMetadata(t3) {
          return [this.buildHtmlElement("div", "Copyright: " + t3, ["metadata", "copyright-metadata"])];
        }
        timeMetadata(t3) {
          return [this.buildHtmlElement("div", "Time: " + t3, ["metadata", "time-metadata"])];
        }
        tempoMetadata(t3) {
          return [this.buildHtmlElement("div", "Tempo: " + t3, ["metadata", "tempo-metadata"])];
        }
        durationMetadata(t3) {
          return [this.buildHtmlElement("div", "Duration: " + I2.toMinutesSeconds(t3), ["metadata", "duration-metadata"])];
        }
        capoMetadata(t3) {
          return [this.buildHtmlElement("div", "Capo: " + t3, ["metadata", "capo-metadata"])];
        }
        keyMetadata(t3) {
          return [this.buildHtmlElement("div", "Key: " + t3, ["metadata", "key-metadata"])];
        }
        customMetadatas(t3) {
          let e2 = [];
          const s2 = ["metadata", "custom-metadata"];
          return t3.forEach((t4) => {
            e2.push(this.buildHtmlElement("div", I2.toProperCase(t4[0]) + ": " + t4[1], s2));
          }), e2;
        }
        emptyLine() {
          return [this.buildHtmlElement("div", "", ["line", "empty-line"])];
        }
        createWordElement(...t3) {
          return t3.map((t4) => t4.toStringLines()).join("").trim() ? new B2("div", ["word"], ...t3) : new D2("");
        }
        createChordElement(t3, e2) {
          let s2 = ["above-lyrics"];
          e2 ? s2.push("chord") : s2.push("annotation");
          let a3 = new B2("span", s2);
          return a3.addString(t3), a3;
        }
        createLyricsElement(t3) {
          let e2 = new B2("span", ["lyrics"]);
          return e2.addString(t3), e2;
        }
        createChordLyricsElement(t3, e2, s2) {
          if (!this.settings.showChords && "&nbsp;" == s2) return new D2("");
          let a3 = new B2("div", ["chord-lyrics"]);
          return this.settings.showChords && a3.addElement(this.createChordElement(t3, e2)), s2 && a3.addElement(this.createLyricsElement(s2)), a3;
        }
        lyricsLine(t3) {
          let e2 = t3.pairs.map((t4) => t4.lyrics).join("").trim();
          if (!this.settings.showChords && !e2) return [];
          let s2 = new B2("div", ["lyrics-line"]), a3 = [];
          if (t3.pairs.forEach((r3, i2) => {
            let n3 = null != r3.chord || null != r3.text, o2 = null != r3.chord, l3 = "";
            r3.chord ? l3 = this.settings.useSimpleChord ? r3.chord.toSimpleString() : r3.chord.toString() : r3.text && (l3 = r3.text);
            let h2 = n3 ? r3.lyrics : r3.lyrics.trimStart();
            h2 = h2.replace(/ +/g, " ");
            let u3 = h2.split(" "), c2 = u3.shift(), d2 = u3.pop();
            if ("" == c2) {
              if (a3.length > 0) {
                let t4 = this.createWordElement(...a3);
                s2.addElement(t4), a3 = [];
              }
              c2 = "&nbsp;", u3.length > 0 && (c2 += u3.shift());
            }
            e2 || (c2 = void 0);
            var m3 = n3 ? this.createChordLyricsElement(l3, o2, c2) : this.createLyricsElement(c2);
            if (a3.push(m3), null == d2 && i2 < t3.pairs.length - 1) return;
            let p3 = this.createWordElement(...a3);
            s2.addElement(p3), a3 = [], u3.forEach((t4) => {
              let e3 = this.createLyricsElement(t4), a4 = this.createWordElement(e3);
              s2.addElement(a4);
            }), "" != d2 && null != d2 && (a3.push(this.createLyricsElement(d2)), t3.pairs.length);
          }), a3.length > 0) {
            let t4 = this.createWordElement(...a3);
            s2.addElement(t4), a3 = [];
          }
          return s2.toStringLines();
        }
        commentLine(t3) {
          return [this.buildHtmlElement("div", t3.comment, ["line", "comment-line"])];
        }
        tabLine(t3) {
          return [this.buildHtmlElement("div", t3.value, ["line", "tab-line"])];
        }
        customLine(t3) {
          const e2 = ["metadata", "custom-metadata", t3.name];
          return [this.buildHtmlElement("div", t3.value ? t3.value : "", e2)];
        }
        sectionStart(t3) {
          let e2 = [];
          if (t3 instanceof b || t3 instanceof y2) {
            let s2 = "tab";
            if (t3 instanceof b) switch (t3.type) {
              case i.Chorus:
                s2 = "chorus";
                break;
              case i.Verse:
                s2 = "verse";
                break;
              case i.Bridge:
                s2 = "bridge";
                break;
              case i.Custom:
                s2 = "custom";
            }
            if (e2.push(`<div class="section ${s2}-section">`), t3.value) {
              const s3 = ["section-title"];
              e2.push(this.buildHtmlElement("div", t3.value, s3));
            }
          }
          return e2;
        }
        sectionEnd(t3) {
          return t3 instanceof b || t3 instanceof y2 ? ["</div>"] : [];
        }
        metadataStart() {
          return [`<div class=${["song-metadata"].join(" ")}>`];
        }
        metadataEnd() {
          return ["</div>"];
        }
        contentStart() {
          return [`<div class=${["song-content"].join(" ")}>`];
        }
        contentEnd() {
          return ["</div>"];
        }
      }
      class $ {
        constructor(t3) {
          this._lines = [], this._builder = t3;
        }
        format(t3) {
          return this.settings.showMetadata && this.formatMetadata(t3), this._lines.push(...this._builder.contentStart()), t3.sections.forEach((t4) => {
            (this.settings.showTabs || t4.sectionType != r2.Tabs) && (this._lines.push(...this._builder.sectionStart(t4)), t4.lines.forEach((t5) => {
              t5 instanceof c ? this._lines.push(...this._builder.emptyLine()) : t5 instanceof d ? this._lines.push(...this._builder.lyricsLine(t5)) : t5 instanceof m2 ? this._lines.push(...this._builder.tabLine(t5)) : t5 instanceof u2 && this._lines.push(...this._builder.commentLine(t5));
            }), this._lines.push(...this._builder.sectionEnd(t4)));
          }), this._lines.push(...this._builder.contentEnd()), this._lines;
        }
        formatMetadata(t3) {
          var e2, s2, a3;
          this._lines.push(...this._builder.metadataStart()), (null === (e2 = t3.title) || void 0 === e2 ? void 0 : e2.trim()) && this._lines.push(...this._builder.titleMetadata(t3.title)), (null === (s2 = t3.subtitle) || void 0 === s2 ? void 0 : s2.trim()) && this._lines.push(...this._builder.subtitleMetadata(t3.subtitle)), t3.artists.length > 0 && this._lines.push(...this._builder.artistsMetadata(t3.artists)), t3.composers.length > 0 && this._lines.push(...this._builder.composersMetadata(t3.composers)), t3.lyricists.length > 0 && this._lines.push(...this._builder.lyricistsMetadata(t3.lyricists)), t3.arrangers.length > 0 && this._lines.push(...this._builder.arrangersMetadata(t3.arrangers)), (null === (a3 = t3.copyright) || void 0 === a3 ? void 0 : a3.trim()) && this._lines.push(...this._builder.copyrightMetadata(t3.copyright)), t3.time && this._lines.push(...this._builder.timeMetadata(`${t3.time.topNumber}/${t3.time.bottomNumber}`)), t3.tempo && t3.tempo > 0 && this._lines.push(...this._builder.tempoMetadata(t3.tempo)), t3.year && this._lines.push(...this._builder.yearMetadata(t3.year)), t3.duration && t3.duration > 0 && this._lines.push(...this._builder.durationMetadata(t3.duration)), t3.key && this._lines.push(...this._builder.keyMetadata(t3.key.toString())), t3.capo && t3.capo > 0 && this._lines.push(...this._builder.capoMetadata(t3.capo)), t3.customMetadatas.length > 0 && this._lines.push(...this._builder.customMetadatas(t3.customMetadatas)), this._lines.push(...this._builder.metadataEnd());
        }
      }
      class P2 extends x2 {
        constructor() {
          super(...arguments), this.showMetadata = true, this.showTabs = true;
        }
      }
      class W2 extends $ {
        constructor(t3 = new P2()) {
          super(new G2(t3)), this.settings = t3;
        }
      }
      class U2 extends $ {
        constructor(t3 = new P2()) {
          super(new F2(t3)), this.settings = t3;
        }
      }
      class j extends $ {
        constructor(t3 = new P2()) {
          super(new H2(t3)), this.settings = t3;
        }
      }
      return l2;
    })();
  });
})(chordprojectParser_bundle);
var chordprojectParser_bundleExports = chordprojectParser_bundle.exports;
var chordSymbol = { exports: {} };
(function(module, exports) {
  (function webpackUniversalModuleDefinition(root2, factory) {
    module.exports = factory();
  })(typeof self !== "undefined" ? self : commonjsGlobal, () => {
    return (
      /******/
      (() => {
        var __webpack_modules__ = {
          /***/
          8552: (
            /***/
            (module2, __unused_webpack_exports, __webpack_require__2) => {
              var getNative2 = __webpack_require__2(852), root2 = __webpack_require__2(5639);
              var DataView2 = getNative2(root2, "DataView");
              module2.exports = DataView2;
            }
          ),
          /***/
          1989: (
            /***/
            (module2, __unused_webpack_exports, __webpack_require__2) => {
              var hashClear2 = __webpack_require__2(1789), hashDelete2 = __webpack_require__2(401), hashGet2 = __webpack_require__2(7667), hashHas2 = __webpack_require__2(1327), hashSet2 = __webpack_require__2(1866);
              function Hash2(entries) {
                var index = -1, length = entries == null ? 0 : entries.length;
                this.clear();
                while (++index < length) {
                  var entry = entries[index];
                  this.set(entry[0], entry[1]);
                }
              }
              Hash2.prototype.clear = hashClear2;
              Hash2.prototype["delete"] = hashDelete2;
              Hash2.prototype.get = hashGet2;
              Hash2.prototype.has = hashHas2;
              Hash2.prototype.set = hashSet2;
              module2.exports = Hash2;
            }
          ),
          /***/
          8407: (
            /***/
            (module2, __unused_webpack_exports, __webpack_require__2) => {
              var listCacheClear2 = __webpack_require__2(7040), listCacheDelete2 = __webpack_require__2(4125), listCacheGet2 = __webpack_require__2(2117), listCacheHas2 = __webpack_require__2(7518), listCacheSet2 = __webpack_require__2(4705);
              function ListCache2(entries) {
                var index = -1, length = entries == null ? 0 : entries.length;
                this.clear();
                while (++index < length) {
                  var entry = entries[index];
                  this.set(entry[0], entry[1]);
                }
              }
              ListCache2.prototype.clear = listCacheClear2;
              ListCache2.prototype["delete"] = listCacheDelete2;
              ListCache2.prototype.get = listCacheGet2;
              ListCache2.prototype.has = listCacheHas2;
              ListCache2.prototype.set = listCacheSet2;
              module2.exports = ListCache2;
            }
          ),
          /***/
          7071: (
            /***/
            (module2, __unused_webpack_exports, __webpack_require__2) => {
              var getNative2 = __webpack_require__2(852), root2 = __webpack_require__2(5639);
              var Map2 = getNative2(root2, "Map");
              module2.exports = Map2;
            }
          ),
          /***/
          3369: (
            /***/
            (module2, __unused_webpack_exports, __webpack_require__2) => {
              var mapCacheClear2 = __webpack_require__2(4785), mapCacheDelete2 = __webpack_require__2(1285), mapCacheGet2 = __webpack_require__2(6e3), mapCacheHas2 = __webpack_require__2(9916), mapCacheSet2 = __webpack_require__2(5265);
              function MapCache2(entries) {
                var index = -1, length = entries == null ? 0 : entries.length;
                this.clear();
                while (++index < length) {
                  var entry = entries[index];
                  this.set(entry[0], entry[1]);
                }
              }
              MapCache2.prototype.clear = mapCacheClear2;
              MapCache2.prototype["delete"] = mapCacheDelete2;
              MapCache2.prototype.get = mapCacheGet2;
              MapCache2.prototype.has = mapCacheHas2;
              MapCache2.prototype.set = mapCacheSet2;
              module2.exports = MapCache2;
            }
          ),
          /***/
          3818: (
            /***/
            (module2, __unused_webpack_exports, __webpack_require__2) => {
              var getNative2 = __webpack_require__2(852), root2 = __webpack_require__2(5639);
              var Promise2 = getNative2(root2, "Promise");
              module2.exports = Promise2;
            }
          ),
          /***/
          8525: (
            /***/
            (module2, __unused_webpack_exports, __webpack_require__2) => {
              var getNative2 = __webpack_require__2(852), root2 = __webpack_require__2(5639);
              var Set2 = getNative2(root2, "Set");
              module2.exports = Set2;
            }
          ),
          /***/
          8668: (
            /***/
            (module2, __unused_webpack_exports, __webpack_require__2) => {
              var MapCache2 = __webpack_require__2(3369), setCacheAdd2 = __webpack_require__2(619), setCacheHas2 = __webpack_require__2(2385);
              function SetCache2(values) {
                var index = -1, length = values == null ? 0 : values.length;
                this.__data__ = new MapCache2();
                while (++index < length) {
                  this.add(values[index]);
                }
              }
              SetCache2.prototype.add = SetCache2.prototype.push = setCacheAdd2;
              SetCache2.prototype.has = setCacheHas2;
              module2.exports = SetCache2;
            }
          ),
          /***/
          6384: (
            /***/
            (module2, __unused_webpack_exports, __webpack_require__2) => {
              var ListCache2 = __webpack_require__2(8407), stackClear2 = __webpack_require__2(7465), stackDelete2 = __webpack_require__2(3779), stackGet2 = __webpack_require__2(7599), stackHas2 = __webpack_require__2(4758), stackSet2 = __webpack_require__2(4309);
              function Stack2(entries) {
                var data = this.__data__ = new ListCache2(entries);
                this.size = data.size;
              }
              Stack2.prototype.clear = stackClear2;
              Stack2.prototype["delete"] = stackDelete2;
              Stack2.prototype.get = stackGet2;
              Stack2.prototype.has = stackHas2;
              Stack2.prototype.set = stackSet2;
              module2.exports = Stack2;
            }
          ),
          /***/
          2705: (
            /***/
            (module2, __unused_webpack_exports, __webpack_require__2) => {
              var root2 = __webpack_require__2(5639);
              var Symbol2 = root2.Symbol;
              module2.exports = Symbol2;
            }
          ),
          /***/
          1149: (
            /***/
            (module2, __unused_webpack_exports, __webpack_require__2) => {
              var root2 = __webpack_require__2(5639);
              var Uint8Array2 = root2.Uint8Array;
              module2.exports = Uint8Array2;
            }
          ),
          /***/
          577: (
            /***/
            (module2, __unused_webpack_exports, __webpack_require__2) => {
              var getNative2 = __webpack_require__2(852), root2 = __webpack_require__2(5639);
              var WeakMap2 = getNative2(root2, "WeakMap");
              module2.exports = WeakMap2;
            }
          ),
          /***/
          6874: (
            /***/
            (module2) => {
              function apply(func, thisArg, args) {
                switch (args.length) {
                  case 0:
                    return func.call(thisArg);
                  case 1:
                    return func.call(thisArg, args[0]);
                  case 2:
                    return func.call(thisArg, args[0], args[1]);
                  case 3:
                    return func.call(thisArg, args[0], args[1], args[2]);
                }
                return func.apply(thisArg, args);
              }
              module2.exports = apply;
            }
          ),
          /***/
          7412: (
            /***/
            (module2) => {
              function arrayEach(array, iteratee) {
                var index = -1, length = array == null ? 0 : array.length;
                while (++index < length) {
                  if (iteratee(array[index], index, array) === false) {
                    break;
                  }
                }
                return array;
              }
              module2.exports = arrayEach;
            }
          ),
          /***/
          4963: (
            /***/
            (module2) => {
              function arrayFilter2(array, predicate) {
                var index = -1, length = array == null ? 0 : array.length, resIndex = 0, result = [];
                while (++index < length) {
                  var value = array[index];
                  if (predicate(value, index, array)) {
                    result[resIndex++] = value;
                  }
                }
                return result;
              }
              module2.exports = arrayFilter2;
            }
          ),
          /***/
          7443: (
            /***/
            (module2, __unused_webpack_exports, __webpack_require__2) => {
              var baseIndexOf = __webpack_require__2(2118);
              function arrayIncludes(array, value) {
                var length = array == null ? 0 : array.length;
                return !!length && baseIndexOf(array, value, 0) > -1;
              }
              module2.exports = arrayIncludes;
            }
          ),
          /***/
          1196: (
            /***/
            (module2) => {
              function arrayIncludesWith(array, value, comparator) {
                var index = -1, length = array == null ? 0 : array.length;
                while (++index < length) {
                  if (comparator(value, array[index])) {
                    return true;
                  }
                }
                return false;
              }
              module2.exports = arrayIncludesWith;
            }
          ),
          /***/
          4636: (
            /***/
            (module2, __unused_webpack_exports, __webpack_require__2) => {
              var baseTimes2 = __webpack_require__2(2545), isArguments2 = __webpack_require__2(5694), isArray2 = __webpack_require__2(1469), isBuffer2 = __webpack_require__2(4144), isIndex2 = __webpack_require__2(5776), isTypedArray2 = __webpack_require__2(6719);
              var objectProto2 = Object.prototype;
              var hasOwnProperty2 = objectProto2.hasOwnProperty;
              function arrayLikeKeys2(value, inherited) {
                var isArr = isArray2(value), isArg = !isArr && isArguments2(value), isBuff = !isArr && !isArg && isBuffer2(value), isType = !isArr && !isArg && !isBuff && isTypedArray2(value), skipIndexes = isArr || isArg || isBuff || isType, result = skipIndexes ? baseTimes2(value.length, String) : [], length = result.length;
                for (var key in value) {
                  if ((inherited || hasOwnProperty2.call(value, key)) && !(skipIndexes && // Safari 9 has enumerable `arguments.length` in strict mode.
                  (key == "length" || // Node.js 0.10 has enumerable non-index properties on buffers.
                  isBuff && (key == "offset" || key == "parent") || // PhantomJS 2 has enumerable non-index properties on typed arrays.
                  isType && (key == "buffer" || key == "byteLength" || key == "byteOffset") || // Skip index properties.
                  isIndex2(key, length)))) {
                    result.push(key);
                  }
                }
                return result;
              }
              module2.exports = arrayLikeKeys2;
            }
          ),
          /***/
          9932: (
            /***/
            (module2) => {
              function arrayMap(array, iteratee) {
                var index = -1, length = array == null ? 0 : array.length, result = Array(length);
                while (++index < length) {
                  result[index] = iteratee(array[index], index, array);
                }
                return result;
              }
              module2.exports = arrayMap;
            }
          ),
          /***/
          2488: (
            /***/
            (module2) => {
              function arrayPush2(array, values) {
                var index = -1, length = values.length, offset = array.length;
                while (++index < length) {
                  array[offset + index] = values[index];
                }
                return array;
              }
              module2.exports = arrayPush2;
            }
          ),
          /***/
          2908: (
            /***/
            (module2) => {
              function arraySome2(array, predicate) {
                var index = -1, length = array == null ? 0 : array.length;
                while (++index < length) {
                  if (predicate(array[index], index, array)) {
                    return true;
                  }
                }
                return false;
              }
              module2.exports = arraySome2;
            }
          ),
          /***/
          4865: (
            /***/
            (module2, __unused_webpack_exports, __webpack_require__2) => {
              var baseAssignValue = __webpack_require__2(9465), eq2 = __webpack_require__2(7813);
              var objectProto2 = Object.prototype;
              var hasOwnProperty2 = objectProto2.hasOwnProperty;
              function assignValue(object, key, value) {
                var objValue = object[key];
                if (!(hasOwnProperty2.call(object, key) && eq2(objValue, value)) || value === void 0 && !(key in object)) {
                  baseAssignValue(object, key, value);
                }
              }
              module2.exports = assignValue;
            }
          ),
          /***/
          8470: (
            /***/
            (module2, __unused_webpack_exports, __webpack_require__2) => {
              var eq2 = __webpack_require__2(7813);
              function assocIndexOf2(array, key) {
                var length = array.length;
                while (length--) {
                  if (eq2(array[length][0], key)) {
                    return length;
                  }
                }
                return -1;
              }
              module2.exports = assocIndexOf2;
            }
          ),
          /***/
          4037: (
            /***/
            (module2, __unused_webpack_exports, __webpack_require__2) => {
              var copyObject = __webpack_require__2(8363), keys2 = __webpack_require__2(3674);
              function baseAssign(object, source) {
                return object && copyObject(source, keys2(source), object);
              }
              module2.exports = baseAssign;
            }
          ),
          /***/
          3886: (
            /***/
            (module2, __unused_webpack_exports, __webpack_require__2) => {
              var copyObject = __webpack_require__2(8363), keysIn = __webpack_require__2(1704);
              function baseAssignIn(object, source) {
                return object && copyObject(source, keysIn(source), object);
              }
              module2.exports = baseAssignIn;
            }
          ),
          /***/
          9465: (
            /***/
            (module2, __unused_webpack_exports, __webpack_require__2) => {
              var defineProperty = __webpack_require__2(8777);
              function baseAssignValue(object, key, value) {
                if (key == "__proto__" && defineProperty) {
                  defineProperty(object, key, {
                    "configurable": true,
                    "enumerable": true,
                    "value": value,
                    "writable": true
                  });
                } else {
                  object[key] = value;
                }
              }
              module2.exports = baseAssignValue;
            }
          ),
          /***/
          5990: (
            /***/
            (module2, __unused_webpack_exports, __webpack_require__2) => {
              var Stack2 = __webpack_require__2(6384), arrayEach = __webpack_require__2(7412), assignValue = __webpack_require__2(4865), baseAssign = __webpack_require__2(4037), baseAssignIn = __webpack_require__2(3886), cloneBuffer = __webpack_require__2(4626), copyArray = __webpack_require__2(278), copySymbols = __webpack_require__2(8805), copySymbolsIn = __webpack_require__2(1911), getAllKeys2 = __webpack_require__2(8234), getAllKeysIn = __webpack_require__2(6904), getTag2 = __webpack_require__2(4160), initCloneArray = __webpack_require__2(3824), initCloneByTag = __webpack_require__2(9148), initCloneObject = __webpack_require__2(8517), isArray2 = __webpack_require__2(1469), isBuffer2 = __webpack_require__2(4144), isMap = __webpack_require__2(6688), isObject2 = __webpack_require__2(3218), isSet = __webpack_require__2(2928), keys2 = __webpack_require__2(3674), keysIn = __webpack_require__2(1704);
              var CLONE_DEEP_FLAG = 1, CLONE_FLAT_FLAG = 2, CLONE_SYMBOLS_FLAG = 4;
              var argsTag2 = "[object Arguments]", arrayTag2 = "[object Array]", boolTag2 = "[object Boolean]", dateTag2 = "[object Date]", errorTag2 = "[object Error]", funcTag2 = "[object Function]", genTag2 = "[object GeneratorFunction]", mapTag2 = "[object Map]", numberTag2 = "[object Number]", objectTag2 = "[object Object]", regexpTag2 = "[object RegExp]", setTag2 = "[object Set]", stringTag2 = "[object String]", symbolTag2 = "[object Symbol]", weakMapTag2 = "[object WeakMap]";
              var arrayBufferTag2 = "[object ArrayBuffer]", dataViewTag2 = "[object DataView]", float32Tag2 = "[object Float32Array]", float64Tag2 = "[object Float64Array]", int8Tag2 = "[object Int8Array]", int16Tag2 = "[object Int16Array]", int32Tag2 = "[object Int32Array]", uint8Tag2 = "[object Uint8Array]", uint8ClampedTag2 = "[object Uint8ClampedArray]", uint16Tag2 = "[object Uint16Array]", uint32Tag2 = "[object Uint32Array]";
              var cloneableTags = {};
              cloneableTags[argsTag2] = cloneableTags[arrayTag2] = cloneableTags[arrayBufferTag2] = cloneableTags[dataViewTag2] = cloneableTags[boolTag2] = cloneableTags[dateTag2] = cloneableTags[float32Tag2] = cloneableTags[float64Tag2] = cloneableTags[int8Tag2] = cloneableTags[int16Tag2] = cloneableTags[int32Tag2] = cloneableTags[mapTag2] = cloneableTags[numberTag2] = cloneableTags[objectTag2] = cloneableTags[regexpTag2] = cloneableTags[setTag2] = cloneableTags[stringTag2] = cloneableTags[symbolTag2] = cloneableTags[uint8Tag2] = cloneableTags[uint8ClampedTag2] = cloneableTags[uint16Tag2] = cloneableTags[uint32Tag2] = true;
              cloneableTags[errorTag2] = cloneableTags[funcTag2] = cloneableTags[weakMapTag2] = false;
              function baseClone(value, bitmask, customizer, key, object, stack) {
                var result, isDeep = bitmask & CLONE_DEEP_FLAG, isFlat = bitmask & CLONE_FLAT_FLAG, isFull = bitmask & CLONE_SYMBOLS_FLAG;
                if (customizer) {
                  result = object ? customizer(value, key, object, stack) : customizer(value);
                }
                if (result !== void 0) {
                  return result;
                }
                if (!isObject2(value)) {
                  return value;
                }
                var isArr = isArray2(value);
                if (isArr) {
                  result = initCloneArray(value);
                  if (!isDeep) {
                    return copyArray(value, result);
                  }
                } else {
                  var tag = getTag2(value), isFunc = tag == funcTag2 || tag == genTag2;
                  if (isBuffer2(value)) {
                    return cloneBuffer(value, isDeep);
                  }
                  if (tag == objectTag2 || tag == argsTag2 || isFunc && !object) {
                    result = isFlat || isFunc ? {} : initCloneObject(value);
                    if (!isDeep) {
                      return isFlat ? copySymbolsIn(value, baseAssignIn(result, value)) : copySymbols(value, baseAssign(result, value));
                    }
                  } else {
                    if (!cloneableTags[tag]) {
                      return object ? value : {};
                    }
                    result = initCloneByTag(value, tag, isDeep);
                  }
                }
                stack || (stack = new Stack2());
                var stacked = stack.get(value);
                if (stacked) {
                  return stacked;
                }
                stack.set(value, result);
                if (isSet(value)) {
                  value.forEach(function(subValue) {
                    result.add(baseClone(subValue, bitmask, customizer, subValue, value, stack));
                  });
                } else if (isMap(value)) {
                  value.forEach(function(subValue, key2) {
                    result.set(key2, baseClone(subValue, bitmask, customizer, key2, value, stack));
                  });
                }
                var keysFunc = isFull ? isFlat ? getAllKeysIn : getAllKeys2 : isFlat ? keysIn : keys2;
                var props = isArr ? void 0 : keysFunc(value);
                arrayEach(props || value, function(subValue, key2) {
                  if (props) {
                    key2 = subValue;
                    subValue = value[key2];
                  }
                  assignValue(result, key2, baseClone(subValue, bitmask, customizer, key2, value, stack));
                });
                return result;
              }
              module2.exports = baseClone;
            }
          ),
          /***/
          3118: (
            /***/
            (module2, __unused_webpack_exports, __webpack_require__2) => {
              var isObject2 = __webpack_require__2(3218);
              var objectCreate = Object.create;
              var baseCreate = /* @__PURE__ */ function() {
                function object() {
                }
                return function(proto) {
                  if (!isObject2(proto)) {
                    return {};
                  }
                  if (objectCreate) {
                    return objectCreate(proto);
                  }
                  object.prototype = proto;
                  var result = new object();
                  object.prototype = void 0;
                  return result;
                };
              }();
              module2.exports = baseCreate;
            }
          ),
          /***/
          731: (
            /***/
            (module2, __unused_webpack_exports, __webpack_require__2) => {
              var SetCache2 = __webpack_require__2(8668), arrayIncludes = __webpack_require__2(7443), arrayIncludesWith = __webpack_require__2(1196), arrayMap = __webpack_require__2(9932), baseUnary2 = __webpack_require__2(1717), cacheHas2 = __webpack_require__2(4757);
              var LARGE_ARRAY_SIZE2 = 200;
              function baseDifference(array, values, iteratee, comparator) {
                var index = -1, includes = arrayIncludes, isCommon = true, length = array.length, result = [], valuesLength = values.length;
                if (!length) {
                  return result;
                }
                if (iteratee) {
                  values = arrayMap(values, baseUnary2(iteratee));
                }
                if (comparator) {
                  includes = arrayIncludesWith;
                  isCommon = false;
                } else if (values.length >= LARGE_ARRAY_SIZE2) {
                  includes = cacheHas2;
                  isCommon = false;
                  values = new SetCache2(values);
                }
                outer:
                  while (++index < length) {
                    var value = array[index], computed = iteratee == null ? value : iteratee(value);
                    value = comparator || value !== 0 ? value : 0;
                    if (isCommon && computed === computed) {
                      var valuesIndex = valuesLength;
                      while (valuesIndex--) {
                        if (values[valuesIndex] === computed) {
                          continue outer;
                        }
                      }
                      result.push(value);
                    } else if (!includes(values, computed, comparator)) {
                      result.push(value);
                    }
                  }
                return result;
              }
              module2.exports = baseDifference;
            }
          ),
          /***/
          1848: (
            /***/
            (module2) => {
              function baseFindIndex(array, predicate, fromIndex, fromRight) {
                var length = array.length, index = fromIndex + (fromRight ? 1 : -1);
                while (fromRight ? index-- : ++index < length) {
                  if (predicate(array[index], index, array)) {
                    return index;
                  }
                }
                return -1;
              }
              module2.exports = baseFindIndex;
            }
          ),
          /***/
          1078: (
            /***/
            (module2, __unused_webpack_exports, __webpack_require__2) => {
              var arrayPush2 = __webpack_require__2(2488), isFlattenable = __webpack_require__2(7285);
              function baseFlatten(array, depth, predicate, isStrict, result) {
                var index = -1, length = array.length;
                predicate || (predicate = isFlattenable);
                result || (result = []);
                while (++index < length) {
                  var value = array[index];
                  if (depth > 0 && predicate(value)) {
                    if (depth > 1) {
                      baseFlatten(value, depth - 1, predicate, isStrict, result);
                    } else {
                      arrayPush2(result, value);
                    }
                  } else if (!isStrict) {
                    result[result.length] = value;
                  }
                }
                return result;
              }
              module2.exports = baseFlatten;
            }
          ),
          /***/
          8483: (
            /***/
            (module2, __unused_webpack_exports, __webpack_require__2) => {
              var createBaseFor = __webpack_require__2(5063);
              var baseFor = createBaseFor();
              module2.exports = baseFor;
            }
          ),
          /***/
          7816: (
            /***/
            (module2, __unused_webpack_exports, __webpack_require__2) => {
              var baseFor = __webpack_require__2(8483), keys2 = __webpack_require__2(3674);
              function baseForOwn(object, iteratee) {
                return object && baseFor(object, iteratee, keys2);
              }
              module2.exports = baseForOwn;
            }
          ),
          /***/
          7786: (
            /***/
            (module2, __unused_webpack_exports, __webpack_require__2) => {
              var castPath = __webpack_require__2(1811), toKey = __webpack_require__2(327);
              function baseGet(object, path) {
                path = castPath(path, object);
                var index = 0, length = path.length;
                while (object != null && index < length) {
                  object = object[toKey(path[index++])];
                }
                return index && index == length ? object : void 0;
              }
              module2.exports = baseGet;
            }
          ),
          /***/
          8866: (
            /***/
            (module2, __unused_webpack_exports, __webpack_require__2) => {
              var arrayPush2 = __webpack_require__2(2488), isArray2 = __webpack_require__2(1469);
              function baseGetAllKeys2(object, keysFunc, symbolsFunc) {
                var result = keysFunc(object);
                return isArray2(object) ? result : arrayPush2(result, symbolsFunc(object));
              }
              module2.exports = baseGetAllKeys2;
            }
          ),
          /***/
          4239: (
            /***/
            (module2, __unused_webpack_exports, __webpack_require__2) => {
              var Symbol2 = __webpack_require__2(2705), getRawTag2 = __webpack_require__2(9607), objectToString2 = __webpack_require__2(2333);
              var nullTag2 = "[object Null]", undefinedTag2 = "[object Undefined]";
              var symToStringTag2 = Symbol2 ? Symbol2.toStringTag : void 0;
              function baseGetTag2(value) {
                if (value == null) {
                  return value === void 0 ? undefinedTag2 : nullTag2;
                }
                return symToStringTag2 && symToStringTag2 in Object(value) ? getRawTag2(value) : objectToString2(value);
              }
              module2.exports = baseGetTag2;
            }
          ),
          /***/
          13: (
            /***/
            (module2) => {
              function baseHasIn(object, key) {
                return object != null && key in Object(object);
              }
              module2.exports = baseHasIn;
            }
          ),
          /***/
          2118: (
            /***/
            (module2, __unused_webpack_exports, __webpack_require__2) => {
              var baseFindIndex = __webpack_require__2(1848), baseIsNaN = __webpack_require__2(2722), strictIndexOf = __webpack_require__2(2351);
              function baseIndexOf(array, value, fromIndex) {
                return value === value ? strictIndexOf(array, value, fromIndex) : baseFindIndex(array, baseIsNaN, fromIndex);
              }
              module2.exports = baseIndexOf;
            }
          ),
          /***/
          8975: (
            /***/
            (module2, __unused_webpack_exports, __webpack_require__2) => {
              var baseForOwn = __webpack_require__2(7816);
              function baseInverter(object, setter, iteratee, accumulator) {
                baseForOwn(object, function(value, key, object2) {
                  setter(accumulator, iteratee(value), key, object2);
                });
                return accumulator;
              }
              module2.exports = baseInverter;
            }
          ),
          /***/
          9454: (
            /***/
            (module2, __unused_webpack_exports, __webpack_require__2) => {
              var baseGetTag2 = __webpack_require__2(4239), isObjectLike2 = __webpack_require__2(7005);
              var argsTag2 = "[object Arguments]";
              function baseIsArguments2(value) {
                return isObjectLike2(value) && baseGetTag2(value) == argsTag2;
              }
              module2.exports = baseIsArguments2;
            }
          ),
          /***/
          939: (
            /***/
            (module2, __unused_webpack_exports, __webpack_require__2) => {
              var baseIsEqualDeep2 = __webpack_require__2(2492), isObjectLike2 = __webpack_require__2(7005);
              function baseIsEqual2(value, other, bitmask, customizer, stack) {
                if (value === other) {
                  return true;
                }
                if (value == null || other == null || !isObjectLike2(value) && !isObjectLike2(other)) {
                  return value !== value && other !== other;
                }
                return baseIsEqualDeep2(value, other, bitmask, customizer, baseIsEqual2, stack);
              }
              module2.exports = baseIsEqual2;
            }
          ),
          /***/
          2492: (
            /***/
            (module2, __unused_webpack_exports, __webpack_require__2) => {
              var Stack2 = __webpack_require__2(6384), equalArrays2 = __webpack_require__2(7114), equalByTag2 = __webpack_require__2(8351), equalObjects2 = __webpack_require__2(6096), getTag2 = __webpack_require__2(4160), isArray2 = __webpack_require__2(1469), isBuffer2 = __webpack_require__2(4144), isTypedArray2 = __webpack_require__2(6719);
              var COMPARE_PARTIAL_FLAG2 = 1;
              var argsTag2 = "[object Arguments]", arrayTag2 = "[object Array]", objectTag2 = "[object Object]";
              var objectProto2 = Object.prototype;
              var hasOwnProperty2 = objectProto2.hasOwnProperty;
              function baseIsEqualDeep2(object, other, bitmask, customizer, equalFunc, stack) {
                var objIsArr = isArray2(object), othIsArr = isArray2(other), objTag = objIsArr ? arrayTag2 : getTag2(object), othTag = othIsArr ? arrayTag2 : getTag2(other);
                objTag = objTag == argsTag2 ? objectTag2 : objTag;
                othTag = othTag == argsTag2 ? objectTag2 : othTag;
                var objIsObj = objTag == objectTag2, othIsObj = othTag == objectTag2, isSameTag = objTag == othTag;
                if (isSameTag && isBuffer2(object)) {
                  if (!isBuffer2(other)) {
                    return false;
                  }
                  objIsArr = true;
                  objIsObj = false;
                }
                if (isSameTag && !objIsObj) {
                  stack || (stack = new Stack2());
                  return objIsArr || isTypedArray2(object) ? equalArrays2(object, other, bitmask, customizer, equalFunc, stack) : equalByTag2(object, other, objTag, bitmask, customizer, equalFunc, stack);
                }
                if (!(bitmask & COMPARE_PARTIAL_FLAG2)) {
                  var objIsWrapped = objIsObj && hasOwnProperty2.call(object, "__wrapped__"), othIsWrapped = othIsObj && hasOwnProperty2.call(other, "__wrapped__");
                  if (objIsWrapped || othIsWrapped) {
                    var objUnwrapped = objIsWrapped ? object.value() : object, othUnwrapped = othIsWrapped ? other.value() : other;
                    stack || (stack = new Stack2());
                    return equalFunc(objUnwrapped, othUnwrapped, bitmask, customizer, stack);
                  }
                }
                if (!isSameTag) {
                  return false;
                }
                stack || (stack = new Stack2());
                return equalObjects2(object, other, bitmask, customizer, equalFunc, stack);
              }
              module2.exports = baseIsEqualDeep2;
            }
          ),
          /***/
          5588: (
            /***/
            (module2, __unused_webpack_exports, __webpack_require__2) => {
              var getTag2 = __webpack_require__2(4160), isObjectLike2 = __webpack_require__2(7005);
              var mapTag2 = "[object Map]";
              function baseIsMap(value) {
                return isObjectLike2(value) && getTag2(value) == mapTag2;
              }
              module2.exports = baseIsMap;
            }
          ),
          /***/
          2958: (
            /***/
            (module2, __unused_webpack_exports, __webpack_require__2) => {
              var Stack2 = __webpack_require__2(6384), baseIsEqual2 = __webpack_require__2(939);
              var COMPARE_PARTIAL_FLAG2 = 1, COMPARE_UNORDERED_FLAG2 = 2;
              function baseIsMatch(object, source, matchData, customizer) {
                var index = matchData.length, length = index, noCustomizer = !customizer;
                if (object == null) {
                  return !length;
                }
                object = Object(object);
                while (index--) {
                  var data = matchData[index];
                  if (noCustomizer && data[2] ? data[1] !== object[data[0]] : !(data[0] in object)) {
                    return false;
                  }
                }
                while (++index < length) {
                  data = matchData[index];
                  var key = data[0], objValue = object[key], srcValue = data[1];
                  if (noCustomizer && data[2]) {
                    if (objValue === void 0 && !(key in object)) {
                      return false;
                    }
                  } else {
                    var stack = new Stack2();
                    if (customizer) {
                      var result = customizer(objValue, srcValue, key, object, source, stack);
                    }
                    if (!(result === void 0 ? baseIsEqual2(srcValue, objValue, COMPARE_PARTIAL_FLAG2 | COMPARE_UNORDERED_FLAG2, customizer, stack) : result)) {
                      return false;
                    }
                  }
                }
                return true;
              }
              module2.exports = baseIsMatch;
            }
          ),
          /***/
          2722: (
            /***/
            (module2) => {
              function baseIsNaN(value) {
                return value !== value;
              }
              module2.exports = baseIsNaN;
            }
          ),
          /***/
          8458: (
            /***/
            (module2, __unused_webpack_exports, __webpack_require__2) => {
              var isFunction2 = __webpack_require__2(3560), isMasked2 = __webpack_require__2(5346), isObject2 = __webpack_require__2(3218), toSource2 = __webpack_require__2(346);
              var reRegExpChar2 = /[\\^$.*+?()[\]{}|]/g;
              var reIsHostCtor2 = /^\[object .+?Constructor\]$/;
              var funcProto2 = Function.prototype, objectProto2 = Object.prototype;
              var funcToString2 = funcProto2.toString;
              var hasOwnProperty2 = objectProto2.hasOwnProperty;
              var reIsNative2 = RegExp(
                "^" + funcToString2.call(hasOwnProperty2).replace(reRegExpChar2, "\\$&").replace(/hasOwnProperty|(function).*?(?=\\\()| for .+?(?=\\\])/g, "$1.*?") + "$"
              );
              function baseIsNative2(value) {
                if (!isObject2(value) || isMasked2(value)) {
                  return false;
                }
                var pattern = isFunction2(value) ? reIsNative2 : reIsHostCtor2;
                return pattern.test(toSource2(value));
              }
              module2.exports = baseIsNative2;
            }
          ),
          /***/
          9221: (
            /***/
            (module2, __unused_webpack_exports, __webpack_require__2) => {
              var getTag2 = __webpack_require__2(4160), isObjectLike2 = __webpack_require__2(7005);
              var setTag2 = "[object Set]";
              function baseIsSet(value) {
                return isObjectLike2(value) && getTag2(value) == setTag2;
              }
              module2.exports = baseIsSet;
            }
          ),
          /***/
          8749: (
            /***/
            (module2, __unused_webpack_exports, __webpack_require__2) => {
              var baseGetTag2 = __webpack_require__2(4239), isLength2 = __webpack_require__2(1780), isObjectLike2 = __webpack_require__2(7005);
              var argsTag2 = "[object Arguments]", arrayTag2 = "[object Array]", boolTag2 = "[object Boolean]", dateTag2 = "[object Date]", errorTag2 = "[object Error]", funcTag2 = "[object Function]", mapTag2 = "[object Map]", numberTag2 = "[object Number]", objectTag2 = "[object Object]", regexpTag2 = "[object RegExp]", setTag2 = "[object Set]", stringTag2 = "[object String]", weakMapTag2 = "[object WeakMap]";
              var arrayBufferTag2 = "[object ArrayBuffer]", dataViewTag2 = "[object DataView]", float32Tag2 = "[object Float32Array]", float64Tag2 = "[object Float64Array]", int8Tag2 = "[object Int8Array]", int16Tag2 = "[object Int16Array]", int32Tag2 = "[object Int32Array]", uint8Tag2 = "[object Uint8Array]", uint8ClampedTag2 = "[object Uint8ClampedArray]", uint16Tag2 = "[object Uint16Array]", uint32Tag2 = "[object Uint32Array]";
              var typedArrayTags2 = {};
              typedArrayTags2[float32Tag2] = typedArrayTags2[float64Tag2] = typedArrayTags2[int8Tag2] = typedArrayTags2[int16Tag2] = typedArrayTags2[int32Tag2] = typedArrayTags2[uint8Tag2] = typedArrayTags2[uint8ClampedTag2] = typedArrayTags2[uint16Tag2] = typedArrayTags2[uint32Tag2] = true;
              typedArrayTags2[argsTag2] = typedArrayTags2[arrayTag2] = typedArrayTags2[arrayBufferTag2] = typedArrayTags2[boolTag2] = typedArrayTags2[dataViewTag2] = typedArrayTags2[dateTag2] = typedArrayTags2[errorTag2] = typedArrayTags2[funcTag2] = typedArrayTags2[mapTag2] = typedArrayTags2[numberTag2] = typedArrayTags2[objectTag2] = typedArrayTags2[regexpTag2] = typedArrayTags2[setTag2] = typedArrayTags2[stringTag2] = typedArrayTags2[weakMapTag2] = false;
              function baseIsTypedArray2(value) {
                return isObjectLike2(value) && isLength2(value.length) && !!typedArrayTags2[baseGetTag2(value)];
              }
              module2.exports = baseIsTypedArray2;
            }
          ),
          /***/
          7206: (
            /***/
            (module2, __unused_webpack_exports, __webpack_require__2) => {
              var baseMatches = __webpack_require__2(1573), baseMatchesProperty = __webpack_require__2(6432), identity = __webpack_require__2(6557), isArray2 = __webpack_require__2(1469), property = __webpack_require__2(9601);
              function baseIteratee(value) {
                if (typeof value == "function") {
                  return value;
                }
                if (value == null) {
                  return identity;
                }
                if (typeof value == "object") {
                  return isArray2(value) ? baseMatchesProperty(value[0], value[1]) : baseMatches(value);
                }
                return property(value);
              }
              module2.exports = baseIteratee;
            }
          ),
          /***/
          280: (
            /***/
            (module2, __unused_webpack_exports, __webpack_require__2) => {
              var isPrototype2 = __webpack_require__2(5726), nativeKeys2 = __webpack_require__2(6916);
              var objectProto2 = Object.prototype;
              var hasOwnProperty2 = objectProto2.hasOwnProperty;
              function baseKeys2(object) {
                if (!isPrototype2(object)) {
                  return nativeKeys2(object);
                }
                var result = [];
                for (var key in Object(object)) {
                  if (hasOwnProperty2.call(object, key) && key != "constructor") {
                    result.push(key);
                  }
                }
                return result;
              }
              module2.exports = baseKeys2;
            }
          ),
          /***/
          313: (
            /***/
            (module2, __unused_webpack_exports, __webpack_require__2) => {
              var isObject2 = __webpack_require__2(3218), isPrototype2 = __webpack_require__2(5726), nativeKeysIn = __webpack_require__2(3498);
              var objectProto2 = Object.prototype;
              var hasOwnProperty2 = objectProto2.hasOwnProperty;
              function baseKeysIn(object) {
                if (!isObject2(object)) {
                  return nativeKeysIn(object);
                }
                var isProto = isPrototype2(object), result = [];
                for (var key in object) {
                  if (!(key == "constructor" && (isProto || !hasOwnProperty2.call(object, key)))) {
                    result.push(key);
                  }
                }
                return result;
              }
              module2.exports = baseKeysIn;
            }
          ),
          /***/
          1573: (
            /***/
            (module2, __unused_webpack_exports, __webpack_require__2) => {
              var baseIsMatch = __webpack_require__2(2958), getMatchData = __webpack_require__2(1499), matchesStrictComparable = __webpack_require__2(2634);
              function baseMatches(source) {
                var matchData = getMatchData(source);
                if (matchData.length == 1 && matchData[0][2]) {
                  return matchesStrictComparable(matchData[0][0], matchData[0][1]);
                }
                return function(object) {
                  return object === source || baseIsMatch(object, source, matchData);
                };
              }
              module2.exports = baseMatches;
            }
          ),
          /***/
          6432: (
            /***/
            (module2, __unused_webpack_exports, __webpack_require__2) => {
              var baseIsEqual2 = __webpack_require__2(939), get3 = __webpack_require__2(7361), hasIn = __webpack_require__2(9095), isKey = __webpack_require__2(5403), isStrictComparable = __webpack_require__2(9162), matchesStrictComparable = __webpack_require__2(2634), toKey = __webpack_require__2(327);
              var COMPARE_PARTIAL_FLAG2 = 1, COMPARE_UNORDERED_FLAG2 = 2;
              function baseMatchesProperty(path, srcValue) {
                if (isKey(path) && isStrictComparable(srcValue)) {
                  return matchesStrictComparable(toKey(path), srcValue);
                }
                return function(object) {
                  var objValue = get3(object, path);
                  return objValue === void 0 && objValue === srcValue ? hasIn(object, path) : baseIsEqual2(srcValue, objValue, COMPARE_PARTIAL_FLAG2 | COMPARE_UNORDERED_FLAG2);
                };
              }
              module2.exports = baseMatchesProperty;
            }
          ),
          /***/
          371: (
            /***/
            (module2) => {
              function baseProperty(key) {
                return function(object) {
                  return object == null ? void 0 : object[key];
                };
              }
              module2.exports = baseProperty;
            }
          ),
          /***/
          9152: (
            /***/
            (module2, __unused_webpack_exports, __webpack_require__2) => {
              var baseGet = __webpack_require__2(7786);
              function basePropertyDeep(path) {
                return function(object) {
                  return baseGet(object, path);
                };
              }
              module2.exports = basePropertyDeep;
            }
          ),
          /***/
          5976: (
            /***/
            (module2, __unused_webpack_exports, __webpack_require__2) => {
              var identity = __webpack_require__2(6557), overRest = __webpack_require__2(5357), setToString = __webpack_require__2(61);
              function baseRest(func, start) {
                return setToString(overRest(func, start, identity), func + "");
              }
              module2.exports = baseRest;
            }
          ),
          /***/
          6560: (
            /***/
            (module2, __unused_webpack_exports, __webpack_require__2) => {
              var constant = __webpack_require__2(5703), defineProperty = __webpack_require__2(8777), identity = __webpack_require__2(6557);
              var baseSetToString = !defineProperty ? identity : function(func, string) {
                return defineProperty(func, "toString", {
                  "configurable": true,
                  "enumerable": false,
                  "value": constant(string),
                  "writable": true
                });
              };
              module2.exports = baseSetToString;
            }
          ),
          /***/
          4259: (
            /***/
            (module2) => {
              function baseSlice(array, start, end) {
                var index = -1, length = array.length;
                if (start < 0) {
                  start = -start > length ? 0 : length + start;
                }
                end = end > length ? length : end;
                if (end < 0) {
                  end += length;
                }
                length = start > end ? 0 : end - start >>> 0;
                start >>>= 0;
                var result = Array(length);
                while (++index < length) {
                  result[index] = array[index + start];
                }
                return result;
              }
              module2.exports = baseSlice;
            }
          ),
          /***/
          2545: (
            /***/
            (module2) => {
              function baseTimes2(n2, iteratee) {
                var index = -1, result = Array(n2);
                while (++index < n2) {
                  result[index] = iteratee(index);
                }
                return result;
              }
              module2.exports = baseTimes2;
            }
          ),
          /***/
          531: (
            /***/
            (module2, __unused_webpack_exports, __webpack_require__2) => {
              var Symbol2 = __webpack_require__2(2705), arrayMap = __webpack_require__2(9932), isArray2 = __webpack_require__2(1469), isSymbol2 = __webpack_require__2(3448);
              var INFINITY2 = 1 / 0;
              var symbolProto2 = Symbol2 ? Symbol2.prototype : void 0, symbolToString = symbolProto2 ? symbolProto2.toString : void 0;
              function baseToString2(value) {
                if (typeof value == "string") {
                  return value;
                }
                if (isArray2(value)) {
                  return arrayMap(value, baseToString2) + "";
                }
                if (isSymbol2(value)) {
                  return symbolToString ? symbolToString.call(value) : "";
                }
                var result = value + "";
                return result == "0" && 1 / value == -INFINITY2 ? "-0" : result;
              }
              module2.exports = baseToString2;
            }
          ),
          /***/
          7561: (
            /***/
            (module2, __unused_webpack_exports, __webpack_require__2) => {
              var trimmedEndIndex = __webpack_require__2(7990);
              var reTrimStart = /^\s+/;
              function baseTrim(string) {
                return string ? string.slice(0, trimmedEndIndex(string) + 1).replace(reTrimStart, "") : string;
              }
              module2.exports = baseTrim;
            }
          ),
          /***/
          1717: (
            /***/
            (module2) => {
              function baseUnary2(func) {
                return function(value) {
                  return func(value);
                };
              }
              module2.exports = baseUnary2;
            }
          ),
          /***/
          5652: (
            /***/
            (module2, __unused_webpack_exports, __webpack_require__2) => {
              var SetCache2 = __webpack_require__2(8668), arrayIncludes = __webpack_require__2(7443), arrayIncludesWith = __webpack_require__2(1196), cacheHas2 = __webpack_require__2(4757), createSet = __webpack_require__2(3593), setToArray2 = __webpack_require__2(1814);
              var LARGE_ARRAY_SIZE2 = 200;
              function baseUniq(array, iteratee, comparator) {
                var index = -1, includes = arrayIncludes, length = array.length, isCommon = true, result = [], seen = result;
                if (comparator) {
                  isCommon = false;
                  includes = arrayIncludesWith;
                } else if (length >= LARGE_ARRAY_SIZE2) {
                  var set2 = iteratee ? null : createSet(array);
                  if (set2) {
                    return setToArray2(set2);
                  }
                  isCommon = false;
                  includes = cacheHas2;
                  seen = new SetCache2();
                } else {
                  seen = iteratee ? [] : result;
                }
                outer:
                  while (++index < length) {
                    var value = array[index], computed = iteratee ? iteratee(value) : value;
                    value = comparator || value !== 0 ? value : 0;
                    if (isCommon && computed === computed) {
                      var seenIndex = seen.length;
                      while (seenIndex--) {
                        if (seen[seenIndex] === computed) {
                          continue outer;
                        }
                      }
                      if (iteratee) {
                        seen.push(computed);
                      }
                      result.push(value);
                    } else if (!includes(seen, computed, comparator)) {
                      if (seen !== result) {
                        seen.push(computed);
                      }
                      result.push(value);
                    }
                  }
                return result;
              }
              module2.exports = baseUniq;
            }
          ),
          /***/
          7406: (
            /***/
            (module2, __unused_webpack_exports, __webpack_require__2) => {
              var castPath = __webpack_require__2(1811), last = __webpack_require__2(928), parent = __webpack_require__2(292), toKey = __webpack_require__2(327);
              function baseUnset(object, path) {
                path = castPath(path, object);
                object = parent(object, path);
                return object == null || delete object[toKey(last(path))];
              }
              module2.exports = baseUnset;
            }
          ),
          /***/
          4757: (
            /***/
            (module2) => {
              function cacheHas2(cache, key) {
                return cache.has(key);
              }
              module2.exports = cacheHas2;
            }
          ),
          /***/
          1811: (
            /***/
            (module2, __unused_webpack_exports, __webpack_require__2) => {
              var isArray2 = __webpack_require__2(1469), isKey = __webpack_require__2(5403), stringToPath = __webpack_require__2(5514), toString3 = __webpack_require__2(9833);
              function castPath(value, object) {
                if (isArray2(value)) {
                  return value;
                }
                return isKey(value, object) ? [value] : stringToPath(toString3(value));
              }
              module2.exports = castPath;
            }
          ),
          /***/
          4318: (
            /***/
            (module2, __unused_webpack_exports, __webpack_require__2) => {
              var Uint8Array2 = __webpack_require__2(1149);
              function cloneArrayBuffer(arrayBuffer) {
                var result = new arrayBuffer.constructor(arrayBuffer.byteLength);
                new Uint8Array2(result).set(new Uint8Array2(arrayBuffer));
                return result;
              }
              module2.exports = cloneArrayBuffer;
            }
          ),
          /***/
          4626: (
            /***/
            (module2, exports2, __webpack_require__2) => {
              module2 = __webpack_require__2.nmd(module2);
              var root2 = __webpack_require__2(5639);
              var freeExports = exports2 && !exports2.nodeType && exports2;
              var freeModule = freeExports && true && module2 && !module2.nodeType && module2;
              var moduleExports = freeModule && freeModule.exports === freeExports;
              var Buffer2 = moduleExports ? root2.Buffer : void 0, allocUnsafe = Buffer2 ? Buffer2.allocUnsafe : void 0;
              function cloneBuffer(buffer, isDeep) {
                if (isDeep) {
                  return buffer.slice();
                }
                var length = buffer.length, result = allocUnsafe ? allocUnsafe(length) : new buffer.constructor(length);
                buffer.copy(result);
                return result;
              }
              module2.exports = cloneBuffer;
            }
          ),
          /***/
          7157: (
            /***/
            (module2, __unused_webpack_exports, __webpack_require__2) => {
              var cloneArrayBuffer = __webpack_require__2(4318);
              function cloneDataView(dataView, isDeep) {
                var buffer = isDeep ? cloneArrayBuffer(dataView.buffer) : dataView.buffer;
                return new dataView.constructor(buffer, dataView.byteOffset, dataView.byteLength);
              }
              module2.exports = cloneDataView;
            }
          ),
          /***/
          3147: (
            /***/
            (module2) => {
              var reFlags = /\w*$/;
              function cloneRegExp(regexp) {
                var result = new regexp.constructor(regexp.source, reFlags.exec(regexp));
                result.lastIndex = regexp.lastIndex;
                return result;
              }
              module2.exports = cloneRegExp;
            }
          ),
          /***/
          419: (
            /***/
            (module2, __unused_webpack_exports, __webpack_require__2) => {
              var Symbol2 = __webpack_require__2(2705);
              var symbolProto2 = Symbol2 ? Symbol2.prototype : void 0, symbolValueOf2 = symbolProto2 ? symbolProto2.valueOf : void 0;
              function cloneSymbol(symbol) {
                return symbolValueOf2 ? Object(symbolValueOf2.call(symbol)) : {};
              }
              module2.exports = cloneSymbol;
            }
          ),
          /***/
          7133: (
            /***/
            (module2, __unused_webpack_exports, __webpack_require__2) => {
              var cloneArrayBuffer = __webpack_require__2(4318);
              function cloneTypedArray(typedArray, isDeep) {
                var buffer = isDeep ? cloneArrayBuffer(typedArray.buffer) : typedArray.buffer;
                return new typedArray.constructor(buffer, typedArray.byteOffset, typedArray.length);
              }
              module2.exports = cloneTypedArray;
            }
          ),
          /***/
          278: (
            /***/
            (module2) => {
              function copyArray(source, array) {
                var index = -1, length = source.length;
                array || (array = Array(length));
                while (++index < length) {
                  array[index] = source[index];
                }
                return array;
              }
              module2.exports = copyArray;
            }
          ),
          /***/
          8363: (
            /***/
            (module2, __unused_webpack_exports, __webpack_require__2) => {
              var assignValue = __webpack_require__2(4865), baseAssignValue = __webpack_require__2(9465);
              function copyObject(source, props, object, customizer) {
                var isNew = !object;
                object || (object = {});
                var index = -1, length = props.length;
                while (++index < length) {
                  var key = props[index];
                  var newValue = customizer ? customizer(object[key], source[key], key, object, source) : void 0;
                  if (newValue === void 0) {
                    newValue = source[key];
                  }
                  if (isNew) {
                    baseAssignValue(object, key, newValue);
                  } else {
                    assignValue(object, key, newValue);
                  }
                }
                return object;
              }
              module2.exports = copyObject;
            }
          ),
          /***/
          8805: (
            /***/
            (module2, __unused_webpack_exports, __webpack_require__2) => {
              var copyObject = __webpack_require__2(8363), getSymbols2 = __webpack_require__2(9551);
              function copySymbols(source, object) {
                return copyObject(source, getSymbols2(source), object);
              }
              module2.exports = copySymbols;
            }
          ),
          /***/
          1911: (
            /***/
            (module2, __unused_webpack_exports, __webpack_require__2) => {
              var copyObject = __webpack_require__2(8363), getSymbolsIn = __webpack_require__2(1442);
              function copySymbolsIn(source, object) {
                return copyObject(source, getSymbolsIn(source), object);
              }
              module2.exports = copySymbolsIn;
            }
          ),
          /***/
          4429: (
            /***/
            (module2, __unused_webpack_exports, __webpack_require__2) => {
              var root2 = __webpack_require__2(5639);
              var coreJsData2 = root2["__core-js_shared__"];
              module2.exports = coreJsData2;
            }
          ),
          /***/
          5063: (
            /***/
            (module2) => {
              function createBaseFor(fromRight) {
                return function(object, iteratee, keysFunc) {
                  var index = -1, iterable = Object(object), props = keysFunc(object), length = props.length;
                  while (length--) {
                    var key = props[fromRight ? length : ++index];
                    if (iteratee(iterable[key], key, iterable) === false) {
                      break;
                    }
                  }
                  return object;
                };
              }
              module2.exports = createBaseFor;
            }
          ),
          /***/
          7740: (
            /***/
            (module2, __unused_webpack_exports, __webpack_require__2) => {
              var baseIteratee = __webpack_require__2(7206), isArrayLike2 = __webpack_require__2(8612), keys2 = __webpack_require__2(3674);
              function createFind(findIndexFunc) {
                return function(collection, predicate, fromIndex) {
                  var iterable = Object(collection);
                  if (!isArrayLike2(collection)) {
                    var iteratee = baseIteratee(predicate, 3);
                    collection = keys2(collection);
                    predicate = function(key) {
                      return iteratee(iterable[key], key, iterable);
                    };
                  }
                  var index = findIndexFunc(collection, predicate, fromIndex);
                  return index > -1 ? iterable[iteratee ? collection[index] : index] : void 0;
                };
              }
              module2.exports = createFind;
            }
          ),
          /***/
          7779: (
            /***/
            (module2, __unused_webpack_exports, __webpack_require__2) => {
              var baseInverter = __webpack_require__2(8975);
              function createInverter(setter, toIteratee) {
                return function(object, iteratee) {
                  return baseInverter(object, setter, toIteratee(iteratee), {});
                };
              }
              module2.exports = createInverter;
            }
          ),
          /***/
          3593: (
            /***/
            (module2, __unused_webpack_exports, __webpack_require__2) => {
              var Set2 = __webpack_require__2(8525), noop2 = __webpack_require__2(308), setToArray2 = __webpack_require__2(1814);
              var INFINITY2 = 1 / 0;
              var createSet = !(Set2 && 1 / setToArray2(new Set2([, -0]))[1] == INFINITY2) ? noop2 : function(values) {
                return new Set2(values);
              };
              module2.exports = createSet;
            }
          ),
          /***/
          696: (
            /***/
            (module2, __unused_webpack_exports, __webpack_require__2) => {
              var isPlainObject = __webpack_require__2(8630);
              function customOmitClone(value) {
                return isPlainObject(value) ? void 0 : value;
              }
              module2.exports = customOmitClone;
            }
          ),
          /***/
          8777: (
            /***/
            (module2, __unused_webpack_exports, __webpack_require__2) => {
              var getNative2 = __webpack_require__2(852);
              var defineProperty = function() {
                try {
                  var func = getNative2(Object, "defineProperty");
                  func({}, "", {});
                  return func;
                } catch (e) {
                }
              }();
              module2.exports = defineProperty;
            }
          ),
          /***/
          7114: (
            /***/
            (module2, __unused_webpack_exports, __webpack_require__2) => {
              var SetCache2 = __webpack_require__2(8668), arraySome2 = __webpack_require__2(2908), cacheHas2 = __webpack_require__2(4757);
              var COMPARE_PARTIAL_FLAG2 = 1, COMPARE_UNORDERED_FLAG2 = 2;
              function equalArrays2(array, other, bitmask, customizer, equalFunc, stack) {
                var isPartial = bitmask & COMPARE_PARTIAL_FLAG2, arrLength = array.length, othLength = other.length;
                if (arrLength != othLength && !(isPartial && othLength > arrLength)) {
                  return false;
                }
                var arrStacked = stack.get(array);
                var othStacked = stack.get(other);
                if (arrStacked && othStacked) {
                  return arrStacked == other && othStacked == array;
                }
                var index = -1, result = true, seen = bitmask & COMPARE_UNORDERED_FLAG2 ? new SetCache2() : void 0;
                stack.set(array, other);
                stack.set(other, array);
                while (++index < arrLength) {
                  var arrValue = array[index], othValue = other[index];
                  if (customizer) {
                    var compared = isPartial ? customizer(othValue, arrValue, index, other, array, stack) : customizer(arrValue, othValue, index, array, other, stack);
                  }
                  if (compared !== void 0) {
                    if (compared) {
                      continue;
                    }
                    result = false;
                    break;
                  }
                  if (seen) {
                    if (!arraySome2(other, function(othValue2, othIndex) {
                      if (!cacheHas2(seen, othIndex) && (arrValue === othValue2 || equalFunc(arrValue, othValue2, bitmask, customizer, stack))) {
                        return seen.push(othIndex);
                      }
                    })) {
                      result = false;
                      break;
                    }
                  } else if (!(arrValue === othValue || equalFunc(arrValue, othValue, bitmask, customizer, stack))) {
                    result = false;
                    break;
                  }
                }
                stack["delete"](array);
                stack["delete"](other);
                return result;
              }
              module2.exports = equalArrays2;
            }
          ),
          /***/
          8351: (
            /***/
            (module2, __unused_webpack_exports, __webpack_require__2) => {
              var Symbol2 = __webpack_require__2(2705), Uint8Array2 = __webpack_require__2(1149), eq2 = __webpack_require__2(7813), equalArrays2 = __webpack_require__2(7114), mapToArray2 = __webpack_require__2(8776), setToArray2 = __webpack_require__2(1814);
              var COMPARE_PARTIAL_FLAG2 = 1, COMPARE_UNORDERED_FLAG2 = 2;
              var boolTag2 = "[object Boolean]", dateTag2 = "[object Date]", errorTag2 = "[object Error]", mapTag2 = "[object Map]", numberTag2 = "[object Number]", regexpTag2 = "[object RegExp]", setTag2 = "[object Set]", stringTag2 = "[object String]", symbolTag2 = "[object Symbol]";
              var arrayBufferTag2 = "[object ArrayBuffer]", dataViewTag2 = "[object DataView]";
              var symbolProto2 = Symbol2 ? Symbol2.prototype : void 0, symbolValueOf2 = symbolProto2 ? symbolProto2.valueOf : void 0;
              function equalByTag2(object, other, tag, bitmask, customizer, equalFunc, stack) {
                switch (tag) {
                  case dataViewTag2:
                    if (object.byteLength != other.byteLength || object.byteOffset != other.byteOffset) {
                      return false;
                    }
                    object = object.buffer;
                    other = other.buffer;
                  case arrayBufferTag2:
                    if (object.byteLength != other.byteLength || !equalFunc(new Uint8Array2(object), new Uint8Array2(other))) {
                      return false;
                    }
                    return true;
                  case boolTag2:
                  case dateTag2:
                  case numberTag2:
                    return eq2(+object, +other);
                  case errorTag2:
                    return object.name == other.name && object.message == other.message;
                  case regexpTag2:
                  case stringTag2:
                    return object == other + "";
                  case mapTag2:
                    var convert = mapToArray2;
                  case setTag2:
                    var isPartial = bitmask & COMPARE_PARTIAL_FLAG2;
                    convert || (convert = setToArray2);
                    if (object.size != other.size && !isPartial) {
                      return false;
                    }
                    var stacked = stack.get(object);
                    if (stacked) {
                      return stacked == other;
                    }
                    bitmask |= COMPARE_UNORDERED_FLAG2;
                    stack.set(object, other);
                    var result = equalArrays2(convert(object), convert(other), bitmask, customizer, equalFunc, stack);
                    stack["delete"](object);
                    return result;
                  case symbolTag2:
                    if (symbolValueOf2) {
                      return symbolValueOf2.call(object) == symbolValueOf2.call(other);
                    }
                }
                return false;
              }
              module2.exports = equalByTag2;
            }
          ),
          /***/
          6096: (
            /***/
            (module2, __unused_webpack_exports, __webpack_require__2) => {
              var getAllKeys2 = __webpack_require__2(8234);
              var COMPARE_PARTIAL_FLAG2 = 1;
              var objectProto2 = Object.prototype;
              var hasOwnProperty2 = objectProto2.hasOwnProperty;
              function equalObjects2(object, other, bitmask, customizer, equalFunc, stack) {
                var isPartial = bitmask & COMPARE_PARTIAL_FLAG2, objProps = getAllKeys2(object), objLength = objProps.length, othProps = getAllKeys2(other), othLength = othProps.length;
                if (objLength != othLength && !isPartial) {
                  return false;
                }
                var index = objLength;
                while (index--) {
                  var key = objProps[index];
                  if (!(isPartial ? key in other : hasOwnProperty2.call(other, key))) {
                    return false;
                  }
                }
                var objStacked = stack.get(object);
                var othStacked = stack.get(other);
                if (objStacked && othStacked) {
                  return objStacked == other && othStacked == object;
                }
                var result = true;
                stack.set(object, other);
                stack.set(other, object);
                var skipCtor = isPartial;
                while (++index < objLength) {
                  key = objProps[index];
                  var objValue = object[key], othValue = other[key];
                  if (customizer) {
                    var compared = isPartial ? customizer(othValue, objValue, key, other, object, stack) : customizer(objValue, othValue, key, object, other, stack);
                  }
                  if (!(compared === void 0 ? objValue === othValue || equalFunc(objValue, othValue, bitmask, customizer, stack) : compared)) {
                    result = false;
                    break;
                  }
                  skipCtor || (skipCtor = key == "constructor");
                }
                if (result && !skipCtor) {
                  var objCtor = object.constructor, othCtor = other.constructor;
                  if (objCtor != othCtor && ("constructor" in object && "constructor" in other) && !(typeof objCtor == "function" && objCtor instanceof objCtor && typeof othCtor == "function" && othCtor instanceof othCtor)) {
                    result = false;
                  }
                }
                stack["delete"](object);
                stack["delete"](other);
                return result;
              }
              module2.exports = equalObjects2;
            }
          ),
          /***/
          9021: (
            /***/
            (module2, __unused_webpack_exports, __webpack_require__2) => {
              var flatten = __webpack_require__2(5564), overRest = __webpack_require__2(5357), setToString = __webpack_require__2(61);
              function flatRest(func) {
                return setToString(overRest(func, void 0, flatten), func + "");
              }
              module2.exports = flatRest;
            }
          ),
          /***/
          1957: (
            /***/
            (module2, __unused_webpack_exports, __webpack_require__2) => {
              var freeGlobal2 = typeof __webpack_require__2.g == "object" && __webpack_require__2.g && __webpack_require__2.g.Object === Object && __webpack_require__2.g;
              module2.exports = freeGlobal2;
            }
          ),
          /***/
          8234: (
            /***/
            (module2, __unused_webpack_exports, __webpack_require__2) => {
              var baseGetAllKeys2 = __webpack_require__2(8866), getSymbols2 = __webpack_require__2(9551), keys2 = __webpack_require__2(3674);
              function getAllKeys2(object) {
                return baseGetAllKeys2(object, keys2, getSymbols2);
              }
              module2.exports = getAllKeys2;
            }
          ),
          /***/
          6904: (
            /***/
            (module2, __unused_webpack_exports, __webpack_require__2) => {
              var baseGetAllKeys2 = __webpack_require__2(8866), getSymbolsIn = __webpack_require__2(1442), keysIn = __webpack_require__2(1704);
              function getAllKeysIn(object) {
                return baseGetAllKeys2(object, keysIn, getSymbolsIn);
              }
              module2.exports = getAllKeysIn;
            }
          ),
          /***/
          5050: (
            /***/
            (module2, __unused_webpack_exports, __webpack_require__2) => {
              var isKeyable2 = __webpack_require__2(7019);
              function getMapData2(map2, key) {
                var data = map2.__data__;
                return isKeyable2(key) ? data[typeof key == "string" ? "string" : "hash"] : data.map;
              }
              module2.exports = getMapData2;
            }
          ),
          /***/
          1499: (
            /***/
            (module2, __unused_webpack_exports, __webpack_require__2) => {
              var isStrictComparable = __webpack_require__2(9162), keys2 = __webpack_require__2(3674);
              function getMatchData(object) {
                var result = keys2(object), length = result.length;
                while (length--) {
                  var key = result[length], value = object[key];
                  result[length] = [key, value, isStrictComparable(value)];
                }
                return result;
              }
              module2.exports = getMatchData;
            }
          ),
          /***/
          852: (
            /***/
            (module2, __unused_webpack_exports, __webpack_require__2) => {
              var baseIsNative2 = __webpack_require__2(8458), getValue2 = __webpack_require__2(7801);
              function getNative2(object, key) {
                var value = getValue2(object, key);
                return baseIsNative2(value) ? value : void 0;
              }
              module2.exports = getNative2;
            }
          ),
          /***/
          5924: (
            /***/
            (module2, __unused_webpack_exports, __webpack_require__2) => {
              var overArg2 = __webpack_require__2(5569);
              var getPrototype = overArg2(Object.getPrototypeOf, Object);
              module2.exports = getPrototype;
            }
          ),
          /***/
          9607: (
            /***/
            (module2, __unused_webpack_exports, __webpack_require__2) => {
              var Symbol2 = __webpack_require__2(2705);
              var objectProto2 = Object.prototype;
              var hasOwnProperty2 = objectProto2.hasOwnProperty;
              var nativeObjectToString2 = objectProto2.toString;
              var symToStringTag2 = Symbol2 ? Symbol2.toStringTag : void 0;
              function getRawTag2(value) {
                var isOwn = hasOwnProperty2.call(value, symToStringTag2), tag = value[symToStringTag2];
                try {
                  value[symToStringTag2] = void 0;
                  var unmasked = true;
                } catch (e) {
                }
                var result = nativeObjectToString2.call(value);
                if (unmasked) {
                  if (isOwn) {
                    value[symToStringTag2] = tag;
                  } else {
                    delete value[symToStringTag2];
                  }
                }
                return result;
              }
              module2.exports = getRawTag2;
            }
          ),
          /***/
          9551: (
            /***/
            (module2, __unused_webpack_exports, __webpack_require__2) => {
              var arrayFilter2 = __webpack_require__2(4963), stubArray2 = __webpack_require__2(479);
              var objectProto2 = Object.prototype;
              var propertyIsEnumerable2 = objectProto2.propertyIsEnumerable;
              var nativeGetSymbols2 = Object.getOwnPropertySymbols;
              var getSymbols2 = !nativeGetSymbols2 ? stubArray2 : function(object) {
                if (object == null) {
                  return [];
                }
                object = Object(object);
                return arrayFilter2(nativeGetSymbols2(object), function(symbol) {
                  return propertyIsEnumerable2.call(object, symbol);
                });
              };
              module2.exports = getSymbols2;
            }
          ),
          /***/
          1442: (
            /***/
            (module2, __unused_webpack_exports, __webpack_require__2) => {
              var arrayPush2 = __webpack_require__2(2488), getPrototype = __webpack_require__2(5924), getSymbols2 = __webpack_require__2(9551), stubArray2 = __webpack_require__2(479);
              var nativeGetSymbols2 = Object.getOwnPropertySymbols;
              var getSymbolsIn = !nativeGetSymbols2 ? stubArray2 : function(object) {
                var result = [];
                while (object) {
                  arrayPush2(result, getSymbols2(object));
                  object = getPrototype(object);
                }
                return result;
              };
              module2.exports = getSymbolsIn;
            }
          ),
          /***/
          4160: (
            /***/
            (module2, __unused_webpack_exports, __webpack_require__2) => {
              var DataView2 = __webpack_require__2(8552), Map2 = __webpack_require__2(7071), Promise2 = __webpack_require__2(3818), Set2 = __webpack_require__2(8525), WeakMap2 = __webpack_require__2(577), baseGetTag2 = __webpack_require__2(4239), toSource2 = __webpack_require__2(346);
              var mapTag2 = "[object Map]", objectTag2 = "[object Object]", promiseTag2 = "[object Promise]", setTag2 = "[object Set]", weakMapTag2 = "[object WeakMap]";
              var dataViewTag2 = "[object DataView]";
              var dataViewCtorString2 = toSource2(DataView2), mapCtorString2 = toSource2(Map2), promiseCtorString2 = toSource2(Promise2), setCtorString2 = toSource2(Set2), weakMapCtorString2 = toSource2(WeakMap2);
              var getTag2 = baseGetTag2;
              if (DataView2 && getTag2(new DataView2(new ArrayBuffer(1))) != dataViewTag2 || Map2 && getTag2(new Map2()) != mapTag2 || Promise2 && getTag2(Promise2.resolve()) != promiseTag2 || Set2 && getTag2(new Set2()) != setTag2 || WeakMap2 && getTag2(new WeakMap2()) != weakMapTag2) {
                getTag2 = function(value) {
                  var result = baseGetTag2(value), Ctor = result == objectTag2 ? value.constructor : void 0, ctorString = Ctor ? toSource2(Ctor) : "";
                  if (ctorString) {
                    switch (ctorString) {
                      case dataViewCtorString2:
                        return dataViewTag2;
                      case mapCtorString2:
                        return mapTag2;
                      case promiseCtorString2:
                        return promiseTag2;
                      case setCtorString2:
                        return setTag2;
                      case weakMapCtorString2:
                        return weakMapTag2;
                    }
                  }
                  return result;
                };
              }
              module2.exports = getTag2;
            }
          ),
          /***/
          7801: (
            /***/
            (module2) => {
              function getValue2(object, key) {
                return object == null ? void 0 : object[key];
              }
              module2.exports = getValue2;
            }
          ),
          /***/
          222: (
            /***/
            (module2, __unused_webpack_exports, __webpack_require__2) => {
              var castPath = __webpack_require__2(1811), isArguments2 = __webpack_require__2(5694), isArray2 = __webpack_require__2(1469), isIndex2 = __webpack_require__2(5776), isLength2 = __webpack_require__2(1780), toKey = __webpack_require__2(327);
              function hasPath(object, path, hasFunc) {
                path = castPath(path, object);
                var index = -1, length = path.length, result = false;
                while (++index < length) {
                  var key = toKey(path[index]);
                  if (!(result = object != null && hasFunc(object, key))) {
                    break;
                  }
                  object = object[key];
                }
                if (result || ++index != length) {
                  return result;
                }
                length = object == null ? 0 : object.length;
                return !!length && isLength2(length) && isIndex2(key, length) && (isArray2(object) || isArguments2(object));
              }
              module2.exports = hasPath;
            }
          ),
          /***/
          1789: (
            /***/
            (module2, __unused_webpack_exports, __webpack_require__2) => {
              var nativeCreate2 = __webpack_require__2(4536);
              function hashClear2() {
                this.__data__ = nativeCreate2 ? nativeCreate2(null) : {};
                this.size = 0;
              }
              module2.exports = hashClear2;
            }
          ),
          /***/
          401: (
            /***/
            (module2) => {
              function hashDelete2(key) {
                var result = this.has(key) && delete this.__data__[key];
                this.size -= result ? 1 : 0;
                return result;
              }
              module2.exports = hashDelete2;
            }
          ),
          /***/
          7667: (
            /***/
            (module2, __unused_webpack_exports, __webpack_require__2) => {
              var nativeCreate2 = __webpack_require__2(4536);
              var HASH_UNDEFINED2 = "__lodash_hash_undefined__";
              var objectProto2 = Object.prototype;
              var hasOwnProperty2 = objectProto2.hasOwnProperty;
              function hashGet2(key) {
                var data = this.__data__;
                if (nativeCreate2) {
                  var result = data[key];
                  return result === HASH_UNDEFINED2 ? void 0 : result;
                }
                return hasOwnProperty2.call(data, key) ? data[key] : void 0;
              }
              module2.exports = hashGet2;
            }
          ),
          /***/
          1327: (
            /***/
            (module2, __unused_webpack_exports, __webpack_require__2) => {
              var nativeCreate2 = __webpack_require__2(4536);
              var objectProto2 = Object.prototype;
              var hasOwnProperty2 = objectProto2.hasOwnProperty;
              function hashHas2(key) {
                var data = this.__data__;
                return nativeCreate2 ? data[key] !== void 0 : hasOwnProperty2.call(data, key);
              }
              module2.exports = hashHas2;
            }
          ),
          /***/
          1866: (
            /***/
            (module2, __unused_webpack_exports, __webpack_require__2) => {
              var nativeCreate2 = __webpack_require__2(4536);
              var HASH_UNDEFINED2 = "__lodash_hash_undefined__";
              function hashSet2(key, value) {
                var data = this.__data__;
                this.size += this.has(key) ? 0 : 1;
                data[key] = nativeCreate2 && value === void 0 ? HASH_UNDEFINED2 : value;
                return this;
              }
              module2.exports = hashSet2;
            }
          ),
          /***/
          3824: (
            /***/
            (module2) => {
              var objectProto2 = Object.prototype;
              var hasOwnProperty2 = objectProto2.hasOwnProperty;
              function initCloneArray(array) {
                var length = array.length, result = new array.constructor(length);
                if (length && typeof array[0] == "string" && hasOwnProperty2.call(array, "index")) {
                  result.index = array.index;
                  result.input = array.input;
                }
                return result;
              }
              module2.exports = initCloneArray;
            }
          ),
          /***/
          9148: (
            /***/
            (module2, __unused_webpack_exports, __webpack_require__2) => {
              var cloneArrayBuffer = __webpack_require__2(4318), cloneDataView = __webpack_require__2(7157), cloneRegExp = __webpack_require__2(3147), cloneSymbol = __webpack_require__2(419), cloneTypedArray = __webpack_require__2(7133);
              var boolTag2 = "[object Boolean]", dateTag2 = "[object Date]", mapTag2 = "[object Map]", numberTag2 = "[object Number]", regexpTag2 = "[object RegExp]", setTag2 = "[object Set]", stringTag2 = "[object String]", symbolTag2 = "[object Symbol]";
              var arrayBufferTag2 = "[object ArrayBuffer]", dataViewTag2 = "[object DataView]", float32Tag2 = "[object Float32Array]", float64Tag2 = "[object Float64Array]", int8Tag2 = "[object Int8Array]", int16Tag2 = "[object Int16Array]", int32Tag2 = "[object Int32Array]", uint8Tag2 = "[object Uint8Array]", uint8ClampedTag2 = "[object Uint8ClampedArray]", uint16Tag2 = "[object Uint16Array]", uint32Tag2 = "[object Uint32Array]";
              function initCloneByTag(object, tag, isDeep) {
                var Ctor = object.constructor;
                switch (tag) {
                  case arrayBufferTag2:
                    return cloneArrayBuffer(object);
                  case boolTag2:
                  case dateTag2:
                    return new Ctor(+object);
                  case dataViewTag2:
                    return cloneDataView(object, isDeep);
                  case float32Tag2:
                  case float64Tag2:
                  case int8Tag2:
                  case int16Tag2:
                  case int32Tag2:
                  case uint8Tag2:
                  case uint8ClampedTag2:
                  case uint16Tag2:
                  case uint32Tag2:
                    return cloneTypedArray(object, isDeep);
                  case mapTag2:
                    return new Ctor();
                  case numberTag2:
                  case stringTag2:
                    return new Ctor(object);
                  case regexpTag2:
                    return cloneRegExp(object);
                  case setTag2:
                    return new Ctor();
                  case symbolTag2:
                    return cloneSymbol(object);
                }
              }
              module2.exports = initCloneByTag;
            }
          ),
          /***/
          8517: (
            /***/
            (module2, __unused_webpack_exports, __webpack_require__2) => {
              var baseCreate = __webpack_require__2(3118), getPrototype = __webpack_require__2(5924), isPrototype2 = __webpack_require__2(5726);
              function initCloneObject(object) {
                return typeof object.constructor == "function" && !isPrototype2(object) ? baseCreate(getPrototype(object)) : {};
              }
              module2.exports = initCloneObject;
            }
          ),
          /***/
          7285: (
            /***/
            (module2, __unused_webpack_exports, __webpack_require__2) => {
              var Symbol2 = __webpack_require__2(2705), isArguments2 = __webpack_require__2(5694), isArray2 = __webpack_require__2(1469);
              var spreadableSymbol = Symbol2 ? Symbol2.isConcatSpreadable : void 0;
              function isFlattenable(value) {
                return isArray2(value) || isArguments2(value) || !!(spreadableSymbol && value && value[spreadableSymbol]);
              }
              module2.exports = isFlattenable;
            }
          ),
          /***/
          5776: (
            /***/
            (module2) => {
              var MAX_SAFE_INTEGER2 = 9007199254740991;
              var reIsUint2 = /^(?:0|[1-9]\d*)$/;
              function isIndex2(value, length) {
                var type2 = typeof value;
                length = length == null ? MAX_SAFE_INTEGER2 : length;
                return !!length && (type2 == "number" || type2 != "symbol" && reIsUint2.test(value)) && (value > -1 && value % 1 == 0 && value < length);
              }
              module2.exports = isIndex2;
            }
          ),
          /***/
          5403: (
            /***/
            (module2, __unused_webpack_exports, __webpack_require__2) => {
              var isArray2 = __webpack_require__2(1469), isSymbol2 = __webpack_require__2(3448);
              var reIsDeepProp = /\.|\[(?:[^[\]]*|(["'])(?:(?!\1)[^\\]|\\.)*?\1)\]/, reIsPlainProp = /^\w*$/;
              function isKey(value, object) {
                if (isArray2(value)) {
                  return false;
                }
                var type2 = typeof value;
                if (type2 == "number" || type2 == "symbol" || type2 == "boolean" || value == null || isSymbol2(value)) {
                  return true;
                }
                return reIsPlainProp.test(value) || !reIsDeepProp.test(value) || object != null && value in Object(object);
              }
              module2.exports = isKey;
            }
          ),
          /***/
          7019: (
            /***/
            (module2) => {
              function isKeyable2(value) {
                var type2 = typeof value;
                return type2 == "string" || type2 == "number" || type2 == "symbol" || type2 == "boolean" ? value !== "__proto__" : value === null;
              }
              module2.exports = isKeyable2;
            }
          ),
          /***/
          5346: (
            /***/
            (module2, __unused_webpack_exports, __webpack_require__2) => {
              var coreJsData2 = __webpack_require__2(4429);
              var maskSrcKey2 = function() {
                var uid = /[^.]+$/.exec(coreJsData2 && coreJsData2.keys && coreJsData2.keys.IE_PROTO || "");
                return uid ? "Symbol(src)_1." + uid : "";
              }();
              function isMasked2(func) {
                return !!maskSrcKey2 && maskSrcKey2 in func;
              }
              module2.exports = isMasked2;
            }
          ),
          /***/
          5726: (
            /***/
            (module2) => {
              var objectProto2 = Object.prototype;
              function isPrototype2(value) {
                var Ctor = value && value.constructor, proto = typeof Ctor == "function" && Ctor.prototype || objectProto2;
                return value === proto;
              }
              module2.exports = isPrototype2;
            }
          ),
          /***/
          9162: (
            /***/
            (module2, __unused_webpack_exports, __webpack_require__2) => {
              var isObject2 = __webpack_require__2(3218);
              function isStrictComparable(value) {
                return value === value && !isObject2(value);
              }
              module2.exports = isStrictComparable;
            }
          ),
          /***/
          7040: (
            /***/
            (module2) => {
              function listCacheClear2() {
                this.__data__ = [];
                this.size = 0;
              }
              module2.exports = listCacheClear2;
            }
          ),
          /***/
          4125: (
            /***/
            (module2, __unused_webpack_exports, __webpack_require__2) => {
              var assocIndexOf2 = __webpack_require__2(8470);
              var arrayProto2 = Array.prototype;
              var splice2 = arrayProto2.splice;
              function listCacheDelete2(key) {
                var data = this.__data__, index = assocIndexOf2(data, key);
                if (index < 0) {
                  return false;
                }
                var lastIndex = data.length - 1;
                if (index == lastIndex) {
                  data.pop();
                } else {
                  splice2.call(data, index, 1);
                }
                --this.size;
                return true;
              }
              module2.exports = listCacheDelete2;
            }
          ),
          /***/
          2117: (
            /***/
            (module2, __unused_webpack_exports, __webpack_require__2) => {
              var assocIndexOf2 = __webpack_require__2(8470);
              function listCacheGet2(key) {
                var data = this.__data__, index = assocIndexOf2(data, key);
                return index < 0 ? void 0 : data[index][1];
              }
              module2.exports = listCacheGet2;
            }
          ),
          /***/
          7518: (
            /***/
            (module2, __unused_webpack_exports, __webpack_require__2) => {
              var assocIndexOf2 = __webpack_require__2(8470);
              function listCacheHas2(key) {
                return assocIndexOf2(this.__data__, key) > -1;
              }
              module2.exports = listCacheHas2;
            }
          ),
          /***/
          4705: (
            /***/
            (module2, __unused_webpack_exports, __webpack_require__2) => {
              var assocIndexOf2 = __webpack_require__2(8470);
              function listCacheSet2(key, value) {
                var data = this.__data__, index = assocIndexOf2(data, key);
                if (index < 0) {
                  ++this.size;
                  data.push([key, value]);
                } else {
                  data[index][1] = value;
                }
                return this;
              }
              module2.exports = listCacheSet2;
            }
          ),
          /***/
          4785: (
            /***/
            (module2, __unused_webpack_exports, __webpack_require__2) => {
              var Hash2 = __webpack_require__2(1989), ListCache2 = __webpack_require__2(8407), Map2 = __webpack_require__2(7071);
              function mapCacheClear2() {
                this.size = 0;
                this.__data__ = {
                  "hash": new Hash2(),
                  "map": new (Map2 || ListCache2)(),
                  "string": new Hash2()
                };
              }
              module2.exports = mapCacheClear2;
            }
          ),
          /***/
          1285: (
            /***/
            (module2, __unused_webpack_exports, __webpack_require__2) => {
              var getMapData2 = __webpack_require__2(5050);
              function mapCacheDelete2(key) {
                var result = getMapData2(this, key)["delete"](key);
                this.size -= result ? 1 : 0;
                return result;
              }
              module2.exports = mapCacheDelete2;
            }
          ),
          /***/
          6e3: (
            /***/
            (module2, __unused_webpack_exports, __webpack_require__2) => {
              var getMapData2 = __webpack_require__2(5050);
              function mapCacheGet2(key) {
                return getMapData2(this, key).get(key);
              }
              module2.exports = mapCacheGet2;
            }
          ),
          /***/
          9916: (
            /***/
            (module2, __unused_webpack_exports, __webpack_require__2) => {
              var getMapData2 = __webpack_require__2(5050);
              function mapCacheHas2(key) {
                return getMapData2(this, key).has(key);
              }
              module2.exports = mapCacheHas2;
            }
          ),
          /***/
          5265: (
            /***/
            (module2, __unused_webpack_exports, __webpack_require__2) => {
              var getMapData2 = __webpack_require__2(5050);
              function mapCacheSet2(key, value) {
                var data = getMapData2(this, key), size2 = data.size;
                data.set(key, value);
                this.size += data.size == size2 ? 0 : 1;
                return this;
              }
              module2.exports = mapCacheSet2;
            }
          ),
          /***/
          8776: (
            /***/
            (module2) => {
              function mapToArray2(map2) {
                var index = -1, result = Array(map2.size);
                map2.forEach(function(value, key) {
                  result[++index] = [key, value];
                });
                return result;
              }
              module2.exports = mapToArray2;
            }
          ),
          /***/
          2634: (
            /***/
            (module2) => {
              function matchesStrictComparable(key, srcValue) {
                return function(object) {
                  if (object == null) {
                    return false;
                  }
                  return object[key] === srcValue && (srcValue !== void 0 || key in Object(object));
                };
              }
              module2.exports = matchesStrictComparable;
            }
          ),
          /***/
          4523: (
            /***/
            (module2, __unused_webpack_exports, __webpack_require__2) => {
              var memoize = __webpack_require__2(8306);
              var MAX_MEMOIZE_SIZE = 500;
              function memoizeCapped(func) {
                var result = memoize(func, function(key) {
                  if (cache.size === MAX_MEMOIZE_SIZE) {
                    cache.clear();
                  }
                  return key;
                });
                var cache = result.cache;
                return result;
              }
              module2.exports = memoizeCapped;
            }
          ),
          /***/
          4536: (
            /***/
            (module2, __unused_webpack_exports, __webpack_require__2) => {
              var getNative2 = __webpack_require__2(852);
              var nativeCreate2 = getNative2(Object, "create");
              module2.exports = nativeCreate2;
            }
          ),
          /***/
          6916: (
            /***/
            (module2, __unused_webpack_exports, __webpack_require__2) => {
              var overArg2 = __webpack_require__2(5569);
              var nativeKeys2 = overArg2(Object.keys, Object);
              module2.exports = nativeKeys2;
            }
          ),
          /***/
          3498: (
            /***/
            (module2) => {
              function nativeKeysIn(object) {
                var result = [];
                if (object != null) {
                  for (var key in Object(object)) {
                    result.push(key);
                  }
                }
                return result;
              }
              module2.exports = nativeKeysIn;
            }
          ),
          /***/
          1167: (
            /***/
            (module2, exports2, __webpack_require__2) => {
              module2 = __webpack_require__2.nmd(module2);
              var freeGlobal2 = __webpack_require__2(1957);
              var freeExports = exports2 && !exports2.nodeType && exports2;
              var freeModule = freeExports && true && module2 && !module2.nodeType && module2;
              var moduleExports = freeModule && freeModule.exports === freeExports;
              var freeProcess = moduleExports && freeGlobal2.process;
              var nodeUtil2 = function() {
                try {
                  var types = freeModule && freeModule.require && freeModule.require("util").types;
                  if (types) {
                    return types;
                  }
                  return freeProcess && freeProcess.binding && freeProcess.binding("util");
                } catch (e) {
                }
              }();
              module2.exports = nodeUtil2;
            }
          ),
          /***/
          2333: (
            /***/
            (module2) => {
              var objectProto2 = Object.prototype;
              var nativeObjectToString2 = objectProto2.toString;
              function objectToString2(value) {
                return nativeObjectToString2.call(value);
              }
              module2.exports = objectToString2;
            }
          ),
          /***/
          5569: (
            /***/
            (module2) => {
              function overArg2(func, transform) {
                return function(arg) {
                  return func(transform(arg));
                };
              }
              module2.exports = overArg2;
            }
          ),
          /***/
          5357: (
            /***/
            (module2, __unused_webpack_exports, __webpack_require__2) => {
              var apply = __webpack_require__2(6874);
              var nativeMax2 = Math.max;
              function overRest(func, start, transform) {
                start = nativeMax2(start === void 0 ? func.length - 1 : start, 0);
                return function() {
                  var args = arguments, index = -1, length = nativeMax2(args.length - start, 0), array = Array(length);
                  while (++index < length) {
                    array[index] = args[start + index];
                  }
                  index = -1;
                  var otherArgs = Array(start + 1);
                  while (++index < start) {
                    otherArgs[index] = args[index];
                  }
                  otherArgs[start] = transform(array);
                  return apply(func, this, otherArgs);
                };
              }
              module2.exports = overRest;
            }
          ),
          /***/
          292: (
            /***/
            (module2, __unused_webpack_exports, __webpack_require__2) => {
              var baseGet = __webpack_require__2(7786), baseSlice = __webpack_require__2(4259);
              function parent(object, path) {
                return path.length < 2 ? object : baseGet(object, baseSlice(path, 0, -1));
              }
              module2.exports = parent;
            }
          ),
          /***/
          5639: (
            /***/
            (module2, __unused_webpack_exports, __webpack_require__2) => {
              var freeGlobal2 = __webpack_require__2(1957);
              var freeSelf2 = typeof self == "object" && self && self.Object === Object && self;
              var root2 = freeGlobal2 || freeSelf2 || Function("return this")();
              module2.exports = root2;
            }
          ),
          /***/
          619: (
            /***/
            (module2) => {
              var HASH_UNDEFINED2 = "__lodash_hash_undefined__";
              function setCacheAdd2(value) {
                this.__data__.set(value, HASH_UNDEFINED2);
                return this;
              }
              module2.exports = setCacheAdd2;
            }
          ),
          /***/
          2385: (
            /***/
            (module2) => {
              function setCacheHas2(value) {
                return this.__data__.has(value);
              }
              module2.exports = setCacheHas2;
            }
          ),
          /***/
          1814: (
            /***/
            (module2) => {
              function setToArray2(set2) {
                var index = -1, result = Array(set2.size);
                set2.forEach(function(value) {
                  result[++index] = value;
                });
                return result;
              }
              module2.exports = setToArray2;
            }
          ),
          /***/
          61: (
            /***/
            (module2, __unused_webpack_exports, __webpack_require__2) => {
              var baseSetToString = __webpack_require__2(6560), shortOut = __webpack_require__2(1275);
              var setToString = shortOut(baseSetToString);
              module2.exports = setToString;
            }
          ),
          /***/
          1275: (
            /***/
            (module2) => {
              var HOT_COUNT = 800, HOT_SPAN = 16;
              var nativeNow = Date.now;
              function shortOut(func) {
                var count = 0, lastCalled = 0;
                return function() {
                  var stamp = nativeNow(), remaining = HOT_SPAN - (stamp - lastCalled);
                  lastCalled = stamp;
                  if (remaining > 0) {
                    if (++count >= HOT_COUNT) {
                      return arguments[0];
                    }
                  } else {
                    count = 0;
                  }
                  return func.apply(void 0, arguments);
                };
              }
              module2.exports = shortOut;
            }
          ),
          /***/
          7465: (
            /***/
            (module2, __unused_webpack_exports, __webpack_require__2) => {
              var ListCache2 = __webpack_require__2(8407);
              function stackClear2() {
                this.__data__ = new ListCache2();
                this.size = 0;
              }
              module2.exports = stackClear2;
            }
          ),
          /***/
          3779: (
            /***/
            (module2) => {
              function stackDelete2(key) {
                var data = this.__data__, result = data["delete"](key);
                this.size = data.size;
                return result;
              }
              module2.exports = stackDelete2;
            }
          ),
          /***/
          7599: (
            /***/
            (module2) => {
              function stackGet2(key) {
                return this.__data__.get(key);
              }
              module2.exports = stackGet2;
            }
          ),
          /***/
          4758: (
            /***/
            (module2) => {
              function stackHas2(key) {
                return this.__data__.has(key);
              }
              module2.exports = stackHas2;
            }
          ),
          /***/
          4309: (
            /***/
            (module2, __unused_webpack_exports, __webpack_require__2) => {
              var ListCache2 = __webpack_require__2(8407), Map2 = __webpack_require__2(7071), MapCache2 = __webpack_require__2(3369);
              var LARGE_ARRAY_SIZE2 = 200;
              function stackSet2(key, value) {
                var data = this.__data__;
                if (data instanceof ListCache2) {
                  var pairs2 = data.__data__;
                  if (!Map2 || pairs2.length < LARGE_ARRAY_SIZE2 - 1) {
                    pairs2.push([key, value]);
                    this.size = ++data.size;
                    return this;
                  }
                  data = this.__data__ = new MapCache2(pairs2);
                }
                data.set(key, value);
                this.size = data.size;
                return this;
              }
              module2.exports = stackSet2;
            }
          ),
          /***/
          2351: (
            /***/
            (module2) => {
              function strictIndexOf(array, value, fromIndex) {
                var index = fromIndex - 1, length = array.length;
                while (++index < length) {
                  if (array[index] === value) {
                    return index;
                  }
                }
                return -1;
              }
              module2.exports = strictIndexOf;
            }
          ),
          /***/
          5514: (
            /***/
            (module2, __unused_webpack_exports, __webpack_require__2) => {
              var memoizeCapped = __webpack_require__2(4523);
              var rePropName = /[^.[\]]+|\[(?:(-?\d+(?:\.\d+)?)|(["'])((?:(?!\2)[^\\]|\\.)*?)\2)\]|(?=(?:\.|\[\])(?:\.|\[\]|$))/g;
              var reEscapeChar = /\\(\\)?/g;
              var stringToPath = memoizeCapped(function(string) {
                var result = [];
                if (string.charCodeAt(0) === 46) {
                  result.push("");
                }
                string.replace(rePropName, function(match, number2, quote, subString) {
                  result.push(quote ? subString.replace(reEscapeChar, "$1") : number2 || match);
                });
                return result;
              });
              module2.exports = stringToPath;
            }
          ),
          /***/
          327: (
            /***/
            (module2, __unused_webpack_exports, __webpack_require__2) => {
              var isSymbol2 = __webpack_require__2(3448);
              var INFINITY2 = 1 / 0;
              function toKey(value) {
                if (typeof value == "string" || isSymbol2(value)) {
                  return value;
                }
                var result = value + "";
                return result == "0" && 1 / value == -INFINITY2 ? "-0" : result;
              }
              module2.exports = toKey;
            }
          ),
          /***/
          346: (
            /***/
            (module2) => {
              var funcProto2 = Function.prototype;
              var funcToString2 = funcProto2.toString;
              function toSource2(func) {
                if (func != null) {
                  try {
                    return funcToString2.call(func);
                  } catch (e) {
                  }
                  try {
                    return func + "";
                  } catch (e) {
                  }
                }
                return "";
              }
              module2.exports = toSource2;
            }
          ),
          /***/
          7990: (
            /***/
            (module2) => {
              var reWhitespace = /\s/;
              function trimmedEndIndex(string) {
                var index = string.length;
                while (index-- && reWhitespace.test(string.charAt(index))) {
                }
                return index;
              }
              module2.exports = trimmedEndIndex;
            }
          ),
          /***/
          6678: (
            /***/
            (module2, __unused_webpack_exports, __webpack_require__2) => {
              var baseClone = __webpack_require__2(5990);
              var CLONE_SYMBOLS_FLAG = 4;
              function clone(value) {
                return baseClone(value, CLONE_SYMBOLS_FLAG);
              }
              module2.exports = clone;
            }
          ),
          /***/
          361: (
            /***/
            (module2, __unused_webpack_exports, __webpack_require__2) => {
              var baseClone = __webpack_require__2(5990);
              var CLONE_DEEP_FLAG = 1, CLONE_SYMBOLS_FLAG = 4;
              function cloneDeep(value) {
                return baseClone(value, CLONE_DEEP_FLAG | CLONE_SYMBOLS_FLAG);
              }
              module2.exports = cloneDeep;
            }
          ),
          /***/
          5703: (
            /***/
            (module2) => {
              function constant(value) {
                return function() {
                  return value;
                };
              }
              module2.exports = constant;
            }
          ),
          /***/
          1966: (
            /***/
            (module2, __unused_webpack_exports, __webpack_require__2) => {
              var baseDifference = __webpack_require__2(731), baseFlatten = __webpack_require__2(1078), baseRest = __webpack_require__2(5976), isArrayLikeObject = __webpack_require__2(9246);
              var difference = baseRest(function(array, values) {
                return isArrayLikeObject(array) ? baseDifference(array, baseFlatten(values, 1, isArrayLikeObject, true)) : [];
              });
              module2.exports = difference;
            }
          ),
          /***/
          7813: (
            /***/
            (module2) => {
              function eq2(value, other) {
                return value === other || value !== value && other !== other;
              }
              module2.exports = eq2;
            }
          ),
          /***/
          3311: (
            /***/
            (module2, __unused_webpack_exports, __webpack_require__2) => {
              var createFind = __webpack_require__2(7740), findIndex = __webpack_require__2(998);
              var find = createFind(findIndex);
              module2.exports = find;
            }
          ),
          /***/
          998: (
            /***/
            (module2, __unused_webpack_exports, __webpack_require__2) => {
              var baseFindIndex = __webpack_require__2(1848), baseIteratee = __webpack_require__2(7206), toInteger = __webpack_require__2(554);
              var nativeMax2 = Math.max;
              function findIndex(array, predicate, fromIndex) {
                var length = array == null ? 0 : array.length;
                if (!length) {
                  return -1;
                }
                var index = fromIndex == null ? 0 : toInteger(fromIndex);
                if (index < 0) {
                  index = nativeMax2(length + index, 0);
                }
                return baseFindIndex(array, baseIteratee(predicate, 3), index);
              }
              module2.exports = findIndex;
            }
          ),
          /***/
          5564: (
            /***/
            (module2, __unused_webpack_exports, __webpack_require__2) => {
              var baseFlatten = __webpack_require__2(1078);
              function flatten(array) {
                var length = array == null ? 0 : array.length;
                return length ? baseFlatten(array, 1) : [];
              }
              module2.exports = flatten;
            }
          ),
          /***/
          7361: (
            /***/
            (module2, __unused_webpack_exports, __webpack_require__2) => {
              var baseGet = __webpack_require__2(7786);
              function get3(object, path, defaultValue) {
                var result = object == null ? void 0 : baseGet(object, path);
                return result === void 0 ? defaultValue : result;
              }
              module2.exports = get3;
            }
          ),
          /***/
          9095: (
            /***/
            (module2, __unused_webpack_exports, __webpack_require__2) => {
              var baseHasIn = __webpack_require__2(13), hasPath = __webpack_require__2(222);
              function hasIn(object, path) {
                return object != null && hasPath(object, path, baseHasIn);
              }
              module2.exports = hasIn;
            }
          ),
          /***/
          6557: (
            /***/
            (module2) => {
              function identity(value) {
                return value;
              }
              module2.exports = identity;
            }
          ),
          /***/
          3137: (
            /***/
            (module2, __unused_webpack_exports, __webpack_require__2) => {
              var constant = __webpack_require__2(5703), createInverter = __webpack_require__2(7779), identity = __webpack_require__2(6557);
              var objectProto2 = Object.prototype;
              var nativeObjectToString2 = objectProto2.toString;
              var invert = createInverter(function(result, value, key) {
                if (value != null && typeof value.toString != "function") {
                  value = nativeObjectToString2.call(value);
                }
                result[value] = key;
              }, constant(identity));
              module2.exports = invert;
            }
          ),
          /***/
          5694: (
            /***/
            (module2, __unused_webpack_exports, __webpack_require__2) => {
              var baseIsArguments2 = __webpack_require__2(9454), isObjectLike2 = __webpack_require__2(7005);
              var objectProto2 = Object.prototype;
              var hasOwnProperty2 = objectProto2.hasOwnProperty;
              var propertyIsEnumerable2 = objectProto2.propertyIsEnumerable;
              var isArguments2 = baseIsArguments2(/* @__PURE__ */ function() {
                return arguments;
              }()) ? baseIsArguments2 : function(value) {
                return isObjectLike2(value) && hasOwnProperty2.call(value, "callee") && !propertyIsEnumerable2.call(value, "callee");
              };
              module2.exports = isArguments2;
            }
          ),
          /***/
          1469: (
            /***/
            (module2) => {
              var isArray2 = Array.isArray;
              module2.exports = isArray2;
            }
          ),
          /***/
          8612: (
            /***/
            (module2, __unused_webpack_exports, __webpack_require__2) => {
              var isFunction2 = __webpack_require__2(3560), isLength2 = __webpack_require__2(1780);
              function isArrayLike2(value) {
                return value != null && isLength2(value.length) && !isFunction2(value);
              }
              module2.exports = isArrayLike2;
            }
          ),
          /***/
          9246: (
            /***/
            (module2, __unused_webpack_exports, __webpack_require__2) => {
              var isArrayLike2 = __webpack_require__2(8612), isObjectLike2 = __webpack_require__2(7005);
              function isArrayLikeObject(value) {
                return isObjectLike2(value) && isArrayLike2(value);
              }
              module2.exports = isArrayLikeObject;
            }
          ),
          /***/
          4144: (
            /***/
            (module2, exports2, __webpack_require__2) => {
              module2 = __webpack_require__2.nmd(module2);
              var root2 = __webpack_require__2(5639), stubFalse2 = __webpack_require__2(5062);
              var freeExports = exports2 && !exports2.nodeType && exports2;
              var freeModule = freeExports && true && module2 && !module2.nodeType && module2;
              var moduleExports = freeModule && freeModule.exports === freeExports;
              var Buffer2 = moduleExports ? root2.Buffer : void 0;
              var nativeIsBuffer = Buffer2 ? Buffer2.isBuffer : void 0;
              var isBuffer2 = nativeIsBuffer || stubFalse2;
              module2.exports = isBuffer2;
            }
          ),
          /***/
          8446: (
            /***/
            (module2, __unused_webpack_exports, __webpack_require__2) => {
              var baseIsEqual2 = __webpack_require__2(939);
              function isEqual2(value, other) {
                return baseIsEqual2(value, other);
              }
              module2.exports = isEqual2;
            }
          ),
          /***/
          3560: (
            /***/
            (module2, __unused_webpack_exports, __webpack_require__2) => {
              var baseGetTag2 = __webpack_require__2(4239), isObject2 = __webpack_require__2(3218);
              var asyncTag2 = "[object AsyncFunction]", funcTag2 = "[object Function]", genTag2 = "[object GeneratorFunction]", proxyTag2 = "[object Proxy]";
              function isFunction2(value) {
                if (!isObject2(value)) {
                  return false;
                }
                var tag = baseGetTag2(value);
                return tag == funcTag2 || tag == genTag2 || tag == asyncTag2 || tag == proxyTag2;
              }
              module2.exports = isFunction2;
            }
          ),
          /***/
          1780: (
            /***/
            (module2) => {
              var MAX_SAFE_INTEGER2 = 9007199254740991;
              function isLength2(value) {
                return typeof value == "number" && value > -1 && value % 1 == 0 && value <= MAX_SAFE_INTEGER2;
              }
              module2.exports = isLength2;
            }
          ),
          /***/
          6688: (
            /***/
            (module2, __unused_webpack_exports, __webpack_require__2) => {
              var baseIsMap = __webpack_require__2(5588), baseUnary2 = __webpack_require__2(1717), nodeUtil2 = __webpack_require__2(1167);
              var nodeIsMap = nodeUtil2 && nodeUtil2.isMap;
              var isMap = nodeIsMap ? baseUnary2(nodeIsMap) : baseIsMap;
              module2.exports = isMap;
            }
          ),
          /***/
          3218: (
            /***/
            (module2) => {
              function isObject2(value) {
                var type2 = typeof value;
                return value != null && (type2 == "object" || type2 == "function");
              }
              module2.exports = isObject2;
            }
          ),
          /***/
          7005: (
            /***/
            (module2) => {
              function isObjectLike2(value) {
                return value != null && typeof value == "object";
              }
              module2.exports = isObjectLike2;
            }
          ),
          /***/
          8630: (
            /***/
            (module2, __unused_webpack_exports, __webpack_require__2) => {
              var baseGetTag2 = __webpack_require__2(4239), getPrototype = __webpack_require__2(5924), isObjectLike2 = __webpack_require__2(7005);
              var objectTag2 = "[object Object]";
              var funcProto2 = Function.prototype, objectProto2 = Object.prototype;
              var funcToString2 = funcProto2.toString;
              var hasOwnProperty2 = objectProto2.hasOwnProperty;
              var objectCtorString = funcToString2.call(Object);
              function isPlainObject(value) {
                if (!isObjectLike2(value) || baseGetTag2(value) != objectTag2) {
                  return false;
                }
                var proto = getPrototype(value);
                if (proto === null) {
                  return true;
                }
                var Ctor = hasOwnProperty2.call(proto, "constructor") && proto.constructor;
                return typeof Ctor == "function" && Ctor instanceof Ctor && funcToString2.call(Ctor) == objectCtorString;
              }
              module2.exports = isPlainObject;
            }
          ),
          /***/
          2928: (
            /***/
            (module2, __unused_webpack_exports, __webpack_require__2) => {
              var baseIsSet = __webpack_require__2(9221), baseUnary2 = __webpack_require__2(1717), nodeUtil2 = __webpack_require__2(1167);
              var nodeIsSet = nodeUtil2 && nodeUtil2.isSet;
              var isSet = nodeIsSet ? baseUnary2(nodeIsSet) : baseIsSet;
              module2.exports = isSet;
            }
          ),
          /***/
          7037: (
            /***/
            (module2, __unused_webpack_exports, __webpack_require__2) => {
              var baseGetTag2 = __webpack_require__2(4239), isArray2 = __webpack_require__2(1469), isObjectLike2 = __webpack_require__2(7005);
              var stringTag2 = "[object String]";
              function isString2(value) {
                return typeof value == "string" || !isArray2(value) && isObjectLike2(value) && baseGetTag2(value) == stringTag2;
              }
              module2.exports = isString2;
            }
          ),
          /***/
          3448: (
            /***/
            (module2, __unused_webpack_exports, __webpack_require__2) => {
              var baseGetTag2 = __webpack_require__2(4239), isObjectLike2 = __webpack_require__2(7005);
              var symbolTag2 = "[object Symbol]";
              function isSymbol2(value) {
                return typeof value == "symbol" || isObjectLike2(value) && baseGetTag2(value) == symbolTag2;
              }
              module2.exports = isSymbol2;
            }
          ),
          /***/
          6719: (
            /***/
            (module2, __unused_webpack_exports, __webpack_require__2) => {
              var baseIsTypedArray2 = __webpack_require__2(8749), baseUnary2 = __webpack_require__2(1717), nodeUtil2 = __webpack_require__2(1167);
              var nodeIsTypedArray2 = nodeUtil2 && nodeUtil2.isTypedArray;
              var isTypedArray2 = nodeIsTypedArray2 ? baseUnary2(nodeIsTypedArray2) : baseIsTypedArray2;
              module2.exports = isTypedArray2;
            }
          ),
          /***/
          3674: (
            /***/
            (module2, __unused_webpack_exports, __webpack_require__2) => {
              var arrayLikeKeys2 = __webpack_require__2(4636), baseKeys2 = __webpack_require__2(280), isArrayLike2 = __webpack_require__2(8612);
              function keys2(object) {
                return isArrayLike2(object) ? arrayLikeKeys2(object) : baseKeys2(object);
              }
              module2.exports = keys2;
            }
          ),
          /***/
          1704: (
            /***/
            (module2, __unused_webpack_exports, __webpack_require__2) => {
              var arrayLikeKeys2 = __webpack_require__2(4636), baseKeysIn = __webpack_require__2(313), isArrayLike2 = __webpack_require__2(8612);
              function keysIn(object) {
                return isArrayLike2(object) ? arrayLikeKeys2(object, true) : baseKeysIn(object);
              }
              module2.exports = keysIn;
            }
          ),
          /***/
          928: (
            /***/
            (module2) => {
              function last(array) {
                var length = array == null ? 0 : array.length;
                return length ? array[length - 1] : void 0;
              }
              module2.exports = last;
            }
          ),
          /***/
          8306: (
            /***/
            (module2, __unused_webpack_exports, __webpack_require__2) => {
              var MapCache2 = __webpack_require__2(3369);
              var FUNC_ERROR_TEXT2 = "Expected a function";
              function memoize(func, resolver) {
                if (typeof func != "function" || resolver != null && typeof resolver != "function") {
                  throw new TypeError(FUNC_ERROR_TEXT2);
                }
                var memoized = function() {
                  var args = arguments, key = resolver ? resolver.apply(this, args) : args[0], cache = memoized.cache;
                  if (cache.has(key)) {
                    return cache.get(key);
                  }
                  var result = func.apply(this, args);
                  memoized.cache = cache.set(key, result) || cache;
                  return result;
                };
                memoized.cache = new (memoize.Cache || MapCache2)();
                return memoized;
              }
              memoize.Cache = MapCache2;
              module2.exports = memoize;
            }
          ),
          /***/
          308: (
            /***/
            (module2) => {
              function noop2() {
              }
              module2.exports = noop2;
            }
          ),
          /***/
          7557: (
            /***/
            (module2, __unused_webpack_exports, __webpack_require__2) => {
              var arrayMap = __webpack_require__2(9932), baseClone = __webpack_require__2(5990), baseUnset = __webpack_require__2(7406), castPath = __webpack_require__2(1811), copyObject = __webpack_require__2(8363), customOmitClone = __webpack_require__2(696), flatRest = __webpack_require__2(9021), getAllKeysIn = __webpack_require__2(6904);
              var CLONE_DEEP_FLAG = 1, CLONE_FLAT_FLAG = 2, CLONE_SYMBOLS_FLAG = 4;
              var omit = flatRest(function(object, paths) {
                var result = {};
                if (object == null) {
                  return result;
                }
                var isDeep = false;
                paths = arrayMap(paths, function(path) {
                  path = castPath(path, object);
                  isDeep || (isDeep = path.length > 1);
                  return path;
                });
                copyObject(object, getAllKeysIn(object), result);
                if (isDeep) {
                  result = baseClone(result, CLONE_DEEP_FLAG | CLONE_FLAT_FLAG | CLONE_SYMBOLS_FLAG, customOmitClone);
                }
                var length = paths.length;
                while (length--) {
                  baseUnset(result, paths[length]);
                }
                return result;
              });
              module2.exports = omit;
            }
          ),
          /***/
          9601: (
            /***/
            (module2, __unused_webpack_exports, __webpack_require__2) => {
              var baseProperty = __webpack_require__2(371), basePropertyDeep = __webpack_require__2(9152), isKey = __webpack_require__2(5403), toKey = __webpack_require__2(327);
              function property(path) {
                return isKey(path) ? baseProperty(toKey(path)) : basePropertyDeep(path);
              }
              module2.exports = property;
            }
          ),
          /***/
          479: (
            /***/
            (module2) => {
              function stubArray2() {
                return [];
              }
              module2.exports = stubArray2;
            }
          ),
          /***/
          5062: (
            /***/
            (module2) => {
              function stubFalse2() {
                return false;
              }
              module2.exports = stubFalse2;
            }
          ),
          /***/
          8601: (
            /***/
            (module2, __unused_webpack_exports, __webpack_require__2) => {
              var toNumber2 = __webpack_require__2(4841);
              var INFINITY2 = 1 / 0, MAX_INTEGER = 17976931348623157e292;
              function toFinite(value) {
                if (!value) {
                  return value === 0 ? value : 0;
                }
                value = toNumber2(value);
                if (value === INFINITY2 || value === -INFINITY2) {
                  var sign = value < 0 ? -1 : 1;
                  return sign * MAX_INTEGER;
                }
                return value === value ? value : 0;
              }
              module2.exports = toFinite;
            }
          ),
          /***/
          554: (
            /***/
            (module2, __unused_webpack_exports, __webpack_require__2) => {
              var toFinite = __webpack_require__2(8601);
              function toInteger(value) {
                var result = toFinite(value), remainder = result % 1;
                return result === result ? remainder ? result - remainder : result : 0;
              }
              module2.exports = toInteger;
            }
          ),
          /***/
          4841: (
            /***/
            (module2, __unused_webpack_exports, __webpack_require__2) => {
              var baseTrim = __webpack_require__2(7561), isObject2 = __webpack_require__2(3218), isSymbol2 = __webpack_require__2(3448);
              var NAN2 = 0 / 0;
              var reIsBadHex2 = /^[-+]0x[0-9a-f]+$/i;
              var reIsBinary2 = /^0b[01]+$/i;
              var reIsOctal2 = /^0o[0-7]+$/i;
              var freeParseInt2 = parseInt;
              function toNumber2(value) {
                if (typeof value == "number") {
                  return value;
                }
                if (isSymbol2(value)) {
                  return NAN2;
                }
                if (isObject2(value)) {
                  var other = typeof value.valueOf == "function" ? value.valueOf() : value;
                  value = isObject2(other) ? other + "" : other;
                }
                if (typeof value != "string") {
                  return value === 0 ? value : +value;
                }
                value = baseTrim(value);
                var isBinary2 = reIsBinary2.test(value);
                return isBinary2 || reIsOctal2.test(value) ? freeParseInt2(value.slice(2), isBinary2 ? 2 : 8) : reIsBadHex2.test(value) ? NAN2 : +value;
              }
              module2.exports = toNumber2;
            }
          ),
          /***/
          9833: (
            /***/
            (module2, __unused_webpack_exports, __webpack_require__2) => {
              var baseToString2 = __webpack_require__2(531);
              function toString3(value) {
                return value == null ? "" : baseToString2(value);
              }
              module2.exports = toString3;
            }
          ),
          /***/
          4908: (
            /***/
            (module2, __unused_webpack_exports, __webpack_require__2) => {
              var baseUniq = __webpack_require__2(5652);
              function uniq(array) {
                return array && array.length ? baseUniq(array) : [];
              }
              module2.exports = uniq;
            }
          ),
          /***/
          2569: (
            /***/
            (module2, __unused_webpack_exports, __webpack_require__2) => {
              var baseDifference = __webpack_require__2(731), baseRest = __webpack_require__2(5976), isArrayLikeObject = __webpack_require__2(9246);
              var without = baseRest(function(array, values) {
                return isArrayLikeObject(array) ? baseDifference(array, values) : [];
              });
              module2.exports = without;
            }
          )
          /******/
        };
        var __webpack_module_cache__ = {};
        function __webpack_require__(moduleId) {
          var cachedModule = __webpack_module_cache__[moduleId];
          if (cachedModule !== void 0) {
            return cachedModule.exports;
          }
          var module2 = __webpack_module_cache__[moduleId] = {
            /******/
            id: moduleId,
            /******/
            loaded: false,
            /******/
            exports: {}
            /******/
          };
          __webpack_modules__[moduleId](module2, module2.exports, __webpack_require__);
          module2.loaded = true;
          return module2.exports;
        }
        (() => {
          __webpack_require__.n = (module2) => {
            var getter = module2 && module2.__esModule ? (
              /******/
              () => module2["default"]
            ) : (
              /******/
              () => module2
            );
            __webpack_require__.d(getter, { a: getter });
            return getter;
          };
        })();
        (() => {
          __webpack_require__.d = (exports2, definition) => {
            for (var key in definition) {
              if (__webpack_require__.o(definition, key) && !__webpack_require__.o(exports2, key)) {
                Object.defineProperty(exports2, key, { enumerable: true, get: definition[key] });
              }
            }
          };
        })();
        (() => {
          __webpack_require__.g = function() {
            if (typeof globalThis === "object") return globalThis;
            try {
              return this || new Function("return this")();
            } catch (e) {
              if (typeof window === "object") return window;
            }
          }();
        })();
        (() => {
          __webpack_require__.o = (obj, prop) => Object.prototype.hasOwnProperty.call(obj, prop);
        })();
        (() => {
          __webpack_require__.r = (exports2) => {
            if (typeof Symbol !== "undefined" && Symbol.toStringTag) {
              Object.defineProperty(exports2, Symbol.toStringTag, { value: "Module" });
            }
            Object.defineProperty(exports2, "__esModule", { value: true });
          };
        })();
        (() => {
          __webpack_require__.nmd = (module2) => {
            module2.paths = [];
            if (!module2.children) module2.children = [];
            return module2;
          };
        })();
        var __webpack_exports__ = {};
        (() => {
          __webpack_require__.r(__webpack_exports__);
          __webpack_require__.d(__webpack_exports__, {
            "chordParserFactory": () => (
              /* reexport */
              parser_chordParserFactory
            ),
            "chordRendererFactory": () => (
              /* reexport */
              renderer_chordRendererFactory
            )
          });
          function chain(allFunctions, input2) {
            return allFunctions.reduce(function(value, fn) {
              return value ? fn(value) : null;
            }, input2);
          }
          var cloneDeep = __webpack_require__(361);
          var cloneDeep_default = /* @__PURE__ */ __webpack_require__.n(cloneDeep);
          var isString2 = __webpack_require__(7037);
          var isString_default = /* @__PURE__ */ __webpack_require__.n(isString2);
          var checkCustomFilters = function checkCustomFilters2(customFilters) {
            if (!Array.isArray(customFilters)) {
              throw new TypeError("customFilters should be given as an array");
            }
            if (customFilters.some(function(filter2) {
              return typeof filter2 !== "function";
            })) {
              throw new TypeError("The given filter is not a function");
            }
            return true;
          };
          const helpers_checkCustomFilters = checkCustomFilters;
          var invert = __webpack_require__(3137);
          var invert_default = /* @__PURE__ */ __webpack_require__.n(invert);
          var omit = __webpack_require__(7557);
          var omit_default = /* @__PURE__ */ __webpack_require__.n(omit);
          var _sharpsToFlats;
          function _typeof(obj) {
            "@babel/helpers - typeof";
            return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(obj2) {
              return typeof obj2;
            } : function(obj2) {
              return obj2 && "function" == typeof Symbol && obj2.constructor === Symbol && obj2 !== Symbol.prototype ? "symbol" : typeof obj2;
            }, _typeof(obj);
          }
          function ownKeys(object, enumerableOnly) {
            var keys2 = Object.keys(object);
            if (Object.getOwnPropertySymbols) {
              var symbols = Object.getOwnPropertySymbols(object);
              enumerableOnly && (symbols = symbols.filter(function(sym) {
                return Object.getOwnPropertyDescriptor(object, sym).enumerable;
              })), keys2.push.apply(keys2, symbols);
            }
            return keys2;
          }
          function _objectSpread(target) {
            for (var i = 1; i < arguments.length; i++) {
              var source = null != arguments[i] ? arguments[i] : {};
              i % 2 ? ownKeys(Object(source), true).forEach(function(key) {
                _defineProperty(target, key, source[key]);
              }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function(key) {
                Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
              });
            }
            return target;
          }
          function _defineProperty(obj, key, value) {
            key = _toPropertyKey(key);
            if (key in obj) {
              Object.defineProperty(obj, key, { value, enumerable: true, configurable: true, writable: true });
            } else {
              obj[key] = value;
            }
            return obj;
          }
          function _toPropertyKey(arg) {
            var key = _toPrimitive(arg, "string");
            return _typeof(key) === "symbol" ? key : String(key);
          }
          function _toPrimitive(input2, hint) {
            if (_typeof(input2) !== "object" || input2 === null) return input2;
            var prim = input2[Symbol.toPrimitive];
            if (prim !== void 0) {
              var res = prim.call(input2, hint || "default");
              if (_typeof(res) !== "object") return res;
              throw new TypeError("@@toPrimitive must return a primitive value.");
            }
            return (hint === "string" ? String : Number)(input2);
          }
          var notes = {
            AFlat: "Ab",
            A: "A",
            ASharp: "A#",
            BFlat: "Bb",
            B: "B",
            C: "C",
            CSharp: "C#",
            DFlat: "Db",
            D: "D",
            DSharp: "D#",
            EFlat: "Eb",
            E: "E",
            F: "F",
            FSharp: "F#",
            GFlat: "Gb",
            G: "G",
            GSharp: "G#"
          };
          var english = {
            Ab: notes.AFlat,
            A: notes.A,
            "A#": notes.ASharp,
            Bb: notes.BFlat,
            B: notes.B,
            "B#": notes.C,
            Cb: notes.B,
            C: notes.C,
            "C#": notes.CSharp,
            Db: notes.DFlat,
            D: notes.D,
            "D#": notes.DSharp,
            Eb: notes.EFlat,
            E: notes.E,
            "E#": notes.F,
            Fb: notes.E,
            F: notes.F,
            "F#": notes.FSharp,
            Gb: notes.GFlat,
            G: notes.G,
            "G#": notes.GSharp
          };
          var latin = {
            Lab: notes.AFlat,
            La: notes.A,
            "La#": notes.ASharp,
            Sib: notes.BFlat,
            Si: notes.B,
            "Si#": notes.C,
            Dob: notes.B,
            Do: notes.C,
            "Do#": notes.CSharp,
            Reb: notes.DFlat,
            Réb: notes.DFlat,
            Re: notes.D,
            Ré: notes.D,
            "Re#": notes.DSharp,
            "Ré#": notes.DSharp,
            Mib: notes.EFlat,
            Mi: notes.E,
            "Mi#": notes.F,
            Fab: notes.E,
            Fa: notes.F,
            "Fa#": notes.FSharp,
            Solb: notes.GFlat,
            Sol: notes.G,
            "Sol#": notes.GSharp
          };
          var german = _objectSpread(_objectSpread({}, omit_default()(english, ["Bb", "B", "B#"])), {}, {
            As: notes.AFlat,
            Ais: notes.ASharp,
            Hb: notes.BFlat,
            Hes: notes.BFlat,
            H: notes.B,
            His: notes.C,
            "H#": notes.C,
            Ces: notes.B,
            Cis: notes.CSharp,
            Des: notes.DFlat,
            Dis: notes.DSharp,
            Es: notes.EFlat,
            Eis: notes.F,
            Fes: notes.E,
            Fis: notes.FSharp,
            Ges: notes.GFlat,
            Gis: notes.GSharp
          });
          function getAccidentalsVariation(source) {
            var variant;
            return Object.keys(source).reduce(function(acc, curr) {
              if (curr.match(/.[b|#]$/)) {
                variant = curr.replace("#", "♯").replace("b", "♭");
                acc[variant] = source[curr];
              }
              return acc;
            }, {});
          }
          var englishVariantsToNotes = _objectSpread(_objectSpread({}, english), getAccidentalsVariation(english));
          var latinVariantsToNotes = _objectSpread(_objectSpread({}, latin), getAccidentalsVariation(latin));
          var germanVariantsToNotes = _objectSpread(_objectSpread({}, german), getAccidentalsVariation(german));
          var allVariantsToNotes = _objectSpread(_objectSpread(_objectSpread({}, englishVariantsToNotes), latinVariantsToNotes), germanVariantsToNotes);
          Object.keys(allVariantsToNotes).sort(function(a2, b) {
            return b.length - a2.length;
          });
          var englishVariants = Object.keys(englishVariantsToNotes).sort(function(a2, b) {
            return b.length - a2.length;
          });
          var latinVariants = Object.keys(latinVariantsToNotes).sort(function(a2, b) {
            return b.length - a2.length;
          });
          var germanVariants = Object.keys(germanVariantsToNotes).sort(function(a2, b) {
            return b.length - a2.length;
          });
          var allVariantsPerGroup = [{
            name: "english",
            notes: englishVariants
          }, {
            name: "german",
            notes: germanVariants
          }, {
            name: "latin",
            notes: latinVariants
          }];
          var notesSharp = [notes.A, notes.ASharp, notes.B, notes.C, notes.CSharp, notes.D, notes.DSharp, notes.E, notes.F, notes.FSharp, notes.G, notes.GSharp];
          var notesFlat = [notes.A, notes.BFlat, notes.B, notes.C, notes.DFlat, notes.D, notes.EFlat, notes.E, notes.F, notes.GFlat, notes.G, notes.AFlat];
          var sharpsToFlats = (_sharpsToFlats = {}, _defineProperty(_sharpsToFlats, notes.CSharp, notes.DFlat), _defineProperty(_sharpsToFlats, notes.DSharp, notes.EFlat), _defineProperty(_sharpsToFlats, notes.FSharp, notes.GFlat), _defineProperty(_sharpsToFlats, notes.GSharp, notes.AFlat), _defineProperty(_sharpsToFlats, notes.ASharp, notes.BFlat), _sharpsToFlats);
          var flatsToSharps = invert_default()(sharpsToFlats);
          function _toConsumableArray(arr) {
            return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread();
          }
          function _nonIterableSpread() {
            throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
          }
          function _unsupportedIterableToArray(o, minLen) {
            if (!o) return;
            if (typeof o === "string") return _arrayLikeToArray(o, minLen);
            var n2 = Object.prototype.toString.call(o).slice(8, -1);
            if (n2 === "Object" && o.constructor) n2 = o.constructor.name;
            if (n2 === "Map" || n2 === "Set") return Array.from(o);
            if (n2 === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n2)) return _arrayLikeToArray(o, minLen);
          }
          function _iterableToArray(iter) {
            if (typeof Symbol !== "undefined" && iter[Symbol.iterator] != null || iter["@@iterator"] != null) return Array.from(iter);
          }
          function _arrayWithoutHoles(arr) {
            if (Array.isArray(arr)) return _arrayLikeToArray(arr);
          }
          function _arrayLikeToArray(arr, len) {
            if (len == null || len > arr.length) len = arr.length;
            for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i];
            return arr2;
          }
          var allKeys = [].concat(_toConsumableArray(Object.values(notes)), _toConsumableArray(Object.values(notes).map(function(key) {
            return key + "m";
          })));
          function ChordParsingError_typeof(obj) {
            "@babel/helpers - typeof";
            return ChordParsingError_typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(obj2) {
              return typeof obj2;
            } : function(obj2) {
              return obj2 && "function" == typeof Symbol && obj2.constructor === Symbol && obj2 !== Symbol.prototype ? "symbol" : typeof obj2;
            }, ChordParsingError_typeof(obj);
          }
          function _createClass2(Constructor, protoProps, staticProps) {
            Object.defineProperty(Constructor, "prototype", { writable: false });
            return Constructor;
          }
          function _classCallCheck2(instance, Constructor) {
            if (!(instance instanceof Constructor)) {
              throw new TypeError("Cannot call a class as a function");
            }
          }
          function _inherits2(subClass, superClass) {
            if (typeof superClass !== "function" && superClass !== null) {
              throw new TypeError("Super expression must either be null or a function");
            }
            subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } });
            Object.defineProperty(subClass, "prototype", { writable: false });
            if (superClass) _setPrototypeOf2(subClass, superClass);
          }
          function _createSuper(Derived) {
            var hasNativeReflectConstruct = _isNativeReflectConstruct();
            return function _createSuperInternal() {
              var Super = _getPrototypeOf(Derived), result;
              if (hasNativeReflectConstruct) {
                var NewTarget = _getPrototypeOf(this).constructor;
                result = Reflect.construct(Super, arguments, NewTarget);
              } else {
                result = Super.apply(this, arguments);
              }
              return _possibleConstructorReturn2(this, result);
            };
          }
          function _possibleConstructorReturn2(self2, call) {
            if (call && (ChordParsingError_typeof(call) === "object" || typeof call === "function")) {
              return call;
            } else if (call !== void 0) {
              throw new TypeError("Derived constructors may only return object or undefined");
            }
            return _assertThisInitialized2(self2);
          }
          function _assertThisInitialized2(self2) {
            if (self2 === void 0) {
              throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
            }
            return self2;
          }
          function _wrapNativeSuper(Class) {
            var _cache = typeof Map === "function" ? /* @__PURE__ */ new Map() : void 0;
            _wrapNativeSuper = function _wrapNativeSuper2(Class2) {
              if (Class2 === null || !_isNativeFunction(Class2)) return Class2;
              if (typeof Class2 !== "function") {
                throw new TypeError("Super expression must either be null or a function");
              }
              if (typeof _cache !== "undefined") {
                if (_cache.has(Class2)) return _cache.get(Class2);
                _cache.set(Class2, Wrapper);
              }
              function Wrapper() {
                return _construct(Class2, arguments, _getPrototypeOf(this).constructor);
              }
              Wrapper.prototype = Object.create(Class2.prototype, { constructor: { value: Wrapper, enumerable: false, writable: true, configurable: true } });
              return _setPrototypeOf2(Wrapper, Class2);
            };
            return _wrapNativeSuper(Class);
          }
          function _construct(Parent, args, Class) {
            if (_isNativeReflectConstruct()) {
              _construct = Reflect.construct.bind();
            } else {
              _construct = function _construct2(Parent2, args2, Class2) {
                var a2 = [null];
                a2.push.apply(a2, args2);
                var Constructor = Function.bind.apply(Parent2, a2);
                var instance = new Constructor();
                if (Class2) _setPrototypeOf2(instance, Class2.prototype);
                return instance;
              };
            }
            return _construct.apply(null, arguments);
          }
          function _isNativeReflectConstruct() {
            if (typeof Reflect === "undefined" || !Reflect.construct) return false;
            if (Reflect.construct.sham) return false;
            if (typeof Proxy === "function") return true;
            try {
              Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
              }));
              return true;
            } catch (e) {
              return false;
            }
          }
          function _isNativeFunction(fn) {
            return Function.toString.call(fn).indexOf("[native code]") !== -1;
          }
          function _setPrototypeOf2(o, p2) {
            _setPrototypeOf2 = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf3(o2, p3) {
              o2.__proto__ = p3;
              return o2;
            };
            return _setPrototypeOf2(o, p2);
          }
          function _getPrototypeOf(o) {
            _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function _getPrototypeOf2(o2) {
              return o2.__proto__ || Object.getPrototypeOf(o2);
            };
            return _getPrototypeOf(o);
          }
          var InvalidInputError = /* @__PURE__ */ function(_Error) {
            _inherits2(InvalidInputError2, _Error);
            var _super = _createSuper(InvalidInputError2);
            function InvalidInputError2() {
              var _this;
              _classCallCheck2(this, InvalidInputError2);
              _this = _super.call(this, "The given symbol is not a valid string");
              _this.name = "InvalidInput";
              return _this;
            }
            return _createClass2(InvalidInputError2);
          }(/* @__PURE__ */ _wrapNativeSuper(Error));
          var UnexpectedError = /* @__PURE__ */ function(_Error2) {
            _inherits2(UnexpectedError2, _Error2);
            var _super2 = _createSuper(UnexpectedError2);
            function UnexpectedError2() {
              var _this2;
              _classCallCheck2(this, UnexpectedError2);
              var message = "An unexpected error happened. Maybe a custom filter returned null instead of throwing an exception?";
              _this2 = _super2.call(this, message);
              _this2.name = "UnexpectedError";
              return _this2;
            }
            return _createClass2(UnexpectedError2);
          }(/* @__PURE__ */ _wrapNativeSuper(Error));
          var ChordSymbolError = /* @__PURE__ */ function(_Error3) {
            _inherits2(ChordSymbolError2, _Error3);
            var _super3 = _createSuper(ChordSymbolError2);
            function ChordSymbolError2(message, chord, errorName) {
              var _this3;
              _classCallCheck2(this, ChordSymbolError2);
              _this3 = _super3.call(this, message);
              _this3.name = errorName;
              _this3.chord = chord;
              return _this3;
            }
            return _createClass2(ChordSymbolError2);
          }(/* @__PURE__ */ _wrapNativeSuper(Error));
          var NoSymbolFoundError = /* @__PURE__ */ function(_ChordSymbolError) {
            _inherits2(NoSymbolFoundError2, _ChordSymbolError);
            var _super4 = _createSuper(NoSymbolFoundError2);
            function NoSymbolFoundError2(chord) {
              _classCallCheck2(this, NoSymbolFoundError2);
              var message = '"'.concat(chord.input.symbol, '" does not seems to be a chord');
              return _super4.call(this, message, chord, "NoSymbolFound");
            }
            return _createClass2(NoSymbolFoundError2);
          }(ChordSymbolError);
          var InvalidModifierError = /* @__PURE__ */ function(_ChordSymbolError2) {
            _inherits2(InvalidModifierError2, _ChordSymbolError2);
            var _super5 = _createSuper(InvalidModifierError2);
            function InvalidModifierError2(chord, invalidChars) {
              _classCallCheck2(this, InvalidModifierError2);
              var message = 'The chord descriptor "'.concat(chord.input.descriptor, '" contains unknown or duplicated modifiers: "').concat(invalidChars, '"');
              return _super5.call(this, message, chord, "InvalidModifier");
            }
            return _createClass2(InvalidModifierError2);
          }(ChordSymbolError);
          var InvalidIntervalsError = /* @__PURE__ */ function(_ChordSymbolError3) {
            _inherits2(InvalidIntervalsError2, _ChordSymbolError3);
            var _super6 = _createSuper(InvalidIntervalsError2);
            function InvalidIntervalsError2(chord, forbiddenCombo) {
              _classCallCheck2(this, InvalidIntervalsError2);
              var message = '"'.concat(chord.input.symbol, '" describes a chord with an invalid intervals combo: ') + forbiddenCombo.join(" and ");
              return _super6.call(this, message, chord, "InvalidIntervals");
            }
            return _createClass2(InvalidIntervalsError2);
          }(ChordSymbolError);
          var isArray2 = __webpack_require__(1469);
          var isArray_default = /* @__PURE__ */ __webpack_require__.n(isArray2);
          var isEqual2 = __webpack_require__(8446);
          var isEqual_default = /* @__PURE__ */ __webpack_require__.n(isEqual2);
          function hasExactly2(allIntervals, search2) {
            var arraySearch = isArray_default()(search2) ? search2 : [search2];
            return isEqual_default()(allIntervals, arraySearch);
          }
          function hasOneOf(allIntervals, search2) {
            return has(allIntervals, search2, "oneOf");
          }
          function hasAll(allIntervals, search2) {
            return has(allIntervals, search2, "all");
          }
          function hasNoneOf(allIntervals, search2) {
            return has(allIntervals, search2, "none");
          }
          function has(allIntervals, search2, require2) {
            var arraySearch = isArray_default()(search2) ? search2 : [search2];
            var lookupMethod = require2 === "oneOf" ? "some" : "every";
            return arraySearch[lookupMethod](function(interval) {
              return require2 === "none" ? !allIntervals.includes(interval) : allIntervals.includes(interval);
            });
          }
          var allForbiddenCombos = [
            ["2", "3"],
            ["2", "9"],
            ["3", "b3"],
            //['3',  '4'], // valid in the Real Book: F#7SUS(add 3)
            ["4", "11"],
            ["5", "b5"],
            ["5", "#5"],
            ["b6", "#5"],
            ["b6", "6"],
            ["b6", "13"],
            ["6", "13"],
            ["b7", "bb7"],
            ["7", "b7"],
            ["9", "b9"],
            ["9", "#9"],
            ["11", "#11"],
            ["13", "b13"]
          ];
          function checkIntervalsConsistency(chord) {
            var intervals = chord.normalized.intervals;
            var forbiddenCombo = allForbiddenCombos.find(function(combo) {
              return hasAll(intervals, combo);
            });
            if (forbiddenCombo) {
              throw new InvalidIntervalsError(chord, forbiddenCombo);
            }
            return chord;
          }
          function formatSymbol(chord) {
            var _chord$formatted = chord.formatted, rootNote = _chord$formatted.rootNote, bassNote = _chord$formatted.bassNote, descriptor = _chord$formatted.descriptor, chordChanges = _chord$formatted.chordChanges;
            var symbol = rootNote;
            if (descriptor) {
              symbol += descriptor;
            }
            if (chordChanges && chordChanges.length) {
              symbol += "(" + chordChanges.join(",") + ")";
            }
            if (bassNote) {
              symbol += "/" + bassNote;
            }
            chord.formatted.symbol = symbol;
            return chord;
          }
          var qualities = {
            ma: "major",
            ma6: "major6",
            ma7: "major7",
            dom7: "dominant7",
            mi: "minor",
            mi6: "minor6",
            mi7: "minor7",
            miMa7: "minorMajor7",
            aug: "augmented",
            dim: "diminished",
            dim7: "diminished7",
            power: "power",
            bass: "bass"
          };
          var minorQualities = [qualities.mi, qualities.mi6, qualities.mi7, qualities.miMa7, qualities.dim, qualities.dim7];
          var _qualityToDescriptor;
          function formatSymbolParts_typeof(obj) {
            "@babel/helpers - typeof";
            return formatSymbolParts_typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(obj2) {
              return typeof obj2;
            } : function(obj2) {
              return obj2 && "function" == typeof Symbol && obj2.constructor === Symbol && obj2 !== Symbol.prototype ? "symbol" : typeof obj2;
            }, formatSymbolParts_typeof(obj);
          }
          function formatSymbolParts_toConsumableArray(arr) {
            return formatSymbolParts_arrayWithoutHoles(arr) || formatSymbolParts_iterableToArray(arr) || formatSymbolParts_unsupportedIterableToArray(arr) || formatSymbolParts_nonIterableSpread();
          }
          function formatSymbolParts_nonIterableSpread() {
            throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
          }
          function formatSymbolParts_unsupportedIterableToArray(o, minLen) {
            if (!o) return;
            if (typeof o === "string") return formatSymbolParts_arrayLikeToArray(o, minLen);
            var n2 = Object.prototype.toString.call(o).slice(8, -1);
            if (n2 === "Object" && o.constructor) n2 = o.constructor.name;
            if (n2 === "Map" || n2 === "Set") return Array.from(o);
            if (n2 === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n2)) return formatSymbolParts_arrayLikeToArray(o, minLen);
          }
          function formatSymbolParts_iterableToArray(iter) {
            if (typeof Symbol !== "undefined" && iter[Symbol.iterator] != null || iter["@@iterator"] != null) return Array.from(iter);
          }
          function formatSymbolParts_arrayWithoutHoles(arr) {
            if (Array.isArray(arr)) return formatSymbolParts_arrayLikeToArray(arr);
          }
          function formatSymbolParts_arrayLikeToArray(arr, len) {
            if (len == null || len > arr.length) len = arr.length;
            for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i];
            return arr2;
          }
          function formatSymbolParts_defineProperty(obj, key, value) {
            key = formatSymbolParts_toPropertyKey(key);
            if (key in obj) {
              Object.defineProperty(obj, key, { value, enumerable: true, configurable: true, writable: true });
            } else {
              obj[key] = value;
            }
            return obj;
          }
          function formatSymbolParts_toPropertyKey(arg) {
            var key = formatSymbolParts_toPrimitive(arg, "string");
            return formatSymbolParts_typeof(key) === "symbol" ? key : String(key);
          }
          function formatSymbolParts_toPrimitive(input2, hint) {
            if (formatSymbolParts_typeof(input2) !== "object" || input2 === null) return input2;
            var prim = input2[Symbol.toPrimitive];
            if (prim !== void 0) {
              var res = prim.call(input2, hint || "default");
              if (formatSymbolParts_typeof(res) !== "object") return res;
              throw new TypeError("@@toPrimitive must return a primitive value.");
            }
            return (hint === "string" ? String : Number)(input2);
          }
          var qualityToDescriptor = (_qualityToDescriptor = {}, formatSymbolParts_defineProperty(_qualityToDescriptor, qualities.ma, function() {
            return "";
          }), formatSymbolParts_defineProperty(_qualityToDescriptor, qualities.ma6, function(chord) {
            return chord.normalized.intervals.includes("9") ? "69" : "6";
          }), formatSymbolParts_defineProperty(_qualityToDescriptor, qualities.ma7, function(chord) {
            return "ma" + getHighestExtension(chord);
          }), formatSymbolParts_defineProperty(_qualityToDescriptor, qualities.dom7, function(chord) {
            return chord.normalized.intents.alt ? "7alt" : getHighestExtension(chord);
          }), formatSymbolParts_defineProperty(_qualityToDescriptor, qualities.mi, function() {
            return "mi";
          }), formatSymbolParts_defineProperty(_qualityToDescriptor, qualities.mi6, function(chord) {
            return chord.normalized.intervals.includes("9") ? "mi69" : "mi6";
          }), formatSymbolParts_defineProperty(_qualityToDescriptor, qualities.mi7, function(chord) {
            return "mi" + getHighestExtension(chord);
          }), formatSymbolParts_defineProperty(_qualityToDescriptor, qualities.miMa7, function(chord) {
            return "miMa" + getHighestExtension(chord);
          }), formatSymbolParts_defineProperty(_qualityToDescriptor, qualities.aug, function() {
            return "+";
          }), formatSymbolParts_defineProperty(_qualityToDescriptor, qualities.dim, function() {
            return "dim";
          }), formatSymbolParts_defineProperty(_qualityToDescriptor, qualities.dim7, function() {
            return "dim7";
          }), formatSymbolParts_defineProperty(_qualityToDescriptor, qualities.power, function() {
            return "5";
          }), formatSymbolParts_defineProperty(_qualityToDescriptor, qualities.bass, function() {
            return " bass";
          }), _qualityToDescriptor);
          var chordChangesDescriptors = {
            add: "add",
            add7: "Ma7",
            omit: "omit",
            sus: "sus"
          };
          function formatSymbolParts(chord) {
            chord.formatted = {
              rootNote: chord.normalized.rootNote,
              bassNote: chord.normalized.bassNote,
              descriptor: getDescriptor(chord),
              chordChanges: getChordChanges(chord)
            };
            return chord;
          }
          function getDescriptor(chord) {
            var descriptor = qualityToDescriptor[chord.normalized.quality](chord);
            if (chord.normalized.isSuspended) {
              descriptor += chordChangesDescriptors.sus;
            }
            return descriptor;
          }
          function getHighestExtension(chord) {
            var extensions = chord.normalized.extensions;
            var highestExtension = extensions[extensions.length - 1];
            if (highestExtension === "11" && chord.normalized.intents.major) {
              highestExtension = hasNoneOf(chord.normalized.alterations, ["b9", "#9"]) ? "9" : "7";
            }
            return highestExtension || "7";
          }
          function getChordChanges(chord) {
            var formattedOmits = formatOmits(chord.normalized.omits);
            if (isAltered(chord)) {
              return formattedOmits;
            }
            var formattedAdds = formatAdds(chord.normalized.quality, chord.normalized.adds);
            return [].concat(formatSymbolParts_toConsumableArray(chord.normalized.alterations), formatSymbolParts_toConsumableArray(formattedAdds), formatSymbolParts_toConsumableArray(formattedOmits));
          }
          function isAltered(chord) {
            return chord.normalized.intents.alt && chord.normalized.quality === qualities.dom7;
          }
          function formatAdds(quality, adds) {
            return adds.filter(function(add) {
              return !([qualities.ma6, qualities.mi6].includes(quality) && add === "9");
            }).map(function(add, index) {
              var formatted = "";
              if (index === 0) {
                formatted += chordChangesDescriptors.add;
                if (["b", "#"].includes(add[0])) {
                  formatted += " ";
                }
              }
              formatted += add === "7" ? chordChangesDescriptors.add7 : add;
              return formatted;
            });
          }
          function formatOmits(omits) {
            return omits.map(function(omitted, index) {
              var formatted = "";
              if (index === 0) {
                formatted += chordChangesDescriptors.omit;
              }
              formatted += omitted === "b3" ? "3" : omitted;
              return formatted;
            });
          }
          var u2 = {
            flat: "♭",
            // ♭
            sharp: "♯"
            // ♯
          };
          var semitonesToDegree = {
            major: {
              0: "I",
              //1: `${u.flat}II`,
              2: "II",
              3: "".concat(u2.flat, "III"),
              4: "III",
              5: "IV",
              //6: `${u.flat}V`,
              7: "V",
              8: "".concat(u2.flat, "VI"),
              9: "VI",
              10: "".concat(u2.flat, "VII"),
              11: "VII"
            },
            minor: {
              0: "I",
              //1: `${u.sharp}I`,
              2: "II",
              3: "III",
              4: "".concat(u2.sharp, "III"),
              5: "IV",
              //6: `${u.sharp}IV`,
              7: "V",
              8: "VI",
              9: "".concat(u2.sharp, "VI"),
              10: "VII",
              11: "".concat(u2.sharp, "VII")
            }
          };
          var formatNumeralSymbol_qualityToDescriptor;
          function formatNumeralSymbol_typeof(obj) {
            "@babel/helpers - typeof";
            return formatNumeralSymbol_typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(obj2) {
              return typeof obj2;
            } : function(obj2) {
              return obj2 && "function" == typeof Symbol && obj2.constructor === Symbol && obj2 !== Symbol.prototype ? "symbol" : typeof obj2;
            }, formatNumeralSymbol_typeof(obj);
          }
          function formatNumeralSymbol_defineProperty(obj, key, value) {
            key = formatNumeralSymbol_toPropertyKey(key);
            if (key in obj) {
              Object.defineProperty(obj, key, { value, enumerable: true, configurable: true, writable: true });
            } else {
              obj[key] = value;
            }
            return obj;
          }
          function formatNumeralSymbol_toPropertyKey(arg) {
            var key = formatNumeralSymbol_toPrimitive(arg, "string");
            return formatNumeralSymbol_typeof(key) === "symbol" ? key : String(key);
          }
          function formatNumeralSymbol_toPrimitive(input2, hint) {
            if (formatNumeralSymbol_typeof(input2) !== "object" || input2 === null) return input2;
            var prim = input2[Symbol.toPrimitive];
            if (prim !== void 0) {
              var res = prim.call(input2, hint || "default");
              if (formatNumeralSymbol_typeof(res) !== "object") return res;
              throw new TypeError("@@toPrimitive must return a primitive value.");
            }
            return (hint === "string" ? String : Number)(input2);
          }
          var formatNumeralSymbol_u = {
            sup2: "²",
            // ²
            sup4: "⁴",
            // ⁴
            sup5: "⁵",
            // ⁵
            sup6: "⁶",
            // ⁶
            sup7: "⁷",
            // ⁷
            sub3: "₃",
            // ₃
            sub4: "₄",
            // ₄
            sub5: "₅",
            // ₅
            flat: "♭",
            // ♭
            sharp: "♯"
            // ♯
          };
          var diatonicChords = {
            major: ["I", "ii", "iii", "IV", "V", "vi", "vii°"],
            dom7: ["IΔ", "ii".concat(formatNumeralSymbol_u.sup7), "iii".concat(formatNumeralSymbol_u.sup7), "IVΔ", "V".concat(formatNumeralSymbol_u.sup7), "vi".concat(formatNumeralSymbol_u.sup7), "viiø"],
            minor: ["i", "ii°", "III", "iv", "v", "VI", "VII"],
            minor7: ["i".concat(formatNumeralSymbol_u.sup7), "iiø", "IIIΔ", "iv".concat(formatNumeralSymbol_u.sup7), "v".concat(formatNumeralSymbol_u.sup7), "VIΔ", "VIIΔ"]
          };
          var borrowedChords = {
            borrowedFromMinor: ["i", "ii°", "".concat(formatNumeralSymbol_u.flat, "III"), "iv", "v", "".concat(formatNumeralSymbol_u.flat, "VI"), "".concat(formatNumeralSymbol_u.flat, "VII")],
            borrowedFromMinor7: ["i".concat(formatNumeralSymbol_u.sup7), "iiø", "".concat(formatNumeralSymbol_u.flat, "IIIΔ"), "iv".concat(formatNumeralSymbol_u.sup7), "v".concat(formatNumeralSymbol_u.sup7), "".concat(formatNumeralSymbol_u.flat, "VIΔ"), "".concat(formatNumeralSymbol_u.flat, "VIIΔ")],
            borrowedFromMajor: ["I", "ii", "".concat(formatNumeralSymbol_u.sharp, "iii"), "IV", "V", "".concat(formatNumeralSymbol_u.sharp, "vi"), "".concat(formatNumeralSymbol_u.sharp, "vii°")],
            borrowedFromDom7: ["IΔ", "ii".concat(formatNumeralSymbol_u.sup7), "".concat(formatNumeralSymbol_u.sharp, "iii").concat(formatNumeralSymbol_u.sup7), "IVΔ", "V".concat(formatNumeralSymbol_u.sup7), "".concat(formatNumeralSymbol_u.sharp, "vi").concat(formatNumeralSymbol_u.sup7), "".concat(formatNumeralSymbol_u.sharp, "viiø")]
          };
          function formatNumeralSymbol() {
            var key = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : "";
            var chord = arguments.length > 1 ? arguments[1] : void 0;
            var degree;
            var symbol;
            var type2;
            if (!key) key = chord.normalized.rootNote;
            var keyQuality = key.indexOf("m") > -1 ? "minor" : "major";
            var thirdQuality = minorQualities.includes(chord.normalized.quality) ? "minor" : "major";
            degree = getRomanDegree(key, keyQuality, chord, thirdQuality);
            var inversion = getInversion(chord);
            var descriptor = filters_formatNumeralSymbol_qualityToDescriptor[chord.normalized.quality](chord, inversion);
            symbol = "".concat(degree).concat(descriptor);
            if (isDiatonic(keyQuality, symbol)) {
              type2 = "diatonic";
            } else if (isBorrowed(keyQuality, symbol)) {
              type2 = "borrowed";
            } else {
              type2 = "unknown";
              degree = "?";
              symbol = "".concat(degree).concat(descriptor);
            }
            symbol += inversion;
            chord.numeral = {
              symbol,
              degree,
              descriptor,
              inversion,
              type: type2,
              thirdQuality
            };
            return chord;
          }
          function getRomanDegree(key, keyQuality, chord, thirdQuality) {
            var keyNote = key.replace("m", "");
            var interval = getIntervalBetweenNotes(keyNote, chord.normalized.rootNote);
            var romanDegree = semitonesToDegree[keyQuality][interval] || "?";
            return thirdQuality === "minor" ? romanDegree.toLowerCase() : romanDegree;
          }
          function getIntervalBetweenNotes(note1, note2) {
            var note1Index = notesSharp.indexOf(flatsToSharps[note1] || note1);
            var note2Index = notesSharp.indexOf(flatsToSharps[note2] || note2);
            return (note2Index - note1Index + 12) % 12;
          }
          var filters_formatNumeralSymbol_qualityToDescriptor = (formatNumeralSymbol_qualityToDescriptor = {}, formatNumeralSymbol_defineProperty(formatNumeralSymbol_qualityToDescriptor, qualities.ma, function() {
            return "";
          }), formatNumeralSymbol_defineProperty(formatNumeralSymbol_qualityToDescriptor, qualities.ma6, function() {
            return "";
          }), formatNumeralSymbol_defineProperty(formatNumeralSymbol_qualityToDescriptor, qualities.ma7, function() {
            return "Δ";
          }), formatNumeralSymbol_defineProperty(formatNumeralSymbol_qualityToDescriptor, qualities.dom7, function(chord, inversion) {
            return inversion === "" ? "".concat(formatNumeralSymbol_u.sup7) : "";
          }), formatNumeralSymbol_defineProperty(formatNumeralSymbol_qualityToDescriptor, qualities.mi, function() {
            return "";
          }), formatNumeralSymbol_defineProperty(formatNumeralSymbol_qualityToDescriptor, qualities.mi6, function() {
            return "";
          }), formatNumeralSymbol_defineProperty(formatNumeralSymbol_qualityToDescriptor, qualities.mi7, function(chord, inversion) {
            if (chord.normalized.intervals.includes("b5")) {
              return "ø";
            } else {
              return inversion === "" ? "".concat(formatNumeralSymbol_u.sup7) : "";
            }
          }), formatNumeralSymbol_defineProperty(formatNumeralSymbol_qualityToDescriptor, qualities.miMa7, function() {
            return "mΔ";
          }), formatNumeralSymbol_defineProperty(formatNumeralSymbol_qualityToDescriptor, qualities.aug, function() {
            return "+";
          }), formatNumeralSymbol_defineProperty(formatNumeralSymbol_qualityToDescriptor, qualities.dim, function() {
            return "°";
          }), formatNumeralSymbol_defineProperty(formatNumeralSymbol_qualityToDescriptor, qualities.dim7, function(chord, inversion) {
            return inversion === "" ? "°".concat(formatNumeralSymbol_u.sup7) : "°";
          }), formatNumeralSymbol_defineProperty(formatNumeralSymbol_qualityToDescriptor, qualities.power, function() {
            return "";
          }), formatNumeralSymbol_defineProperty(formatNumeralSymbol_qualityToDescriptor, qualities.bass, function() {
            return "";
          }), formatNumeralSymbol_qualityToDescriptor);
          function isDiatonic(keyQuality, symbol) {
            if (keyQuality === "major") {
              return diatonicChords.major.includes(symbol) || diatonicChords.dom7.includes(symbol);
            } else {
              return diatonicChords.minor.includes(symbol) || diatonicChords.minor7.includes(symbol);
            }
          }
          function isBorrowed(keyQuality, symbol) {
            if (keyQuality === "major") {
              return borrowedChords.borrowedFromMinor.includes(symbol) || borrowedChords.borrowedFromMinor7.includes(symbol);
            } else {
              return borrowedChords.borrowedFromMajor.includes(symbol) || borrowedChords.borrowedFromDom7.includes(symbol);
            }
          }
          function getInversion(chord) {
            var inversion = "";
            if (chord.normalized.bassNote) {
              if (bassIsThird(chord)) {
                inversion = isSeventh(chord) ? "".concat(formatNumeralSymbol_u.sup6).concat(formatNumeralSymbol_u.sub5) : "".concat(formatNumeralSymbol_u.sup6);
              } else if (bassIsFifth(chord)) {
                inversion = isSeventh(chord) ? "".concat(formatNumeralSymbol_u.sup4).concat(formatNumeralSymbol_u.sub3) : "".concat(formatNumeralSymbol_u.sup6).concat(formatNumeralSymbol_u.sub4);
              } else if (bassIsSeventh(chord)) {
                inversion = "²";
              }
            }
            return inversion;
          }
          function isSeventh(chord) {
            return [qualities.ma7, qualities.mi7, qualities.miMa7, qualities.dom7, qualities.dim7].includes(chord.normalized.quality);
          }
          function bassIsThird(chord) {
            return bassIsIntervalNote(chord, "b3") || bassIsIntervalNote(chord, "3");
          }
          function bassIsFifth(chord) {
            return bassIsIntervalNote(chord, "b5") || bassIsIntervalNote(chord, "5") || bassIsIntervalNote(chord, "#5");
          }
          function bassIsSeventh(chord) {
            return bassIsIntervalNote(chord, "bb7") || bassIsIntervalNote(chord, "b7") || bassIsIntervalNote(chord, "7");
          }
          function bassIsIntervalNote(chord, interval) {
            var intervalNoteIndex = chord.normalized.intervals.indexOf(interval);
            if (intervalNoteIndex === -1) return false;
            var normalizedBassNote = flatsToSharps[chord.normalized.bassNote] || chord.normalized.bassNote;
            var normalizedIntervalNote = flatsToSharps[chord.normalized.notes[intervalNoteIndex]] || chord.normalized.notes[intervalNoteIndex];
            return normalizedBassNote === normalizedIntervalNote;
          }
          function getParsableDescriptor(chord) {
            var allFilters = [toLowerCaseExceptMajorM, removeSpaces, addDisambiguators, addMissingVerbs];
            if (chord.input.descriptor) {
              chord.input.parsableDescriptor = chain(allFilters, chord.input.descriptor);
            }
            return chord;
          }
          function toLowerCaseExceptMajorM(descriptor) {
            return descriptor.replace(/[A-LN-Za-z]+/g, function(match) {
              return match.toLowerCase();
            }).replace("oMit", "omit").replace("diM", "dim").replace("augMented", "augmented");
          }
          function removeSpaces(descriptor) {
            return descriptor.replace(/ /g, "");
          }
          function addDisambiguators(descriptor) {
            return descriptor.replace(/(7?dim)(alt|add)/g, "$1 $2").replace(/([m|M])(alt|add)/g, "$1 $2").replace(/i(no[35])/g, "i $1").replace(/([b♭#♯]9)6/g, "$1 6").replace(/(9\/?6)/g, " $1").replaceAll("+5", "#5").replaceAll("-5", "b5");
          }
          function addMissingVerbs(descriptor) {
            var allTokensWithVerbs;
            var currentVerb;
            var hasVerb;
            return descriptor.replace(/\((.*?)\)/g, function(match, parenthesis) {
              allTokensWithVerbs = [];
              currentVerb = "";
              parenthesis.split(",").forEach(function(token) {
                hasVerb = true;
                if (token.startsWith("add")) {
                  currentVerb = "add";
                } else if (token.startsWith("omit")) {
                  currentVerb = "omit";
                } else if (token.startsWith("no")) {
                  currentVerb = "no";
                } else {
                  hasVerb = false;
                }
                if (hasVerb) {
                  allTokensWithVerbs.push(token);
                } else {
                  allTokensWithVerbs.push(currentVerb + token);
                }
              });
              return " " + allTokensWithVerbs.join(" ") + " ";
            });
          }
          function initChord() {
            var parserConfiguration = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};
            var symbol = arguments.length > 1 ? arguments[1] : void 0;
            return {
              input: {
                symbol
              },
              normalized: {},
              formatted: {},
              parserConfiguration: cloneDeep_default()(parserConfiguration)
            };
          }
          var scaleToAccidental = {
            C: "flat",
            D: "sharp",
            E: "sharp",
            F: "flat",
            G: "sharp",
            A: "sharp",
            B: "sharp",
            Cm: "flat",
            Dm: "flat",
            Em: "sharp",
            Fm: "flat",
            Gm: "flat",
            Am: "flat",
            Bm: "sharp"
          };
          function getScaleAccidental(scale2) {
            if (scale2.indexOf("#") > -1) {
              return "sharp";
            } else if (scale2.indexOf("b") > -1) {
              return "flat";
            } else return scaleToAccidental[scale2];
          }
          function nameIndividualChordNotes_toConsumableArray(arr) {
            return nameIndividualChordNotes_arrayWithoutHoles(arr) || nameIndividualChordNotes_iterableToArray(arr) || nameIndividualChordNotes_unsupportedIterableToArray(arr) || nameIndividualChordNotes_nonIterableSpread();
          }
          function nameIndividualChordNotes_nonIterableSpread() {
            throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
          }
          function nameIndividualChordNotes_unsupportedIterableToArray(o, minLen) {
            if (!o) return;
            if (typeof o === "string") return nameIndividualChordNotes_arrayLikeToArray(o, minLen);
            var n2 = Object.prototype.toString.call(o).slice(8, -1);
            if (n2 === "Object" && o.constructor) n2 = o.constructor.name;
            if (n2 === "Map" || n2 === "Set") return Array.from(o);
            if (n2 === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n2)) return nameIndividualChordNotes_arrayLikeToArray(o, minLen);
          }
          function nameIndividualChordNotes_iterableToArray(iter) {
            if (typeof Symbol !== "undefined" && iter[Symbol.iterator] != null || iter["@@iterator"] != null) return Array.from(iter);
          }
          function nameIndividualChordNotes_arrayWithoutHoles(arr) {
            if (Array.isArray(arr)) return nameIndividualChordNotes_arrayLikeToArray(arr);
          }
          function nameIndividualChordNotes_arrayLikeToArray(arr, len) {
            if (len == null || len > arr.length) len = arr.length;
            for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i];
            return arr2;
          }
          function nameIndividualChordNotes(chord) {
            var rootNote = chord.normalized.rootNote;
            var semitones = chord.normalized.semitones;
            var quality = chord.normalized.quality;
            var scale2 = rootNote;
            if (minorQualities.includes(quality)) {
              scale2 += "m";
            }
            var refNotes = getScaleAccidental(scale2) === "sharp" ? notesSharp : notesFlat;
            var rootNoteIndex = refNotes.indexOf(rootNote);
            var indexedNotes = [].concat(nameIndividualChordNotes_toConsumableArray(refNotes.slice(rootNoteIndex)), nameIndividualChordNotes_toConsumableArray(refNotes.slice(0, rootNoteIndex)), nameIndividualChordNotes_toConsumableArray(refNotes.slice(rootNoteIndex)), nameIndividualChordNotes_toConsumableArray(refNotes.slice(0, rootNoteIndex)));
            chord.normalized.notes = semitones.map(function(i) {
              return indexedNotes[i];
            });
            return chord;
          }
          function normalizeNotes(chord) {
            chord.normalized.rootNote = allVariantsToNotes[chord.input.rootNote];
            if (chord.input.bassNote) {
              chord.normalized.bassNote = allVariantsToNotes[chord.input.bassNote];
            }
            return chord;
          }
          var clone = __webpack_require__(6678);
          var clone_default = /* @__PURE__ */ __webpack_require__.n(clone);
          var find = __webpack_require__(3311);
          var find_default = /* @__PURE__ */ __webpack_require__.n(find);
          var uniq = __webpack_require__(4908);
          var uniq_default = /* @__PURE__ */ __webpack_require__.n(uniq);
          var without = __webpack_require__(2569);
          var without_default = /* @__PURE__ */ __webpack_require__.n(without);
          function normalizeDescriptor_typeof(obj) {
            "@babel/helpers - typeof";
            return normalizeDescriptor_typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(obj2) {
              return typeof obj2;
            } : function(obj2) {
              return obj2 && "function" == typeof Symbol && obj2.constructor === Symbol && obj2 !== Symbol.prototype ? "symbol" : typeof obj2;
            }, normalizeDescriptor_typeof(obj);
          }
          function normalizeDescriptor_ownKeys(object, enumerableOnly) {
            var keys2 = Object.keys(object);
            if (Object.getOwnPropertySymbols) {
              var symbols = Object.getOwnPropertySymbols(object);
              enumerableOnly && (symbols = symbols.filter(function(sym) {
                return Object.getOwnPropertyDescriptor(object, sym).enumerable;
              })), keys2.push.apply(keys2, symbols);
            }
            return keys2;
          }
          function normalizeDescriptor_objectSpread(target) {
            for (var i = 1; i < arguments.length; i++) {
              var source = null != arguments[i] ? arguments[i] : {};
              i % 2 ? normalizeDescriptor_ownKeys(Object(source), true).forEach(function(key) {
                normalizeDescriptor_defineProperty(target, key, source[key]);
              }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : normalizeDescriptor_ownKeys(Object(source)).forEach(function(key) {
                Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
              });
            }
            return target;
          }
          function normalizeDescriptor_defineProperty(obj, key, value) {
            key = normalizeDescriptor_toPropertyKey(key);
            if (key in obj) {
              Object.defineProperty(obj, key, { value, enumerable: true, configurable: true, writable: true });
            } else {
              obj[key] = value;
            }
            return obj;
          }
          function normalizeDescriptor_toPropertyKey(arg) {
            var key = normalizeDescriptor_toPrimitive(arg, "string");
            return normalizeDescriptor_typeof(key) === "symbol" ? key : String(key);
          }
          function normalizeDescriptor_toPrimitive(input2, hint) {
            if (normalizeDescriptor_typeof(input2) !== "object" || input2 === null) return input2;
            var prim = input2[Symbol.toPrimitive];
            if (prim !== void 0) {
              var res = prim.call(input2, hint || "default");
              if (normalizeDescriptor_typeof(res) !== "object") return res;
              throw new TypeError("@@toPrimitive must return a primitive value.");
            }
            return (hint === "string" ? String : Number)(input2);
          }
          function normalizeDescriptor_toConsumableArray(arr) {
            return normalizeDescriptor_arrayWithoutHoles(arr) || normalizeDescriptor_iterableToArray(arr) || normalizeDescriptor_unsupportedIterableToArray(arr) || normalizeDescriptor_nonIterableSpread();
          }
          function normalizeDescriptor_nonIterableSpread() {
            throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
          }
          function normalizeDescriptor_unsupportedIterableToArray(o, minLen) {
            if (!o) return;
            if (typeof o === "string") return normalizeDescriptor_arrayLikeToArray(o, minLen);
            var n2 = Object.prototype.toString.call(o).slice(8, -1);
            if (n2 === "Object" && o.constructor) n2 = o.constructor.name;
            if (n2 === "Map" || n2 === "Set") return Array.from(o);
            if (n2 === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n2)) return normalizeDescriptor_arrayLikeToArray(o, minLen);
          }
          function normalizeDescriptor_iterableToArray(iter) {
            if (typeof Symbol !== "undefined" && iter[Symbol.iterator] != null || iter["@@iterator"] != null) return Array.from(iter);
          }
          function normalizeDescriptor_arrayWithoutHoles(arr) {
            if (Array.isArray(arr)) return normalizeDescriptor_arrayLikeToArray(arr);
          }
          function normalizeDescriptor_arrayLikeToArray(arr, len) {
            if (len == null || len > arr.length) len = arr.length;
            for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i];
            return arr2;
          }
          function normalizeDescriptor(chord) {
            var chordIntervals = clone_default()(chord.normalized.intervals);
            var normalized = {
              quality: "",
              isSuspended: false,
              extensions: [],
              alterations: [],
              adds: [],
              omits: []
            };
            if (isPowerChord(chordIntervals)) {
              normalized.quality = qualities.power;
            } else if (isBass(chordIntervals)) {
              normalized.quality = qualities.bass;
            } else {
              var omits = getOmits(chordIntervals, chord.normalized.intents.major);
              var isSuspended = getIsSuspended(chordIntervals, chord.normalized.intents.major);
              var _getChordQuality = getChordQuality(chordIntervals, chord, isSuspended, omits), qualityIntervals = _getChordQuality.qualityIntervals, quality = _getChordQuality.quality;
              var extensions = getExtensions(chordIntervals, quality);
              var baseIntervals = ["1"].concat(normalizeDescriptor_toConsumableArray(qualityIntervals), normalizeDescriptor_toConsumableArray(extensions));
              var _getAddsAndAlteration = getAddsAndAlterations(chordIntervals, baseIntervals, quality), adds = _getAddsAndAlteration.adds, alterations = _getAddsAndAlteration.alterations;
              normalized = normalizeDescriptor_objectSpread(normalizeDescriptor_objectSpread({}, normalized), {}, {
                quality,
                isSuspended,
                extensions,
                alterations,
                adds,
                omits
              });
            }
            return normalizeDescriptor_objectSpread(normalizeDescriptor_objectSpread({}, chord), {}, {
              normalized: normalizeDescriptor_objectSpread(normalizeDescriptor_objectSpread({}, chord.normalized), normalized)
            });
          }
          function isPowerChord(intervals) {
            return hasExactly2(intervals, ["1", "5"]);
          }
          function isBass(intervals) {
            return hasExactly2(intervals, ["1"]);
          }
          function getIsSuspended(intervals, hasMajorIntent2) {
            return intervals.includes("4") || intervals.includes("11") && hasMajorIntent2 && !intervals.includes("3");
          }
          function getOmits(intervals, hasMajorIntent2) {
            var omits = [];
            if (hasNoneOf(intervals, ["b3", "3", "4", "11"]) || !hasMajorIntent2 && hasNoneOf(intervals, ["b3", "4"])) {
              omits.push(hasMajorIntent2 ? "3" : "b3");
            }
            if (hasNoneOf(intervals, ["b5", "5", "#5", "b13"])) {
              omits.push("5");
            }
            return omits;
          }
          function getChordQuality(allIntervals, chord, isSuspended, omits) {
            var intervalsForQualityDetection = getIntervalsForQualityDetection(allIntervals, chord, isSuspended, omits);
            var intervalsToQualities = [
              // !!! do not change order without a good reason
              {
                qualityIntervals: ["b3"],
                quality: qualities.mi
              },
              {
                qualityIntervals: ["b3", "6"],
                quality: qualities.mi6
              },
              {
                qualityIntervals: ["b3", "7"],
                quality: qualities.miMa7
              },
              {
                qualityIntervals: ["b3", "b7"],
                quality: qualities.mi7
              },
              {
                qualityIntervals: ["3"],
                quality: qualities.ma
              },
              {
                qualityIntervals: ["3", "6"],
                quality: qualities.ma6
              },
              {
                qualityIntervals: ["3", "7"],
                quality: qualities.ma7
              },
              {
                qualityIntervals: ["3", "b7"],
                quality: qualities.dom7
              },
              {
                qualityIntervals: ["3", "#5"],
                quality: qualities.aug
              },
              {
                qualityIntervals: ["b3", "b5"],
                quality: qualities.dim
              },
              {
                qualityIntervals: ["b3", "b5", "bb7"],
                quality: qualities.dim7
              }
            ].sort(function(a2, b) {
              return b.qualityIntervals.length - a2.qualityIntervals.length;
            });
            return find_default()(intervalsToQualities, function(o) {
              return hasAll(intervalsForQualityDetection, o.qualityIntervals);
            });
          }
          function getIntervalsForQualityDetection(allIntervals, chord, isSuspended, omits) {
            var allFilters = [undoOmit3.bind(null, omits), undoSuspension.bind(null, isSuspended, chord.normalized.intents.major), undoAlt5.bind(null, chord.normalized.intents.alt), uniq_default()];
            return chain(allFilters, clone_default()(allIntervals));
          }
          function undoOmit3(omits, allIntervals) {
            var with3rd = clone_default()(allIntervals);
            if (omits.includes("3")) {
              with3rd.push("3");
            } else if (omits.includes("b3")) {
              with3rd.push("b3");
            }
            return with3rd;
          }
          function undoSuspension(isSuspended, hasMajorIntent2, allIntervals) {
            if (isSuspended) {
              var unSuspended = without_default()(allIntervals, "4");
              unSuspended.push(hasMajorIntent2 ? "3" : "b3");
              return unSuspended;
            }
            return allIntervals;
          }
          function undoAlt5(isAlt, allIntervals) {
            if (isAlt) {
              var unaltered = without_default()(allIntervals, "b5", "#5");
              unaltered.push("5");
              return unaltered;
            }
            return allIntervals;
          }
          function getExtensions(allIntervals, quality) {
            var extensions = [];
            if (canBeExtended(quality)) {
              if (isMinorExtended13th(allIntervals, quality)) {
                extensions.push("9", "11", "13");
              } else if (isMajorExtended13th(allIntervals, quality)) {
                extensions.push("9", "13");
              } else if (isExtended11th(allIntervals)) {
                extensions.push("9", "11");
              } else if (isExtended9th(allIntervals)) {
                extensions.push("9");
              }
            }
            return extensions;
          }
          function canBeExtended(quality) {
            return [qualities.ma7, qualities.dom7, qualities.mi7, qualities.miMa7].includes(quality);
          }
          function canHave11th(quality) {
            return [qualities.mi7, qualities.miMa7].includes(quality);
          }
          function isMinorExtended13th(allIntervals, quality) {
            return canHave11th(quality) && hasOneOf(allIntervals, "13") && hasOneOf(allIntervals, ["11", "#11"]) && hasOneOf(allIntervals, ["b9", "9", "#9"]);
          }
          function isMajorExtended13th(allIntervals, quality) {
            return !canHave11th(quality) && hasOneOf(allIntervals, "13") && hasOneOf(allIntervals, ["b9", "9", "#9"]);
          }
          function isExtended11th(allIntervals) {
            return hasOneOf(allIntervals, "11") && hasOneOf(allIntervals, ["b9", "9", "#9"]);
          }
          function isExtended9th(allIntervals) {
            return allIntervals.includes("9");
          }
          function getAddsAndAlterations(chordIntervals, baseIntervals, quality) {
            var adds = [];
            var alterations = [];
            chordIntervals.filter(function(interval) {
              return interval !== "5" && interval !== "4";
            }).forEach(function(interval) {
              if (!baseIntervals.includes(interval)) {
                if (isAlteration(quality, interval)) {
                  alterations.push(interval);
                } else {
                  adds.push(interval);
                }
              }
            });
            if (hasAdd3(chordIntervals)) {
              adds.push("3");
            }
            return {
              adds: sortIntervals(adds),
              alterations: sortIntervals(alterations)
            };
          }
          function isAlteration(quality, interval) {
            var _qualityAlterations;
            var qualityAlterations = (_qualityAlterations = {}, normalizeDescriptor_defineProperty(_qualityAlterations, qualities.ma, ["b5", "#5", "#11", "b13"]), normalizeDescriptor_defineProperty(_qualityAlterations, qualities.ma6, ["b5", "#5", "#11", "b13"]), normalizeDescriptor_defineProperty(_qualityAlterations, qualities.ma7, ["b5", "#5", "#11", "b13"]), normalizeDescriptor_defineProperty(_qualityAlterations, qualities.dom7, ["b5", "#5", "b9", "#9", "#11", "b13"]), normalizeDescriptor_defineProperty(_qualityAlterations, qualities.mi, ["b5", "#5", "#11", "b13"]), normalizeDescriptor_defineProperty(_qualityAlterations, qualities.mi6, ["b5", "#5", "#11", "b13"]), normalizeDescriptor_defineProperty(_qualityAlterations, qualities.mi7, ["b5", "#5", "#11", "b13"]), normalizeDescriptor_defineProperty(_qualityAlterations, qualities.miMa7, ["b5", "#5", "#11", "b13"]), normalizeDescriptor_defineProperty(_qualityAlterations, qualities.aug, []), normalizeDescriptor_defineProperty(_qualityAlterations, qualities.dim, []), normalizeDescriptor_defineProperty(_qualityAlterations, qualities.dim7, []), _qualityAlterations);
            return qualityAlterations[quality].includes(interval);
          }
          function hasAdd3(allIntervals) {
            return hasAll(allIntervals, ["3", "4"]);
          }
          function sortIntervals(intervals) {
            return intervals.sort(function(a2, b) {
              var sortableA = Number.parseInt(a2.replace(/[b#]/, ""));
              var sortableB = Number.parseInt(b.replace(/[b#]/, ""));
              return sortableA - sortableB;
            });
          }
          function parseBase(noteVariants, chord) {
            var symbol = chord.input.symbol;
            var notesRegex = noteVariants.join("|");
            var notesAndDescriptorRegex = new RegExp("^(" + notesRegex + ")(.*?)(/(" + notesRegex + "))?$");
            var result = symbol.match(notesAndDescriptorRegex);
            if (result && result[1]) {
              chord.input.rootNote = result[1];
              if (result[2]) {
                chord.input.descriptor = result[2];
              }
              if (result[4]) {
                chord.input.bassNote = result[4];
              }
              return chord;
            } else {
              throw new NoSymbolFoundError(chord);
            }
          }
          function modifiers_typeof(obj) {
            "@babel/helpers - typeof";
            return modifiers_typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(obj2) {
              return typeof obj2;
            } : function(obj2) {
              return obj2 && "function" == typeof Symbol && obj2.constructor === Symbol && obj2 !== Symbol.prototype ? "symbol" : typeof obj2;
            }, modifiers_typeof(obj);
          }
          function modifiers_ownKeys(object, enumerableOnly) {
            var keys2 = Object.keys(object);
            if (Object.getOwnPropertySymbols) {
              var symbols = Object.getOwnPropertySymbols(object);
              enumerableOnly && (symbols = symbols.filter(function(sym) {
                return Object.getOwnPropertyDescriptor(object, sym).enumerable;
              })), keys2.push.apply(keys2, symbols);
            }
            return keys2;
          }
          function modifiers_objectSpread(target) {
            for (var i = 1; i < arguments.length; i++) {
              var source = null != arguments[i] ? arguments[i] : {};
              i % 2 ? modifiers_ownKeys(Object(source), true).forEach(function(key) {
                modifiers_defineProperty(target, key, source[key]);
              }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : modifiers_ownKeys(Object(source)).forEach(function(key) {
                Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
              });
            }
            return target;
          }
          function modifiers_defineProperty(obj, key, value) {
            key = modifiers_toPropertyKey(key);
            if (key in obj) {
              Object.defineProperty(obj, key, { value, enumerable: true, configurable: true, writable: true });
            } else {
              obj[key] = value;
            }
            return obj;
          }
          function modifiers_toPropertyKey(arg) {
            var key = modifiers_toPrimitive(arg, "string");
            return modifiers_typeof(key) === "symbol" ? key : String(key);
          }
          function modifiers_toPrimitive(input2, hint) {
            if (modifiers_typeof(input2) !== "object" || input2 === null) return input2;
            var prim = input2[Symbol.toPrimitive];
            if (prim !== void 0) {
              var res = prim.call(input2, hint || "default");
              if (modifiers_typeof(res) !== "object") return res;
              throw new TypeError("@@toPrimitive must return a primitive value.");
            }
            return (hint === "string" ? String : Number)(input2);
          }
          var allModifiers = {
            // base
            ma: "ma",
            mi: "mi",
            dim: "dim",
            halfDim: "halfDim",
            aug: "aug",
            seventh: "seventh",
            // suspended
            sus: "sus",
            sus2: "sus2",
            // extensions
            ninth: "ninth",
            eleventh: "eleventh",
            thirteenth: "thirteenth",
            // alterations
            fifthFlat: "b5",
            fifthSharp: "#5",
            ninthFlat: "b9",
            ninthSharp: "#9",
            eleventhSharp: "#11",
            thirteenthFlat: "b13",
            // added
            add3: "add3",
            add4: "add4",
            addb6: "addb6",
            add6: "add6",
            add69: "add69",
            add7: "add7",
            add9: "add9",
            add11: "add11",
            add13: "add13",
            // special
            bass: "bass",
            omit3: "omit3",
            omit5: "omit5",
            power: "power",
            alt: "alt"
          };
          var major = {
            "^": [allModifiers.ma, allModifiers.add7],
            Δ: [allModifiers.ma, allModifiers.add7],
            M: allModifiers.ma,
            Ma: allModifiers.ma,
            Maj: allModifiers.ma,
            Major: allModifiers.ma,
            ma: allModifiers.ma,
            maj: allModifiers.ma,
            major: allModifiers.ma
          };
          var major7th = getDerivedModifiers(major, allModifiers.add7, function(symbol) {
            return symbol + "7";
          });
          var add7 = getDerivedModifiers(major, allModifiers.add7, function(symbol) {
            return "add" + symbol + "7";
          });
          var allSymbols = modifiers_objectSpread(modifiers_objectSpread(modifiers_objectSpread(modifiers_objectSpread({}, major), major7th), {}, {
            // minor
            "-": allModifiers.mi,
            m: allModifiers.mi,
            Mi: allModifiers.mi,
            Min: allModifiers.mi,
            Minor: allModifiers.mi,
            mi: allModifiers.mi,
            min: allModifiers.mi,
            minor: allModifiers.mi,
            // diminished / augmented
            "°": allModifiers.dim,
            o: allModifiers.dim,
            0: allModifiers.dim,
            dim: allModifiers.dim,
            "dim.": allModifiers.dim,
            diminished: allModifiers.dim,
            Ø: allModifiers.halfDim,
            ø: allModifiers.halfDim,
            h: allModifiers.halfDim,
            "+": allModifiers.aug,
            aug: allModifiers.aug,
            augmented: allModifiers.aug,
            // seventh
            7: allModifiers.seventh,
            // suspended
            4: allModifiers.sus,
            sus: allModifiers.sus,
            sus4: allModifiers.sus,
            suspended: allModifiers.sus,
            suspended4: allModifiers.sus,
            sus2: allModifiers.sus2,
            suspended2: allModifiers.sus2,
            // extensions
            9: allModifiers.ninth,
            11: allModifiers.eleventh,
            13: allModifiers.thirteenth,
            // alterations
            b3: allModifiers.mi,
            b5: allModifiers.fifthFlat,
            "♭5": allModifiers.fifthFlat,
            "#5": allModifiers.fifthSharp,
            "♯5": allModifiers.fifthSharp,
            b9: allModifiers.ninthFlat,
            "♭9": allModifiers.ninthFlat,
            addb9: allModifiers.ninthFlat,
            "add♭9": allModifiers.ninthFlat,
            "#9": allModifiers.ninthSharp,
            "♯9": allModifiers.ninthSharp,
            "add#9": allModifiers.ninthSharp,
            "add♯9": allModifiers.ninthSharp,
            "#11": allModifiers.eleventhSharp,
            "♯11": allModifiers.eleventhSharp,
            "add#11": allModifiers.eleventhSharp,
            b13: allModifiers.thirteenthFlat,
            "♭13": allModifiers.thirteenthFlat,
            addb13: allModifiers.thirteenthFlat,
            "add♭13": allModifiers.thirteenthFlat
          }, add7), {}, {
            2: allModifiers.add9,
            add2: allModifiers.add9,
            add3: allModifiers.add3,
            add4: allModifiers.add4,
            addb6: allModifiers.addb6,
            b6: allModifiers.addb6,
            6: allModifiers.add6,
            add6: allModifiers.add6,
            "6/9": allModifiers.add69,
            69: allModifiers.add69,
            96: allModifiers.add69,
            "9/6": allModifiers.add69,
            add9: allModifiers.add9,
            add11: allModifiers.add11,
            add13: allModifiers.add13,
            // special
            bass: allModifiers.bass,
            omit3: allModifiers.omit3,
            no3: allModifiers.omit3,
            omit5: allModifiers.omit5,
            no5: allModifiers.omit5,
            5: allModifiers.power,
            alt: allModifiers.alt,
            "alt.": allModifiers.alt,
            altered: allModifiers.alt
          });
          function getDerivedModifiers(source, modifierId, derivedFn) {
            return Object.keys(source).map(derivedFn).reduce(function(acc, curr) {
              acc[curr] = modifierId;
              return acc;
            }, {});
          }
          var modifiers_allVariants = Object.keys(allSymbols).sort(function(a2, b) {
            return b.length - a2.length;
          });
          const modifiers = allModifiers;
          const intervalsToSemitones = {
            1: 0,
            2: 2,
            b3: 3,
            3: 4,
            4: 5,
            b5: 6,
            5: 7,
            "#5": 8,
            b6: 8,
            6: 9,
            bb7: 9,
            b7: 10,
            7: 11,
            b9: 13,
            9: 14,
            "#9": 15,
            11: 17,
            "#11": 18,
            b13: 20,
            13: 21
          };
          function parseDescriptor_toConsumableArray(arr) {
            return parseDescriptor_arrayWithoutHoles(arr) || parseDescriptor_iterableToArray(arr) || parseDescriptor_unsupportedIterableToArray(arr) || parseDescriptor_nonIterableSpread();
          }
          function parseDescriptor_nonIterableSpread() {
            throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
          }
          function parseDescriptor_unsupportedIterableToArray(o, minLen) {
            if (!o) return;
            if (typeof o === "string") return parseDescriptor_arrayLikeToArray(o, minLen);
            var n2 = Object.prototype.toString.call(o).slice(8, -1);
            if (n2 === "Object" && o.constructor) n2 = o.constructor.name;
            if (n2 === "Map" || n2 === "Set") return Array.from(o);
            if (n2 === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n2)) return parseDescriptor_arrayLikeToArray(o, minLen);
          }
          function parseDescriptor_iterableToArray(iter) {
            if (typeof Symbol !== "undefined" && iter[Symbol.iterator] != null || iter["@@iterator"] != null) return Array.from(iter);
          }
          function parseDescriptor_arrayWithoutHoles(arr) {
            if (Array.isArray(arr)) return parseDescriptor_arrayLikeToArray(arr);
          }
          function parseDescriptor_arrayLikeToArray(arr, len) {
            if (len == null || len > arr.length) len = arr.length;
            for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i];
            return arr2;
          }
          function parseDescriptor(altIntervals, chord) {
            var allModifiers2 = [];
            if (chord.input.parsableDescriptor) {
              allModifiers2 = getModifiers(chord);
            }
            chord.input.modifiers = allModifiers2;
            chord.normalized.intervals = getIntervals(allModifiers2, altIntervals);
            chord.normalized.semitones = getSemitones(chord.normalized.intervals);
            chord.normalized.intents = getIntents(allModifiers2);
            return chord;
          }
          function getModifiers(chord) {
            var parsableDescriptor = chord.input.parsableDescriptor;
            var modifiers2 = [];
            var descriptorRegex = new RegExp(modifiers_allVariants.map(escapeRegex).join("|"), "g");
            var descriptorMatches = parsableDescriptor.match(descriptorRegex);
            var remainingChars = parsableDescriptor;
            var allModifiersId;
            if (descriptorMatches) {
              descriptorMatches.forEach(function(match) {
                allModifiersId = allSymbols[match];
                if (!Array.isArray(allModifiersId)) {
                  allModifiersId = [allModifiersId];
                }
                allModifiersId.forEach(function(modifierId) {
                  if (modifiers2.includes(modifierId)) {
                    return;
                  }
                  modifiers2.push(modifierId);
                  remainingChars = remainingChars.replace(match, "");
                });
              });
            }
            if (modifiers2.length === 0) {
              throw new NoSymbolFoundError(chord);
            }
            if (remainingChars.trim().length > 0) {
              throw new InvalidModifierError(chord, remainingChars);
            }
            return modifiers2;
          }
          function getIntervals(allModifiers2, altIntervals) {
            if (allModifiers2.includes(modifiers.power)) {
              return ["1", "5"];
            } else if (allModifiers2.includes(modifiers.bass)) {
              return ["1"];
            }
            return uniq_default()(["1"].concat(parseDescriptor_toConsumableArray(getThird(allModifiers2)), parseDescriptor_toConsumableArray(getFourth(allModifiers2)), parseDescriptor_toConsumableArray(getFifths(allModifiers2, altIntervals)), parseDescriptor_toConsumableArray(getSixth(allModifiers2)), parseDescriptor_toConsumableArray(getSevenths(allModifiers2)), parseDescriptor_toConsumableArray(getNinths(allModifiers2, altIntervals)), parseDescriptor_toConsumableArray(getElevenths(allModifiers2, altIntervals)), parseDescriptor_toConsumableArray(getThirteenths(allModifiers2, altIntervals)))).sort(function(a2, b) {
              return intervalsToSemitones[a2] - intervalsToSemitones[b];
            });
          }
          function getThird(allModifiers2) {
            var third = [];
            if (allModifiers2.includes(modifiers.omit3)) {
              return [];
            }
            if (!hasOneOf(allModifiers2, [modifiers.sus, modifiers.sus2])) {
              if (!hasMajorIntent(allModifiers2)) {
                third.push("b3");
              } else if (!allModifiers2.includes(modifiers.eleventh)) {
                third.push("3");
              }
            }
            if (allModifiers2.includes(modifiers.add3)) {
              third.push("3");
            }
            return third;
          }
          function getFourth(allModifiers2) {
            var fourth = [];
            if (hasOneOf(allModifiers2, [modifiers.sus, modifiers.add4])) {
              fourth.push("4");
            }
            return fourth;
          }
          function getFifths(allModifiers2, altIntervals) {
            var fifths = [];
            if (allModifiers2.includes(modifiers.omit5)) {
              return [];
            }
            if (hasOneOf(allModifiers2, [modifiers.dim, modifiers.halfDim, modifiers.fifthFlat]) || shouldAlter(allModifiers2, altIntervals, "b5")) {
              fifths.push("b5");
            }
            if (hasOneOf(allModifiers2, [modifiers.aug, modifiers.fifthSharp]) || shouldAlter(allModifiers2, altIntervals, "#5")) {
              fifths.push("#5");
            }
            if (!fifths.length && !allModifiers2.includes(modifiers.thirteenthFlat)) {
              fifths.push("5");
            }
            return fifths;
          }
          function getSixth(allModifiers2) {
            var sixth = [];
            if (hasOneOf(allModifiers2, [modifiers.addb6])) {
              sixth.push("b6");
            }
            if (hasOneOf(allModifiers2, [modifiers.add6, modifiers.add69]) && !isExtended(allModifiers2) && !hasOneOf(allModifiers2, [modifiers.halfDim])) {
              sixth.push("6");
            }
            return sixth;
          }
          function getSevenths(allModifiers2) {
            var sevenths = [];
            if (hasOneOf(allModifiers2, [modifiers.alt])) {
              sevenths.push("b7");
            }
            if (hasOneOf(allModifiers2, [modifiers.seventh, modifiers.halfDim])) {
              if (allModifiers2.includes(modifiers.dim)) {
                sevenths.push("bb7");
              } else if (allModifiers2.includes(modifiers.halfDim)) {
                sevenths.push("b7");
              } else {
                sevenths.push(getMinorOrMajorSeventh(allModifiers2));
              }
            } else if (hasOneOf(allModifiers2, [modifiers.ninth, modifiers.eleventh, modifiers.thirteenth])) {
              sevenths.push(getMinorOrMajorSeventh(allModifiers2));
            }
            if (allModifiers2.includes(modifiers.add7)) {
              sevenths.push("7");
            }
            return sevenths;
          }
          function getMinorOrMajorSeventh(allModifiers2) {
            return allModifiers2.includes(modifiers.ma) ? "7" : "b7";
          }
          function getNinths(allModifiers2, altIntervals) {
            var ninth = [];
            if (hasOneOf(allModifiers2, [modifiers.add69, modifiers.ninth, modifiers.eleventh, modifiers.thirteenth]) && hasNoneOf(allModifiers2, [modifiers.ninthFlat, modifiers.ninthSharp])) {
              ninth.push("9");
            }
            if (hasOneOf(allModifiers2, [modifiers.sus2, modifiers.add9])) {
              ninth.push("9");
            }
            if (hasOneOf(allModifiers2, [modifiers.ninthFlat]) || shouldAlter(allModifiers2, altIntervals, "b9")) {
              ninth.push("b9");
            }
            if (hasOneOf(allModifiers2, [modifiers.ninthSharp]) || shouldAlter(allModifiers2, altIntervals, "#9")) {
              ninth.push("#9");
            }
            return ninth;
          }
          function getElevenths(allModifiers2, altIntervals) {
            var elevenths = [];
            if (hasOneOf(allModifiers2, [modifiers.thirteenth]) && !hasMajorIntent(allModifiers2)) {
              elevenths.push("11");
            } else if (hasOneOf(allModifiers2, [modifiers.eleventh, modifiers.add11])) {
              elevenths.push("11");
            }
            if (hasOneOf(allModifiers2, [modifiers.eleventhSharp]) || shouldAlter(allModifiers2, altIntervals, "#11")) {
              elevenths.push("#11");
            }
            return elevenths;
          }
          function getThirteenths(allModifiers2, altIntervals) {
            var thirteenths = [];
            if (hasOneOf(allModifiers2, [modifiers.add13, modifiers.thirteenth]) || hasOneOf(allModifiers2, [modifiers.add6, modifiers.add69]) && isExtended(allModifiers2) || hasOneOf(allModifiers2, [modifiers.add6, modifiers.add69]) && hasOneOf(allModifiers2, [modifiers.halfDim])) {
              thirteenths.push("13");
            }
            if (hasOneOf(allModifiers2, [modifiers.thirteenthFlat]) || shouldAlter(allModifiers2, altIntervals, "b13")) {
              thirteenths.push("b13");
            }
            return thirteenths;
          }
          function shouldAlter(allModifiers2, altIntervals, interval) {
            return allModifiers2.includes(modifiers.alt) && altIntervals.includes(interval);
          }
          function hasMajorIntent(allModifiers2) {
            return hasNoneOf(allModifiers2, [modifiers.mi, modifiers.dim, modifiers.dim7, modifiers.halfDim]);
          }
          function isExtended(allModifiers2) {
            return hasOneOf(allModifiers2, [modifiers.seventh, modifiers.ninth, modifiers.eleventh, modifiers.thirteenth]);
          }
          function escapeRegex(string) {
            return string.replace(/[.\-*+?^${}()|[\]\\]/g, "\\$&");
          }
          function getSemitones(allIntervals) {
            return allIntervals.map(function(interval) {
              return intervalsToSemitones[interval];
            }).sort(function(a2, b) {
              return a2 - b;
            });
          }
          function getIntents(allModifiers2) {
            return {
              major: hasMajorIntent(allModifiers2),
              eleventh: allModifiers2.includes(modifiers.eleventh),
              alt: allModifiers2.includes(modifiers.alt)
            };
          }
          function chordParserFactory_toConsumableArray(arr) {
            return chordParserFactory_arrayWithoutHoles(arr) || chordParserFactory_iterableToArray(arr) || chordParserFactory_unsupportedIterableToArray(arr) || chordParserFactory_nonIterableSpread();
          }
          function chordParserFactory_nonIterableSpread() {
            throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
          }
          function chordParserFactory_unsupportedIterableToArray(o, minLen) {
            if (!o) return;
            if (typeof o === "string") return chordParserFactory_arrayLikeToArray(o, minLen);
            var n2 = Object.prototype.toString.call(o).slice(8, -1);
            if (n2 === "Object" && o.constructor) n2 = o.constructor.name;
            if (n2 === "Map" || n2 === "Set") return Array.from(o);
            if (n2 === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n2)) return chordParserFactory_arrayLikeToArray(o, minLen);
          }
          function chordParserFactory_iterableToArray(iter) {
            if (typeof Symbol !== "undefined" && iter[Symbol.iterator] != null || iter["@@iterator"] != null) return Array.from(iter);
          }
          function chordParserFactory_arrayWithoutHoles(arr) {
            if (Array.isArray(arr)) return chordParserFactory_arrayLikeToArray(arr);
          }
          function chordParserFactory_arrayLikeToArray(arr, len) {
            if (len == null || len > arr.length) len = arr.length;
            for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i];
            return arr2;
          }
          function chordParserFactory() {
            var parserConfiguration = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};
            var allAltIntervals = ["b5", "#5", "b9", "#9", "#11", "b13"];
            var allNotationSystems2 = ["english", "german", "latin"];
            var _parserConfiguration$ = parserConfiguration.notationSystems, notationSystems = _parserConfiguration$ === void 0 ? cloneDeep_default()(allNotationSystems2) : _parserConfiguration$, _parserConfiguration$2 = parserConfiguration.altIntervals, altIntervals = _parserConfiguration$2 === void 0 ? cloneDeep_default()(allAltIntervals) : _parserConfiguration$2, _parserConfiguration$3 = parserConfiguration.customFilters, customFilters = _parserConfiguration$3 === void 0 ? [] : _parserConfiguration$3, _parserConfiguration$4 = parserConfiguration.key, key = _parserConfiguration$4 === void 0 ? "" : _parserConfiguration$4;
            checkAltIntervals(altIntervals, allAltIntervals);
            checkNotationSystems(notationSystems, allNotationSystems2);
            helpers_checkCustomFilters(customFilters);
            checkKey(key);
            return parseChord;
            function parseChord(symbol) {
              var allErrors = [];
              if (!isInputValid(symbol)) {
                var e = new InvalidInputError();
                allErrors.push(formatError2(e));
              }
              var allVariantsPerGroupCopy = cloneDeep_default()(allVariantsPerGroup).filter(function(variantsGroup) {
                return notationSystems.includes(variantsGroup.name);
              });
              var chord;
              var allFilters;
              var variants;
              if (!allErrors.length) {
                while (allVariantsPerGroupCopy.length && !chord) {
                  variants = allVariantsPerGroupCopy.shift();
                  allFilters = [initChord.bind(null, parserConfiguration), parseBase.bind(null, variants.notes), getParsableDescriptor, parseDescriptor.bind(null, altIntervals), checkIntervalsConsistency, normalizeNotes, normalizeDescriptor, formatSymbolParts, formatSymbol, nameIndividualChordNotes, formatNumeralSymbol.bind(null, key)].concat(chordParserFactory_toConsumableArray(customFilters));
                  try {
                    chord = chain(allFilters, symbol);
                    if (chord) {
                      chord.input.notationSystem = variants.name;
                    } else {
                      allErrors.push(getUnexpectedError(variants.name));
                    }
                  } catch (e2) {
                    allErrors.push(formatError2(e2, variants.name));
                  }
                }
              }
              return chord ? chord : {
                error: allErrors
              };
            }
          }
          function checkAltIntervals(altIntervals, allAltIntervals) {
            checkArray("altIntervals", altIntervals, allAltIntervals, true);
          }
          function checkNotationSystems(notationSystems, allNotationSystems2) {
            checkArray("notationSystems", notationSystems, allNotationSystems2);
          }
          function checkArray(arrayName, arrayToTest, allowedValues, allowEmpty) {
            if (!Array.isArray(arrayToTest)) {
              throw new TypeError("'".concat(arrayName, "' should be an array"));
            }
            if (!allowEmpty && arrayToTest.length === 0) {
              throw new TypeError("'".concat(arrayName, "' cannot be empty"));
            }
            arrayToTest.forEach(function(system) {
              if (!allowedValues.includes(system)) {
                throw new TypeError("'".concat(system, "' is not a valid value for ").concat(arrayName));
              }
            });
          }
          function checkKey(key) {
            if (key !== "" && (!isString_default()(key) || !allKeys.includes(key))) {
              throw new TypeError("'".concat(key, "' is not a valid value for key"));
            }
          }
          function isInputValid(input2) {
            return typeof input2 === "string" && input2.length > 0;
          }
          function getUnexpectedError(notationSystem) {
            var error = new UnexpectedError();
            return formatError2(error, notationSystem);
          }
          function formatError2(exceptionError, notationSystem) {
            return {
              type: exceptionError.name,
              chord: exceptionError.chord,
              message: exceptionError.message,
              notationSystem
            };
          }
          const parser_chordParserFactory = chordParserFactory;
          function shortenNormalized_typeof(obj) {
            "@babel/helpers - typeof";
            return shortenNormalized_typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(obj2) {
              return typeof obj2;
            } : function(obj2) {
              return obj2 && "function" == typeof Symbol && obj2.constructor === Symbol && obj2 !== Symbol.prototype ? "symbol" : typeof obj2;
            }, shortenNormalized_typeof(obj);
          }
          function shortenNormalized_ownKeys(object, enumerableOnly) {
            var keys2 = Object.keys(object);
            if (Object.getOwnPropertySymbols) {
              var symbols = Object.getOwnPropertySymbols(object);
              enumerableOnly && (symbols = symbols.filter(function(sym) {
                return Object.getOwnPropertyDescriptor(object, sym).enumerable;
              })), keys2.push.apply(keys2, symbols);
            }
            return keys2;
          }
          function shortenNormalized_objectSpread(target) {
            for (var i = 1; i < arguments.length; i++) {
              var source = null != arguments[i] ? arguments[i] : {};
              i % 2 ? shortenNormalized_ownKeys(Object(source), true).forEach(function(key) {
                shortenNormalized_defineProperty(target, key, source[key]);
              }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : shortenNormalized_ownKeys(Object(source)).forEach(function(key) {
                Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
              });
            }
            return target;
          }
          function shortenNormalized_defineProperty(obj, key, value) {
            key = shortenNormalized_toPropertyKey(key);
            if (key in obj) {
              Object.defineProperty(obj, key, { value, enumerable: true, configurable: true, writable: true });
            } else {
              obj[key] = value;
            }
            return obj;
          }
          function shortenNormalized_toPropertyKey(arg) {
            var key = shortenNormalized_toPrimitive(arg, "string");
            return shortenNormalized_typeof(key) === "symbol" ? key : String(key);
          }
          function shortenNormalized_toPrimitive(input2, hint) {
            if (shortenNormalized_typeof(input2) !== "object" || input2 === null) return input2;
            var prim = input2[Symbol.toPrimitive];
            if (prim !== void 0) {
              var res = prim.call(input2, hint || "default");
              if (shortenNormalized_typeof(res) !== "object") return res;
              throw new TypeError("@@toPrimitive must return a primitive value.");
            }
            return (hint === "string" ? String : Number)(input2);
          }
          var shortDescriptors = {
            sus2: "sus2",
            add2: "2",
            omit: "no",
            ma: "M",
            mi: "m",
            dim: "°",
            aug7: "7+",
            eleventh: "11"
          };
          function shortenNormalized(chord) {
            var descriptor;
            var chordChanges = chord.formatted.chordChanges;
            if (isSus2(chord)) {
              descriptor = shortDescriptors.sus2;
              chordChanges = [];
            } else if (isAdd2(chord)) {
              descriptor = shortDescriptors.add2;
              chordChanges = [];
            } else if (isAug7(chord)) {
              descriptor = shortDescriptors.aug7;
              chordChanges = [];
            } else {
              descriptor = chord.formatted.descriptor.replace("mi", shortDescriptors.mi).replace(/[m|M]a/, shortDescriptors.ma).replace("dim", shortDescriptors.dim);
              if (isEleventh(chord)) {
                descriptor = descriptor.replace(/7sus|9sus/, shortDescriptors.eleventh);
              }
            }
            chordChanges = chordChanges.map(function(change) {
              return change.replace(/[m|M]a/, shortDescriptors.ma).replace("omit", shortDescriptors.omit);
            });
            return shortenNormalized_objectSpread(shortenNormalized_objectSpread({}, chord), {}, {
              formatted: shortenNormalized_objectSpread(shortenNormalized_objectSpread({}, chord.formatted), {}, {
                descriptor,
                chordChanges
              })
            });
          }
          function isSus2(chord) {
            return hasExactly2(chord.normalized.intervals, ["1", "5", "9"]);
          }
          function isAdd2(chord) {
            return hasExactly2(chord.normalized.intervals, ["1", "3", "5", "9"]);
          }
          function isAug7(chord) {
            return hasExactly2(chord.normalized.intervals, ["1", "3", "#5", "b7"]);
          }
          function isEleventh(chord) {
            return chord.normalized.intents.eleventh;
          }
          var difference = __webpack_require__(1966);
          var difference_default = /* @__PURE__ */ __webpack_require__.n(difference);
          function simplify_simplify() {
            var level = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : "none";
            var chord = arguments.length > 1 ? arguments[1] : void 0;
            if (level === "none") {
              return chord;
            }
            var intervalsToRemove = {
              max: ["4", "b5", "#5", "6", "bb7", "b7", "7", "b9", "9", "#9", "11", "#11", "b13", "13"],
              core: ["4", "b9", "9", "#9", "11", "#11", "b13", "13"]
            };
            var intervals = difference_default()(chord.normalized.intervals, intervalsToRemove[level]);
            if (hasNoneOf(intervals, ["b3", "3"])) {
              intervals.push(chord.normalized.intents.major ? "3" : "b3");
            }
            if (hasNoneOf(intervals, ["b5", "5", "#5"])) {
              intervals.push("5");
            }
            chord.normalized.intervals = intervals;
            chord.normalized.semitones = intervals.map(function(interval) {
              return intervalsToSemitones[interval];
            });
            chord.normalized.intents.eleventh = false;
            chord.normalized.intents.alt = false;
            if (level === "max") {
              delete chord.normalized.bassNote;
            }
            var allFilters = [normalizeDescriptor, formatSymbolParts, nameIndividualChordNotes];
            return chain(allFilters, chord);
          }
          function transpose(transposeValue, accidental, chord) {
            var _chord$normalized = chord.normalized, rootNote = _chord$normalized.rootNote, bassNote = _chord$normalized.bassNote;
            var rootSharp = convertToSharp(rootNote);
            chord.normalized.rootNote = transposeNote(rootSharp, transposeValue, accidental);
            chord.formatted.rootNote = chord.normalized.rootNote;
            if (bassNote) {
              var bassSharp = convertToSharp(bassNote);
              chord.normalized.bassNote = transposeNote(bassSharp, transposeValue, accidental);
              chord.formatted.bassNote = chord.normalized.bassNote;
            }
            return nameIndividualChordNotes(chord);
          }
          function transposeNote(note, value, accidental) {
            var noteIndex = notesSharp.indexOf(note);
            var transposedIndex = noteIndex + value;
            var octaves = Math.floor(transposedIndex / 12);
            var correctedTransposedIndex = transposedIndex - octaves * 12;
            var transposed = notesSharp[correctedTransposedIndex];
            return accidental === "flat" ? sharpsToFlats[transposed] || transposed : transposed;
          }
          function convertToSharp(note) {
            return flatsToSharps[note] || note;
          }
          var translationTables = {
            german: {
              Ab: "As",
              A: "A",
              "A#": "Ais",
              Bb: "Hes",
              B: "H",
              C: "C",
              "C#": "Cis",
              Db: "Des",
              D: "D",
              "D#": "Dis",
              Eb: "Es",
              E: "E",
              F: "F",
              "F#": "Fis",
              Gb: "Ges",
              G: "G",
              "G#": "Gis"
            },
            latin: {
              Ab: "Lab",
              A: "La",
              "A#": "La#",
              Bb: "Sib",
              B: "Si",
              C: "Do",
              "C#": "Do#",
              Db: "Reb",
              D: "Re",
              "D#": "Re#",
              Eb: "Mib",
              E: "Mi",
              F: "Fa",
              "F#": "Fa#",
              Gb: "Solb",
              G: "Sol",
              "G#": "Sol#"
            }
          };
          var allNotationSystems = Object.keys(translationTables);
          function convertNotationSystem() {
            var notationSystem = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : "english";
            var chord = arguments.length > 1 ? arguments[1] : void 0;
            var finalNotationSystem = notationSystem === "auto" ? chord.input.notationSystem : notationSystem;
            if (finalNotationSystem === "english") return chord;
            if (!allNotationSystems.includes(finalNotationSystem)) return null;
            chord.formatted.rootNote = translationTables[finalNotationSystem][chord.formatted.rootNote];
            if (chord.formatted.bassNote) {
              chord.formatted.bassNote = translationTables[finalNotationSystem][chord.formatted.bassNote];
            }
            return chord;
          }
          function textPrinter(chord) {
            return chord && chord.formatted && chord.formatted.symbol ? chord.formatted.symbol : null;
          }
          function rawPrinter(chord) {
            delete chord.parserConfiguration.notationSystems;
            var cloned = cloneDeep_default()(chord);
            var textPrinted = textPrinter(chord);
            var parseChord = parser_chordParserFactory(chord.parserConfiguration);
            var reParsed = parseChord(textPrinted);
            cloned.input = reParsed.input;
            return cloned;
          }
          function chordRendererFactory_typeof(obj) {
            "@babel/helpers - typeof";
            return chordRendererFactory_typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(obj2) {
              return typeof obj2;
            } : function(obj2) {
              return obj2 && "function" == typeof Symbol && obj2.constructor === Symbol && obj2 !== Symbol.prototype ? "symbol" : typeof obj2;
            }, chordRendererFactory_typeof(obj);
          }
          function chordRendererFactory_toConsumableArray(arr) {
            return chordRendererFactory_arrayWithoutHoles(arr) || chordRendererFactory_iterableToArray(arr) || chordRendererFactory_unsupportedIterableToArray(arr) || chordRendererFactory_nonIterableSpread();
          }
          function chordRendererFactory_nonIterableSpread() {
            throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
          }
          function chordRendererFactory_unsupportedIterableToArray(o, minLen) {
            if (!o) return;
            if (typeof o === "string") return chordRendererFactory_arrayLikeToArray(o, minLen);
            var n2 = Object.prototype.toString.call(o).slice(8, -1);
            if (n2 === "Object" && o.constructor) n2 = o.constructor.name;
            if (n2 === "Map" || n2 === "Set") return Array.from(o);
            if (n2 === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n2)) return chordRendererFactory_arrayLikeToArray(o, minLen);
          }
          function chordRendererFactory_iterableToArray(iter) {
            if (typeof Symbol !== "undefined" && iter[Symbol.iterator] != null || iter["@@iterator"] != null) return Array.from(iter);
          }
          function chordRendererFactory_arrayWithoutHoles(arr) {
            if (Array.isArray(arr)) return chordRendererFactory_arrayLikeToArray(arr);
          }
          function chordRendererFactory_arrayLikeToArray(arr, len) {
            if (len == null || len > arr.length) len = arr.length;
            for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i];
            return arr2;
          }
          function chordRendererFactory() {
            var _ref = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {}, _ref$accidental = _ref.accidental, accidental = _ref$accidental === void 0 ? "original" : _ref$accidental, _ref$customFilters = _ref.customFilters, customFilters = _ref$customFilters === void 0 ? [] : _ref$customFilters, _ref$notationSystem = _ref.notationSystem, notationSystem = _ref$notationSystem === void 0 ? "english" : _ref$notationSystem, _ref$printer = _ref.printer, printer = _ref$printer === void 0 ? "text" : _ref$printer, _ref$simplify = _ref.simplify, simplify = _ref$simplify === void 0 ? "none" : _ref$simplify, _ref$transposeValue = _ref.transposeValue, transposeValue = _ref$transposeValue === void 0 ? 0 : _ref$transposeValue, _ref$useShortNamings = _ref.useShortNamings, useShortNamings = _ref$useShortNamings === void 0 ? false : _ref$useShortNamings;
            helpers_checkCustomFilters(customFilters);
            var allFilters = [];
            if (["max", "core"].includes(simplify)) {
              allFilters.push(simplify_simplify.bind(null, simplify));
            }
            if (accidental !== "original" || transposeValue !== 0) {
              allFilters.push(transpose.bind(null, transposeValue, accidental));
            }
            if (useShortNamings) {
              allFilters.push(shortenNormalized);
            }
            allFilters.push.apply(allFilters, [convertNotationSystem.bind(null, notationSystem), formatSymbol].concat(chordRendererFactory_toConsumableArray(customFilters)));
            return renderChord;
            function renderChord(chord) {
              if (!isValidChord(chord)) {
                return null;
              }
              var filteredChord = chain(allFilters, cloneDeep_default()(chord));
              return printer === "raw" ? rawPrinter(filteredChord) : textPrinter(filteredChord);
            }
          }
          var isValidChord = function isValidChord2(chord) {
            return chord && chordRendererFactory_typeof(chord) === "object" && !chord.error && chord.input;
          };
          const renderer_chordRendererFactory = chordRendererFactory;
        })();
        return __webpack_exports__;
      })()
    );
  });
})(chordSymbol);
var chordSymbolExports = chordSymbol.exports;
var isArray$3 = Array.isArray;
var isArray_1 = isArray$3;
const _isArray = /* @__PURE__ */ getDefaultExportFromCjs(isArray_1);
function listCacheClear$1() {
  this.__data__ = [];
  this.size = 0;
}
var _listCacheClear = listCacheClear$1;
function eq$2(value, other) {
  return value === other || value !== value && other !== other;
}
var eq_1 = eq$2;
var eq$1 = eq_1;
function assocIndexOf$4(array, key) {
  var length = array.length;
  while (length--) {
    if (eq$1(array[length][0], key)) {
      return length;
    }
  }
  return -1;
}
var _assocIndexOf = assocIndexOf$4;
var assocIndexOf$3 = _assocIndexOf;
var arrayProto = Array.prototype;
var splice = arrayProto.splice;
function listCacheDelete$1(key) {
  var data = this.__data__, index = assocIndexOf$3(data, key);
  if (index < 0) {
    return false;
  }
  var lastIndex = data.length - 1;
  if (index == lastIndex) {
    data.pop();
  } else {
    splice.call(data, index, 1);
  }
  --this.size;
  return true;
}
var _listCacheDelete = listCacheDelete$1;
var assocIndexOf$2 = _assocIndexOf;
function listCacheGet$1(key) {
  var data = this.__data__, index = assocIndexOf$2(data, key);
  return index < 0 ? void 0 : data[index][1];
}
var _listCacheGet = listCacheGet$1;
var assocIndexOf$1 = _assocIndexOf;
function listCacheHas$1(key) {
  return assocIndexOf$1(this.__data__, key) > -1;
}
var _listCacheHas = listCacheHas$1;
var assocIndexOf = _assocIndexOf;
function listCacheSet$1(key, value) {
  var data = this.__data__, index = assocIndexOf(data, key);
  if (index < 0) {
    ++this.size;
    data.push([key, value]);
  } else {
    data[index][1] = value;
  }
  return this;
}
var _listCacheSet = listCacheSet$1;
var listCacheClear = _listCacheClear, listCacheDelete = _listCacheDelete, listCacheGet = _listCacheGet, listCacheHas = _listCacheHas, listCacheSet = _listCacheSet;
function ListCache$4(entries) {
  var index = -1, length = entries == null ? 0 : entries.length;
  this.clear();
  while (++index < length) {
    var entry = entries[index];
    this.set(entry[0], entry[1]);
  }
}
ListCache$4.prototype.clear = listCacheClear;
ListCache$4.prototype["delete"] = listCacheDelete;
ListCache$4.prototype.get = listCacheGet;
ListCache$4.prototype.has = listCacheHas;
ListCache$4.prototype.set = listCacheSet;
var _ListCache = ListCache$4;
var ListCache$3 = _ListCache;
function stackClear$1() {
  this.__data__ = new ListCache$3();
  this.size = 0;
}
var _stackClear = stackClear$1;
function stackDelete$1(key) {
  var data = this.__data__, result = data["delete"](key);
  this.size = data.size;
  return result;
}
var _stackDelete = stackDelete$1;
function stackGet$1(key) {
  return this.__data__.get(key);
}
var _stackGet = stackGet$1;
function stackHas$1(key) {
  return this.__data__.has(key);
}
var _stackHas = stackHas$1;
var freeGlobal$2 = typeof commonjsGlobal == "object" && commonjsGlobal && commonjsGlobal.Object === Object && commonjsGlobal;
var _freeGlobal = freeGlobal$2;
var freeGlobal$1 = _freeGlobal;
var freeSelf$1 = typeof self == "object" && self && self.Object === Object && self;
var root$9 = freeGlobal$1 || freeSelf$1 || Function("return this")();
var _root = root$9;
var root$8 = _root;
var Symbol$4 = root$8.Symbol;
var _Symbol = Symbol$4;
var Symbol$3 = _Symbol;
var objectProto$c = Object.prototype;
var hasOwnProperty$8 = objectProto$c.hasOwnProperty;
var nativeObjectToString$1 = objectProto$c.toString;
var symToStringTag$1 = Symbol$3 ? Symbol$3.toStringTag : void 0;
function getRawTag$1(value) {
  var isOwn = hasOwnProperty$8.call(value, symToStringTag$1), tag = value[symToStringTag$1];
  try {
    value[symToStringTag$1] = void 0;
    var unmasked = true;
  } catch (e) {
  }
  var result = nativeObjectToString$1.call(value);
  if (unmasked) {
    if (isOwn) {
      value[symToStringTag$1] = tag;
    } else {
      delete value[symToStringTag$1];
    }
  }
  return result;
}
var _getRawTag = getRawTag$1;
var objectProto$b = Object.prototype;
var nativeObjectToString = objectProto$b.toString;
function objectToString$2(value) {
  return nativeObjectToString.call(value);
}
var _objectToString = objectToString$2;
var Symbol$2 = _Symbol, getRawTag = _getRawTag, objectToString$1 = _objectToString;
var nullTag = "[object Null]", undefinedTag = "[object Undefined]";
var symToStringTag = Symbol$2 ? Symbol$2.toStringTag : void 0;
function baseGetTag$4(value) {
  if (value == null) {
    return value === void 0 ? undefinedTag : nullTag;
  }
  return symToStringTag && symToStringTag in Object(value) ? getRawTag(value) : objectToString$1(value);
}
var _baseGetTag = baseGetTag$4;
function isObject$4(value) {
  var type2 = typeof value;
  return value != null && (type2 == "object" || type2 == "function");
}
var isObject_1$1 = isObject$4;
var baseGetTag$3 = _baseGetTag, isObject$3 = isObject_1$1;
var asyncTag = "[object AsyncFunction]", funcTag$1 = "[object Function]", genTag = "[object GeneratorFunction]", proxyTag = "[object Proxy]";
function isFunction$2(value) {
  if (!isObject$3(value)) {
    return false;
  }
  var tag = baseGetTag$3(value);
  return tag == funcTag$1 || tag == genTag || tag == asyncTag || tag == proxyTag;
}
var isFunction_1 = isFunction$2;
var root$7 = _root;
var coreJsData$1 = root$7["__core-js_shared__"];
var _coreJsData = coreJsData$1;
var coreJsData = _coreJsData;
var maskSrcKey = function() {
  var uid = /[^.]+$/.exec(coreJsData && coreJsData.keys && coreJsData.keys.IE_PROTO || "");
  return uid ? "Symbol(src)_1." + uid : "";
}();
function isMasked$1(func) {
  return !!maskSrcKey && maskSrcKey in func;
}
var _isMasked = isMasked$1;
var funcProto$1 = Function.prototype;
var funcToString$1 = funcProto$1.toString;
function toSource$2(func) {
  if (func != null) {
    try {
      return funcToString$1.call(func);
    } catch (e) {
    }
    try {
      return func + "";
    } catch (e) {
    }
  }
  return "";
}
var _toSource = toSource$2;
var isFunction$1 = isFunction_1, isMasked = _isMasked, isObject$2 = isObject_1$1, toSource$1 = _toSource;
var reRegExpChar = /[\\^$.*+?()[\]{}|]/g;
var reIsHostCtor = /^\[object .+?Constructor\]$/;
var funcProto = Function.prototype, objectProto$a = Object.prototype;
var funcToString = funcProto.toString;
var hasOwnProperty$7 = objectProto$a.hasOwnProperty;
var reIsNative = RegExp(
  "^" + funcToString.call(hasOwnProperty$7).replace(reRegExpChar, "\\$&").replace(/hasOwnProperty|(function).*?(?=\\\()| for .+?(?=\\\])/g, "$1.*?") + "$"
);
function baseIsNative$1(value) {
  if (!isObject$2(value) || isMasked(value)) {
    return false;
  }
  var pattern = isFunction$1(value) ? reIsNative : reIsHostCtor;
  return pattern.test(toSource$1(value));
}
var _baseIsNative = baseIsNative$1;
function getValue$1(object, key) {
  return object == null ? void 0 : object[key];
}
var _getValue = getValue$1;
var baseIsNative = _baseIsNative, getValue = _getValue;
function getNative$6(object, key) {
  var value = getValue(object, key);
  return baseIsNative(value) ? value : void 0;
}
var _getNative = getNative$6;
var getNative$5 = _getNative, root$6 = _root;
var Map$4 = getNative$5(root$6, "Map");
var _Map = Map$4;
var getNative$4 = _getNative;
var nativeCreate$4 = getNative$4(Object, "create");
var _nativeCreate = nativeCreate$4;
var nativeCreate$3 = _nativeCreate;
function hashClear$1() {
  this.__data__ = nativeCreate$3 ? nativeCreate$3(null) : {};
  this.size = 0;
}
var _hashClear = hashClear$1;
function hashDelete$1(key) {
  var result = this.has(key) && delete this.__data__[key];
  this.size -= result ? 1 : 0;
  return result;
}
var _hashDelete = hashDelete$1;
var nativeCreate$2 = _nativeCreate;
var HASH_UNDEFINED$2 = "__lodash_hash_undefined__";
var objectProto$9 = Object.prototype;
var hasOwnProperty$6 = objectProto$9.hasOwnProperty;
function hashGet$1(key) {
  var data = this.__data__;
  if (nativeCreate$2) {
    var result = data[key];
    return result === HASH_UNDEFINED$2 ? void 0 : result;
  }
  return hasOwnProperty$6.call(data, key) ? data[key] : void 0;
}
var _hashGet = hashGet$1;
var nativeCreate$1 = _nativeCreate;
var objectProto$8 = Object.prototype;
var hasOwnProperty$5 = objectProto$8.hasOwnProperty;
function hashHas$1(key) {
  var data = this.__data__;
  return nativeCreate$1 ? data[key] !== void 0 : hasOwnProperty$5.call(data, key);
}
var _hashHas = hashHas$1;
var nativeCreate = _nativeCreate;
var HASH_UNDEFINED$1 = "__lodash_hash_undefined__";
function hashSet$1(key, value) {
  var data = this.__data__;
  this.size += this.has(key) ? 0 : 1;
  data[key] = nativeCreate && value === void 0 ? HASH_UNDEFINED$1 : value;
  return this;
}
var _hashSet = hashSet$1;
var hashClear = _hashClear, hashDelete = _hashDelete, hashGet = _hashGet, hashHas = _hashHas, hashSet = _hashSet;
function Hash$1(entries) {
  var index = -1, length = entries == null ? 0 : entries.length;
  this.clear();
  while (++index < length) {
    var entry = entries[index];
    this.set(entry[0], entry[1]);
  }
}
Hash$1.prototype.clear = hashClear;
Hash$1.prototype["delete"] = hashDelete;
Hash$1.prototype.get = hashGet;
Hash$1.prototype.has = hashHas;
Hash$1.prototype.set = hashSet;
var _Hash = Hash$1;
var Hash = _Hash, ListCache$2 = _ListCache, Map$3 = _Map;
function mapCacheClear$1() {
  this.size = 0;
  this.__data__ = {
    "hash": new Hash(),
    "map": new (Map$3 || ListCache$2)(),
    "string": new Hash()
  };
}
var _mapCacheClear = mapCacheClear$1;
function isKeyable$1(value) {
  var type2 = typeof value;
  return type2 == "string" || type2 == "number" || type2 == "symbol" || type2 == "boolean" ? value !== "__proto__" : value === null;
}
var _isKeyable = isKeyable$1;
var isKeyable = _isKeyable;
function getMapData$4(map2, key) {
  var data = map2.__data__;
  return isKeyable(key) ? data[typeof key == "string" ? "string" : "hash"] : data.map;
}
var _getMapData = getMapData$4;
var getMapData$3 = _getMapData;
function mapCacheDelete$1(key) {
  var result = getMapData$3(this, key)["delete"](key);
  this.size -= result ? 1 : 0;
  return result;
}
var _mapCacheDelete = mapCacheDelete$1;
var getMapData$2 = _getMapData;
function mapCacheGet$1(key) {
  return getMapData$2(this, key).get(key);
}
var _mapCacheGet = mapCacheGet$1;
var getMapData$1 = _getMapData;
function mapCacheHas$1(key) {
  return getMapData$1(this, key).has(key);
}
var _mapCacheHas = mapCacheHas$1;
var getMapData = _getMapData;
function mapCacheSet$1(key, value) {
  var data = getMapData(this, key), size2 = data.size;
  data.set(key, value);
  this.size += data.size == size2 ? 0 : 1;
  return this;
}
var _mapCacheSet = mapCacheSet$1;
var mapCacheClear = _mapCacheClear, mapCacheDelete = _mapCacheDelete, mapCacheGet = _mapCacheGet, mapCacheHas = _mapCacheHas, mapCacheSet = _mapCacheSet;
function MapCache$2(entries) {
  var index = -1, length = entries == null ? 0 : entries.length;
  this.clear();
  while (++index < length) {
    var entry = entries[index];
    this.set(entry[0], entry[1]);
  }
}
MapCache$2.prototype.clear = mapCacheClear;
MapCache$2.prototype["delete"] = mapCacheDelete;
MapCache$2.prototype.get = mapCacheGet;
MapCache$2.prototype.has = mapCacheHas;
MapCache$2.prototype.set = mapCacheSet;
var _MapCache = MapCache$2;
var ListCache$1 = _ListCache, Map$2 = _Map, MapCache$1 = _MapCache;
var LARGE_ARRAY_SIZE = 200;
function stackSet$1(key, value) {
  var data = this.__data__;
  if (data instanceof ListCache$1) {
    var pairs2 = data.__data__;
    if (!Map$2 || pairs2.length < LARGE_ARRAY_SIZE - 1) {
      pairs2.push([key, value]);
      this.size = ++data.size;
      return this;
    }
    data = this.__data__ = new MapCache$1(pairs2);
  }
  data.set(key, value);
  this.size = data.size;
  return this;
}
var _stackSet = stackSet$1;
var ListCache = _ListCache, stackClear = _stackClear, stackDelete = _stackDelete, stackGet = _stackGet, stackHas = _stackHas, stackSet = _stackSet;
function Stack$1(entries) {
  var data = this.__data__ = new ListCache(entries);
  this.size = data.size;
}
Stack$1.prototype.clear = stackClear;
Stack$1.prototype["delete"] = stackDelete;
Stack$1.prototype.get = stackGet;
Stack$1.prototype.has = stackHas;
Stack$1.prototype.set = stackSet;
var _Stack = Stack$1;
var HASH_UNDEFINED = "__lodash_hash_undefined__";
function setCacheAdd$1(value) {
  this.__data__.set(value, HASH_UNDEFINED);
  return this;
}
var _setCacheAdd = setCacheAdd$1;
function setCacheHas$1(value) {
  return this.__data__.has(value);
}
var _setCacheHas = setCacheHas$1;
var MapCache = _MapCache, setCacheAdd = _setCacheAdd, setCacheHas = _setCacheHas;
function SetCache$1(values) {
  var index = -1, length = values == null ? 0 : values.length;
  this.__data__ = new MapCache();
  while (++index < length) {
    this.add(values[index]);
  }
}
SetCache$1.prototype.add = SetCache$1.prototype.push = setCacheAdd;
SetCache$1.prototype.has = setCacheHas;
var _SetCache = SetCache$1;
function arraySome$1(array, predicate) {
  var index = -1, length = array == null ? 0 : array.length;
  while (++index < length) {
    if (predicate(array[index], index, array)) {
      return true;
    }
  }
  return false;
}
var _arraySome = arraySome$1;
function cacheHas$1(cache, key) {
  return cache.has(key);
}
var _cacheHas = cacheHas$1;
var SetCache = _SetCache, arraySome = _arraySome, cacheHas = _cacheHas;
var COMPARE_PARTIAL_FLAG$3 = 1, COMPARE_UNORDERED_FLAG$1 = 2;
function equalArrays$2(array, other, bitmask, customizer, equalFunc, stack) {
  var isPartial = bitmask & COMPARE_PARTIAL_FLAG$3, arrLength = array.length, othLength = other.length;
  if (arrLength != othLength && !(isPartial && othLength > arrLength)) {
    return false;
  }
  var arrStacked = stack.get(array);
  var othStacked = stack.get(other);
  if (arrStacked && othStacked) {
    return arrStacked == other && othStacked == array;
  }
  var index = -1, result = true, seen = bitmask & COMPARE_UNORDERED_FLAG$1 ? new SetCache() : void 0;
  stack.set(array, other);
  stack.set(other, array);
  while (++index < arrLength) {
    var arrValue = array[index], othValue = other[index];
    if (customizer) {
      var compared = isPartial ? customizer(othValue, arrValue, index, other, array, stack) : customizer(arrValue, othValue, index, array, other, stack);
    }
    if (compared !== void 0) {
      if (compared) {
        continue;
      }
      result = false;
      break;
    }
    if (seen) {
      if (!arraySome(other, function(othValue2, othIndex) {
        if (!cacheHas(seen, othIndex) && (arrValue === othValue2 || equalFunc(arrValue, othValue2, bitmask, customizer, stack))) {
          return seen.push(othIndex);
        }
      })) {
        result = false;
        break;
      }
    } else if (!(arrValue === othValue || equalFunc(arrValue, othValue, bitmask, customizer, stack))) {
      result = false;
      break;
    }
  }
  stack["delete"](array);
  stack["delete"](other);
  return result;
}
var _equalArrays = equalArrays$2;
var root$5 = _root;
var Uint8Array$2 = root$5.Uint8Array;
var _Uint8Array = Uint8Array$2;
function mapToArray$1(map2) {
  var index = -1, result = Array(map2.size);
  map2.forEach(function(value, key) {
    result[++index] = [key, value];
  });
  return result;
}
var _mapToArray = mapToArray$1;
function setToArray$1(set2) {
  var index = -1, result = Array(set2.size);
  set2.forEach(function(value) {
    result[++index] = value;
  });
  return result;
}
var _setToArray = setToArray$1;
var Symbol$1 = _Symbol, Uint8Array$1 = _Uint8Array, eq = eq_1, equalArrays$1 = _equalArrays, mapToArray = _mapToArray, setToArray = _setToArray;
var COMPARE_PARTIAL_FLAG$2 = 1, COMPARE_UNORDERED_FLAG = 2;
var boolTag$1 = "[object Boolean]", dateTag$1 = "[object Date]", errorTag$1 = "[object Error]", mapTag$2 = "[object Map]", numberTag$1 = "[object Number]", regexpTag$1 = "[object RegExp]", setTag$2 = "[object Set]", stringTag$1 = "[object String]", symbolTag$1 = "[object Symbol]";
var arrayBufferTag$1 = "[object ArrayBuffer]", dataViewTag$2 = "[object DataView]";
var symbolProto = Symbol$1 ? Symbol$1.prototype : void 0, symbolValueOf = symbolProto ? symbolProto.valueOf : void 0;
function equalByTag$1(object, other, tag, bitmask, customizer, equalFunc, stack) {
  switch (tag) {
    case dataViewTag$2:
      if (object.byteLength != other.byteLength || object.byteOffset != other.byteOffset) {
        return false;
      }
      object = object.buffer;
      other = other.buffer;
    case arrayBufferTag$1:
      if (object.byteLength != other.byteLength || !equalFunc(new Uint8Array$1(object), new Uint8Array$1(other))) {
        return false;
      }
      return true;
    case boolTag$1:
    case dateTag$1:
    case numberTag$1:
      return eq(+object, +other);
    case errorTag$1:
      return object.name == other.name && object.message == other.message;
    case regexpTag$1:
    case stringTag$1:
      return object == other + "";
    case mapTag$2:
      var convert = mapToArray;
    case setTag$2:
      var isPartial = bitmask & COMPARE_PARTIAL_FLAG$2;
      convert || (convert = setToArray);
      if (object.size != other.size && !isPartial) {
        return false;
      }
      var stacked = stack.get(object);
      if (stacked) {
        return stacked == other;
      }
      bitmask |= COMPARE_UNORDERED_FLAG;
      stack.set(object, other);
      var result = equalArrays$1(convert(object), convert(other), bitmask, customizer, equalFunc, stack);
      stack["delete"](object);
      return result;
    case symbolTag$1:
      if (symbolValueOf) {
        return symbolValueOf.call(object) == symbolValueOf.call(other);
      }
  }
  return false;
}
var _equalByTag = equalByTag$1;
function arrayPush$1(array, values) {
  var index = -1, length = values.length, offset = array.length;
  while (++index < length) {
    array[offset + index] = values[index];
  }
  return array;
}
var _arrayPush = arrayPush$1;
var arrayPush = _arrayPush, isArray$2 = isArray_1;
function baseGetAllKeys$1(object, keysFunc, symbolsFunc) {
  var result = keysFunc(object);
  return isArray$2(object) ? result : arrayPush(result, symbolsFunc(object));
}
var _baseGetAllKeys = baseGetAllKeys$1;
function arrayFilter$1(array, predicate) {
  var index = -1, length = array == null ? 0 : array.length, resIndex = 0, result = [];
  while (++index < length) {
    var value = array[index];
    if (predicate(value, index, array)) {
      result[resIndex++] = value;
    }
  }
  return result;
}
var _arrayFilter = arrayFilter$1;
function stubArray$1() {
  return [];
}
var stubArray_1 = stubArray$1;
var arrayFilter = _arrayFilter, stubArray = stubArray_1;
var objectProto$7 = Object.prototype;
var propertyIsEnumerable$1 = objectProto$7.propertyIsEnumerable;
var nativeGetSymbols = Object.getOwnPropertySymbols;
var getSymbols$1 = !nativeGetSymbols ? stubArray : function(object) {
  if (object == null) {
    return [];
  }
  object = Object(object);
  return arrayFilter(nativeGetSymbols(object), function(symbol) {
    return propertyIsEnumerable$1.call(object, symbol);
  });
};
var _getSymbols = getSymbols$1;
function baseTimes$1(n2, iteratee) {
  var index = -1, result = Array(n2);
  while (++index < n2) {
    result[index] = iteratee(index);
  }
  return result;
}
var _baseTimes = baseTimes$1;
function isObjectLike$5(value) {
  return value != null && typeof value == "object";
}
var isObjectLike_1 = isObjectLike$5;
var baseGetTag$2 = _baseGetTag, isObjectLike$4 = isObjectLike_1;
var argsTag$2 = "[object Arguments]";
function baseIsArguments$1(value) {
  return isObjectLike$4(value) && baseGetTag$2(value) == argsTag$2;
}
var _baseIsArguments = baseIsArguments$1;
var baseIsArguments = _baseIsArguments, isObjectLike$3 = isObjectLike_1;
var objectProto$6 = Object.prototype;
var hasOwnProperty$4 = objectProto$6.hasOwnProperty;
var propertyIsEnumerable = objectProto$6.propertyIsEnumerable;
var isArguments$1 = baseIsArguments(/* @__PURE__ */ function() {
  return arguments;
}()) ? baseIsArguments : function(value) {
  return isObjectLike$3(value) && hasOwnProperty$4.call(value, "callee") && !propertyIsEnumerable.call(value, "callee");
};
var isArguments_1 = isArguments$1;
var isBuffer$2 = { exports: {} };
function stubFalse() {
  return false;
}
var stubFalse_1 = stubFalse;
isBuffer$2.exports;
(function(module, exports) {
  var root2 = _root, stubFalse2 = stubFalse_1;
  var freeExports = exports && !exports.nodeType && exports;
  var freeModule = freeExports && true && module && !module.nodeType && module;
  var moduleExports = freeModule && freeModule.exports === freeExports;
  var Buffer2 = moduleExports ? root2.Buffer : void 0;
  var nativeIsBuffer = Buffer2 ? Buffer2.isBuffer : void 0;
  var isBuffer2 = nativeIsBuffer || stubFalse2;
  module.exports = isBuffer2;
})(isBuffer$2, isBuffer$2.exports);
var isBufferExports = isBuffer$2.exports;
var MAX_SAFE_INTEGER$1 = 9007199254740991;
var reIsUint = /^(?:0|[1-9]\d*)$/;
function isIndex$1(value, length) {
  var type2 = typeof value;
  length = length == null ? MAX_SAFE_INTEGER$1 : length;
  return !!length && (type2 == "number" || type2 != "symbol" && reIsUint.test(value)) && (value > -1 && value % 1 == 0 && value < length);
}
var _isIndex = isIndex$1;
var MAX_SAFE_INTEGER = 9007199254740991;
function isLength$2(value) {
  return typeof value == "number" && value > -1 && value % 1 == 0 && value <= MAX_SAFE_INTEGER;
}
var isLength_1 = isLength$2;
var baseGetTag$1 = _baseGetTag, isLength$1 = isLength_1, isObjectLike$2 = isObjectLike_1;
var argsTag$1 = "[object Arguments]", arrayTag$1 = "[object Array]", boolTag = "[object Boolean]", dateTag = "[object Date]", errorTag = "[object Error]", funcTag = "[object Function]", mapTag$1 = "[object Map]", numberTag = "[object Number]", objectTag$2 = "[object Object]", regexpTag = "[object RegExp]", setTag$1 = "[object Set]", stringTag = "[object String]", weakMapTag$1 = "[object WeakMap]";
var arrayBufferTag = "[object ArrayBuffer]", dataViewTag$1 = "[object DataView]", float32Tag = "[object Float32Array]", float64Tag = "[object Float64Array]", int8Tag = "[object Int8Array]", int16Tag = "[object Int16Array]", int32Tag = "[object Int32Array]", uint8Tag = "[object Uint8Array]", uint8ClampedTag = "[object Uint8ClampedArray]", uint16Tag = "[object Uint16Array]", uint32Tag = "[object Uint32Array]";
var typedArrayTags = {};
typedArrayTags[float32Tag] = typedArrayTags[float64Tag] = typedArrayTags[int8Tag] = typedArrayTags[int16Tag] = typedArrayTags[int32Tag] = typedArrayTags[uint8Tag] = typedArrayTags[uint8ClampedTag] = typedArrayTags[uint16Tag] = typedArrayTags[uint32Tag] = true;
typedArrayTags[argsTag$1] = typedArrayTags[arrayTag$1] = typedArrayTags[arrayBufferTag] = typedArrayTags[boolTag] = typedArrayTags[dataViewTag$1] = typedArrayTags[dateTag] = typedArrayTags[errorTag] = typedArrayTags[funcTag] = typedArrayTags[mapTag$1] = typedArrayTags[numberTag] = typedArrayTags[objectTag$2] = typedArrayTags[regexpTag] = typedArrayTags[setTag$1] = typedArrayTags[stringTag] = typedArrayTags[weakMapTag$1] = false;
function baseIsTypedArray$1(value) {
  return isObjectLike$2(value) && isLength$1(value.length) && !!typedArrayTags[baseGetTag$1(value)];
}
var _baseIsTypedArray = baseIsTypedArray$1;
function baseUnary$1(func) {
  return function(value) {
    return func(value);
  };
}
var _baseUnary = baseUnary$1;
var _nodeUtil = { exports: {} };
_nodeUtil.exports;
(function(module, exports) {
  var freeGlobal2 = _freeGlobal;
  var freeExports = exports && !exports.nodeType && exports;
  var freeModule = freeExports && true && module && !module.nodeType && module;
  var moduleExports = freeModule && freeModule.exports === freeExports;
  var freeProcess = moduleExports && freeGlobal2.process;
  var nodeUtil2 = function() {
    try {
      var types = freeModule && freeModule.require && freeModule.require("util").types;
      if (types) {
        return types;
      }
      return freeProcess && freeProcess.binding && freeProcess.binding("util");
    } catch (e) {
    }
  }();
  module.exports = nodeUtil2;
})(_nodeUtil, _nodeUtil.exports);
var _nodeUtilExports = _nodeUtil.exports;
var baseIsTypedArray = _baseIsTypedArray, baseUnary = _baseUnary, nodeUtil = _nodeUtilExports;
var nodeIsTypedArray = nodeUtil && nodeUtil.isTypedArray;
var isTypedArray$2 = nodeIsTypedArray ? baseUnary(nodeIsTypedArray) : baseIsTypedArray;
var isTypedArray_1 = isTypedArray$2;
var baseTimes = _baseTimes, isArguments = isArguments_1, isArray$1 = isArray_1, isBuffer$1 = isBufferExports, isIndex = _isIndex, isTypedArray$1 = isTypedArray_1;
var objectProto$5 = Object.prototype;
var hasOwnProperty$3 = objectProto$5.hasOwnProperty;
function arrayLikeKeys$1(value, inherited) {
  var isArr = isArray$1(value), isArg = !isArr && isArguments(value), isBuff = !isArr && !isArg && isBuffer$1(value), isType = !isArr && !isArg && !isBuff && isTypedArray$1(value), skipIndexes = isArr || isArg || isBuff || isType, result = skipIndexes ? baseTimes(value.length, String) : [], length = result.length;
  for (var key in value) {
    if ((inherited || hasOwnProperty$3.call(value, key)) && !(skipIndexes && // Safari 9 has enumerable `arguments.length` in strict mode.
    (key == "length" || // Node.js 0.10 has enumerable non-index properties on buffers.
    isBuff && (key == "offset" || key == "parent") || // PhantomJS 2 has enumerable non-index properties on typed arrays.
    isType && (key == "buffer" || key == "byteLength" || key == "byteOffset") || // Skip index properties.
    isIndex(key, length)))) {
      result.push(key);
    }
  }
  return result;
}
var _arrayLikeKeys = arrayLikeKeys$1;
var objectProto$4 = Object.prototype;
function isPrototype$1(value) {
  var Ctor = value && value.constructor, proto = typeof Ctor == "function" && Ctor.prototype || objectProto$4;
  return value === proto;
}
var _isPrototype = isPrototype$1;
function overArg$1(func, transform) {
  return function(arg) {
    return func(transform(arg));
  };
}
var _overArg = overArg$1;
var overArg = _overArg;
var nativeKeys$1 = overArg(Object.keys, Object);
var _nativeKeys = nativeKeys$1;
var isPrototype = _isPrototype, nativeKeys = _nativeKeys;
var objectProto$3 = Object.prototype;
var hasOwnProperty$2 = objectProto$3.hasOwnProperty;
function baseKeys$1(object) {
  if (!isPrototype(object)) {
    return nativeKeys(object);
  }
  var result = [];
  for (var key in Object(object)) {
    if (hasOwnProperty$2.call(object, key) && key != "constructor") {
      result.push(key);
    }
  }
  return result;
}
var _baseKeys = baseKeys$1;
var isFunction = isFunction_1, isLength = isLength_1;
function isArrayLike$1(value) {
  return value != null && isLength(value.length) && !isFunction(value);
}
var isArrayLike_1 = isArrayLike$1;
var arrayLikeKeys = _arrayLikeKeys, baseKeys = _baseKeys, isArrayLike = isArrayLike_1;
function keys$1(object) {
  return isArrayLike(object) ? arrayLikeKeys(object) : baseKeys(object);
}
var keys_1 = keys$1;
var baseGetAllKeys = _baseGetAllKeys, getSymbols = _getSymbols, keys = keys_1;
function getAllKeys$1(object) {
  return baseGetAllKeys(object, keys, getSymbols);
}
var _getAllKeys = getAllKeys$1;
var getAllKeys = _getAllKeys;
var COMPARE_PARTIAL_FLAG$1 = 1;
var objectProto$2 = Object.prototype;
var hasOwnProperty$1 = objectProto$2.hasOwnProperty;
function equalObjects$1(object, other, bitmask, customizer, equalFunc, stack) {
  var isPartial = bitmask & COMPARE_PARTIAL_FLAG$1, objProps = getAllKeys(object), objLength = objProps.length, othProps = getAllKeys(other), othLength = othProps.length;
  if (objLength != othLength && !isPartial) {
    return false;
  }
  var index = objLength;
  while (index--) {
    var key = objProps[index];
    if (!(isPartial ? key in other : hasOwnProperty$1.call(other, key))) {
      return false;
    }
  }
  var objStacked = stack.get(object);
  var othStacked = stack.get(other);
  if (objStacked && othStacked) {
    return objStacked == other && othStacked == object;
  }
  var result = true;
  stack.set(object, other);
  stack.set(other, object);
  var skipCtor = isPartial;
  while (++index < objLength) {
    key = objProps[index];
    var objValue = object[key], othValue = other[key];
    if (customizer) {
      var compared = isPartial ? customizer(othValue, objValue, key, other, object, stack) : customizer(objValue, othValue, key, object, other, stack);
    }
    if (!(compared === void 0 ? objValue === othValue || equalFunc(objValue, othValue, bitmask, customizer, stack) : compared)) {
      result = false;
      break;
    }
    skipCtor || (skipCtor = key == "constructor");
  }
  if (result && !skipCtor) {
    var objCtor = object.constructor, othCtor = other.constructor;
    if (objCtor != othCtor && ("constructor" in object && "constructor" in other) && !(typeof objCtor == "function" && objCtor instanceof objCtor && typeof othCtor == "function" && othCtor instanceof othCtor)) {
      result = false;
    }
  }
  stack["delete"](object);
  stack["delete"](other);
  return result;
}
var _equalObjects = equalObjects$1;
var getNative$3 = _getNative, root$4 = _root;
var DataView$1 = getNative$3(root$4, "DataView");
var _DataView = DataView$1;
var getNative$2 = _getNative, root$3 = _root;
var Promise$2 = getNative$2(root$3, "Promise");
var _Promise = Promise$2;
var getNative$1 = _getNative, root$2 = _root;
var Set$2 = getNative$1(root$2, "Set");
var _Set = Set$2;
var getNative = _getNative, root$1 = _root;
var WeakMap$2 = getNative(root$1, "WeakMap");
var _WeakMap = WeakMap$2;
var DataView = _DataView, Map$1 = _Map, Promise$1 = _Promise, Set$1 = _Set, WeakMap$1 = _WeakMap, baseGetTag = _baseGetTag, toSource = _toSource;
var mapTag = "[object Map]", objectTag$1 = "[object Object]", promiseTag = "[object Promise]", setTag = "[object Set]", weakMapTag = "[object WeakMap]";
var dataViewTag = "[object DataView]";
var dataViewCtorString = toSource(DataView), mapCtorString = toSource(Map$1), promiseCtorString = toSource(Promise$1), setCtorString = toSource(Set$1), weakMapCtorString = toSource(WeakMap$1);
var getTag$1 = baseGetTag;
if (DataView && getTag$1(new DataView(new ArrayBuffer(1))) != dataViewTag || Map$1 && getTag$1(new Map$1()) != mapTag || Promise$1 && getTag$1(Promise$1.resolve()) != promiseTag || Set$1 && getTag$1(new Set$1()) != setTag || WeakMap$1 && getTag$1(new WeakMap$1()) != weakMapTag) {
  getTag$1 = function(value) {
    var result = baseGetTag(value), Ctor = result == objectTag$1 ? value.constructor : void 0, ctorString = Ctor ? toSource(Ctor) : "";
    if (ctorString) {
      switch (ctorString) {
        case dataViewCtorString:
          return dataViewTag;
        case mapCtorString:
          return mapTag;
        case promiseCtorString:
          return promiseTag;
        case setCtorString:
          return setTag;
        case weakMapCtorString:
          return weakMapTag;
      }
    }
    return result;
  };
}
var _getTag = getTag$1;
var Stack = _Stack, equalArrays = _equalArrays, equalByTag = _equalByTag, equalObjects = _equalObjects, getTag = _getTag, isArray = isArray_1, isBuffer = isBufferExports, isTypedArray = isTypedArray_1;
var COMPARE_PARTIAL_FLAG = 1;
var argsTag = "[object Arguments]", arrayTag = "[object Array]", objectTag = "[object Object]";
var objectProto$1 = Object.prototype;
var hasOwnProperty = objectProto$1.hasOwnProperty;
function baseIsEqualDeep$1(object, other, bitmask, customizer, equalFunc, stack) {
  var objIsArr = isArray(object), othIsArr = isArray(other), objTag = objIsArr ? arrayTag : getTag(object), othTag = othIsArr ? arrayTag : getTag(other);
  objTag = objTag == argsTag ? objectTag : objTag;
  othTag = othTag == argsTag ? objectTag : othTag;
  var objIsObj = objTag == objectTag, othIsObj = othTag == objectTag, isSameTag = objTag == othTag;
  if (isSameTag && isBuffer(object)) {
    if (!isBuffer(other)) {
      return false;
    }
    objIsArr = true;
    objIsObj = false;
  }
  if (isSameTag && !objIsObj) {
    stack || (stack = new Stack());
    return objIsArr || isTypedArray(object) ? equalArrays(object, other, bitmask, customizer, equalFunc, stack) : equalByTag(object, other, objTag, bitmask, customizer, equalFunc, stack);
  }
  if (!(bitmask & COMPARE_PARTIAL_FLAG)) {
    var objIsWrapped = objIsObj && hasOwnProperty.call(object, "__wrapped__"), othIsWrapped = othIsObj && hasOwnProperty.call(other, "__wrapped__");
    if (objIsWrapped || othIsWrapped) {
      var objUnwrapped = objIsWrapped ? object.value() : object, othUnwrapped = othIsWrapped ? other.value() : other;
      stack || (stack = new Stack());
      return equalFunc(objUnwrapped, othUnwrapped, bitmask, customizer, stack);
    }
  }
  if (!isSameTag) {
    return false;
  }
  stack || (stack = new Stack());
  return equalObjects(object, other, bitmask, customizer, equalFunc, stack);
}
var _baseIsEqualDeep = baseIsEqualDeep$1;
var baseIsEqualDeep = _baseIsEqualDeep, isObjectLike$1 = isObjectLike_1;
function baseIsEqual$1(value, other, bitmask, customizer, stack) {
  if (value === other) {
    return true;
  }
  if (value == null || other == null || !isObjectLike$1(value) && !isObjectLike$1(other)) {
    return value !== value && other !== other;
  }
  return baseIsEqualDeep(value, other, bitmask, customizer, baseIsEqual$1, stack);
}
var _baseIsEqual = baseIsEqual$1;
var baseIsEqual = _baseIsEqual;
function isEqual(value, other) {
  return baseIsEqual(value, other);
}
var isEqual_1 = isEqual;
const _isEqual = /* @__PURE__ */ getDefaultExportFromCjs(isEqual_1);
function hasExactly(allIntervals, search2) {
  const arraySearch = _isArray(search2) ? search2 : [search2];
  return _isEqual(allIntervals, arraySearch);
}
const validVariationValues = ["replace_last_line", "replace_last_lines", "append_content"];
function partVariation(originalLines, variantType, variantContent, repeat2, repeatKey) {
  if (originalLines.length < 3) {
    console.log("Ignoring part variant ", variantType, " on ", originalLines, " - originalLines content too short!");
    return originalLines;
  }
  if (variantType === "replace_last_line") {
    if (repeat2) {
      const replacedLines = [...originalLines.slice(0, -2), ...variantContent, ...originalLines.slice(-1)];
      return replacedLines;
    } else {
      const replacedLines = [originalLines[0], repeatKey + " ..." + variantContent, ...originalLines.slice(-1)];
      return replacedLines;
    }
  } else if (variantType === "replace_last_lines") {
    throw new Error("Replace last lines not yet supported!");
  } else if (variantType === "append_content") {
    if (repeat2) {
      const replacedLines = [...originalLines.slice(0, -1), ...variantContent, ...originalLines.slice(-1)];
      return replacedLines;
    } else {
      const replacedLines = [originalLines[0], repeatKey + " + " + variantContent, ...originalLines.slice(-1)];
      return replacedLines;
    }
  }
}
function replaceRepeatedDirectives(song, directives = ["chorus"], shortHands = ["R"], repeat2 = true) {
  if (directives.length !== shortHands.length) {
    throw new Error("Directives and shortHands must be the same length.");
  }
  const directiveMaps = {};
  const directiveRegexes = directives.map((directive, i) => ({
    directive,
    shortHand: shortHands[i],
    startRegex: new RegExp(`^\\{start_of_${directive}(?::\\s*([\\w\\-_+]+))?\\}`),
    endRegex: new RegExp(`^\\{end_of_${directive}\\}`),
    callRegex: new RegExp(`^\\{${directive}(?::\\s*([\\w\\-_+]+))?\\}`)
  }));
  let currentDirective = null;
  let currentContent = null;
  let currentKey = null;
  let currentVariationType = null;
  let currentVariationContent = null;
  let variantActive = false;
  let variantStartRegex = new RegExp("^\\{start_of_variant: ([\\w\\-_+]+)\\}");
  let variantEndRegex = new RegExp("^\\{end_of_variant\\}");
  const defaultKey = "a4c0d35c95a63a805915367dcfe6b751";
  const processedContent = song.split("\n").map((line) => {
    const variantStartMatch = line.match(variantStartRegex);
    if (variantStartMatch) {
      if (!validVariationValues.includes(variantStartMatch[1])) {
        console.log("Invalid variant type: ", currentVariationType, " --> Skipping...");
        return;
      }
      currentVariationType = variantStartMatch[1];
      currentVariationContent = [];
      variantActive = true;
      return;
    }
    const variantEndMatch = line.match(variantEndRegex);
    if (variantEndMatch) {
      variantActive = false;
      return;
    }
    if (variantActive) {
      currentVariationContent.push(line);
      return;
    }
    for (const { directive, shortHand, startRegex, endRegex, callRegex } of directiveRegexes) {
      const startMatch = line.match(startRegex);
      if (startMatch) {
        currentDirective = directive;
        currentKey = startMatch[1] || shortHand || defaultKey;
        currentContent = [line];
        directiveMaps[directive] = directiveMaps[directive] || {};
        return;
      }
      const endMatch = line.match(endRegex);
      if (endMatch && currentContent && currentDirective === directive) {
        currentContent.push(line);
        directiveMaps[directive][currentKey] = currentContent;
        if (currentKey !== defaultKey) {
          currentContent[1] = currentKey + ": " + currentContent[1];
        }
        const currentBlock = currentContent;
        currentDirective = null;
        currentContent = null;
        currentKey = null;
        return currentBlock.join("\n");
      }
      const callMatch = line.match(callRegex);
      if (callMatch) {
        const directiveKey = callMatch[1] || shortHand || defaultKey;
        let contentToInsert = directiveMaps[directive][directiveKey];
        const repeatKey = `${directiveKey === defaultKey ? "" : `${directiveKey}:`}`;
        if (currentVariationContent) {
          contentToInsert = partVariation(contentToInsert, currentVariationType, currentVariationContent, repeat2, repeatKey);
          currentVariationType = null;
          currentVariationContent = null;
        } else if (!repeat2) {
          contentToInsert = [`{start_of_${directive}}`, repeatKey, `{end_of_${directive}}`];
        }
        if (contentToInsert) {
          return contentToInsert.join("\n");
        }
      }
    }
    if (currentContent !== null) {
      currentContent.push(line);
      return;
    }
    return line;
  });
  return processedContent.map((l2) => l2 ? l2.trim() : null).filter((p2) => p2).join("\n").trim();
}
function transposeChordPro(song, songKey, newKey) {
  const CHROMATIC_SCALE = {
    "c": 0,
    "c#": 1,
    "db": 1,
    "des": 1,
    "d": 2,
    "d#": 3,
    "eb": 3,
    "es": 3,
    "e": 4,
    "f": 5,
    "f#": 6,
    "gb": 6,
    "g": 7,
    "g#": 8,
    "ab": 8,
    "as": 8,
    "a": 9,
    "a#": 10,
    "bb": 10,
    "b": 11
  };
  const canTranspose = songKey && newKey;
  if (!canTranspose) {
    return song;
  }
  const songMinorKey = songKey.includes("m");
  const flatKey = newKey && (newKey.includes("b") || newKey.includes("s") || newKey == "Dm" || newKey == "D" && songMinorKey || newKey == "F" && !songMinorKey);
  const parseChord = chordSymbolExports.chordParserFactory({ key: songKey });
  const chromaticIndex = (chord) => CHROMATIC_SCALE[parseChord(chord).normalized.rootNote.toLowerCase()];
  const transposeValue = chromaticIndex(newKey) - chromaticIndex(songKey);
  const keepSus2Maj7 = (chord) => {
    function overwriteDescriptor(chord2, descriptor) {
      const { rootNote, bassNote } = chord2.formatted;
      let symbol = rootNote + descriptor;
      if (bassNote) {
        symbol += "/" + bassNote;
      }
      chord2.formatted.symbol = symbol;
      return chord2;
    }
    if (hasExactly(chord.normalized.intervals, ["1", "5", "9"])) {
      chord = overwriteDescriptor(chord, "sus2");
    } else if (chord.formatted.descriptor == "ma7") {
      chord = overwriteDescriptor(chord, "maj7");
    } else if (chord.formatted.descriptor == "sus") {
      chord = overwriteDescriptor(chord, "sus4");
    }
    return chord;
  };
  const hideParentheses = (chord) => {
    if (chord.formatted.symbol.includes(",")) {
      return chord;
    }
    chord.formatted.symbol = chord.formatted.symbol.replace("(", "").replace(")", "");
    return chord;
  };
  const renderChord = chordSymbolExports.chordRendererFactory({ notationSystem: "english", transposeValue, accidental: flatKey ? "flat" : "sharp", customFilters: [keepSus2Maj7, hideParentheses] });
  const convertChordBracket = (match, chord) => `[${renderChord(parseChord(chord))}]`;
  song = song.replace(/\[([A-Ha-h][^\]]{0,10})\]/g, convertChordBracket);
  return song;
}
function addRepeatClasses(htmlString, className = "verse") {
  const parser = new DOMParser();
  const doc = parser.parseFromString(htmlString, "text/html");
  const verses = doc.querySelectorAll(`.${className}`);
  let seen = { "default": false };
  verses.forEach((verse) => {
    const labelElement = verse.querySelector(".label");
    const label = labelElement ? labelElement.textContent.trim() : "default";
    const chords_str = Array.from(verse.querySelectorAll(".chord")).map((el2) => el2.textContent.trim()).filter((el2) => el2).join("_");
    if (!seen[label]) {
      seen[label] = [];
    }
    if (seen[label].includes(chords_str)) {
      verse.classList.add("repeated-chords");
    } else {
      seen[label].push(chords_str);
    }
  });
  return doc.body.innerHTML;
}
function chordToGerman(chord) {
  const trimmedChord = chord.trim();
  if (trimmedChord.startsWith("Bb")) {
    return "B" + trimmedChord.slice(2);
  } else if (trimmedChord.startsWith("B")) {
    return "H" + trimmedChord.slice(1);
  } else if (trimmedChord.endsWith("Bb")) {
    return trimmedChord.slice(0, -2) + "B";
  } else if (trimmedChord.endsWith("B")) {
    return trimmedChord.slice(0, -1) + "H";
  }
  return chord;
}
function convertHTMLChordToGerman(songText) {
  const parser = new DOMParser();
  const doc = parser.parseFromString(songText, "text/html");
  const chords = doc.querySelectorAll(`.chord`);
  chords.forEach((chord) => {
    chord.textContent = chordToGerman(chord.textContent);
  });
  return doc.body.innerHTML;
}
function parseChordPro(chordProContent, repeatChorus, songKey, newKey) {
  let preparsedContent = replaceRepeatedDirectives(chordProContent, ["chorus", "bridge", "verse"], ["R", "B", ""], repeatChorus);
  const transposedContent = transposeChordPro(preparsedContent, songKey, newKey);
  const parser = new chordprojectParser_bundleExports.ChordProParser();
  const song = parser.parse(transposedContent);
  return song;
}
function guessKey(chordProContent) {
  const song = parseChordPro(chordProContent, false, null, null);
  return chordprojectParser_bundleExports.MusicLetter[song.getPossibleKey().note.letter];
}
function renderSong(songData, newKey, repeatChorus) {
  const song = parseChordPro(songData.content, repeatChorus, songData.key, newKey);
  const settings = new chordprojectParser_bundleExports.FormatterSettings();
  settings.showMetadata = false;
  const formatter = new chordprojectParser_bundleExports.HtmlFormatter(settings);
  let songText = formatter.format(song).join("\n");
  songText = convertHTMLChordToGerman(songText);
  return addRepeatClasses(addRepeatClasses(addRepeatClasses(songText, "verse-section"), "chorus-section"), "bridge-section");
}
var modules = {};
var Link = {};
var scrollLink = {};
var scrollSpy$3 = {};
var FUNC_ERROR_TEXT = "Expected a function";
var NAN = 0 / 0;
var symbolTag = "[object Symbol]";
var reTrim = /^\s+|\s+$/g;
var reIsBadHex = /^[-+]0x[0-9a-f]+$/i;
var reIsBinary = /^0b[01]+$/i;
var reIsOctal = /^0o[0-7]+$/i;
var freeParseInt = parseInt;
var freeGlobal = typeof commonjsGlobal == "object" && commonjsGlobal && commonjsGlobal.Object === Object && commonjsGlobal;
var freeSelf = typeof self == "object" && self && self.Object === Object && self;
var root = freeGlobal || freeSelf || Function("return this")();
var objectProto = Object.prototype;
var objectToString = objectProto.toString;
var nativeMax = Math.max, nativeMin = Math.min;
var now = function() {
  return root.Date.now();
};
function debounce(func, wait, options) {
  var lastArgs, lastThis, maxWait, result, timerId, lastCallTime, lastInvokeTime = 0, leading = false, maxing = false, trailing = true;
  if (typeof func != "function") {
    throw new TypeError(FUNC_ERROR_TEXT);
  }
  wait = toNumber(wait) || 0;
  if (isObject$1(options)) {
    leading = !!options.leading;
    maxing = "maxWait" in options;
    maxWait = maxing ? nativeMax(toNumber(options.maxWait) || 0, wait) : maxWait;
    trailing = "trailing" in options ? !!options.trailing : trailing;
  }
  function invokeFunc(time2) {
    var args = lastArgs, thisArg = lastThis;
    lastArgs = lastThis = void 0;
    lastInvokeTime = time2;
    result = func.apply(thisArg, args);
    return result;
  }
  function leadingEdge(time2) {
    lastInvokeTime = time2;
    timerId = setTimeout(timerExpired, wait);
    return leading ? invokeFunc(time2) : result;
  }
  function remainingWait(time2) {
    var timeSinceLastCall = time2 - lastCallTime, timeSinceLastInvoke = time2 - lastInvokeTime, result2 = wait - timeSinceLastCall;
    return maxing ? nativeMin(result2, maxWait - timeSinceLastInvoke) : result2;
  }
  function shouldInvoke(time2) {
    var timeSinceLastCall = time2 - lastCallTime, timeSinceLastInvoke = time2 - lastInvokeTime;
    return lastCallTime === void 0 || timeSinceLastCall >= wait || timeSinceLastCall < 0 || maxing && timeSinceLastInvoke >= maxWait;
  }
  function timerExpired() {
    var time2 = now();
    if (shouldInvoke(time2)) {
      return trailingEdge(time2);
    }
    timerId = setTimeout(timerExpired, remainingWait(time2));
  }
  function trailingEdge(time2) {
    timerId = void 0;
    if (trailing && lastArgs) {
      return invokeFunc(time2);
    }
    lastArgs = lastThis = void 0;
    return result;
  }
  function cancel() {
    if (timerId !== void 0) {
      clearTimeout(timerId);
    }
    lastInvokeTime = 0;
    lastArgs = lastCallTime = lastThis = timerId = void 0;
  }
  function flush() {
    return timerId === void 0 ? result : trailingEdge(now());
  }
  function debounced() {
    var time2 = now(), isInvoking = shouldInvoke(time2);
    lastArgs = arguments;
    lastThis = this;
    lastCallTime = time2;
    if (isInvoking) {
      if (timerId === void 0) {
        return leadingEdge(lastCallTime);
      }
      if (maxing) {
        timerId = setTimeout(timerExpired, wait);
        return invokeFunc(lastCallTime);
      }
    }
    if (timerId === void 0) {
      timerId = setTimeout(timerExpired, wait);
    }
    return result;
  }
  debounced.cancel = cancel;
  debounced.flush = flush;
  return debounced;
}
function throttle(func, wait, options) {
  var leading = true, trailing = true;
  if (typeof func != "function") {
    throw new TypeError(FUNC_ERROR_TEXT);
  }
  if (isObject$1(options)) {
    leading = "leading" in options ? !!options.leading : leading;
    trailing = "trailing" in options ? !!options.trailing : trailing;
  }
  return debounce(func, wait, {
    "leading": leading,
    "maxWait": wait,
    "trailing": trailing
  });
}
function isObject$1(value) {
  var type2 = typeof value;
  return !!value && (type2 == "object" || type2 == "function");
}
function isObjectLike(value) {
  return !!value && typeof value == "object";
}
function isSymbol(value) {
  return typeof value == "symbol" || isObjectLike(value) && objectToString.call(value) == symbolTag;
}
function toNumber(value) {
  if (typeof value == "number") {
    return value;
  }
  if (isSymbol(value)) {
    return NAN;
  }
  if (isObject$1(value)) {
    var other = typeof value.valueOf == "function" ? value.valueOf() : value;
    value = isObject$1(other) ? other + "" : other;
  }
  if (typeof value != "string") {
    return value === 0 ? value : +value;
  }
  value = value.replace(reTrim, "");
  var isBinary2 = reIsBinary.test(value);
  return isBinary2 || reIsOctal.test(value) ? freeParseInt(value.slice(2), isBinary2 ? 2 : 8) : reIsBadHex.test(value) ? NAN : +value;
}
var lodash_throttle = throttle;
var passiveEventListeners = {};
Object.defineProperty(passiveEventListeners, "__esModule", {
  value: true
});
passiveEventListeners.addPassiveEventListener = function addPassiveEventListener(target, eventName, listener) {
  var listenerName = listener.name;
  if (!listenerName) {
    listenerName = eventName;
    console.warn("Listener must be a named function.");
  }
  if (!attachedListeners.has(eventName)) attachedListeners.set(eventName, /* @__PURE__ */ new Set());
  var listeners = attachedListeners.get(eventName);
  if (listeners.has(listenerName)) return;
  var supportsPassiveOption = function() {
    var supportsPassiveOption2 = false;
    try {
      var opts = Object.defineProperty({}, "passive", {
        get: function get3() {
          supportsPassiveOption2 = true;
        }
      });
      window.addEventListener("test", null, opts);
    } catch (e) {
    }
    return supportsPassiveOption2;
  }();
  target.addEventListener(eventName, listener, supportsPassiveOption ? { passive: true } : false);
  listeners.add(listenerName);
};
passiveEventListeners.removePassiveEventListener = function removePassiveEventListener(target, eventName, listener) {
  target.removeEventListener(eventName, listener);
  attachedListeners.get(eventName).delete(listener.name || eventName);
};
var attachedListeners = /* @__PURE__ */ new Map();
Object.defineProperty(scrollSpy$3, "__esModule", {
  value: true
});
var _lodash = lodash_throttle;
var _lodash2 = _interopRequireDefault$9(_lodash);
var _passiveEventListeners$1 = passiveEventListeners;
function _interopRequireDefault$9(obj) {
  return obj && obj.__esModule ? obj : { default: obj };
}
var eventThrottler = function eventThrottler2(eventHandler) {
  var throttleAmount = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : 66;
  return (0, _lodash2.default)(eventHandler, throttleAmount);
};
var scrollSpy$2 = {
  spyCallbacks: [],
  spySetState: [],
  scrollSpyContainers: [],
  mount: function mount(scrollSpyContainer, throttle2) {
    if (scrollSpyContainer) {
      var eventHandler = eventThrottler(function(event) {
        scrollSpy$2.scrollHandler(scrollSpyContainer);
      }, throttle2);
      scrollSpy$2.scrollSpyContainers.push(scrollSpyContainer);
      (0, _passiveEventListeners$1.addPassiveEventListener)(scrollSpyContainer, "scroll", eventHandler);
    }
  },
  isMounted: function isMounted(scrollSpyContainer) {
    return scrollSpy$2.scrollSpyContainers.indexOf(scrollSpyContainer) !== -1;
  },
  currentPositionX: function currentPositionX(scrollSpyContainer) {
    if (scrollSpyContainer === document) {
      var supportPageOffset = window.pageYOffset !== void 0;
      var isCSS1Compat = (document.compatMode || "") === "CSS1Compat";
      return supportPageOffset ? window.pageXOffset : isCSS1Compat ? document.documentElement.scrollLeft : document.body.scrollLeft;
    } else {
      return scrollSpyContainer.scrollLeft;
    }
  },
  currentPositionY: function currentPositionY(scrollSpyContainer) {
    if (scrollSpyContainer === document) {
      var supportPageOffset = window.pageXOffset !== void 0;
      var isCSS1Compat = (document.compatMode || "") === "CSS1Compat";
      return supportPageOffset ? window.pageYOffset : isCSS1Compat ? document.documentElement.scrollTop : document.body.scrollTop;
    } else {
      return scrollSpyContainer.scrollTop;
    }
  },
  scrollHandler: function scrollHandler(scrollSpyContainer) {
    var callbacks2 = scrollSpy$2.scrollSpyContainers[scrollSpy$2.scrollSpyContainers.indexOf(scrollSpyContainer)].spyCallbacks || [];
    callbacks2.forEach(function(c) {
      return c(scrollSpy$2.currentPositionX(scrollSpyContainer), scrollSpy$2.currentPositionY(scrollSpyContainer));
    });
  },
  addStateHandler: function addStateHandler(handler) {
    scrollSpy$2.spySetState.push(handler);
  },
  addSpyHandler: function addSpyHandler(handler, scrollSpyContainer) {
    var container = scrollSpy$2.scrollSpyContainers[scrollSpy$2.scrollSpyContainers.indexOf(scrollSpyContainer)];
    if (!container.spyCallbacks) {
      container.spyCallbacks = [];
    }
    container.spyCallbacks.push(handler);
    handler(scrollSpy$2.currentPositionX(scrollSpyContainer), scrollSpy$2.currentPositionY(scrollSpyContainer));
  },
  updateStates: function updateStates() {
    scrollSpy$2.spySetState.forEach(function(s) {
      return s();
    });
  },
  unmount: function unmount(stateHandler, spyHandler) {
    scrollSpy$2.scrollSpyContainers.forEach(function(c) {
      return c.spyCallbacks && c.spyCallbacks.length && c.spyCallbacks.indexOf(spyHandler) > -1 && c.spyCallbacks.splice(c.spyCallbacks.indexOf(spyHandler), 1);
    });
    if (scrollSpy$2.spySetState && scrollSpy$2.spySetState.length && scrollSpy$2.spySetState.indexOf(stateHandler) > -1) {
      scrollSpy$2.spySetState.splice(scrollSpy$2.spySetState.indexOf(stateHandler), 1);
    }
    document.removeEventListener("scroll", scrollSpy$2.scrollHandler);
  },
  update: function update() {
    return scrollSpy$2.scrollSpyContainers.forEach(function(c) {
      return scrollSpy$2.scrollHandler(c);
    });
  }
};
scrollSpy$3.default = scrollSpy$2;
var scroller = {};
var utils = {};
Object.defineProperty(utils, "__esModule", {
  value: true
});
var updateHash = function updateHash2(hash, historyUpdate) {
  var hashVal = hash.indexOf("#") === 0 ? hash.substring(1) : hash;
  var hashToUpdate = hashVal ? "#" + hashVal : "";
  var curLoc = window && window.location;
  var urlToPush = hashToUpdate ? curLoc.pathname + curLoc.search + hashToUpdate : curLoc.pathname + curLoc.search;
  historyUpdate ? history.pushState(history.state, "", urlToPush) : history.replaceState(history.state, "", urlToPush);
};
var getHash = function getHash2() {
  return window.location.hash.replace(/^#/, "");
};
var filterElementInContainer = function filterElementInContainer2(container) {
  return function(element) {
    return container.contains ? container != element && container.contains(element) : !!(container.compareDocumentPosition(element) & 16);
  };
};
var isPositioned = function isPositioned2(element) {
  return getComputedStyle(element).position !== "static";
};
var getElementOffsetInfoUntil = function getElementOffsetInfoUntil2(element, predicate) {
  var offsetTop = element.offsetTop;
  var currentOffsetParent = element.offsetParent;
  while (currentOffsetParent && !predicate(currentOffsetParent)) {
    offsetTop += currentOffsetParent.offsetTop;
    currentOffsetParent = currentOffsetParent.offsetParent;
  }
  return { offsetTop, offsetParent: currentOffsetParent };
};
var scrollOffset = function scrollOffset2(c, t2, horizontal) {
  if (horizontal) {
    return c === document ? t2.getBoundingClientRect().left + (window.scrollX || window.pageXOffset) : getComputedStyle(c).position !== "static" ? t2.offsetLeft : t2.offsetLeft - c.offsetLeft;
  } else {
    if (c === document) {
      return t2.getBoundingClientRect().top + (window.scrollY || window.pageYOffset);
    }
    if (isPositioned(c)) {
      if (t2.offsetParent !== c) {
        var isContainerElementOrDocument = function isContainerElementOrDocument2(e) {
          return e === c || e === document;
        };
        var _getElementOffsetInfo = getElementOffsetInfoUntil(t2, isContainerElementOrDocument), offsetTop = _getElementOffsetInfo.offsetTop, offsetParent = _getElementOffsetInfo.offsetParent;
        if (offsetParent !== c) {
          throw new Error("Seems containerElement is not an ancestor of the Element");
        }
        return offsetTop;
      }
      return t2.offsetTop;
    }
    if (t2.offsetParent === c.offsetParent) {
      return t2.offsetTop - c.offsetTop;
    }
    var isDocument = function isDocument2(e) {
      return e === document;
    };
    return getElementOffsetInfoUntil(t2, isDocument).offsetTop - getElementOffsetInfoUntil(c, isDocument).offsetTop;
  }
};
utils.default = {
  updateHash,
  getHash,
  filterElementInContainer,
  scrollOffset
};
var animateScroll$2 = {};
var smooth = {};
Object.defineProperty(smooth, "__esModule", {
  value: true
});
smooth.default = {
  /*
   * https://github.com/oblador/angular-scroll (duScrollDefaultEasing)
   */
  defaultEasing: function defaultEasing2(x2) {
    if (x2 < 0.5) {
      return Math.pow(x2 * 2, 2) / 2;
    }
    return 1 - Math.pow((1 - x2) * 2, 2) / 2;
  },
  /*
   * https://gist.github.com/gre/1650294
   */
  // no easing, no acceleration
  linear: function linear(x2) {
    return x2;
  },
  // accelerating from zero velocity
  easeInQuad: function easeInQuad(x2) {
    return x2 * x2;
  },
  // decelerating to zero velocity
  easeOutQuad: function easeOutQuad(x2) {
    return x2 * (2 - x2);
  },
  // acceleration until halfway, then deceleration
  easeInOutQuad: function easeInOutQuad(x2) {
    return x2 < 0.5 ? 2 * x2 * x2 : -1 + (4 - 2 * x2) * x2;
  },
  // accelerating from zero velocity 
  easeInCubic: function easeInCubic(x2) {
    return x2 * x2 * x2;
  },
  // decelerating to zero velocity π
  easeOutCubic: function easeOutCubic(x2) {
    return --x2 * x2 * x2 + 1;
  },
  // acceleration until halfway, then deceleration 
  easeInOutCubic: function easeInOutCubic(x2) {
    return x2 < 0.5 ? 4 * x2 * x2 * x2 : (x2 - 1) * (2 * x2 - 2) * (2 * x2 - 2) + 1;
  },
  // accelerating from zero velocity 
  easeInQuart: function easeInQuart(x2) {
    return x2 * x2 * x2 * x2;
  },
  // decelerating to zero velocity 
  easeOutQuart: function easeOutQuart(x2) {
    return 1 - --x2 * x2 * x2 * x2;
  },
  // acceleration until halfway, then deceleration
  easeInOutQuart: function easeInOutQuart(x2) {
    return x2 < 0.5 ? 8 * x2 * x2 * x2 * x2 : 1 - 8 * --x2 * x2 * x2 * x2;
  },
  // accelerating from zero velocity
  easeInQuint: function easeInQuint(x2) {
    return x2 * x2 * x2 * x2 * x2;
  },
  // decelerating to zero velocity
  easeOutQuint: function easeOutQuint(x2) {
    return 1 + --x2 * x2 * x2 * x2 * x2;
  },
  // acceleration until halfway, then deceleration 
  easeInOutQuint: function easeInOutQuint(x2) {
    return x2 < 0.5 ? 16 * x2 * x2 * x2 * x2 * x2 : 1 + 16 * --x2 * x2 * x2 * x2 * x2;
  }
};
var cancelEvents = {};
Object.defineProperty(cancelEvents, "__esModule", {
  value: true
});
var _passiveEventListeners = passiveEventListeners;
var events = ["mousedown", "mousewheel", "touchmove", "keydown"];
cancelEvents.default = {
  subscribe: function subscribe(cancelEvent) {
    return typeof document !== "undefined" && events.forEach(function(event) {
      return (0, _passiveEventListeners.addPassiveEventListener)(document, event, cancelEvent);
    });
  }
};
var scrollEvents = {};
Object.defineProperty(scrollEvents, "__esModule", {
  value: true
});
var Events = {
  registered: {},
  scrollEvent: {
    register: function register2(evtName, callback) {
      Events.registered[evtName] = callback;
    },
    remove: function remove(evtName) {
      Events.registered[evtName] = null;
    }
  }
};
scrollEvents.default = Events;
Object.defineProperty(animateScroll$2, "__esModule", {
  value: true
});
var _extends$6 = Object.assign || function(target) {
  for (var i = 1; i < arguments.length; i++) {
    var source = arguments[i];
    for (var key in source) {
      if (Object.prototype.hasOwnProperty.call(source, key)) {
        target[key] = source[key];
      }
    }
  }
  return target;
};
var _utils$2 = utils;
_interopRequireDefault$8(_utils$2);
var _smooth = smooth;
var _smooth2 = _interopRequireDefault$8(_smooth);
var _cancelEvents = cancelEvents;
var _cancelEvents2 = _interopRequireDefault$8(_cancelEvents);
var _scrollEvents$2 = scrollEvents;
var _scrollEvents2$2 = _interopRequireDefault$8(_scrollEvents$2);
function _interopRequireDefault$8(obj) {
  return obj && obj.__esModule ? obj : { default: obj };
}
var getAnimationType = function getAnimationType2(options) {
  return _smooth2.default[options.smooth] || _smooth2.default.defaultEasing;
};
var functionWrapper = function functionWrapper2(value) {
  return typeof value === "function" ? value : function() {
    return value;
  };
};
var currentWindowProperties = function currentWindowProperties2() {
  if (typeof window !== "undefined") {
    return window.requestAnimationFrame || window.webkitRequestAnimationFrame;
  }
};
var requestAnimationFrameHelper = function() {
  return currentWindowProperties() || function(callback, element, delay) {
    window.setTimeout(callback, delay || 1e3 / 60, (/* @__PURE__ */ new Date()).getTime());
  };
}();
var makeData = function makeData2() {
  return {
    currentPosition: 0,
    startPosition: 0,
    targetPosition: 0,
    progress: 0,
    duration: 0,
    cancel: false,
    target: null,
    containerElement: null,
    to: null,
    start: null,
    delta: null,
    percent: null,
    delayTimeout: null
  };
};
var currentPositionX2 = function currentPositionX3(options) {
  var containerElement = options.data.containerElement;
  if (containerElement && containerElement !== document && containerElement !== document.body) {
    return containerElement.scrollLeft;
  } else {
    var supportPageOffset = window.pageXOffset !== void 0;
    var isCSS1Compat = (document.compatMode || "") === "CSS1Compat";
    return supportPageOffset ? window.pageXOffset : isCSS1Compat ? document.documentElement.scrollLeft : document.body.scrollLeft;
  }
};
var currentPositionY2 = function currentPositionY3(options) {
  var containerElement = options.data.containerElement;
  if (containerElement && containerElement !== document && containerElement !== document.body) {
    return containerElement.scrollTop;
  } else {
    var supportPageOffset = window.pageXOffset !== void 0;
    var isCSS1Compat = (document.compatMode || "") === "CSS1Compat";
    return supportPageOffset ? window.pageYOffset : isCSS1Compat ? document.documentElement.scrollTop : document.body.scrollTop;
  }
};
var scrollContainerWidth = function scrollContainerWidth2(options) {
  var containerElement = options.data.containerElement;
  if (containerElement && containerElement !== document && containerElement !== document.body) {
    return containerElement.scrollWidth - containerElement.offsetWidth;
  } else {
    var body = document.body;
    var html = document.documentElement;
    return Math.max(body.scrollWidth, body.offsetWidth, html.clientWidth, html.scrollWidth, html.offsetWidth);
  }
};
var scrollContainerHeight = function scrollContainerHeight2(options) {
  var containerElement = options.data.containerElement;
  if (containerElement && containerElement !== document && containerElement !== document.body) {
    return containerElement.scrollHeight - containerElement.offsetHeight;
  } else {
    var body = document.body;
    var html = document.documentElement;
    return Math.max(body.scrollHeight, body.offsetHeight, html.clientHeight, html.scrollHeight, html.offsetHeight);
  }
};
var animateScroll$1 = function animateScroll(easing, options, timestamp2) {
  var data = options.data;
  if (!options.ignoreCancelEvents && data.cancel) {
    if (_scrollEvents2$2.default.registered["end"]) {
      _scrollEvents2$2.default.registered["end"](data.to, data.target, data.currentPositionY);
    }
    return;
  }
  data.delta = Math.round(data.targetPosition - data.startPosition);
  if (data.start === null) {
    data.start = timestamp2;
  }
  data.progress = timestamp2 - data.start;
  data.percent = data.progress >= data.duration ? 1 : easing(data.progress / data.duration);
  data.currentPosition = data.startPosition + Math.ceil(data.delta * data.percent);
  if (data.containerElement && data.containerElement !== document && data.containerElement !== document.body) {
    if (options.horizontal) {
      data.containerElement.scrollLeft = data.currentPosition;
    } else {
      data.containerElement.scrollTop = data.currentPosition;
    }
  } else {
    if (options.horizontal) {
      window.scrollTo(data.currentPosition, 0);
    } else {
      window.scrollTo(0, data.currentPosition);
    }
  }
  if (data.percent < 1) {
    var easedAnimate = animateScroll.bind(null, easing, options);
    requestAnimationFrameHelper.call(window, easedAnimate);
    return;
  }
  if (_scrollEvents2$2.default.registered["end"]) {
    _scrollEvents2$2.default.registered["end"](data.to, data.target, data.currentPosition);
  }
};
var setContainer = function setContainer2(options) {
  options.data.containerElement = !options ? null : options.containerId ? document.getElementById(options.containerId) : options.container && options.container.nodeType ? options.container : document;
};
var animateTopScroll = function animateTopScroll2(scrollOffset3, options, to, target) {
  options.data = options.data || makeData();
  window.clearTimeout(options.data.delayTimeout);
  var setCancel = function setCancel2() {
    options.data.cancel = true;
  };
  _cancelEvents2.default.subscribe(setCancel);
  setContainer(options);
  options.data.start = null;
  options.data.cancel = false;
  options.data.startPosition = options.horizontal ? currentPositionX2(options) : currentPositionY2(options);
  options.data.targetPosition = options.absolute ? scrollOffset3 : scrollOffset3 + options.data.startPosition;
  if (options.data.startPosition === options.data.targetPosition) {
    if (_scrollEvents2$2.default.registered["end"]) {
      _scrollEvents2$2.default.registered["end"](options.data.to, options.data.target, options.data.currentPosition);
    }
    return;
  }
  options.data.delta = Math.round(options.data.targetPosition - options.data.startPosition);
  options.data.duration = functionWrapper(options.duration)(options.data.delta);
  options.data.duration = isNaN(parseFloat(options.data.duration)) ? 1e3 : parseFloat(options.data.duration);
  options.data.to = to;
  options.data.target = target;
  var easing = getAnimationType(options);
  var easedAnimate = animateScroll$1.bind(null, easing, options);
  if (options && options.delay > 0) {
    options.data.delayTimeout = window.setTimeout(function() {
      if (_scrollEvents2$2.default.registered["begin"]) {
        _scrollEvents2$2.default.registered["begin"](options.data.to, options.data.target);
      }
      requestAnimationFrameHelper.call(window, easedAnimate);
    }, options.delay);
    return;
  }
  if (_scrollEvents2$2.default.registered["begin"]) {
    _scrollEvents2$2.default.registered["begin"](options.data.to, options.data.target);
  }
  requestAnimationFrameHelper.call(window, easedAnimate);
};
var proceedOptions = function proceedOptions2(options) {
  options = _extends$6({}, options);
  options.data = options.data || makeData();
  options.absolute = true;
  return options;
};
var scrollToTop = function scrollToTop2(options) {
  animateTopScroll(0, proceedOptions(options));
};
var scrollTo = function scrollTo2(toPosition, options) {
  animateTopScroll(toPosition, proceedOptions(options));
};
var scrollToBottom = function scrollToBottom2(options) {
  options = proceedOptions(options);
  setContainer(options);
  animateTopScroll(options.horizontal ? scrollContainerWidth(options) : scrollContainerHeight(options), options);
};
var scrollMore = function scrollMore2(toPosition, options) {
  options = proceedOptions(options);
  setContainer(options);
  var currentPosition = options.horizontal ? currentPositionX2(options) : currentPositionY2(options);
  animateTopScroll(toPosition + currentPosition, options);
};
animateScroll$2.default = {
  animateTopScroll,
  getAnimationType,
  scrollToTop,
  scrollToBottom,
  scrollTo,
  scrollMore
};
Object.defineProperty(scroller, "__esModule", {
  value: true
});
var _extends$5 = Object.assign || function(target) {
  for (var i = 1; i < arguments.length; i++) {
    var source = arguments[i];
    for (var key in source) {
      if (Object.prototype.hasOwnProperty.call(source, key)) {
        target[key] = source[key];
      }
    }
  }
  return target;
};
var _utils$1 = utils;
var _utils2$1 = _interopRequireDefault$7(_utils$1);
var _animateScroll$1 = animateScroll$2;
var _animateScroll2$1 = _interopRequireDefault$7(_animateScroll$1);
var _scrollEvents$1 = scrollEvents;
var _scrollEvents2$1 = _interopRequireDefault$7(_scrollEvents$1);
function _interopRequireDefault$7(obj) {
  return obj && obj.__esModule ? obj : { default: obj };
}
var __mapped = {};
var __activeLink = void 0;
scroller.default = {
  unmount: function unmount2() {
    __mapped = {};
  },
  register: function register3(name, element) {
    __mapped[name] = element;
  },
  unregister: function unregister(name) {
    delete __mapped[name];
  },
  get: function get2(name) {
    return __mapped[name] || document.getElementById(name) || document.getElementsByName(name)[0] || document.getElementsByClassName(name)[0];
  },
  setActiveLink: function setActiveLink(link2) {
    return __activeLink = link2;
  },
  getActiveLink: function getActiveLink() {
    return __activeLink;
  },
  scrollTo: function scrollTo3(to, props) {
    var target = this.get(to);
    if (!target) {
      console.warn("target Element not found");
      return;
    }
    props = _extends$5({}, props, { absolute: false });
    var containerId = props.containerId;
    var container = props.container;
    var containerElement = void 0;
    if (containerId) {
      containerElement = document.getElementById(containerId);
    } else if (container && container.nodeType) {
      containerElement = container;
    } else {
      containerElement = document;
    }
    props.absolute = true;
    var horizontal = props.horizontal;
    var scrollOffset3 = _utils2$1.default.scrollOffset(containerElement, target, horizontal) + (props.offset || 0);
    if (!props.smooth) {
      if (_scrollEvents2$1.default.registered["begin"]) {
        _scrollEvents2$1.default.registered["begin"](to, target);
      }
      if (containerElement === document) {
        if (props.horizontal) {
          window.scrollTo(scrollOffset3, 0);
        } else {
          window.scrollTo(0, scrollOffset3);
        }
      } else {
        containerElement.scrollTop = scrollOffset3;
      }
      if (_scrollEvents2$1.default.registered["end"]) {
        _scrollEvents2$1.default.registered["end"](to, target);
      }
      return;
    }
    _animateScroll2$1.default.animateTopScroll(scrollOffset3, props, to, target);
  }
};
var propTypes = { exports: {} };
var ReactPropTypesSecret$1 = "SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED";
var ReactPropTypesSecret_1 = ReactPropTypesSecret$1;
var ReactPropTypesSecret = ReactPropTypesSecret_1;
function emptyFunction() {
}
function emptyFunctionWithReset() {
}
emptyFunctionWithReset.resetWarningCache = emptyFunction;
var factoryWithThrowingShims = function() {
  function shim(props, propName, componentName, location2, propFullName, secret) {
    if (secret === ReactPropTypesSecret) {
      return;
    }
    var err = new Error(
      "Calling PropTypes validators directly is not supported by the `prop-types` package. Use PropTypes.checkPropTypes() to call them. Read more at http://fb.me/use-check-prop-types"
    );
    err.name = "Invariant Violation";
    throw err;
  }
  shim.isRequired = shim;
  function getShim() {
    return shim;
  }
  var ReactPropTypes = {
    array: shim,
    bigint: shim,
    bool: shim,
    func: shim,
    number: shim,
    object: shim,
    string: shim,
    symbol: shim,
    any: shim,
    arrayOf: getShim,
    element: shim,
    elementType: shim,
    instanceOf: getShim,
    node: shim,
    objectOf: getShim,
    oneOf: getShim,
    oneOfType: getShim,
    shape: getShim,
    exact: getShim,
    checkPropTypes: emptyFunctionWithReset,
    resetWarningCache: emptyFunction
  };
  ReactPropTypes.PropTypes = ReactPropTypes;
  return ReactPropTypes;
};
{
  propTypes.exports = factoryWithThrowingShims();
}
var propTypesExports = propTypes.exports;
var scrollHash$2 = {};
Object.defineProperty(scrollHash$2, "__esModule", {
  value: true
});
var _utils = utils;
var _utils2 = _interopRequireDefault$6(_utils);
function _interopRequireDefault$6(obj) {
  return obj && obj.__esModule ? obj : { default: obj };
}
var scrollHash$1 = {
  mountFlag: false,
  initialized: false,
  scroller: null,
  containers: {},
  mount: function mount2(scroller2) {
    this.scroller = scroller2;
    this.handleHashChange = this.handleHashChange.bind(this);
    window.addEventListener("hashchange", this.handleHashChange);
    this.initStateFromHash();
    this.mountFlag = true;
  },
  mapContainer: function mapContainer(to, container) {
    this.containers[to] = container;
  },
  isMounted: function isMounted2() {
    return this.mountFlag;
  },
  isInitialized: function isInitialized() {
    return this.initialized;
  },
  initStateFromHash: function initStateFromHash() {
    var _this = this;
    var hash = this.getHash();
    if (hash) {
      window.setTimeout(function() {
        _this.scrollTo(hash, true);
        _this.initialized = true;
      }, 10);
    } else {
      this.initialized = true;
    }
  },
  scrollTo: function scrollTo4(to, isInit) {
    var scroller2 = this.scroller;
    var element = scroller2.get(to);
    if (element && (isInit || to !== scroller2.getActiveLink())) {
      var container = this.containers[to] || document;
      scroller2.scrollTo(to, { container });
    }
  },
  getHash: function getHash3() {
    return _utils2.default.getHash();
  },
  changeHash: function changeHash(to, saveHashHistory) {
    if (this.isInitialized() && _utils2.default.getHash() !== to) {
      _utils2.default.updateHash(to, saveHashHistory);
    }
  },
  handleHashChange: function handleHashChange() {
    this.scrollTo(this.getHash());
  },
  unmount: function unmount3() {
    this.scroller = null;
    this.containers = null;
    window.removeEventListener("hashchange", this.handleHashChange);
  }
};
scrollHash$2.default = scrollHash$1;
Object.defineProperty(scrollLink, "__esModule", {
  value: true
});
var _extends$4 = Object.assign || function(target) {
  for (var i = 1; i < arguments.length; i++) {
    var source = arguments[i];
    for (var key in source) {
      if (Object.prototype.hasOwnProperty.call(source, key)) {
        target[key] = source[key];
      }
    }
  }
  return target;
};
var _createClass$4 = /* @__PURE__ */ function() {
  function defineProperties(target, props) {
    for (var i = 0; i < props.length; i++) {
      var descriptor = props[i];
      descriptor.enumerable = descriptor.enumerable || false;
      descriptor.configurable = true;
      if ("value" in descriptor) descriptor.writable = true;
      Object.defineProperty(target, descriptor.key, descriptor);
    }
  }
  return function(Constructor, protoProps, staticProps) {
    if (protoProps) defineProperties(Constructor.prototype, protoProps);
    if (staticProps) defineProperties(Constructor, staticProps);
    return Constructor;
  };
}();
var _react$4 = reactExports;
var _react2$4 = _interopRequireDefault$5(_react$4);
var _scrollSpy$1 = scrollSpy$3;
var _scrollSpy2$1 = _interopRequireDefault$5(_scrollSpy$1);
var _scroller$2 = scroller;
var _scroller2$2 = _interopRequireDefault$5(_scroller$2);
var _propTypes$2 = propTypesExports;
var _propTypes2$2 = _interopRequireDefault$5(_propTypes$2);
var _scrollHash = scrollHash$2;
var _scrollHash2 = _interopRequireDefault$5(_scrollHash);
function _interopRequireDefault$5(obj) {
  return obj && obj.__esModule ? obj : { default: obj };
}
function _classCallCheck$5(instance, Constructor) {
  if (!(instance instanceof Constructor)) {
    throw new TypeError("Cannot call a class as a function");
  }
}
function _possibleConstructorReturn$5(self2, call) {
  if (!self2) {
    throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
  }
  return call && (typeof call === "object" || typeof call === "function") ? call : self2;
}
function _inherits$5(subClass, superClass) {
  if (typeof superClass !== "function" && superClass !== null) {
    throw new TypeError("Super expression must either be null or a function, not " + typeof superClass);
  }
  subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });
  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
}
var protoTypes$1 = {
  to: _propTypes2$2.default.string.isRequired,
  containerId: _propTypes2$2.default.string,
  container: _propTypes2$2.default.object,
  activeClass: _propTypes2$2.default.string,
  activeStyle: _propTypes2$2.default.object,
  spy: _propTypes2$2.default.bool,
  horizontal: _propTypes2$2.default.bool,
  smooth: _propTypes2$2.default.oneOfType([_propTypes2$2.default.bool, _propTypes2$2.default.string]),
  offset: _propTypes2$2.default.number,
  delay: _propTypes2$2.default.number,
  isDynamic: _propTypes2$2.default.bool,
  onClick: _propTypes2$2.default.func,
  duration: _propTypes2$2.default.oneOfType([_propTypes2$2.default.number, _propTypes2$2.default.func]),
  absolute: _propTypes2$2.default.bool,
  onSetActive: _propTypes2$2.default.func,
  onSetInactive: _propTypes2$2.default.func,
  ignoreCancelEvents: _propTypes2$2.default.bool,
  hashSpy: _propTypes2$2.default.bool,
  saveHashHistory: _propTypes2$2.default.bool,
  spyThrottle: _propTypes2$2.default.number
};
scrollLink.default = function(Component, customScroller) {
  var scroller2 = customScroller || _scroller2$2.default;
  var Link2 = function(_React$PureComponent) {
    _inherits$5(Link3, _React$PureComponent);
    function Link3(props) {
      _classCallCheck$5(this, Link3);
      var _this = _possibleConstructorReturn$5(this, (Link3.__proto__ || Object.getPrototypeOf(Link3)).call(this, props));
      _initialiseProps.call(_this);
      _this.state = {
        active: false
      };
      return _this;
    }
    _createClass$4(Link3, [{
      key: "getScrollSpyContainer",
      value: function getScrollSpyContainer() {
        var containerId = this.props.containerId;
        var container = this.props.container;
        if (containerId && !container) {
          return document.getElementById(containerId);
        }
        if (container && container.nodeType) {
          return container;
        }
        return document;
      }
    }, {
      key: "componentDidMount",
      value: function componentDidMount() {
        if (this.props.spy || this.props.hashSpy) {
          var scrollSpyContainer = this.getScrollSpyContainer();
          if (!_scrollSpy2$1.default.isMounted(scrollSpyContainer)) {
            _scrollSpy2$1.default.mount(scrollSpyContainer, this.props.spyThrottle);
          }
          if (this.props.hashSpy) {
            if (!_scrollHash2.default.isMounted()) {
              _scrollHash2.default.mount(scroller2);
            }
            _scrollHash2.default.mapContainer(this.props.to, scrollSpyContainer);
          }
          _scrollSpy2$1.default.addSpyHandler(this.spyHandler, scrollSpyContainer);
          this.setState({
            container: scrollSpyContainer
          });
        }
      }
    }, {
      key: "componentWillUnmount",
      value: function componentWillUnmount() {
        _scrollSpy2$1.default.unmount(this.stateHandler, this.spyHandler);
      }
    }, {
      key: "render",
      value: function render() {
        var className = "";
        if (this.state && this.state.active) {
          className = ((this.props.className || "") + " " + (this.props.activeClass || "active")).trim();
        } else {
          className = this.props.className;
        }
        var style = {};
        if (this.state && this.state.active) {
          style = _extends$4({}, this.props.style, this.props.activeStyle);
        } else {
          style = _extends$4({}, this.props.style);
        }
        var props = _extends$4({}, this.props);
        for (var prop in protoTypes$1) {
          if (props.hasOwnProperty(prop)) {
            delete props[prop];
          }
        }
        props.className = className;
        props.style = style;
        props.onClick = this.handleClick;
        return _react2$4.default.createElement(Component, props);
      }
    }]);
    return Link3;
  }(_react2$4.default.PureComponent);
  var _initialiseProps = function _initialiseProps2() {
    var _this2 = this;
    this.scrollTo = function(to, props) {
      scroller2.scrollTo(to, _extends$4({}, _this2.state, props));
    };
    this.handleClick = function(event) {
      if (_this2.props.onClick) {
        _this2.props.onClick(event);
      }
      if (event.stopPropagation) event.stopPropagation();
      if (event.preventDefault) event.preventDefault();
      _this2.scrollTo(_this2.props.to, _this2.props);
    };
    this.spyHandler = function(x2, y2) {
      var scrollSpyContainer = _this2.getScrollSpyContainer();
      if (_scrollHash2.default.isMounted() && !_scrollHash2.default.isInitialized()) {
        return;
      }
      var horizontal = _this2.props.horizontal;
      var to = _this2.props.to;
      var element = null;
      var isInside = void 0;
      var isOutside = void 0;
      if (horizontal) {
        var elemLeftBound = 0;
        var elemRightBound = 0;
        var containerLeft = 0;
        if (scrollSpyContainer.getBoundingClientRect) {
          var containerCords = scrollSpyContainer.getBoundingClientRect();
          containerLeft = containerCords.left;
        }
        if (!element || _this2.props.isDynamic) {
          element = scroller2.get(to);
          if (!element) {
            return;
          }
          var cords = element.getBoundingClientRect();
          elemLeftBound = cords.left - containerLeft + x2;
          elemRightBound = elemLeftBound + cords.width;
        }
        var offsetX = x2 - _this2.props.offset;
        isInside = offsetX >= Math.floor(elemLeftBound) && offsetX < Math.floor(elemRightBound);
        isOutside = offsetX < Math.floor(elemLeftBound) || offsetX >= Math.floor(elemRightBound);
      } else {
        var elemTopBound = 0;
        var elemBottomBound = 0;
        var containerTop = 0;
        if (scrollSpyContainer.getBoundingClientRect) {
          var _containerCords = scrollSpyContainer.getBoundingClientRect();
          containerTop = _containerCords.top;
        }
        if (!element || _this2.props.isDynamic) {
          element = scroller2.get(to);
          if (!element) {
            return;
          }
          var _cords = element.getBoundingClientRect();
          elemTopBound = _cords.top - containerTop + y2;
          elemBottomBound = elemTopBound + _cords.height;
        }
        var offsetY = y2 - _this2.props.offset;
        isInside = offsetY >= Math.floor(elemTopBound) && offsetY < Math.floor(elemBottomBound);
        isOutside = offsetY < Math.floor(elemTopBound) || offsetY >= Math.floor(elemBottomBound);
      }
      var activeLink = scroller2.getActiveLink();
      if (isOutside) {
        if (to === activeLink) {
          scroller2.setActiveLink(void 0);
        }
        if (_this2.props.hashSpy && _scrollHash2.default.getHash() === to) {
          var _props$saveHashHistor = _this2.props.saveHashHistory, saveHashHistory = _props$saveHashHistor === void 0 ? false : _props$saveHashHistor;
          _scrollHash2.default.changeHash("", saveHashHistory);
        }
        if (_this2.props.spy && _this2.state.active) {
          _this2.setState({ active: false });
          _this2.props.onSetInactive && _this2.props.onSetInactive(to, element);
        }
      }
      if (isInside && (activeLink !== to || _this2.state.active === false)) {
        scroller2.setActiveLink(to);
        var _props$saveHashHistor2 = _this2.props.saveHashHistory, _saveHashHistory = _props$saveHashHistor2 === void 0 ? false : _props$saveHashHistor2;
        _this2.props.hashSpy && _scrollHash2.default.changeHash(to, _saveHashHistory);
        if (_this2.props.spy) {
          _this2.setState({ active: true });
          _this2.props.onSetActive && _this2.props.onSetActive(to, element);
        }
      }
    };
  };
  Link2.propTypes = protoTypes$1;
  Link2.defaultProps = { offset: 0 };
  return Link2;
};
Object.defineProperty(Link, "__esModule", {
  value: true
});
var _react$3 = reactExports;
var _react2$3 = _interopRequireDefault$4(_react$3);
var _scrollLink$2 = scrollLink;
var _scrollLink2$2 = _interopRequireDefault$4(_scrollLink$2);
function _interopRequireDefault$4(obj) {
  return obj && obj.__esModule ? obj : { default: obj };
}
function _classCallCheck$4(instance, Constructor) {
  if (!(instance instanceof Constructor)) {
    throw new TypeError("Cannot call a class as a function");
  }
}
function _possibleConstructorReturn$4(self2, call) {
  if (!self2) {
    throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
  }
  return call && (typeof call === "object" || typeof call === "function") ? call : self2;
}
function _inherits$4(subClass, superClass) {
  if (typeof superClass !== "function" && superClass !== null) {
    throw new TypeError("Super expression must either be null or a function, not " + typeof superClass);
  }
  subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });
  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
}
var LinkElement = function(_React$Component) {
  _inherits$4(LinkElement2, _React$Component);
  function LinkElement2() {
    var _ref;
    var _temp, _this, _ret;
    _classCallCheck$4(this, LinkElement2);
    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }
    return _ret = (_temp = (_this = _possibleConstructorReturn$4(this, (_ref = LinkElement2.__proto__ || Object.getPrototypeOf(LinkElement2)).call.apply(_ref, [this].concat(args))), _this), _this.render = function() {
      return _react2$3.default.createElement(
        "a",
        _this.props,
        _this.props.children
      );
    }, _temp), _possibleConstructorReturn$4(_this, _ret);
  }
  return LinkElement2;
}(_react2$3.default.Component);
Link.default = (0, _scrollLink2$2.default)(LinkElement);
var Button = {};
Object.defineProperty(Button, "__esModule", {
  value: true
});
var _createClass$3 = /* @__PURE__ */ function() {
  function defineProperties(target, props) {
    for (var i = 0; i < props.length; i++) {
      var descriptor = props[i];
      descriptor.enumerable = descriptor.enumerable || false;
      descriptor.configurable = true;
      if ("value" in descriptor) descriptor.writable = true;
      Object.defineProperty(target, descriptor.key, descriptor);
    }
  }
  return function(Constructor, protoProps, staticProps) {
    if (protoProps) defineProperties(Constructor.prototype, protoProps);
    if (staticProps) defineProperties(Constructor, staticProps);
    return Constructor;
  };
}();
var _react$2 = reactExports;
var _react2$2 = _interopRequireDefault$3(_react$2);
var _scrollLink$1 = scrollLink;
var _scrollLink2$1 = _interopRequireDefault$3(_scrollLink$1);
function _interopRequireDefault$3(obj) {
  return obj && obj.__esModule ? obj : { default: obj };
}
function _classCallCheck$3(instance, Constructor) {
  if (!(instance instanceof Constructor)) {
    throw new TypeError("Cannot call a class as a function");
  }
}
function _possibleConstructorReturn$3(self2, call) {
  if (!self2) {
    throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
  }
  return call && (typeof call === "object" || typeof call === "function") ? call : self2;
}
function _inherits$3(subClass, superClass) {
  if (typeof superClass !== "function" && superClass !== null) {
    throw new TypeError("Super expression must either be null or a function, not " + typeof superClass);
  }
  subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });
  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
}
var ButtonElement = function(_React$Component) {
  _inherits$3(ButtonElement2, _React$Component);
  function ButtonElement2() {
    _classCallCheck$3(this, ButtonElement2);
    return _possibleConstructorReturn$3(this, (ButtonElement2.__proto__ || Object.getPrototypeOf(ButtonElement2)).apply(this, arguments));
  }
  _createClass$3(ButtonElement2, [{
    key: "render",
    value: function render() {
      return _react2$2.default.createElement(
        "button",
        this.props,
        this.props.children
      );
    }
  }]);
  return ButtonElement2;
}(_react2$2.default.Component);
Button.default = (0, _scrollLink2$1.default)(ButtonElement);
var Element$1 = {};
var scrollElement = {};
Object.defineProperty(scrollElement, "__esModule", {
  value: true
});
var _extends$3 = Object.assign || function(target) {
  for (var i = 1; i < arguments.length; i++) {
    var source = arguments[i];
    for (var key in source) {
      if (Object.prototype.hasOwnProperty.call(source, key)) {
        target[key] = source[key];
      }
    }
  }
  return target;
};
var _createClass$2 = /* @__PURE__ */ function() {
  function defineProperties(target, props) {
    for (var i = 0; i < props.length; i++) {
      var descriptor = props[i];
      descriptor.enumerable = descriptor.enumerable || false;
      descriptor.configurable = true;
      if ("value" in descriptor) descriptor.writable = true;
      Object.defineProperty(target, descriptor.key, descriptor);
    }
  }
  return function(Constructor, protoProps, staticProps) {
    if (protoProps) defineProperties(Constructor.prototype, protoProps);
    if (staticProps) defineProperties(Constructor, staticProps);
    return Constructor;
  };
}();
var _react$1 = reactExports;
var _react2$1 = _interopRequireDefault$2(_react$1);
var _reactDom = reactDomExports;
_interopRequireDefault$2(_reactDom);
var _scroller$1 = scroller;
var _scroller2$1 = _interopRequireDefault$2(_scroller$1);
var _propTypes$1 = propTypesExports;
var _propTypes2$1 = _interopRequireDefault$2(_propTypes$1);
function _interopRequireDefault$2(obj) {
  return obj && obj.__esModule ? obj : { default: obj };
}
function _classCallCheck$2(instance, Constructor) {
  if (!(instance instanceof Constructor)) {
    throw new TypeError("Cannot call a class as a function");
  }
}
function _possibleConstructorReturn$2(self2, call) {
  if (!self2) {
    throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
  }
  return call && (typeof call === "object" || typeof call === "function") ? call : self2;
}
function _inherits$2(subClass, superClass) {
  if (typeof superClass !== "function" && superClass !== null) {
    throw new TypeError("Super expression must either be null or a function, not " + typeof superClass);
  }
  subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });
  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
}
scrollElement.default = function(Component) {
  var Element3 = function(_React$Component) {
    _inherits$2(Element4, _React$Component);
    function Element4(props) {
      _classCallCheck$2(this, Element4);
      var _this = _possibleConstructorReturn$2(this, (Element4.__proto__ || Object.getPrototypeOf(Element4)).call(this, props));
      _this.childBindings = {
        domNode: null
      };
      return _this;
    }
    _createClass$2(Element4, [{
      key: "componentDidMount",
      value: function componentDidMount() {
        if (typeof window === "undefined") {
          return false;
        }
        this.registerElems(this.props.name);
      }
    }, {
      key: "componentDidUpdate",
      value: function componentDidUpdate(prevProps) {
        if (this.props.name !== prevProps.name) {
          this.registerElems(this.props.name);
        }
      }
    }, {
      key: "componentWillUnmount",
      value: function componentWillUnmount() {
        if (typeof window === "undefined") {
          return false;
        }
        _scroller2$1.default.unregister(this.props.name);
      }
    }, {
      key: "registerElems",
      value: function registerElems(name) {
        _scroller2$1.default.register(name, this.childBindings.domNode);
      }
    }, {
      key: "render",
      value: function render() {
        return _react2$1.default.createElement(Component, _extends$3({}, this.props, { parentBindings: this.childBindings }));
      }
    }]);
    return Element4;
  }(_react2$1.default.Component);
  Element3.propTypes = {
    name: _propTypes2$1.default.string,
    id: _propTypes2$1.default.string
  };
  return Element3;
};
Object.defineProperty(Element$1, "__esModule", {
  value: true
});
var _extends$2 = Object.assign || function(target) {
  for (var i = 1; i < arguments.length; i++) {
    var source = arguments[i];
    for (var key in source) {
      if (Object.prototype.hasOwnProperty.call(source, key)) {
        target[key] = source[key];
      }
    }
  }
  return target;
};
var _createClass$1 = /* @__PURE__ */ function() {
  function defineProperties(target, props) {
    for (var i = 0; i < props.length; i++) {
      var descriptor = props[i];
      descriptor.enumerable = descriptor.enumerable || false;
      descriptor.configurable = true;
      if ("value" in descriptor) descriptor.writable = true;
      Object.defineProperty(target, descriptor.key, descriptor);
    }
  }
  return function(Constructor, protoProps, staticProps) {
    if (protoProps) defineProperties(Constructor.prototype, protoProps);
    if (staticProps) defineProperties(Constructor, staticProps);
    return Constructor;
  };
}();
var _react = reactExports;
var _react2 = _interopRequireDefault$1(_react);
var _scrollElement$1 = scrollElement;
var _scrollElement2$1 = _interopRequireDefault$1(_scrollElement$1);
var _propTypes = propTypesExports;
var _propTypes2 = _interopRequireDefault$1(_propTypes);
function _interopRequireDefault$1(obj) {
  return obj && obj.__esModule ? obj : { default: obj };
}
function _classCallCheck$1(instance, Constructor) {
  if (!(instance instanceof Constructor)) {
    throw new TypeError("Cannot call a class as a function");
  }
}
function _possibleConstructorReturn$1(self2, call) {
  if (!self2) {
    throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
  }
  return call && (typeof call === "object" || typeof call === "function") ? call : self2;
}
function _inherits$1(subClass, superClass) {
  if (typeof superClass !== "function" && superClass !== null) {
    throw new TypeError("Super expression must either be null or a function, not " + typeof superClass);
  }
  subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });
  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
}
var ElementWrapper = function(_React$Component) {
  _inherits$1(ElementWrapper2, _React$Component);
  function ElementWrapper2() {
    _classCallCheck$1(this, ElementWrapper2);
    return _possibleConstructorReturn$1(this, (ElementWrapper2.__proto__ || Object.getPrototypeOf(ElementWrapper2)).apply(this, arguments));
  }
  _createClass$1(ElementWrapper2, [{
    key: "render",
    value: function render() {
      var _this2 = this;
      var newProps = _extends$2({}, this.props);
      delete newProps.name;
      if (newProps.parentBindings) {
        delete newProps.parentBindings;
      }
      return _react2.default.createElement(
        "div",
        _extends$2({}, newProps, { ref: function ref(el2) {
          _this2.props.parentBindings.domNode = el2;
        } }),
        this.props.children
      );
    }
  }]);
  return ElementWrapper2;
}(_react2.default.Component);
ElementWrapper.propTypes = {
  name: _propTypes2.default.string,
  id: _propTypes2.default.string
};
Element$1.default = (0, _scrollElement2$1.default)(ElementWrapper);
var _extends$1 = Object.assign || function(target) {
  for (var i = 1; i < arguments.length; i++) {
    var source = arguments[i];
    for (var key in source) {
      if (Object.prototype.hasOwnProperty.call(source, key)) {
        target[key] = source[key];
      }
    }
  }
  return target;
};
var _createClass = /* @__PURE__ */ function() {
  function defineProperties(target, props) {
    for (var i = 0; i < props.length; i++) {
      var descriptor = props[i];
      descriptor.enumerable = descriptor.enumerable || false;
      descriptor.configurable = true;
      if ("value" in descriptor) descriptor.writable = true;
      Object.defineProperty(target, descriptor.key, descriptor);
    }
  }
  return function(Constructor, protoProps, staticProps) {
    if (protoProps) defineProperties(Constructor.prototype, protoProps);
    if (staticProps) defineProperties(Constructor, staticProps);
    return Constructor;
  };
}();
function _classCallCheck(instance, Constructor) {
  if (!(instance instanceof Constructor)) {
    throw new TypeError("Cannot call a class as a function");
  }
}
function _possibleConstructorReturn(self2, call) {
  if (!self2) {
    throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
  }
  return call && (typeof call === "object" || typeof call === "function") ? call : self2;
}
function _inherits(subClass, superClass) {
  if (typeof superClass !== "function" && superClass !== null) {
    throw new TypeError("Super expression must either be null or a function, not " + typeof superClass);
  }
  subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });
  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
}
var React = reactExports;
var scrollSpy$1 = scrollSpy$3;
var defaultScroller = scroller;
var PropTypes = propTypesExports;
var scrollHash = scrollHash$2;
var protoTypes = {
  to: PropTypes.string.isRequired,
  containerId: PropTypes.string,
  container: PropTypes.object,
  activeClass: PropTypes.string,
  spy: PropTypes.bool,
  smooth: PropTypes.oneOfType([PropTypes.bool, PropTypes.string]),
  offset: PropTypes.number,
  delay: PropTypes.number,
  isDynamic: PropTypes.bool,
  onClick: PropTypes.func,
  duration: PropTypes.oneOfType([PropTypes.number, PropTypes.func]),
  absolute: PropTypes.bool,
  onSetActive: PropTypes.func,
  onSetInactive: PropTypes.func,
  ignoreCancelEvents: PropTypes.bool,
  hashSpy: PropTypes.bool,
  spyThrottle: PropTypes.number
};
var Helpers = {
  Scroll: function Scroll(Component, customScroller) {
    console.warn("Helpers.Scroll is deprecated since v1.7.0");
    var scroller2 = customScroller || defaultScroller;
    var Scroll2 = function(_React$Component) {
      _inherits(Scroll3, _React$Component);
      function Scroll3(props) {
        _classCallCheck(this, Scroll3);
        var _this = _possibleConstructorReturn(this, (Scroll3.__proto__ || Object.getPrototypeOf(Scroll3)).call(this, props));
        _initialiseProps.call(_this);
        _this.state = {
          active: false
        };
        return _this;
      }
      _createClass(Scroll3, [{
        key: "getScrollSpyContainer",
        value: function getScrollSpyContainer() {
          var containerId = this.props.containerId;
          var container = this.props.container;
          if (containerId) {
            return document.getElementById(containerId);
          }
          if (container && container.nodeType) {
            return container;
          }
          return document;
        }
      }, {
        key: "componentDidMount",
        value: function componentDidMount() {
          if (this.props.spy || this.props.hashSpy) {
            var scrollSpyContainer = this.getScrollSpyContainer();
            if (!scrollSpy$1.isMounted(scrollSpyContainer)) {
              scrollSpy$1.mount(scrollSpyContainer, this.props.spyThrottle);
            }
            if (this.props.hashSpy) {
              if (!scrollHash.isMounted()) {
                scrollHash.mount(scroller2);
              }
              scrollHash.mapContainer(this.props.to, scrollSpyContainer);
            }
            if (this.props.spy) {
              scrollSpy$1.addStateHandler(this.stateHandler);
            }
            scrollSpy$1.addSpyHandler(this.spyHandler, scrollSpyContainer);
            this.setState({
              container: scrollSpyContainer
            });
          }
        }
      }, {
        key: "componentWillUnmount",
        value: function componentWillUnmount() {
          scrollSpy$1.unmount(this.stateHandler, this.spyHandler);
        }
      }, {
        key: "render",
        value: function render() {
          var className = "";
          if (this.state && this.state.active) {
            className = ((this.props.className || "") + " " + (this.props.activeClass || "active")).trim();
          } else {
            className = this.props.className;
          }
          var props = _extends$1({}, this.props);
          for (var prop in protoTypes) {
            if (props.hasOwnProperty(prop)) {
              delete props[prop];
            }
          }
          props.className = className;
          props.onClick = this.handleClick;
          return React.createElement(Component, props);
        }
      }]);
      return Scroll3;
    }(React.Component);
    var _initialiseProps = function _initialiseProps2() {
      var _this2 = this;
      this.scrollTo = function(to, props) {
        scroller2.scrollTo(to, _extends$1({}, _this2.state, props));
      };
      this.handleClick = function(event) {
        if (_this2.props.onClick) {
          _this2.props.onClick(event);
        }
        if (event.stopPropagation) event.stopPropagation();
        if (event.preventDefault) event.preventDefault();
        _this2.scrollTo(_this2.props.to, _this2.props);
      };
      this.stateHandler = function() {
        if (scroller2.getActiveLink() !== _this2.props.to) {
          if (_this2.state !== null && _this2.state.active && _this2.props.onSetInactive) {
            _this2.props.onSetInactive();
          }
          _this2.setState({ active: false });
        }
      };
      this.spyHandler = function(y2) {
        var scrollSpyContainer = _this2.getScrollSpyContainer();
        if (scrollHash.isMounted() && !scrollHash.isInitialized()) {
          return;
        }
        var to = _this2.props.to;
        var element = null;
        var elemTopBound = 0;
        var elemBottomBound = 0;
        var containerTop = 0;
        if (scrollSpyContainer.getBoundingClientRect) {
          var containerCords = scrollSpyContainer.getBoundingClientRect();
          containerTop = containerCords.top;
        }
        if (!element || _this2.props.isDynamic) {
          element = scroller2.get(to);
          if (!element) {
            return;
          }
          var cords = element.getBoundingClientRect();
          elemTopBound = cords.top - containerTop + y2;
          elemBottomBound = elemTopBound + cords.height;
        }
        var offsetY = y2 - _this2.props.offset;
        var isInside = offsetY >= Math.floor(elemTopBound) && offsetY < Math.floor(elemBottomBound);
        var isOutside = offsetY < Math.floor(elemTopBound) || offsetY >= Math.floor(elemBottomBound);
        var activeLink = scroller2.getActiveLink();
        if (isOutside) {
          if (to === activeLink) {
            scroller2.setActiveLink(void 0);
          }
          if (_this2.props.hashSpy && scrollHash.getHash() === to) {
            scrollHash.changeHash();
          }
          if (_this2.props.spy && _this2.state.active) {
            _this2.setState({ active: false });
            _this2.props.onSetInactive && _this2.props.onSetInactive();
          }
          return scrollSpy$1.updateStates();
        }
        if (isInside && activeLink !== to) {
          scroller2.setActiveLink(to);
          _this2.props.hashSpy && scrollHash.changeHash(to);
          if (_this2.props.spy) {
            _this2.setState({ active: true });
            _this2.props.onSetActive && _this2.props.onSetActive(to);
          }
          return scrollSpy$1.updateStates();
        }
      };
    };
    Scroll2.propTypes = protoTypes;
    Scroll2.defaultProps = { offset: 0 };
    return Scroll2;
  },
  Element: function Element2(Component) {
    console.warn("Helpers.Element is deprecated since v1.7.0");
    var Element3 = function(_React$Component2) {
      _inherits(Element4, _React$Component2);
      function Element4(props) {
        _classCallCheck(this, Element4);
        var _this3 = _possibleConstructorReturn(this, (Element4.__proto__ || Object.getPrototypeOf(Element4)).call(this, props));
        _this3.childBindings = {
          domNode: null
        };
        return _this3;
      }
      _createClass(Element4, [{
        key: "componentDidMount",
        value: function componentDidMount() {
          if (typeof window === "undefined") {
            return false;
          }
          this.registerElems(this.props.name);
        }
      }, {
        key: "componentDidUpdate",
        value: function componentDidUpdate(prevProps) {
          if (this.props.name !== prevProps.name) {
            this.registerElems(this.props.name);
          }
        }
      }, {
        key: "componentWillUnmount",
        value: function componentWillUnmount() {
          if (typeof window === "undefined") {
            return false;
          }
          defaultScroller.unregister(this.props.name);
        }
      }, {
        key: "registerElems",
        value: function registerElems(name) {
          defaultScroller.register(name, this.childBindings.domNode);
        }
      }, {
        key: "render",
        value: function render() {
          return React.createElement(Component, _extends$1({}, this.props, { parentBindings: this.childBindings }));
        }
      }]);
      return Element4;
    }(React.Component);
    Element3.propTypes = {
      name: PropTypes.string,
      id: PropTypes.string
    };
    return Element3;
  }
};
var Helpers_1 = Helpers;
Object.defineProperty(modules, "__esModule", {
  value: true
});
modules.Helpers = modules.ScrollElement = modules.ScrollLink = animateScroll2 = modules.animateScroll = scrollSpy = modules.scrollSpy = modules.Events = modules.scroller = modules.Element = modules.Button = modules.Link = void 0;
var _Link = Link;
var _Link2 = _interopRequireDefault(_Link);
var _Button = Button;
var _Button2 = _interopRequireDefault(_Button);
var _Element = Element$1;
var _Element2 = _interopRequireDefault(_Element);
var _scroller = scroller;
var _scroller2 = _interopRequireDefault(_scroller);
var _scrollEvents = scrollEvents;
var _scrollEvents2 = _interopRequireDefault(_scrollEvents);
var _scrollSpy = scrollSpy$3;
var _scrollSpy2 = _interopRequireDefault(_scrollSpy);
var _animateScroll = animateScroll$2;
var _animateScroll2 = _interopRequireDefault(_animateScroll);
var _scrollLink = scrollLink;
var _scrollLink2 = _interopRequireDefault(_scrollLink);
var _scrollElement = scrollElement;
var _scrollElement2 = _interopRequireDefault(_scrollElement);
var _Helpers = Helpers_1;
var _Helpers2 = _interopRequireDefault(_Helpers);
function _interopRequireDefault(obj) {
  return obj && obj.__esModule ? obj : { default: obj };
}
modules.Link = _Link2.default;
modules.Button = _Button2.default;
modules.Element = _Element2.default;
modules.scroller = _scroller2.default;
modules.Events = _scrollEvents2.default;
var scrollSpy = modules.scrollSpy = _scrollSpy2.default;
var animateScroll2 = modules.animateScroll = _animateScroll2.default;
modules.ScrollLink = _scrollLink2.default;
modules.ScrollElement = _scrollElement2.default;
modules.Helpers = _Helpers2.default;
modules.default = { Link: _Link2.default, Button: _Button2.default, Element: _Element2.default, scroller: _scroller2.default, Events: _scrollEvents2.default, scrollSpy: _scrollSpy2.default, animateScroll: _animateScroll2.default, ScrollLink: _scrollLink2.default, ScrollElement: _scrollElement2.default, Helpers: _Helpers2.default };
const PdfView = (pdfFilenames) => {
  return /* @__PURE__ */ jsxRuntimeExports.jsx("iframe", { src: pdfFilenames.slice(-1)[0], className: "w-screen h-screen" });
};
function SongView({}) {
  let songData = useLoaderData();
  if (!songData.key) {
    songData.key = guessKey(songData.content);
  }
  if (songData.lyricsLength() < 50) {
    return PdfView(songData.pdfFilenames);
  }
  const [chordsHidden, setChordsHidden] = useLocalStorageState("settings/chordsHidden", { defaultValue: false });
  const [repeatParts, setRepeatParts] = useLocalStorageState("settings/repeatParts", { defaultValue: false });
  const [repeatVerseChords, setRepeatVerseChords] = useLocalStorageState("settings/repeatVerseChords", { defaultValue: false });
  const [fontSize, setFontSize] = useLocalStorageState("settings/fontSize", { defaultValue: 12 });
  const [twoColumns, settwoColumns] = useLocalStorageState("settings/twoColumns", { defaultValue: false });
  const [fitScreenMode, setfitScreenMode] = useLocalStorageState("settings/fitScreenMode", { defaultValue: "XY" });
  const [parsedContent, setParsedContent] = reactExports.useState("");
  const [songRenderKey, setSongRenderKey] = reactExports.useState(songData.key);
  let navigate = useNavigate();
  reactExports.useEffect(() => {
    setParsedContent(renderSong(songData, songRenderKey, repeatParts));
    scrollSpy.update();
  }, [songRenderKey, repeatParts, songData]);
  const scrollDown = () => {
    if (document.body.scrollHeight / screen.height < 1.5 || document.body.scrollHeight - window.scrollY < 0.8 * screen.height) {
      animateScroll2.scrollToBottom({ duration: 3e3 });
      return;
    }
    const sections = document.querySelectorAll(".section");
    for (let container of sections) {
      const rect = container.getBoundingClientRect();
      if (rect.bottom >= window.scrollY + window.innerHeight) {
        animateScroll2.scrollTo(rect.top - Math.max(100, 0.2 * screen.height), { duration: 3e3 });
        break;
      }
    }
  };
  const scrollUp = () => {
    animateScroll2.scrollToTop({ duration: 200 });
    return;
  };
  return /* @__PURE__ */ jsxRuntimeExports.jsxs("div", { className: " " + (fitScreenMode === "XY" ? " flex flex-col h-dvh" : ""), children: [
    /* @__PURE__ */ jsxRuntimeExports.jsxs(navbar_default, { shouldHideOnScroll: true, maxWidth: "xl", isBordered: true, className: "flex", children: [
      /* @__PURE__ */ jsxRuntimeExports.jsx(navbar_content_default, { justify: "start", children: /* @__PURE__ */ jsxRuntimeExports.jsx(button_default, { color: "primary", isIconOnly: true, variant: "ghost", onClick: () => navigate("/"), children: /* @__PURE__ */ jsxRuntimeExports.jsx(Undo2, {}) }) }),
      /* @__PURE__ */ jsxRuntimeExports.jsxs(navbar_content_default, { as: "div", justify: "center", className: "w-full max-sm:gap-2.5", children: [
        /* @__PURE__ */ jsxRuntimeExports.jsx(navbar_item_default, { className: "", children: /* @__PURE__ */ jsxRuntimeExports.jsx(TransposeSettings, { setSongRenderKey, songRenderKey }) }),
        /* @__PURE__ */ jsxRuntimeExports.jsx(navbar_item_default, { className: "", children: /* @__PURE__ */ jsxRuntimeExports.jsx(SpaceSavingSettings, { chordsHidden, setChordsHidden, repeatParts, setRepeatParts, repeatVerseChords, setRepeatVerseChords, twoColumns, settwoColumns }) }),
        /* @__PURE__ */ jsxRuntimeExports.jsx(navbar_item_default, { className: "", children: /* @__PURE__ */ jsxRuntimeExports.jsx(FontSizeSettings, { fontSize, setFontSize, fitScreenMode, setfitScreenMode }) }),
        /* @__PURE__ */ jsxRuntimeExports.jsx(navbar_item_default, { className: "hidden sm:flex ", children: /* @__PURE__ */ jsxRuntimeExports.jsx(button_default, { color: "primary", variant: "ghost", isIconOnly: true, href: "https://github.com/tragram/domcikuv-zpevnik-v2/tree/main/songs/chordpro/" + songData.chordproFile, as: link_default, children: /* @__PURE__ */ jsxRuntimeExports.jsx(Github, {}) }) })
      ] })
    ] }),
    /* @__PURE__ */ jsxRuntimeExports.jsxs("div", { className: "fixed bottom-12 right-10 z-50 flex-col gap-2 " + (fitScreenMode === "X" ? "flex" : "hidden"), children: [
      /* @__PURE__ */ jsxRuntimeExports.jsx(button_default, { className: "", isIconOnly: true, onPress: scrollUp, children: /* @__PURE__ */ jsxRuntimeExports.jsx(ArrowBigUpDash, {}) }),
      /* @__PURE__ */ jsxRuntimeExports.jsx(button_default, { className: "", isIconOnly: true, onPress: scrollDown, children: /* @__PURE__ */ jsxRuntimeExports.jsx(ArrowBigDown, {}) })
    ] }),
    /* @__PURE__ */ jsxRuntimeExports.jsxs(
      "div",
      {
        id: "song-content-wrapper",
        className: `px-6 max-h-full flex flex-grow flex-col backdrop-blur-sm bg-white/70 ${fitScreenMode === "XY" ? "overflow-hidden" : ""}`,
        children: [
          /* @__PURE__ */ jsxRuntimeExports.jsxs("div", { className: "flex flex-col text-center ", children: [
            /* @__PURE__ */ jsxRuntimeExports.jsxs("h1", { className: "text-lg font-bold", children: [
              songData.artist,
              " - ",
              songData.title
            ] }),
            /* @__PURE__ */ jsxRuntimeExports.jsxs("h2", { className: "opacity-70 text-sm", children: [
              "Capo: ",
              songData.capo
            ] })
          ] }),
          /* @__PURE__ */ jsxRuntimeExports.jsx("div", { className: "py-4 w-full max-h-full " + (fitScreenMode === "XY" ? "flex-1" : ""), id: "autotextsize_wrapper", children: /* @__PURE__ */ jsxRuntimeExports.jsx(
            AutoTextSize,
            {
              mode: fitScreenMode === "XY" ? "boxoneline" : "oneline",
              minFontSizePx: fitScreenMode !== "none" ? minFontSizePx : fontSize,
              maxFontSizePx: fitScreenMode !== "none" ? maxFontSizePx : fontSize,
              children: /* @__PURE__ */ jsxRuntimeExports.jsx("div", { className: `flex flex-col ${chordsHidden ? "chords-hidden" : ""} ${repeatVerseChords ? "" : "repeated-chords-hidden"} ${twoColumns ? "song-content-columns" : ""}`, dangerouslySetInnerHTML: { __html: parsedContent }, id: "song_content" })
            }
          ) })
        ]
      }
    )
  ] });
}
var x00;
var hasRequiredX00;
function requireX00() {
  if (hasRequiredX00) return x00;
  hasRequiredX00 = 1;
  x00 = [
    //  BLOCK U+0000
    "\\x00",
    "\\x01",
    "\\x02",
    "\\x03",
    "\\x04",
    "\\x05",
    "\\x06",
    "\\x07",
    "\\x08",
    "\\x09",
    "\\x0a",
    "\\x0b",
    "\\x0c",
    "\\x0d",
    "\\x0e",
    "\\x0f",
    // ^00      ^01       ^02       ^03       ^04       ^05       ^06       ^07       ^08       ^09       ^0a       ^0b       ^0c       ^0d       ^0e       ^0f       
    "\\x10",
    "\\x11",
    "\\x12",
    "\\x13",
    "\\x14",
    "\\x15",
    "\\x16",
    "\\x17",
    "\\x18",
    "\\x19",
    "\\x1a",
    "\\x1b",
    "\\x1c",
    "\\x1d",
    "\\x1e",
    "\\x1f",
    // ^10      ^11       ^12       ^13       ^14       ^15       ^16       ^17       ^18       ^19       ^1a       ^1b       ^1c       ^1d       ^1e       ^1f       
    " ",
    "!",
    '"',
    "#",
    "\\$",
    "%",
    "&",
    "'",
    "(",
    ")",
    "*",
    "+",
    ",",
    "-",
    ".",
    "/",
    // ^20  ^21    ^22    ^23    ^24     ^25    ^26    ^27    ^28    ^29    ^2a    ^2b    ^2c ^2d  ^2e    ^2f    ^30    
    "0",
    "1",
    "2",
    "3",
    "4",
    "5",
    "6",
    "7",
    "8",
    "9",
    ":",
    ";",
    "<",
    "=",
    ">",
    "?",
    // ^30  ^31  ^32  ^33  ^34  ^35  ^36  ^37  ^38  ^39  ^3a    ^3b    ^3c    ^3d    ^3e    ^3f    
    "\\@",
    "A",
    "B",
    "C",
    "D",
    "E",
    "F",
    "G",
    "H",
    "I",
    "J",
    "K",
    "L",
    "M",
    "N",
    "O",
    // ^40    ^41  ^42  ^43  ^44  ^45  ^46  ^47  ^48  ^49  ^4a  ^4b  ^4c  ^4d  ^4e  ^4f  
    "P",
    "Q",
    "R",
    "S",
    "T",
    "U",
    "V",
    "W",
    "X",
    "Y",
    "Z",
    "[",
    "\\\\",
    "]",
    "^",
    "_",
    // ^50  ^51  ^52  ^53  ^54  ^55  ^56  ^57  ^58  ^59  ^5a  ^5b    ^5c     ^5d    ^5e    ^5f    
    "`",
    "a",
    "b",
    "c",
    "d",
    "e",
    "f",
    "g",
    "h",
    "i",
    "j",
    "k",
    "l",
    "m",
    "n",
    "o",
    // ^60   ^61  ^62  ^63  ^64  ^65  ^66  ^67  ^68  ^69  ^6a  ^6b  ^6c  ^6d  ^6e  ^6f  
    "p",
    "q",
    "r",
    "s",
    "t",
    "u",
    "v",
    "w",
    "x",
    "y",
    "z",
    "\\{",
    "|",
    "\\}",
    "~",
    "\\x7f",
    // ^70  ^71  ^72  ^73  ^74  ^75  ^76  ^77  ^78  ^79  ^7a  ^7b     ^7c    ^7d     ^7e    ^7f       
    // ======================================================================
    //  Strictly speaking, these are the Unicode values:
    //  "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "",
    //  ^80 ^81 ^82 ^83 ^84 ^85 ^86 ^87 ^88 ^89 ^8a ^8b ^8c ^8d ^8e ^8f  
    //  "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "",
    //  ^90 ^91 ^92 ^93 ^94 ^95 ^96 ^97 ^98 ^99 ^9a ^9b ^9c ^9d ^9e ^9f  
    // 
    //  But I've decided to tolerate Win-1252 input:
    "EUR",
    "",
    ",",
    "f",
    ",,",
    "...",
    "+",
    "++",
    "^",
    "%0",
    "S",
    "<",
    "OE",
    "",
    "Z",
    "",
    "",
    "'",
    "'",
    '"',
    '"',
    "*",
    "-",
    "--",
    "~",
    "tm",
    "s",
    ">",
    "oe",
    "",
    "z",
    "Y",
    //  See: https://en.wikipedia.org/wiki/Latin-1_Supplement_%28Unicode_block%29
    // ======================================================================
    //  And now, back to Latin-1 = Unicode values...
    " ",
    "!",
    "C/",
    "PS",
    "\\$?",
    "Y=",
    "|",
    "SS",
    '"',
    "(c)",
    "a",
    "<<",
    "!",
    "",
    "(r)",
    "-",
    // ^a0  ^a1    ^a2     ^a3   ^a4      ^a5     ^a6    ^a7   ^a8    ^a9      ^aa  ^ab     ^ac   ^ad  ^ae      ^af    
    "deg",
    "+-",
    "2",
    "3",
    "'",
    "u",
    "P",
    "*",
    ",",
    "1",
    "o",
    ">>",
    "1/4",
    "1/2",
    "3/4",
    "?",
    // ^b0   ^b1     ^b2  ^b3  ^b4    ^b5  ^b6  ^b7    ^b8 ^b9  ^ba  ^bb  ^bc     ^bd      ^be      ^bf      ^c0    
    "A",
    "A",
    "A",
    "A",
    "A",
    "A",
    "AE",
    "C",
    "E",
    "E",
    "E",
    "E",
    "I",
    "I",
    "I",
    "I",
    // ^c0  ^c1  ^c2  ^c3  ^c4  ^c5  ^c6   ^c7  ^c8  ^c9  ^ca  ^cb  ^cc  ^cd  ^ce  ^cf  
    "D",
    "N",
    "O",
    "O",
    "O",
    "O",
    "O",
    "x",
    "O",
    "U",
    "U",
    "U",
    "U",
    "Y",
    "Th",
    "ss",
    // ^d0  ^d1  ^d2  ^d3  ^d4  ^d5  ^d6  ^d7  ^d8  ^d9  ^da  ^db  ^dc  ^dd  ^de   ^df   
    "a",
    "a",
    "a",
    "a",
    "a",
    "a",
    "ae",
    "c",
    "e",
    "e",
    "e",
    "e",
    "i",
    "i",
    "i",
    "i",
    // ^e0  ^e1  ^e2  ^e3  ^e4  ^e5  ^e6   ^e7  ^e8  ^e9  ^ea  ^eb  ^ec  ^ed  ^ee  ^ef  
    "d",
    "n",
    "o",
    "o",
    "o",
    "o",
    "o",
    "/",
    "o",
    "u",
    "u",
    "u",
    "u",
    "y",
    "th",
    "y"
    // ^f0  ^f1  ^f2  ^f3  ^f4  ^f5  ^f6  ^f7    ^f8  ^f9  ^fa  ^fb  ^fc  ^fd  ^fe   ^ff  
  ];
  return x00;
}
var x01;
var hasRequiredX01;
function requireX01() {
  if (hasRequiredX01) return x01;
  hasRequiredX01 = 1;
  x01 = [
    "A",
    "a",
    "A",
    "a",
    "A",
    "a",
    "C",
    "c",
    "C",
    "c",
    "C",
    "c",
    "C",
    "c",
    "D",
    "d",
    "D",
    "d",
    "E",
    "e",
    "E",
    "e",
    "E",
    "e",
    "E",
    "e",
    "E",
    "e",
    "G",
    "g",
    "G",
    "g",
    "G",
    "g",
    "G",
    "g",
    "H",
    "h",
    "H",
    "h",
    "I",
    "i",
    "I",
    "i",
    "I",
    "i",
    "I",
    "i",
    "I",
    "i",
    "IJ",
    "ij",
    "J",
    "j",
    "K",
    "k",
    "k",
    "L",
    "l",
    "L",
    "l",
    "L",
    "l",
    "L",
    "l",
    "L",
    "l",
    "N",
    "n",
    "N",
    "n",
    "N",
    "n",
    "'n",
    "ng",
    "NG",
    "O",
    "o",
    "O",
    "o",
    "O",
    "o",
    "OE",
    "oe",
    "R",
    "r",
    "R",
    "r",
    "R",
    "r",
    "S",
    "s",
    "S",
    "s",
    "S",
    "s",
    "S",
    "s",
    "T",
    "t",
    "T",
    "t",
    "T",
    "t",
    "U",
    "u",
    "U",
    "u",
    "U",
    "u",
    "U",
    "u",
    "U",
    "u",
    "U",
    "u",
    "W",
    "w",
    "Y",
    "y",
    "Y",
    "Z",
    "z",
    "Z",
    "z",
    "Z",
    "z",
    "s",
    "b",
    "B",
    "B",
    "b",
    "6",
    "6",
    "O",
    "C",
    "c",
    "D",
    "D",
    "D",
    "d",
    "d",
    "3",
    "\\@",
    "E",
    "F",
    "f",
    "G",
    "G",
    "hv",
    "I",
    "I",
    "K",
    "k",
    "l",
    "l",
    "W",
    "N",
    "n",
    "O",
    "O",
    "o",
    "OI",
    "oi",
    "P",
    "p",
    "YR",
    "2",
    "2",
    "SH",
    "sh",
    "t",
    "T",
    "t",
    "T",
    "U",
    "u",
    "Y",
    "V",
    "Y",
    "y",
    "Z",
    "z",
    "ZH",
    "ZH",
    "zh",
    "zh",
    "2",
    "5",
    "5",
    "ts",
    "w",
    "|",
    "||",
    "|=",
    "!",
    "DZ",
    "Dz",
    "dz",
    "LJ",
    "Lj",
    "lj",
    "NJ",
    "Nj",
    "nj",
    "A",
    "a",
    "I",
    "i",
    "O",
    "o",
    "U",
    "u",
    "U",
    "u",
    "U",
    "u",
    "U",
    "u",
    "U",
    "u",
    "\\@",
    "A",
    "a",
    "A",
    "a",
    "AE",
    "ae",
    "G",
    "g",
    "G",
    "g",
    "K",
    "k",
    "O",
    "o",
    "O",
    "o",
    "ZH",
    "zh",
    "j",
    "DZ",
    "Dz",
    "dz",
    "G",
    "g",
    "HV",
    "W",
    "N",
    "n",
    "A",
    "a",
    "AE",
    "ae",
    "O",
    "o"
  ];
  return x01;
}
var x02;
var hasRequiredX02;
function requireX02() {
  if (hasRequiredX02) return x02;
  hasRequiredX02 = 1;
  x02 = [
    "A",
    "a",
    "A",
    "a",
    "E",
    "e",
    "E",
    "e",
    "I",
    "i",
    "I",
    "i",
    "O",
    "o",
    "O",
    "o",
    "R",
    "r",
    "R",
    "r",
    "U",
    "u",
    "U",
    "u",
    "S",
    "s",
    "T",
    "t",
    "Y",
    "y",
    "H",
    "h",
    "N",
    "d",
    "OU",
    "ou",
    "Z",
    "z",
    "A",
    "a",
    "E",
    "e",
    "O",
    "o",
    "O",
    "o",
    "O",
    "o",
    "O",
    "o",
    "Y",
    "y",
    "l",
    //  0x34
    "n",
    //  0x35
    "t",
    //  0x36
    "j",
    //  0x37
    "db",
    //  0x38
    "qp",
    //  0x39
    "A",
    //  0x3a
    "C",
    //  0x3b
    "c",
    //  0x3c
    "L",
    //  0x3d
    "T",
    //  0x3e
    "s",
    //  0x3f
    "z",
    //  0x40
    "[?]",
    "[?]",
    "B",
    //  0x43
    "U",
    //  0x44
    "^",
    //  0x45
    "E",
    //  0x46
    "e",
    //  0x47
    "J",
    //  0x48
    "j",
    //  0x49
    "q",
    //  0x4a
    "q",
    //  0x4b
    "R",
    //  0x4c
    "r",
    //  0x4d
    "Y",
    //  0x4e
    "y",
    //  0x4f
    "a",
    "a",
    "a",
    "b",
    "o",
    "c",
    "d",
    "d",
    "e",
    "\\@",
    "\\@",
    "e",
    "e",
    "e",
    "e",
    "j",
    "g",
    "g",
    "g",
    "g",
    "u",
    "Y",
    "h",
    "h",
    "i",
    "i",
    "I",
    "l",
    "l",
    "l",
    "lZ",
    "W",
    "W",
    "m",
    "n",
    "n",
    "n",
    "o",
    "OE",
    "O",
    "F",
    "r",
    "r",
    "r",
    "r",
    "r",
    "r",
    "r",
    "R",
    "R",
    "s",
    "S",
    "j",
    "S",
    "S",
    "t",
    "t",
    "u",
    "U",
    "v",
    "^",
    "w",
    "y",
    "Y",
    "z",
    "z",
    "Z",
    "Z",
    "?",
    "?",
    "?",
    "C",
    "\\@",
    "B",
    "E",
    "G",
    "H",
    "j",
    "k",
    "L",
    "q",
    "?",
    "?",
    "dz",
    "dZ",
    "dz",
    "ts",
    "tS",
    "tC",
    "fN",
    "ls",
    "lz",
    "WW",
    "]]",
    "h",
    "h",
    "h",
    "h",
    "j",
    "r",
    "r",
    "r",
    "r",
    "w",
    "y",
    "'",
    '"',
    "`",
    "'",
    "`",
    "`",
    "'",
    "?",
    "?",
    "<",
    ">",
    "^",
    "V",
    "^",
    "V",
    "'",
    "-",
    "/",
    "\\\\",
    ",",
    "_",
    "\\\\",
    "/",
    ":",
    ".",
    "`",
    "'",
    "^",
    "V",
    "+",
    "-",
    "V",
    ".",
    "\\@",
    ",",
    "~",
    '"',
    "R",
    "X",
    "G",
    "l",
    "s",
    "x",
    "?",
    //  U+2e5 ...
    //  ˥   ˦    ˧    ˨     ˩   ˪    ˫
    "5",
    "4",
    "3",
    "2",
    "1",
    "/",
    "\\",
    "V",
    "=",
    '"',
    "V",
    //  ˬ  02EF	MODIFIER LETTER LOW DOWN ARROWHEAD
    //  ...and also 16 UPA modifiers:
    //  ˰ ˱ ˲ ˳ ˴ ˵ ˶ ˷ ˸ ˹ ˺ ˻ ˼ ˽ ˾ ˿
    "^",
    //  02F0	MODIFIER LETTER LOW UP ARROWHEAD
    "<",
    //  02F1	MODIFIER LETTER LOW LEFT ARROWHEAD
    ">",
    //  02F2	MODIFIER LETTER LOW RIGHT ARROWHEAD
    "o",
    //  02F3	MODIFIER LETTER LOW RING
    "`",
    //  02F4	MODIFIER LETTER MIDDLE GRAVE ACCENT
    "``",
    //  02F5	MODIFIER LETTER MIDDLE DOUBLE GRAVE ACCENT
    "//",
    //  02F6	MODIFIER LETTER MIDDLE DOUBLE ACUTE ACCENT
    "~",
    //  02F7	MODIFIER LETTER LOW TILDE
    ":",
    //  02F8	MODIFIER LETTER RAISED COLON
    "[-",
    //  02F9	MODIFIER LETTER BEGIN HIGH TONE
    "-]",
    //  02FA	MODIFIER LETTER END HIGH TONE
    "[_",
    //  02FB	MODIFIER LETTER BEGIN LOW TONE
    "_]",
    //  02FC	MODIFIER LETTER END LOW TONE
    "_",
    //  02FD	MODIFIER LETTER SHELF
    "_",
    //  02FE	MODIFIER LETTER OPEN SHELF
    "<"
    //  02FF	MODIFIER LETTER LOW LEFT ARROW
  ];
  return x02;
}
var x03;
var hasRequiredX03;
function requireX03() {
  if (hasRequiredX03) return x03;
  hasRequiredX03 = 1;
  x03 = [
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "",
    "",
    "",
    // '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]',
    "a",
    //  0x63
    "e",
    //  0x64
    "i",
    //  0x65
    "o",
    //  0x66
    "u",
    //  0x67
    "c",
    //  0x68
    "d",
    //  0x69
    "h",
    //  0x6a
    "m",
    //  0x6b
    "r",
    //  0x6c
    "t",
    //  0x6d
    "v",
    //  0x6e
    "x",
    //  0x6f
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "'",
    ",",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "",
    "[?]",
    "[?]",
    "[?]",
    "?",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "",
    "",
    "A",
    ";",
    "E",
    "E",
    "I",
    "[?]",
    "O",
    "[?]",
    "U",
    "O",
    "I",
    "A",
    "B",
    "G",
    "D",
    "E",
    "Z",
    "E",
    "Th",
    "I",
    "K",
    "L",
    "M",
    "N",
    "Ks",
    "O",
    "P",
    "R",
    "[?]",
    "S",
    "T",
    "U",
    "Ph",
    "Kh",
    "Ps",
    "O",
    "I",
    "U",
    "a",
    "e",
    "e",
    "i",
    "u",
    "a",
    "b",
    "g",
    "d",
    "e",
    "z",
    "e",
    "th",
    "i",
    "k",
    "l",
    "m",
    "n",
    "x",
    "o",
    "p",
    "r",
    "s",
    "s",
    "t",
    "u",
    "ph",
    "kh",
    "ps",
    "o",
    "i",
    "u",
    "o",
    "u",
    "o",
    "[?]",
    "b",
    "th",
    "U",
    "U",
    "U",
    "ph",
    "p",
    "&",
    "[?]",
    "[?]",
    "St",
    "st",
    "W",
    "w",
    "Q",
    "q",
    "Sp",
    "sp",
    "Sh",
    "sh",
    "F",
    "f",
    "Kh",
    "kh",
    "H",
    "h",
    "G",
    "g",
    "CH",
    "ch",
    "Ti",
    "ti",
    // 03F0:
    //  ϰ ϱ ϲ ϳ  
    "k",
    "r",
    "c",
    "j",
    //  ϴ ϵ ϶ Ϸ 
    "TH",
    "e",
    "e",
    "Sh",
    //  ϸ Ϲ Ϻ ϻ
    "sh",
    "s",
    "[?]",
    "[?]",
    //  ϼ Ͻ Ͼ Ͽ
    "r/",
    "S",
    "S.",
    "S."
  ];
  return x03;
}
var x04;
var hasRequiredX04;
function requireX04() {
  if (hasRequiredX04) return x04;
  hasRequiredX04 = 1;
  x04 = [
    "Ie",
    "Io",
    "Dj",
    "Gj",
    "E",
    "Dz",
    "I",
    "Yi",
    "J",
    "Lj",
    "Nj",
    "Tsh",
    "Kj",
    "I",
    "U",
    "Dzh",
    "A",
    "B",
    "V",
    "G",
    "D",
    "E",
    "Zh",
    "Z",
    "I",
    "I",
    "K",
    "L",
    "M",
    "N",
    "O",
    "P",
    "R",
    "S",
    "T",
    "U",
    "F",
    "Kh",
    "Ts",
    "Ch",
    "Sh",
    "Shch",
    "",
    "Y",
    "'",
    "E",
    "Iu",
    "Ia",
    "a",
    "b",
    "v",
    "g",
    "d",
    "e",
    "zh",
    "z",
    "i",
    "i",
    "k",
    "l",
    "m",
    "n",
    "o",
    "p",
    "r",
    "s",
    "t",
    "u",
    "f",
    "kh",
    "ts",
    "ch",
    "sh",
    "shch",
    "",
    "y",
    "'",
    "e",
    "iu",
    "ia",
    "ie",
    "io",
    "dj",
    "gj",
    "ie",
    "dz",
    "i",
    "yi",
    "j",
    "lj",
    "nj",
    "tsh",
    "kj",
    "i",
    "u",
    "dzh",
    "O",
    "o",
    "E",
    "e",
    "Ie",
    "ie",
    "E",
    "e",
    "Ie",
    "ie",
    "O",
    "o",
    "Io",
    "io",
    "Ks",
    "ks",
    "Ps",
    "ps",
    "F",
    "f",
    "Y",
    "y",
    "Y",
    "y",
    "u",
    "u",
    "O",
    "o",
    "O",
    "o",
    "Ot",
    "ot",
    "Q",
    "q",
    "*1000*",
    "",
    "",
    "",
    "",
    "[?]",
    "*100.000*",
    "*1.000.000*",
    "[?]",
    "[?]",
    '"',
    '"',
    "R'",
    "r'",
    "G'",
    "g'",
    "G'",
    "g'",
    "G'",
    "g'",
    "Zh'",
    "zh'",
    "Z'",
    "z'",
    "K'",
    "k'",
    "K'",
    "k'",
    "K'",
    "k'",
    "K'",
    "k'",
    "N'",
    "n'",
    "Ng",
    "ng",
    "P'",
    "p'",
    "Kh",
    "kh",
    "S'",
    "s'",
    "T'",
    "t'",
    "U",
    "u",
    "U'",
    "u'",
    "Kh'",
    "kh'",
    "Tts",
    "tts",
    "Ch'",
    "ch'",
    "Ch'",
    "ch'",
    "H",
    "h",
    "Ch",
    "ch",
    "Ch'",
    "ch'",
    "`",
    "Zh",
    "zh",
    "K'",
    "k'",
    "[?]",
    "[?]",
    "N'",
    "n'",
    "[?]",
    "[?]",
    "Ch",
    "ch",
    "[?]",
    "[?]",
    "[?]",
    "a",
    "a",
    "A",
    "a",
    "Ae",
    "ae",
    "Ie",
    "ie",
    "\\@",
    "\\@",
    "\\@",
    "\\@",
    "Zh",
    "zh",
    "Z",
    "z",
    "Dz",
    "dz",
    "I",
    "i",
    "I",
    "i",
    "O",
    "o",
    "O",
    "o",
    "O",
    "o",
    "E",
    "e",
    "U",
    "u",
    "U",
    "u",
    "U",
    "u",
    "Ch",
    "ch",
    "[?]",
    "[?]",
    "Y",
    "y",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]"
  ];
  return x04;
}
var x05;
var hasRequiredX05;
function requireX05() {
  if (hasRequiredX05) return x05;
  hasRequiredX05 = 1;
  x05 = [
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "A",
    "B",
    "G",
    "D",
    "E",
    "Z",
    "E",
    "E",
    "T`",
    "Zh",
    "I",
    "L",
    "Kh",
    "Ts",
    "K",
    "H",
    "Dz",
    "Gh",
    "Ch",
    "M",
    "Y",
    "N",
    "Sh",
    "O",
    "Ch`",
    "P",
    "J",
    "Rh",
    "S",
    "V",
    "T",
    "R",
    "Ts`",
    "W",
    "P`",
    "K`",
    "O",
    "F",
    "[?]",
    "[?]",
    "<",
    "'",
    "/",
    "!",
    ",",
    "?",
    ".",
    "[?]",
    "a",
    "b",
    "g",
    "d",
    "e",
    "z",
    "e",
    "e",
    "t`",
    "zh",
    "i",
    "l",
    "kh",
    "ts",
    "k",
    "h",
    "dz",
    "gh",
    "ch",
    "m",
    "y",
    "n",
    "sh",
    "o",
    "ch`",
    "p",
    "j",
    "rh",
    "s",
    "v",
    "t",
    "r",
    "ts`",
    "w",
    "p`",
    "k`",
    "o",
    "f",
    "ew",
    "[?]",
    ".",
    "-",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "[?]",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "\\@",
    "e",
    "a",
    "o",
    "i",
    "e",
    "e",
    "a",
    "a",
    "o",
    "[?]",
    "u",
    "'",
    "",
    "",
    "",
    //  u+05c0:
    "|",
    "",
    "",
    ":",
    "",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "",
    "b",
    "g",
    "d",
    "h",
    "v",
    "z",
    "kh",
    "t",
    "y",
    "k",
    "k",
    "l",
    "m",
    "m",
    "n",
    "n",
    "s",
    "`",
    "p",
    "p",
    "ts",
    "ts",
    "q",
    "r",
    "sh",
    "t",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "V",
    "oy",
    "i",
    "'",
    '"',
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]"
  ];
  return x05;
}
var x06;
var hasRequiredX06;
function requireX06() {
  if (hasRequiredX06) return x06;
  hasRequiredX06 = 1;
  x06 = [
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    ",",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    ";",
    "[?]",
    "[?]",
    "[?]",
    "?",
    "[?]",
    "",
    "a",
    "'",
    "w'",
    "",
    "y'",
    "",
    "b",
    "\\@",
    "t",
    "th",
    "j",
    "H",
    "kh",
    "d",
    "dh",
    "r",
    "z",
    "s",
    "sh",
    "S",
    "D",
    "T",
    "Z",
    "`",
    "G",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "",
    "f",
    "q",
    "k",
    "l",
    "m",
    "n",
    "h",
    "w",
    "~",
    "y",
    "an",
    "un",
    "in",
    "a",
    "u",
    "i",
    "W",
    "",
    "",
    "'",
    "'",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "0",
    "1",
    "2",
    "3",
    "4",
    "5",
    "6",
    "7",
    "8",
    "9",
    "%",
    ".",
    ",",
    "*",
    "[?]",
    "[?]",
    "",
    "'",
    "'",
    "'",
    "",
    "'",
    "'w",
    "'u",
    "'y",
    "tt",
    "tth",
    "b",
    "t",
    "T",
    "p",
    "th",
    "bh",
    "'h",
    "H",
    "ny",
    "dy",
    "H",
    "ch",
    "cch",
    "dd",
    "D",
    "D",
    "Dt",
    "dh",
    "ddh",
    "d",
    "D",
    "D",
    "rr",
    "R",
    "R",
    "R",
    "R",
    "R",
    "R",
    "j",
    "R",
    "S",
    "S",
    "S",
    "S",
    "S",
    "T",
    "GH",
    "F",
    "F",
    "F",
    "v",
    "f",
    "ph",
    "Q",
    "Q",
    "kh",
    "k",
    "K",
    "K",
    "ng",
    "K",
    "g",
    "G",
    "N",
    "G",
    "G",
    "G",
    "L",
    "L",
    "L",
    "L",
    "N",
    "N",
    "N",
    "N",
    "N",
    "h",
    "Ch",
    "hy",
    "h",
    "H",
    "\\@",
    "W",
    "oe",
    "oe",
    "u",
    "yu",
    "yu",
    "W",
    "v",
    "y",
    "Y",
    "Y",
    "W",
    "",
    "",
    "y",
    "y'",
    ".",
    "ae",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "\\@",
    "#",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "^",
    "",
    "",
    "",
    "",
    "[?]",
    "[?]",
    "0",
    "1",
    "2",
    "3",
    "4",
    "5",
    "6",
    "7",
    "8",
    "9",
    "Sh",
    "D",
    "Gh",
    "&",
    "+m",
    "h"
  ];
  return x06;
}
var x07;
var hasRequiredX07;
function requireX07() {
  if (hasRequiredX07) return x07;
  hasRequiredX07 = 1;
  x07 = [
    "//",
    "/",
    ",",
    "!",
    "!",
    "-",
    ",",
    ",",
    ";",
    "?",
    "~",
    "\\{",
    "\\}",
    "*",
    "[?]",
    "",
    "'",
    "",
    "b",
    "g",
    "g",
    "d",
    "d",
    "h",
    "w",
    "z",
    "H",
    "t",
    "t",
    "y",
    "yh",
    "k",
    "l",
    "m",
    "n",
    "s",
    "s",
    "`",
    "p",
    "p",
    "S",
    "q",
    "r",
    "sh",
    "t",
    "[?]",
    "[?]",
    "[?]",
    "a",
    "a",
    "a",
    "A",
    "A",
    "A",
    "e",
    "e",
    "e",
    "E",
    "i",
    "i",
    "u",
    "u",
    "u",
    "o",
    "",
    "`",
    "'",
    "",
    "",
    "X",
    "Q",
    "\\@",
    "\\@",
    "|",
    "+",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "h",
    "sh",
    "n",
    "r",
    "b",
    "L",
    "k",
    "'",
    "v",
    "m",
    "f",
    "dh",
    "th",
    "l",
    "g",
    "ny",
    "s",
    "d",
    "z",
    "t",
    "y",
    "p",
    "j",
    "ch",
    "tt",
    "hh",
    "kh",
    "th",
    "z",
    "sh",
    "s",
    "d",
    "t",
    "z",
    "`",
    "gh",
    "q",
    "w",
    "a",
    "aa",
    "i",
    "ee",
    "u",
    "oo",
    "e",
    "ey",
    "o",
    "oa",
    "",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]"
  ];
  return x07;
}
var x09;
var hasRequiredX09;
function requireX09() {
  if (hasRequiredX09) return x09;
  hasRequiredX09 = 1;
  x09 = [
    "[?]",
    "N",
    "N",
    "H",
    "[?]",
    "a",
    "aa",
    "i",
    "ii",
    "u",
    "uu",
    "R",
    "L",
    "eN",
    "e",
    "e",
    "ai",
    "oN",
    "o",
    "o",
    "au",
    "k",
    "kh",
    "g",
    "gh",
    "ng",
    "c",
    "ch",
    "j",
    "jh",
    "ny",
    "tt",
    "tth",
    "dd",
    "ddh",
    "nn",
    "t",
    "th",
    "d",
    "dh",
    "n",
    "nnn",
    "p",
    "ph",
    "b",
    "bh",
    "m",
    "y",
    "r",
    "rr",
    "l",
    "l",
    "lll",
    "v",
    "sh",
    "ss",
    "s",
    "h",
    "[?]",
    "[?]",
    "'",
    "'",
    "aa",
    "i",
    "ii",
    "u",
    "uu",
    "R",
    "RR",
    "eN",
    "e",
    "e",
    "ai",
    "oN",
    "o",
    "o",
    "au",
    "",
    "[?]",
    "[?]",
    "AUM",
    "'",
    "'",
    "`",
    "'",
    "[?]",
    "[?]",
    "[?]",
    "q",
    "khh",
    "ghh",
    "z",
    "dddh",
    "rh",
    "f",
    "yy",
    "RR",
    "LL",
    "L",
    "LL",
    " / ",
    " // ",
    "0",
    "1",
    "2",
    "3",
    "4",
    "5",
    "6",
    "7",
    "8",
    "9",
    ".",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "N",
    "N",
    "H",
    "[?]",
    "a",
    "aa",
    "i",
    "ii",
    "u",
    "uu",
    "R",
    "RR",
    "[?]",
    "[?]",
    "e",
    "ai",
    "[?]",
    "[?]",
    "o",
    "au",
    "k",
    "kh",
    "g",
    "gh",
    "ng",
    "c",
    "ch",
    "j",
    "jh",
    "ny",
    "tt",
    "tth",
    "dd",
    "ddh",
    "nn",
    "t",
    "th",
    "d",
    "dh",
    "n",
    "[?]",
    "p",
    "ph",
    "b",
    "bh",
    "m",
    "y",
    "r",
    "[?]",
    "l",
    "[?]",
    "[?]",
    "[?]",
    "sh",
    "ss",
    "s",
    "h",
    "[?]",
    "[?]",
    "'",
    "[?]",
    "aa",
    "i",
    "ii",
    "u",
    "uu",
    "R",
    "RR",
    "[?]",
    "[?]",
    "e",
    "ai",
    "[?]",
    "[?]",
    "o",
    "au",
    "",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "+",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "rr",
    "rh",
    "[?]",
    "yy",
    "RR",
    "LL",
    "L",
    "LL",
    "[?]",
    "[?]",
    "0",
    "1",
    "2",
    "3",
    "4",
    "5",
    "6",
    "7",
    "8",
    "9",
    "r'",
    "r`",
    "Rs",
    "Rs",
    "1/",
    "2/",
    "3/",
    "4/",
    " 1 - 1/",
    "/16",
    "",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]"
  ];
  return x09;
}
var x0a;
var hasRequiredX0a;
function requireX0a() {
  if (hasRequiredX0a) return x0a;
  hasRequiredX0a = 1;
  x0a = [
    "[?]",
    "[?]",
    "N",
    "[?]",
    "[?]",
    "a",
    "aa",
    "i",
    "ii",
    "u",
    "uu",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "ee",
    "ai",
    "[?]",
    "[?]",
    "oo",
    "au",
    "k",
    "kh",
    "g",
    "gh",
    "ng",
    "c",
    "ch",
    "j",
    "jh",
    "ny",
    "tt",
    "tth",
    "dd",
    "ddh",
    "nn",
    "t",
    "th",
    "d",
    "dh",
    "n",
    "[?]",
    "p",
    "ph",
    "b",
    "bb",
    "m",
    "y",
    "r",
    "[?]",
    "l",
    "ll",
    "[?]",
    "v",
    "sh",
    "[?]",
    "s",
    "h",
    "[?]",
    "[?]",
    "'",
    "[?]",
    "aa",
    "i",
    "ii",
    "u",
    "uu",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "ee",
    "ai",
    "[?]",
    "[?]",
    "oo",
    "au",
    "",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "khh",
    "ghh",
    "z",
    "rr",
    "[?]",
    "f",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "0",
    "1",
    "2",
    "3",
    "4",
    "5",
    "6",
    "7",
    "8",
    "9",
    "N",
    "H",
    "",
    "",
    "G.E.O.",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "N",
    "N",
    "H",
    "[?]",
    "a",
    "aa",
    "i",
    "ii",
    "u",
    "uu",
    "R",
    "[?]",
    "eN",
    "[?]",
    "e",
    "ai",
    "oN",
    "[?]",
    "o",
    "au",
    "k",
    "kh",
    "g",
    "gh",
    "ng",
    "c",
    "ch",
    "j",
    "jh",
    "ny",
    "tt",
    "tth",
    "dd",
    "ddh",
    "nn",
    "t",
    "th",
    "d",
    "dh",
    "n",
    "[?]",
    "p",
    "ph",
    "b",
    "bh",
    "m",
    "ya",
    "r",
    "[?]",
    "l",
    "ll",
    "[?]",
    "v",
    "sh",
    "ss",
    "s",
    "h",
    "[?]",
    "[?]",
    "'",
    "'",
    "aa",
    "i",
    "ii",
    "u",
    "uu",
    "R",
    "RR",
    "eN",
    "[?]",
    "e",
    "ai",
    "oN",
    "[?]",
    "o",
    "au",
    "",
    "[?]",
    "[?]",
    "AUM",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "RR",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "0",
    "1",
    "2",
    "3",
    "4",
    "5",
    "6",
    "7",
    "8",
    "9",
    ".",
    "R",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "zh",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]"
  ];
  return x0a;
}
var x0b;
var hasRequiredX0b;
function requireX0b() {
  if (hasRequiredX0b) return x0b;
  hasRequiredX0b = 1;
  x0b = [
    "[?]",
    "N",
    "N",
    "H",
    "[?]",
    "a",
    "aa",
    "i",
    "ii",
    "u",
    "uu",
    "R",
    "L",
    "[?]",
    "[?]",
    "e",
    "ai",
    "[?]",
    "[?]",
    "o",
    "au",
    "k",
    "kh",
    "g",
    "gh",
    "ng",
    "c",
    "ch",
    "j",
    "jh",
    "ny",
    "tt",
    "tth",
    "dd",
    "ddh",
    "nn",
    "t",
    "th",
    "d",
    "dh",
    "n",
    "[?]",
    "p",
    "ph",
    "b",
    "bh",
    "m",
    "y",
    "r",
    "[?]",
    "l",
    "ll",
    "[?]",
    "",
    "sh",
    "ss",
    "s",
    "h",
    "[?]",
    "[?]",
    "'",
    "'",
    "aa",
    "i",
    "ii",
    "u",
    "uu",
    "R",
    "[?]",
    "[?]",
    "[?]",
    "e",
    "ai",
    "[?]",
    "[?]",
    "o",
    "au",
    "",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "+",
    "+",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "rr",
    "rh",
    "[?]",
    "yy",
    "RR",
    "LL",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "0",
    "1",
    "2",
    "3",
    "4",
    "5",
    "6",
    "7",
    "8",
    "9",
    "",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "N",
    "H",
    "[?]",
    "a",
    "aa",
    "i",
    "ii",
    "u",
    "uu",
    "[?]",
    "[?]",
    "[?]",
    "e",
    "ee",
    "ai",
    "[?]",
    "o",
    "oo",
    "au",
    "k",
    "[?]",
    "[?]",
    "[?]",
    "ng",
    "c",
    "[?]",
    "j",
    "[?]",
    "ny",
    "tt",
    "[?]",
    "[?]",
    "[?]",
    "nn",
    "t",
    "[?]",
    "[?]",
    "[?]",
    "n",
    "nnn",
    "p",
    "[?]",
    "[?]",
    "[?]",
    "m",
    "y",
    "r",
    "rr",
    "l",
    "ll",
    "lll",
    "v",
    "[?]",
    "ss",
    "s",
    "h",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "aa",
    "i",
    "ii",
    "u",
    "uu",
    "[?]",
    "[?]",
    "[?]",
    "e",
    "ee",
    "ai",
    "[?]",
    "o",
    "oo",
    "au",
    "",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "+",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "0",
    "1",
    "2",
    "3",
    "4",
    "5",
    "6",
    "7",
    "8",
    "9",
    "+10+",
    "+100+",
    "+1000+",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]"
  ];
  return x0b;
}
var x0c;
var hasRequiredX0c;
function requireX0c() {
  if (hasRequiredX0c) return x0c;
  hasRequiredX0c = 1;
  x0c = [
    "[?]",
    "N",
    "N",
    "H",
    "[?]",
    "a",
    "aa",
    "i",
    "ii",
    "u",
    "uu",
    "R",
    "L",
    "[?]",
    "e",
    "ee",
    "ai",
    "[?]",
    "o",
    "oo",
    "au",
    "k",
    "kh",
    "g",
    "gh",
    "ng",
    "c",
    "ch",
    "j",
    "jh",
    "ny",
    "tt",
    "tth",
    "dd",
    "ddh",
    "nn",
    "t",
    "th",
    "d",
    "dh",
    "n",
    "[?]",
    "p",
    "ph",
    "b",
    "bh",
    "m",
    "y",
    "r",
    "rr",
    "l",
    "ll",
    "[?]",
    "v",
    "sh",
    "ss",
    "s",
    "h",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "aa",
    "i",
    "ii",
    "u",
    "uu",
    "R",
    "RR",
    "[?]",
    "e",
    "ee",
    "ai",
    "[?]",
    "o",
    "oo",
    "au",
    "",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "+",
    "+",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "RR",
    "LL",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "0",
    "1",
    "2",
    "3",
    "4",
    "5",
    "6",
    "7",
    "8",
    "9",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "N",
    "H",
    "[?]",
    "a",
    "aa",
    "i",
    "ii",
    "u",
    "uu",
    "R",
    "L",
    "[?]",
    "e",
    "ee",
    "ai",
    "[?]",
    "o",
    "oo",
    "au",
    "k",
    "kh",
    "g",
    "gh",
    "ng",
    "c",
    "ch",
    "j",
    "jh",
    "ny",
    "tt",
    "tth",
    "dd",
    "ddh",
    "nn",
    "t",
    "th",
    "d",
    "dh",
    "n",
    "[?]",
    "p",
    "ph",
    "b",
    "bh",
    "m",
    "y",
    "r",
    "rr",
    "l",
    "ll",
    "[?]",
    "v",
    "sh",
    "ss",
    "s",
    "h",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "aa",
    "i",
    "ii",
    "u",
    "uu",
    "R",
    "RR",
    "[?]",
    "e",
    "ee",
    "ai",
    "[?]",
    "o",
    "oo",
    "au",
    "",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "+",
    "+",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "lll",
    "[?]",
    "RR",
    "LL",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "0",
    "1",
    "2",
    "3",
    "4",
    "5",
    "6",
    "7",
    "8",
    "9",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]"
  ];
  return x0c;
}
var x0d;
var hasRequiredX0d;
function requireX0d() {
  if (hasRequiredX0d) return x0d;
  hasRequiredX0d = 1;
  x0d = [
    "[?]",
    "[?]",
    "N",
    "H",
    "[?]",
    "a",
    "aa",
    "i",
    "ii",
    "u",
    "uu",
    "R",
    "L",
    "[?]",
    "e",
    "ee",
    "ai",
    "[?]",
    "o",
    "oo",
    "au",
    "k",
    "kh",
    "g",
    "gh",
    "ng",
    "c",
    "ch",
    "j",
    "jh",
    "ny",
    "tt",
    "tth",
    "dd",
    "ddh",
    "nn",
    "t",
    "th",
    "d",
    "dh",
    "n",
    "[?]",
    "p",
    "ph",
    "b",
    "bh",
    "m",
    "y",
    "r",
    "rr",
    "l",
    "ll",
    "lll",
    "v",
    "sh",
    "ss",
    "s",
    "h",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "aa",
    "i",
    "ii",
    "u",
    "uu",
    "R",
    "[?]",
    "[?]",
    "e",
    "ee",
    "ai",
    "",
    "o",
    "oo",
    "au",
    "",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "+",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "RR",
    "LL",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "0",
    "1",
    "2",
    "3",
    "4",
    "5",
    "6",
    "7",
    "8",
    "9",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "N",
    "H",
    "[?]",
    "a",
    "aa",
    "ae",
    "aae",
    "i",
    "ii",
    "u",
    "uu",
    "R",
    "RR",
    "L",
    "LL",
    "e",
    "ee",
    "ai",
    "o",
    "oo",
    "au",
    "[?]",
    "[?]",
    "[?]",
    "k",
    "kh",
    "g",
    "gh",
    "ng",
    "nng",
    "c",
    "ch",
    "j",
    "jh",
    "ny",
    "jny",
    "nyj",
    "tt",
    "tth",
    "dd",
    "ddh",
    "nn",
    "nndd",
    "t",
    "th",
    "d",
    "dh",
    "n",
    "[?]",
    "nd",
    "p",
    "ph",
    "b",
    "bh",
    "m",
    "mb",
    "y",
    "r",
    "[?]",
    "l",
    "[?]",
    "[?]",
    "v",
    "sh",
    "ss",
    "s",
    "h",
    "ll",
    "f",
    "[?]",
    "[?]",
    "[?]",
    "",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "aa",
    "ae",
    "aae",
    "i",
    "ii",
    "u",
    "[?]",
    "uu",
    "[?]",
    "R",
    "e",
    "ee",
    "ai",
    "o",
    "oo",
    "au",
    "L",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "RR",
    "LL",
    " . ",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]"
  ];
  return x0d;
}
var x0e;
var hasRequiredX0e;
function requireX0e() {
  if (hasRequiredX0e) return x0e;
  hasRequiredX0e = 1;
  x0e = [
    "[?]",
    "k",
    "kh",
    "kh",
    "kh",
    "kh",
    "kh",
    "ng",
    "cch",
    "ch",
    "ch",
    "ch",
    "ch",
    "y",
    "d",
    "t",
    "th",
    "th",
    "th",
    "n",
    "d",
    "t",
    "th",
    "th",
    "th",
    "n",
    "b",
    "p",
    "ph",
    "f",
    "ph",
    "f",
    "ph",
    "m",
    "y",
    "r",
    "R",
    "l",
    "L",
    "w",
    "s",
    "s",
    "s",
    "h",
    "l",
    "`",
    "h",
    "~",
    "a",
    "a",
    "aa",
    "am",
    "i",
    "ii",
    "ue",
    "uue",
    "u",
    "uu",
    "'",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "Bh.",
    "e",
    "ae",
    "o",
    "ai",
    "ai",
    "ao",
    "+",
    "",
    "",
    "",
    "",
    "",
    "",
    "M",
    "",
    " * ",
    "0",
    "1",
    "2",
    "3",
    "4",
    "5",
    "6",
    "7",
    "8",
    "9",
    " // ",
    " /// ",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "k",
    "kh",
    "[?]",
    "kh",
    "[?]",
    "[?]",
    "ng",
    "ch",
    "[?]",
    "s",
    "[?]",
    "[?]",
    "ny",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "d",
    "h",
    "th",
    "th",
    "[?]",
    "n",
    "b",
    "p",
    "ph",
    "f",
    "ph",
    "f",
    "[?]",
    "m",
    "y",
    "r",
    "[?]",
    "l",
    "[?]",
    "w",
    "[?]",
    "[?]",
    "s",
    "h",
    "[?]",
    "`",
    "",
    "~",
    "a",
    "",
    "aa",
    "am",
    "i",
    "ii",
    "y",
    "yy",
    "u",
    "uu",
    "[?]",
    "o",
    "l",
    "ny",
    "[?]",
    "[?]",
    "e",
    "ei",
    "o",
    "ay",
    "ai",
    "[?]",
    "+",
    "[?]",
    "",
    "",
    "",
    "",
    "",
    "M",
    "[?]",
    "[?]",
    "0",
    "1",
    "2",
    "3",
    "4",
    "5",
    "6",
    "7",
    "8",
    "9",
    "[?]",
    "[?]",
    "hn",
    "hm",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]"
  ];
  return x0e;
}
var x0f;
var hasRequiredX0f;
function requireX0f() {
  if (hasRequiredX0f) return x0f;
  hasRequiredX0f = 1;
  x0f = [
    "AUM",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    " // ",
    " * ",
    "",
    "-",
    " / ",
    " / ",
    " // ",
    " -/ ",
    " +/ ",
    " X/ ",
    " /XX/ ",
    " /X/ ",
    ", ",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "0",
    "1",
    "2",
    "3",
    "4",
    "5",
    "6",
    "7",
    "8",
    "9",
    ".5",
    "1.5",
    "2.5",
    "3.5",
    "4.5",
    "5.5",
    "6.5",
    "7.5",
    "8.5",
    "-.5",
    "+",
    "*",
    "^",
    "_",
    "",
    "~",
    "[?]",
    "]",
    "[[",
    "]]",
    "",
    "",
    "k",
    "kh",
    "g",
    "gh",
    "ng",
    "c",
    "ch",
    "j",
    "[?]",
    "ny",
    "tt",
    "tth",
    "dd",
    "ddh",
    "nn",
    "t",
    "th",
    "d",
    "dh",
    "n",
    "p",
    "ph",
    "b",
    "bh",
    "m",
    "ts",
    "tsh",
    "dz",
    "dzh",
    "w",
    "zh",
    "z",
    "'",
    "y",
    "r",
    "l",
    "sh",
    "ssh",
    "s",
    "h",
    "a",
    "kss",
    "r",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "aa",
    "i",
    "ii",
    "u",
    "uu",
    "R",
    "RR",
    "L",
    "LL",
    "e",
    "ee",
    "o",
    "oo",
    "M",
    "H",
    "i",
    "ii",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "k",
    "kh",
    "g",
    "gh",
    "ng",
    "c",
    "ch",
    "j",
    "[?]",
    "ny",
    "tt",
    "tth",
    "dd",
    "ddh",
    "nn",
    "t",
    "th",
    "d",
    "dh",
    "n",
    "p",
    "ph",
    "b",
    "bh",
    "m",
    "ts",
    "tsh",
    "dz",
    "dzh",
    "w",
    "zh",
    "z",
    "'",
    "y",
    "r",
    "l",
    "sh",
    "ss",
    "s",
    "h",
    "a",
    "kss",
    "w",
    "y",
    "r",
    "[?]",
    "X",
    " :X: ",
    " /O/ ",
    " /o/ ",
    " \\\\o\\\\ ",
    " (O) ",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "[?]",
    "[?]",
    "",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]"
  ];
  return x0f;
}
var x10;
var hasRequiredX10;
function requireX10() {
  if (hasRequiredX10) return x10;
  hasRequiredX10 = 1;
  x10 = [
    "k",
    "kh",
    "g",
    "gh",
    "ng",
    "c",
    "ch",
    "j",
    "jh",
    "ny",
    "nny",
    "tt",
    "tth",
    "dd",
    "ddh",
    "nn",
    "tt",
    "th",
    "d",
    "dh",
    "n",
    "p",
    "ph",
    "b",
    "bh",
    "m",
    "y",
    "r",
    "l",
    "w",
    "s",
    "h",
    "ll",
    "a",
    "[?]",
    "i",
    "ii",
    "u",
    "uu",
    "e",
    "[?]",
    "o",
    "au",
    "[?]",
    "aa",
    "i",
    "ii",
    "u",
    "uu",
    "e",
    "ai",
    "[?]",
    "[?]",
    "[?]",
    "N",
    "'",
    ":",
    "",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "0",
    "1",
    "2",
    "3",
    "4",
    "5",
    "6",
    "7",
    "8",
    "9",
    " / ",
    " // ",
    "n*",
    "r*",
    "l*",
    "e*",
    "sh",
    "ss",
    "R",
    "RR",
    "L",
    "LL",
    "R",
    "RR",
    "L",
    "LL",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "A",
    "B",
    "G",
    "D",
    "E",
    "V",
    "Z",
    "T`",
    "I",
    "K",
    "L",
    "M",
    "N",
    "O",
    "P",
    "Zh",
    "R",
    "S",
    "T",
    "U",
    "P`",
    "K`",
    "G'",
    "Q",
    "Sh",
    "Ch`",
    "C`",
    "Z'",
    "C",
    "Ch",
    "X",
    "J",
    "H",
    "E",
    "Y",
    "W",
    "Xh",
    "OE",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "a",
    "b",
    "g",
    "d",
    "e",
    "v",
    "z",
    "t`",
    "i",
    "k",
    "l",
    "m",
    "n",
    "o",
    "p",
    "zh",
    "r",
    "s",
    "t",
    "u",
    "p`",
    "k`",
    "g'",
    "q",
    "sh",
    "ch`",
    "c`",
    "z'",
    "c",
    "ch",
    "x",
    "j",
    "h",
    "e",
    "y",
    "w",
    "xh",
    "oe",
    "f",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    " // ",
    "[?]",
    "[?]",
    "[?]",
    "[?]"
  ];
  return x10;
}
var x11;
var hasRequiredX11;
function requireX11() {
  if (hasRequiredX11) return x11;
  hasRequiredX11 = 1;
  x11 = [
    "g",
    "gg",
    "n",
    "d",
    "dd",
    "r",
    "m",
    "b",
    "bb",
    "s",
    "ss",
    "",
    "j",
    "jj",
    "c",
    "k",
    "t",
    "p",
    "h",
    "ng",
    "nn",
    "nd",
    "nb",
    "dg",
    "rn",
    "rr",
    "rh",
    "rN",
    "mb",
    "mN",
    "bg",
    "bn",
    "",
    "bs",
    "bsg",
    "bst",
    "bsb",
    "bss",
    "bsj",
    "bj",
    "bc",
    "bt",
    "bp",
    "bN",
    "bbN",
    "sg",
    "sn",
    "sd",
    "sr",
    "sm",
    "sb",
    "sbg",
    "sss",
    "s",
    "sj",
    "sc",
    "sk",
    "st",
    "sp",
    "sh",
    "",
    "",
    "",
    "",
    "Z",
    "g",
    "d",
    "m",
    "b",
    "s",
    "Z",
    "",
    "j",
    "c",
    "t",
    "p",
    "N",
    "j",
    "",
    "",
    "",
    "",
    "ck",
    "ch",
    "",
    "",
    "pb",
    "pN",
    "hh",
    "Q",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "",
    "",
    "a",
    "ae",
    "ya",
    "yae",
    "eo",
    "e",
    "yeo",
    "ye",
    "o",
    "wa",
    "wae",
    "oe",
    "yo",
    "u",
    "weo",
    "we",
    "wi",
    "yu",
    "eu",
    "yi",
    "i",
    "a-o",
    "a-u",
    "ya-o",
    "ya-yo",
    "eo-o",
    "eo-u",
    "eo-eu",
    "yeo-o",
    "yeo-u",
    "o-eo",
    "o-e",
    "o-ye",
    "o-o",
    "o-u",
    "yo-ya",
    "yo-yae",
    "yo-yeo",
    "yo-o",
    "yo-i",
    "u-a",
    "u-ae",
    "u-eo-eu",
    "u-ye",
    "u-u",
    "yu-a",
    "yu-eo",
    "yu-e",
    "yu-yeo",
    "yu-ye",
    "yu-u",
    "yu-i",
    "eu-u",
    "eu-eu",
    "yi-u",
    "i-a",
    "i-ya",
    "i-o",
    "i-u",
    "i-eu",
    "i-U",
    "U",
    "U-eo",
    "U-u",
    "U-i",
    "UU",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "g",
    "gg",
    "gs",
    "n",
    "nj",
    "nh",
    "d",
    "l",
    "lg",
    "lm",
    "lb",
    "ls",
    "lt",
    "lp",
    "lh",
    "m",
    "b",
    "bs",
    "s",
    "ss",
    "ng",
    "j",
    "c",
    "k",
    "t",
    "p",
    "h",
    "gl",
    "gsg",
    "ng",
    "nd",
    "ns",
    "nZ",
    "nt",
    "dg",
    "tl",
    "lgs",
    "ln",
    "ld",
    "lth",
    "ll",
    "lmg",
    "lms",
    "lbs",
    "lbh",
    "rNp",
    "lss",
    "lZ",
    "lk",
    "lQ",
    "mg",
    "ml",
    "mb",
    "ms",
    "mss",
    "mZ",
    "mc",
    "mh",
    "mN",
    "bl",
    "bp",
    "ph",
    "pN",
    "sg",
    "sd",
    "sl",
    "sb",
    "Z",
    "g",
    "ss",
    "",
    "kh",
    "N",
    "Ns",
    "NZ",
    "pb",
    "pN",
    "hn",
    "hl",
    "hm",
    "hb",
    "Q",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]"
  ];
  return x11;
}
var x12;
var hasRequiredX12;
function requireX12() {
  if (hasRequiredX12) return x12;
  hasRequiredX12 = 1;
  x12 = [
    "ha",
    "hu",
    "hi",
    "haa",
    "hee",
    "he",
    "ho",
    "[?]",
    "la",
    "lu",
    "li",
    "laa",
    "lee",
    "le",
    "lo",
    "lwa",
    "hha",
    "hhu",
    "hhi",
    "hhaa",
    "hhee",
    "hhe",
    "hho",
    "hhwa",
    "ma",
    "mu",
    "mi",
    "maa",
    "mee",
    "me",
    "mo",
    "mwa",
    "sza",
    "szu",
    "szi",
    "szaa",
    "szee",
    "sze",
    "szo",
    "szwa",
    "ra",
    "ru",
    "ri",
    "raa",
    "ree",
    "re",
    "ro",
    "rwa",
    "sa",
    "su",
    "si",
    "saa",
    "see",
    "se",
    "so",
    "swa",
    "sha",
    "shu",
    "shi",
    "shaa",
    "shee",
    "she",
    "sho",
    "shwa",
    "qa",
    "qu",
    "qi",
    "qaa",
    "qee",
    "qe",
    "qo",
    "[?]",
    "qwa",
    "[?]",
    "qwi",
    "qwaa",
    "qwee",
    "qwe",
    "[?]",
    "[?]",
    "qha",
    "qhu",
    "qhi",
    "qhaa",
    "qhee",
    "qhe",
    "qho",
    "[?]",
    "qhwa",
    "[?]",
    "qhwi",
    "qhwaa",
    "qhwee",
    "qhwe",
    "[?]",
    "[?]",
    "ba",
    "bu",
    "bi",
    "baa",
    "bee",
    "be",
    "bo",
    "bwa",
    "va",
    "vu",
    "vi",
    "vaa",
    "vee",
    "ve",
    "vo",
    "vwa",
    "ta",
    "tu",
    "ti",
    "taa",
    "tee",
    "te",
    "to",
    "twa",
    "ca",
    "cu",
    "ci",
    "caa",
    "cee",
    "ce",
    "co",
    "cwa",
    "xa",
    "xu",
    "xi",
    "xaa",
    "xee",
    "xe",
    "xo",
    "[?]",
    "xwa",
    "[?]",
    "xwi",
    "xwaa",
    "xwee",
    "xwe",
    "[?]",
    "[?]",
    "na",
    "nu",
    "ni",
    "naa",
    "nee",
    "ne",
    "no",
    "nwa",
    "nya",
    "nyu",
    "nyi",
    "nyaa",
    "nyee",
    "nye",
    "nyo",
    "nywa",
    "'a",
    "'u",
    "[?]",
    "'aa",
    "'ee",
    "'e",
    "'o",
    "'wa",
    "ka",
    "ku",
    "ki",
    "kaa",
    "kee",
    "ke",
    "ko",
    "[?]",
    "kwa",
    "[?]",
    "kwi",
    "kwaa",
    "kwee",
    "kwe",
    "[?]",
    "[?]",
    "kxa",
    "kxu",
    "kxi",
    "kxaa",
    "kxee",
    "kxe",
    "kxo",
    "[?]",
    "kxwa",
    "[?]",
    "kxwi",
    "kxwaa",
    "kxwee",
    "kxwe",
    "[?]",
    "[?]",
    "wa",
    "wu",
    "wi",
    "waa",
    "wee",
    "we",
    "wo",
    "[?]",
    "`a",
    "`u",
    "`i",
    "`aa",
    "`ee",
    "`e",
    "`o",
    "[?]",
    "za",
    "zu",
    "zi",
    "zaa",
    "zee",
    "ze",
    "zo",
    "zwa",
    "zha",
    "zhu",
    "zhi",
    "zhaa",
    "zhee",
    "zhe",
    "zho",
    "zhwa",
    "ya",
    "yu",
    "yi",
    "yaa",
    "yee",
    "ye",
    "yo",
    "[?]",
    "da",
    "du",
    "di",
    "daa",
    "dee",
    "de",
    "do",
    "dwa",
    "dda",
    "ddu",
    "ddi",
    "ddaa",
    "ddee",
    "dde",
    "ddo",
    "ddwa"
  ];
  return x12;
}
var x13;
var hasRequiredX13;
function requireX13() {
  if (hasRequiredX13) return x13;
  hasRequiredX13 = 1;
  x13 = [
    "ja",
    "ju",
    "ji",
    "jaa",
    "jee",
    "je",
    "jo",
    "jwa",
    "ga",
    "gu",
    "gi",
    "gaa",
    "gee",
    "ge",
    "go",
    "[?]",
    "gwa",
    "[?]",
    "gwi",
    "gwaa",
    "gwee",
    "gwe",
    "[?]",
    "[?]",
    "gga",
    "ggu",
    "ggi",
    "ggaa",
    "ggee",
    "gge",
    "ggo",
    "[?]",
    "tha",
    "thu",
    "thi",
    "thaa",
    "thee",
    "the",
    "tho",
    "thwa",
    "cha",
    "chu",
    "chi",
    "chaa",
    "chee",
    "che",
    "cho",
    "chwa",
    "pha",
    "phu",
    "phi",
    "phaa",
    "phee",
    "phe",
    "pho",
    "phwa",
    "tsa",
    "tsu",
    "tsi",
    "tsaa",
    "tsee",
    "tse",
    "tso",
    "tswa",
    "tza",
    "tzu",
    "tzi",
    "tzaa",
    "tzee",
    "tze",
    "tzo",
    "[?]",
    "fa",
    "fu",
    "fi",
    "faa",
    "fee",
    "fe",
    "fo",
    "fwa",
    "pa",
    "pu",
    "pi",
    "paa",
    "pee",
    "pe",
    "po",
    "pwa",
    "rya",
    "mya",
    "fya",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    " ",
    ".",
    ",",
    ";",
    ":",
    ":: ",
    "?",
    "//",
    "1",
    "2",
    "3",
    "4",
    "5",
    "6",
    "7",
    "8",
    "9",
    "10+",
    "20+",
    "30+",
    "40+",
    "50+",
    "60+",
    "70+",
    "80+",
    "90+",
    "100+",
    "10,000+",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "a",
    "e",
    "i",
    "o",
    "u",
    "v",
    "ga",
    "ka",
    "ge",
    "gi",
    "go",
    "gu",
    "gv",
    "ha",
    "he",
    "hi",
    "ho",
    "hu",
    "hv",
    "la",
    "le",
    "li",
    "lo",
    "lu",
    "lv",
    "ma",
    "me",
    "mi",
    "mo",
    "mu",
    "na",
    "hna",
    "nah",
    "ne",
    "ni",
    "no",
    "nu",
    "nv",
    "qua",
    "que",
    "qui",
    "quo",
    "quu",
    "quv",
    "sa",
    "s",
    "se",
    "si",
    "so",
    "su",
    "sv",
    "da",
    "ta",
    "de",
    "te",
    "di",
    "ti",
    "do",
    "du",
    "dv",
    "dla",
    "tla",
    "tle",
    "tli",
    "tlo",
    "tlu",
    "tlv",
    "tsa",
    "tse",
    "tsi",
    "tso",
    "tsu",
    "tsv",
    "wa",
    "we",
    "wi",
    "wo",
    "wu",
    "wv",
    "ya",
    "ye",
    "yi",
    "yo",
    "yu",
    "yv",
    "MV",
    "[?]",
    "[?]",
    "ye",
    "yi",
    "yo",
    "yu",
    "yv",
    "mv",
    "[?]",
    "[?]"
  ];
  return x13;
}
var x14;
var hasRequiredX14;
function requireX14() {
  if (hasRequiredX14) return x14;
  hasRequiredX14 = 1;
  x14 = [
    "[?]",
    "e",
    "aai",
    "i",
    "ii",
    "o",
    "oo",
    "oo",
    "ee",
    "i",
    "a",
    "aa",
    "we",
    "we",
    "wi",
    "wi",
    "wii",
    "wii",
    "wo",
    "wo",
    "woo",
    "woo",
    "woo",
    "wa",
    "wa",
    "waa",
    "waa",
    "waa",
    "ai",
    "w",
    "'",
    "t",
    "k",
    "sh",
    "s",
    "n",
    "w",
    "n",
    "[?]",
    "w",
    "c",
    "?",
    "l",
    "en",
    "in",
    "on",
    "an",
    "pe",
    "paai",
    "pi",
    "pii",
    "po",
    "poo",
    "poo",
    "hee",
    "hi",
    "pa",
    "paa",
    "pwe",
    "pwe",
    "pwi",
    "pwi",
    "pwii",
    "pwii",
    "pwo",
    "pwo",
    "pwoo",
    "pwoo",
    "pwa",
    "pwa",
    "pwaa",
    "pwaa",
    "pwaa",
    "p",
    "p",
    "h",
    "te",
    "taai",
    "ti",
    "tii",
    "to",
    "too",
    "too",
    "dee",
    "di",
    "ta",
    "taa",
    "twe",
    "twe",
    "twi",
    "twi",
    "twii",
    "twii",
    "two",
    "two",
    "twoo",
    "twoo",
    "twa",
    "twa",
    "twaa",
    "twaa",
    "twaa",
    "t",
    "tte",
    "tti",
    "tto",
    "tta",
    "ke",
    "kaai",
    "ki",
    "kii",
    "ko",
    "koo",
    "koo",
    "ka",
    "kaa",
    "kwe",
    "kwe",
    "kwi",
    "kwi",
    "kwii",
    "kwii",
    "kwo",
    "kwo",
    "kwoo",
    "kwoo",
    "kwa",
    "kwa",
    "kwaa",
    "kwaa",
    "kwaa",
    "k",
    "kw",
    "keh",
    "kih",
    "koh",
    "kah",
    "ce",
    "caai",
    "ci",
    "cii",
    "co",
    "coo",
    "coo",
    "ca",
    "caa",
    "cwe",
    "cwe",
    "cwi",
    "cwi",
    "cwii",
    "cwii",
    "cwo",
    "cwo",
    "cwoo",
    "cwoo",
    "cwa",
    "cwa",
    "cwaa",
    "cwaa",
    "cwaa",
    "c",
    "th",
    "me",
    "maai",
    "mi",
    "mii",
    "mo",
    "moo",
    "moo",
    "ma",
    "maa",
    "mwe",
    "mwe",
    "mwi",
    "mwi",
    "mwii",
    "mwii",
    "mwo",
    "mwo",
    "mwoo",
    "mwoo",
    "mwa",
    "mwa",
    "mwaa",
    "mwaa",
    "mwaa",
    "m",
    "m",
    "mh",
    "m",
    "m",
    "ne",
    "naai",
    "ni",
    "nii",
    "no",
    "noo",
    "noo",
    "na",
    "naa",
    "nwe",
    "nwe",
    "nwa",
    "nwa",
    "nwaa",
    "nwaa",
    "nwaa",
    "n",
    "ng",
    "nh",
    "le",
    "laai",
    "li",
    "lii",
    "lo",
    "loo",
    "loo",
    "la",
    "laa",
    "lwe",
    "lwe",
    "lwi",
    "lwi",
    "lwii",
    "lwii",
    "lwo",
    "lwo",
    "lwoo",
    "lwoo",
    "lwa",
    "lwa",
    "lwaa",
    "lwaa",
    "l",
    "l",
    "l",
    "se",
    "saai",
    "si",
    "sii",
    "so",
    "soo",
    "soo",
    "sa",
    "saa",
    "swe",
    "swe",
    "swi",
    "swi",
    "swii",
    "swii",
    "swo",
    "swo",
    "swoo",
    "swoo"
  ];
  return x14;
}
var x15;
var hasRequiredX15;
function requireX15() {
  if (hasRequiredX15) return x15;
  hasRequiredX15 = 1;
  x15 = [
    "swa",
    "swa",
    "swaa",
    "swaa",
    "swaa",
    "s",
    "s",
    "sw",
    "s",
    "sk",
    "skw",
    "sW",
    "spwa",
    "stwa",
    "skwa",
    "scwa",
    "she",
    "shi",
    "shii",
    "sho",
    "shoo",
    "sha",
    "shaa",
    "shwe",
    "shwe",
    "shwi",
    "shwi",
    "shwii",
    "shwii",
    "shwo",
    "shwo",
    "shwoo",
    "shwoo",
    "shwa",
    "shwa",
    "shwaa",
    "shwaa",
    "sh",
    "ye",
    "yaai",
    "yi",
    "yii",
    "yo",
    "yoo",
    "yoo",
    "ya",
    "yaa",
    "ywe",
    "ywe",
    "ywi",
    "ywi",
    "ywii",
    "ywii",
    "ywo",
    "ywo",
    "ywoo",
    "ywoo",
    "ywa",
    "ywa",
    "ywaa",
    "ywaa",
    "ywaa",
    "y",
    "y",
    "y",
    "yi",
    "re",
    "re",
    "le",
    "raai",
    "ri",
    "rii",
    "ro",
    "roo",
    "lo",
    "ra",
    "raa",
    "la",
    "rwaa",
    "rwaa",
    "r",
    "r",
    "r",
    "fe",
    "faai",
    "fi",
    "fii",
    "fo",
    "foo",
    "fa",
    "faa",
    "fwaa",
    "fwaa",
    "f",
    "the",
    "the",
    "thi",
    "thi",
    "thii",
    "thii",
    "tho",
    "thoo",
    "tha",
    "thaa",
    "thwaa",
    "thwaa",
    "th",
    "tthe",
    "tthi",
    "ttho",
    "ttha",
    "tth",
    "tye",
    "tyi",
    "tyo",
    "tya",
    "he",
    "hi",
    "hii",
    "ho",
    "hoo",
    "ha",
    "haa",
    "h",
    "h",
    "hk",
    "qaai",
    "qi",
    "qii",
    "qo",
    "qoo",
    "qa",
    "qaa",
    "q",
    "tlhe",
    "tlhi",
    "tlho",
    "tlha",
    "re",
    "ri",
    "ro",
    "ra",
    "ngaai",
    "ngi",
    "ngii",
    "ngo",
    "ngoo",
    "nga",
    "ngaa",
    "ng",
    "nng",
    "she",
    "shi",
    "sho",
    "sha",
    "the",
    "thi",
    "tho",
    "tha",
    "th",
    "lhi",
    "lhii",
    "lho",
    "lhoo",
    "lha",
    "lhaa",
    "lh",
    "the",
    "thi",
    "thii",
    "tho",
    "thoo",
    "tha",
    "thaa",
    "th",
    "b",
    "e",
    "i",
    "o",
    "a",
    "we",
    "wi",
    "wo",
    "wa",
    "ne",
    "ni",
    "no",
    "na",
    "ke",
    "ki",
    "ko",
    "ka",
    "he",
    "hi",
    "ho",
    "ha",
    "ghu",
    "gho",
    "ghe",
    "ghee",
    "ghi",
    "gha",
    "ru",
    "ro",
    "re",
    "ree",
    "ri",
    "ra",
    "wu",
    "wo",
    "we",
    "wee",
    "wi",
    "wa",
    "hwu",
    "hwo",
    "hwe",
    "hwee",
    "hwi",
    "hwa",
    "thu",
    "tho",
    "the",
    "thee",
    "thi",
    "tha",
    "ttu",
    "tto",
    "tte",
    "ttee",
    "tti",
    "tta",
    "pu",
    "po",
    "pe",
    "pee",
    "pi",
    "pa",
    "p",
    "gu",
    "go",
    "ge",
    "gee",
    "gi",
    "ga",
    "khu",
    "kho",
    "khe",
    "khee",
    "khi",
    "kha",
    "kku",
    "kko",
    "kke",
    "kkee",
    "kki"
  ];
  return x15;
}
var x16;
var hasRequiredX16;
function requireX16() {
  if (hasRequiredX16) return x16;
  hasRequiredX16 = 1;
  x16 = [
    "kka",
    "kk",
    "nu",
    "no",
    "ne",
    "nee",
    "ni",
    "na",
    "mu",
    "mo",
    "me",
    "mee",
    "mi",
    "ma",
    "yu",
    "yo",
    "ye",
    "yee",
    "yi",
    "ya",
    "ju",
    "ju",
    "jo",
    "je",
    "jee",
    "ji",
    "ji",
    "ja",
    "jju",
    "jjo",
    "jje",
    "jjee",
    "jji",
    "jja",
    "lu",
    "lo",
    "le",
    "lee",
    "li",
    "la",
    "dlu",
    "dlo",
    "dle",
    "dlee",
    "dli",
    "dla",
    "lhu",
    "lho",
    "lhe",
    "lhee",
    "lhi",
    "lha",
    "tlhu",
    "tlho",
    "tlhe",
    "tlhee",
    "tlhi",
    "tlha",
    "tlu",
    "tlo",
    "tle",
    "tlee",
    "tli",
    "tla",
    "zu",
    "zo",
    "ze",
    "zee",
    "zi",
    "za",
    "z",
    "z",
    "dzu",
    "dzo",
    "dze",
    "dzee",
    "dzi",
    "dza",
    "su",
    "so",
    "se",
    "see",
    "si",
    "sa",
    "shu",
    "sho",
    "she",
    "shee",
    "shi",
    "sha",
    "sh",
    "tsu",
    "tso",
    "tse",
    "tsee",
    "tsi",
    "tsa",
    "chu",
    "cho",
    "che",
    "chee",
    "chi",
    "cha",
    "ttsu",
    "ttso",
    "ttse",
    "ttsee",
    "ttsi",
    "ttsa",
    "X",
    ".",
    "qai",
    "ngai",
    "nngi",
    "nngii",
    "nngo",
    "nngoo",
    "nnga",
    "nngaa",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    " ",
    "b",
    "l",
    "f",
    "s",
    "n",
    "h",
    "d",
    "t",
    "c",
    "q",
    "m",
    "g",
    "ng",
    "z",
    "r",
    "a",
    "o",
    "u",
    "e",
    "i",
    "ch",
    "th",
    "ph",
    "p",
    "x",
    "p",
    "<",
    ">",
    "[?]",
    "[?]",
    "[?]",
    "f",
    "v",
    "u",
    "yr",
    "y",
    "w",
    "th",
    "th",
    "a",
    "o",
    "ac",
    "ae",
    "o",
    "o",
    "o",
    "oe",
    "on",
    "r",
    "k",
    "c",
    "k",
    "g",
    "ng",
    "g",
    "g",
    "w",
    "h",
    "h",
    "h",
    "h",
    "n",
    "n",
    "n",
    "i",
    "e",
    "j",
    "g",
    "ae",
    "a",
    "eo",
    "p",
    "z",
    "s",
    "s",
    "s",
    "c",
    "z",
    "t",
    "t",
    "d",
    "b",
    "b",
    "p",
    "p",
    "e",
    "m",
    "m",
    "m",
    "l",
    "l",
    "ng",
    "ng",
    "d",
    "o",
    "ear",
    "ior",
    "qu",
    "qu",
    "qu",
    "s",
    "yr",
    "yr",
    "yr",
    "q",
    "x",
    ".",
    ":",
    "+",
    "17",
    "18",
    "19",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]"
  ];
  return x16;
}
var x17;
var hasRequiredX17;
function requireX17() {
  if (hasRequiredX17) return x17;
  hasRequiredX17 = 1;
  x17 = [
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "k",
    "kh",
    "g",
    "gh",
    "ng",
    "c",
    "ch",
    "j",
    "jh",
    "ny",
    "t",
    "tth",
    "d",
    "ddh",
    "nn",
    "t",
    "th",
    "d",
    "dh",
    "n",
    "p",
    "ph",
    "b",
    "bh",
    "m",
    "y",
    "r",
    "l",
    "v",
    "sh",
    "ss",
    "s",
    "h",
    "l",
    "q",
    "a",
    "aa",
    "i",
    "ii",
    "u",
    "uk",
    "uu",
    "uuv",
    "ry",
    "ryy",
    "ly",
    "lyy",
    "e",
    "ai",
    "oo",
    "oo",
    "au",
    "a",
    "aa",
    "aa",
    "i",
    "ii",
    "y",
    "yy",
    "u",
    "uu",
    "ua",
    "oe",
    "ya",
    "ie",
    "e",
    "ae",
    "ai",
    "oo",
    "au",
    "M",
    "H",
    "a`",
    "",
    "",
    "",
    "r",
    "",
    "!",
    "",
    "",
    "",
    "",
    "",
    ".",
    " // ",
    ":",
    "+",
    "++",
    " * ",
    " /// ",
    "KR",
    "'",
    "[?]",
    "[?]",
    "[?]",
    "0",
    "1",
    "2",
    "3",
    "4",
    "5",
    "6",
    "7",
    "8",
    "9",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]"
  ];
  return x17;
}
var x18;
var hasRequiredX18;
function requireX18() {
  if (hasRequiredX18) return x18;
  hasRequiredX18 = 1;
  x18 = [
    " \\@ ",
    " ... ",
    ", ",
    ". ",
    ": ",
    " // ",
    "",
    "-",
    ", ",
    ". ",
    "",
    "",
    "",
    "",
    "",
    "[?]",
    "0",
    "1",
    "2",
    "3",
    "4",
    "5",
    "6",
    "7",
    "8",
    "9",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "a",
    "e",
    "i",
    "o",
    "u",
    "O",
    "U",
    "ee",
    "n",
    "ng",
    "b",
    "p",
    "q",
    "g",
    "m",
    "l",
    "s",
    "sh",
    "t",
    "d",
    "ch",
    "j",
    "y",
    "r",
    "w",
    "f",
    "k",
    "kha",
    "ts",
    "z",
    "h",
    "zr",
    "lh",
    "zh",
    "ch",
    "-",
    "e",
    "i",
    "o",
    "u",
    "O",
    "U",
    "ng",
    "b",
    "p",
    "q",
    "g",
    "m",
    "t",
    "d",
    "ch",
    "j",
    "ts",
    "y",
    "w",
    "k",
    "g",
    "h",
    "jy",
    "ny",
    "dz",
    "e",
    "i",
    "iy",
    "U",
    "u",
    "ng",
    "k",
    "g",
    "h",
    "p",
    "sh",
    "t",
    "d",
    "j",
    "f",
    "g",
    "h",
    "ts",
    "z",
    "r",
    "ch",
    "zh",
    "i",
    "k",
    "r",
    "f",
    "zh",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "H",
    "X",
    "W",
    "M",
    " 3 ",
    " 333 ",
    "a",
    "i",
    "k",
    "ng",
    "c",
    "tt",
    "tth",
    "dd",
    "nn",
    "t",
    "d",
    "p",
    "ph",
    "ss",
    "zh",
    "z",
    "a",
    "t",
    "zh",
    "gh",
    "ng",
    "c",
    "jh",
    "tta",
    "ddh",
    "t",
    "dh",
    "ss",
    "cy",
    "zh",
    "z",
    "u",
    "y",
    "bh",
    "'",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]"
  ];
  return x18;
}
var x19;
var hasRequiredX19;
function requireX19() {
  if (hasRequiredX19) return x19;
  hasRequiredX19 = 1;
  x19 = [
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]"
  ];
  return x19;
}
var x1a;
var hasRequiredX1a;
function requireX1a() {
  if (hasRequiredX1a) return x1a;
  hasRequiredX1a = 1;
  x1a = [
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]"
  ];
  return x1a;
}
var x1b;
var hasRequiredX1b;
function requireX1b() {
  if (hasRequiredX1b) return x1b;
  hasRequiredX1b = 1;
  x1b = [
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]"
  ];
  return x1b;
}
var x1c;
var hasRequiredX1c;
function requireX1c() {
  if (hasRequiredX1c) return x1c;
  hasRequiredX1c = 1;
  x1c = [
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]"
  ];
  return x1c;
}
var x1d;
var hasRequiredX1d;
function requireX1d() {
  if (hasRequiredX1d) return x1d;
  hasRequiredX1d = 1;
  x1d = [
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]"
  ];
  return x1d;
}
var x1e;
var hasRequiredX1e;
function requireX1e() {
  if (hasRequiredX1e) return x1e;
  hasRequiredX1e = 1;
  x1e = [
    "A",
    "a",
    "B",
    "b",
    "B",
    "b",
    "B",
    "b",
    "C",
    "c",
    "D",
    "d",
    "D",
    "d",
    "D",
    "d",
    "D",
    "d",
    "D",
    "d",
    "E",
    "e",
    "E",
    "e",
    "E",
    "e",
    "E",
    "e",
    "E",
    "e",
    "F",
    "f",
    "G",
    "g",
    "H",
    "h",
    "H",
    "h",
    "H",
    "h",
    "H",
    "h",
    "H",
    "h",
    "I",
    "i",
    "I",
    "i",
    "K",
    "k",
    "K",
    "k",
    "K",
    "k",
    "L",
    "l",
    "L",
    "l",
    "L",
    "l",
    "L",
    "l",
    "M",
    "m",
    "M",
    "m",
    "M",
    "m",
    "N",
    "n",
    "N",
    "n",
    "N",
    "n",
    "N",
    "n",
    "O",
    "o",
    "O",
    "o",
    "O",
    "o",
    "O",
    "o",
    "P",
    "p",
    "P",
    "p",
    "R",
    "r",
    "R",
    "r",
    "R",
    "r",
    "R",
    "r",
    "S",
    "s",
    "S",
    "s",
    "S",
    "s",
    "S",
    "s",
    "S",
    "s",
    "T",
    "t",
    "T",
    "t",
    "T",
    "t",
    "T",
    "t",
    "U",
    "u",
    "U",
    "u",
    "U",
    "u",
    "U",
    "u",
    "U",
    "u",
    "V",
    "v",
    "V",
    "v",
    "W",
    "w",
    "W",
    "w",
    "W",
    "w",
    "W",
    "w",
    "W",
    "w",
    "X",
    "x",
    "X",
    "x",
    "Y",
    "y",
    "Z",
    "z",
    "Z",
    "z",
    "Z",
    "z",
    "h",
    "t",
    "w",
    "y",
    "a",
    "s",
    "s",
    "s",
    "Ss",
    "d",
    "A",
    "a",
    "A",
    "a",
    "A",
    "a",
    "A",
    "a",
    "A",
    "a",
    "A",
    "a",
    "A",
    "a",
    "A",
    "a",
    "A",
    "a",
    "A",
    "a",
    "A",
    "a",
    "A",
    "a",
    "E",
    "e",
    "E",
    "e",
    "E",
    "e",
    "E",
    "e",
    "E",
    "e",
    "E",
    "e",
    "E",
    "e",
    "E",
    "e",
    "I",
    "i",
    "I",
    "i",
    "O",
    "o",
    "O",
    "o",
    "O",
    "o",
    "O",
    "o",
    "O",
    "o",
    "O",
    "o",
    "O",
    "o",
    "O",
    "o",
    "O",
    "o",
    "O",
    "o",
    "O",
    "o",
    "O",
    "o",
    "U",
    "u",
    "U",
    "u",
    "U",
    "u",
    "U",
    "u",
    "U",
    "u",
    "U",
    "u",
    //  0x1EF_:
    "U",
    // 1EF0	LATIN CAPITAL LETTER U WITH HORN AND DOT BELOW
    // 	: 01AF 0323
    "u",
    // 1EF1	LATIN SMALL LETTER U WITH HORN AND DOT BELOW
    // 	: 01B0 0323
    // @		Latin general extensions
    "Y",
    // 1EF2	LATIN CAPITAL LETTER Y WITH GRAVE
    // 	: 0059 0300
    "y",
    // 1EF3	LATIN SMALL LETTER Y WITH GRAVE
    // 	* Welsh
    // 	: 0079 0300
    "Y",
    // 1EF4	LATIN CAPITAL LETTER Y WITH DOT BELOW
    // 	: 0059 0323
    "y",
    // 1EF5	LATIN SMALL LETTER Y WITH DOT BELOW
    // 	: 0079 0323
    "Y",
    // 1EF6	LATIN CAPITAL LETTER Y WITH HOOK ABOVE
    // 	: 0059 0309
    "y",
    // 1EF7	LATIN SMALL LETTER Y WITH HOOK ABOVE
    // 	: 0079 0309
    "Y",
    // 1EF8	LATIN CAPITAL LETTER Y WITH TILDE
    // 	: 0059 0303
    "y",
    // 1EF9	LATIN SMALL LETTER Y WITH TILDE
    // 	: 0079 0303
    // @		Medievalist additions
    "LL",
    // 1EFA	LATIN CAPITAL LETTER MIDDLE-WELSH LL
    "ll",
    // 1EFB	LATIN SMALL LETTER MIDDLE-WELSH LL
    "V",
    // 1EFC	LATIN CAPITAL LETTER MIDDLE-WELSH V
    "v",
    // 1EFD	LATIN SMALL LETTER MIDDLE-WELSH V
    "Y",
    // 1EFE	LATIN CAPITAL LETTER Y WITH LOOP
    "y"
    // 1EFF	LATIN SMALL LETTER Y WITH LOOP
  ];
  return x1e;
}
var x1f;
var hasRequiredX1f;
function requireX1f() {
  if (hasRequiredX1f) return x1f;
  hasRequiredX1f = 1;
  x1f = [
    "a",
    "a",
    "a",
    "a",
    "a",
    "a",
    "a",
    "a",
    "A",
    "A",
    "A",
    "A",
    "A",
    "A",
    "A",
    "A",
    "e",
    "e",
    "e",
    "e",
    "e",
    "e",
    "[?]",
    "[?]",
    "E",
    "E",
    "E",
    "E",
    "E",
    "E",
    "[?]",
    "[?]",
    "e",
    "e",
    "e",
    "e",
    "e",
    "e",
    "e",
    "e",
    "E",
    "E",
    "E",
    "E",
    "E",
    "E",
    "E",
    "E",
    "i",
    "i",
    "i",
    "i",
    "i",
    "i",
    "i",
    "i",
    "I",
    "I",
    "I",
    "I",
    "I",
    "I",
    "I",
    "I",
    "o",
    "o",
    "o",
    "o",
    "o",
    "o",
    "[?]",
    "[?]",
    "O",
    "O",
    "O",
    "O",
    "O",
    "O",
    "[?]",
    "[?]",
    "u",
    "u",
    "u",
    "u",
    "u",
    "u",
    "u",
    "u",
    "[?]",
    "U",
    "[?]",
    "U",
    "[?]",
    "U",
    "[?]",
    "U",
    "o",
    "o",
    "o",
    "o",
    "o",
    "o",
    "o",
    "o",
    "O",
    "O",
    "O",
    "O",
    "O",
    "O",
    "O",
    "O",
    "a",
    "a",
    "e",
    "e",
    "e",
    "e",
    "i",
    "i",
    "o",
    "o",
    "u",
    "u",
    "o",
    "o",
    "[?]",
    "[?]",
    "a",
    "a",
    "a",
    "a",
    "a",
    "a",
    "a",
    "a",
    "A",
    "A",
    "A",
    "A",
    "A",
    "A",
    "A",
    "A",
    "e",
    "e",
    "e",
    "e",
    "e",
    "e",
    "e",
    "e",
    "E",
    "E",
    "E",
    "E",
    "E",
    "E",
    "E",
    "E",
    "o",
    "o",
    "o",
    "o",
    "o",
    "o",
    "o",
    "o",
    "O",
    "O",
    "O",
    "O",
    "O",
    "O",
    "O",
    "O",
    "a",
    "a",
    "a",
    "a",
    "a",
    "[?]",
    "a",
    "a",
    "A",
    "A",
    "A",
    "A",
    "A",
    "'",
    "i",
    "'",
    "~",
    '"~',
    "e",
    "e",
    "e",
    "[?]",
    "e",
    "e",
    "E",
    "E",
    "E",
    "E",
    "E",
    "'`",
    "''",
    "'~",
    "i",
    "i",
    "i",
    "i",
    "[?]",
    "[?]",
    "i",
    "i",
    "I",
    "I",
    "I",
    "I",
    "[?]",
    "`'",
    "`'",
    "`~",
    "u",
    "u",
    "u",
    "u",
    "R",
    "R",
    "u",
    "u",
    "U",
    "U",
    "U",
    "U",
    "R",
    '"`',
    `"'`,
    "`",
    "[?]",
    "[?]",
    "o",
    "o",
    "o",
    "[?]",
    "o",
    "o",
    "O",
    "O",
    "O",
    "O",
    "O",
    "'",
    "`",
    "[?]"
  ];
  return x1f;
}
var x20;
var hasRequiredX20;
function requireX20() {
  if (hasRequiredX20) return x20;
  hasRequiredX20 = 1;
  x20 = [
    " ",
    " ",
    " ",
    " ",
    " ",
    " ",
    " ",
    " ",
    " ",
    " ",
    " ",
    " ",
    "",
    "",
    "",
    "",
    "-",
    "-",
    "-",
    "-",
    "--",
    "--",
    "||",
    "_",
    "'",
    "'",
    ",",
    "'",
    '"',
    '"',
    ",,",
    '"',
    "+",
    "++",
    "*",
    "*>",
    ".",
    "..",
    "...",
    ".",
    "\\n",
    "\\n\\n",
    "",
    "",
    "",
    "",
    "",
    " ",
    "%0",
    "%00",
    "'",
    "''",
    "'''",
    "`",
    "``",
    "```",
    "^",
    "<",
    ">",
    "*",
    "!!",
    "!?",
    "-",
    "_",
    "-",
    "^",
    "***",
    "--",
    "/",
    "-[",
    "]-",
    "[?]",
    "?!",
    "!?",
    "7",
    "PP",
    "(]",
    "[)",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "",
    "",
    "",
    "",
    "",
    "",
    "0",
    "",
    "",
    "",
    "4",
    "5",
    "6",
    "7",
    "8",
    "9",
    "+",
    "-",
    "=",
    "(",
    ")",
    "n",
    "0",
    "1",
    "2",
    "3",
    "4",
    "5",
    "6",
    "7",
    "8",
    "9",
    "+",
    "-",
    "=",
    "(",
    ")",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "ECU",
    "CL",
    "Cr",
    "FF",
    "L",
    "mil",
    "N",
    "Pts",
    "Rs",
    "W",
    "NS",
    "D",
    "EUR",
    "K",
    "T",
    "Dr",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]"
  ];
  return x20;
}
var x21;
var hasRequiredX21;
function requireX21() {
  if (hasRequiredX21) return x21;
  hasRequiredX21 = 1;
  x21 = [
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "tm",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    " 1/3 ",
    " 2/3 ",
    " 1/5 ",
    " 2/5 ",
    " 3/5 ",
    " 4/5 ",
    " 1/6 ",
    " 5/6 ",
    " 1/8 ",
    " 3/8 ",
    " 5/8 ",
    " 7/8 ",
    " 1/",
    "I",
    "II",
    "III",
    "IV",
    "V",
    "VI",
    "VII",
    "VIII",
    "IX",
    "X",
    "XI",
    "XII",
    "L",
    "C",
    "D",
    "M",
    "i",
    "ii",
    "iii",
    "iv",
    "v",
    "vi",
    "vii",
    "viii",
    "ix",
    "x",
    "xi",
    "xii",
    "l",
    "c",
    "d",
    "m",
    "(D",
    "D)",
    "((|))",
    ")",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "-",
    "|",
    "-",
    "|",
    "-",
    "|",
    "\\\\",
    "/",
    "\\\\",
    "/",
    "-",
    "-",
    "~",
    "~",
    "-",
    "|",
    "-",
    "|",
    "-",
    "-",
    "-",
    "|",
    "-",
    "|",
    "|",
    "-",
    "-",
    "-",
    "-",
    "-",
    "-",
    "|",
    "|",
    "|",
    "|",
    "|",
    "|",
    "|",
    "^",
    "V",
    "\\\\",
    "=",
    "V",
    "^",
    "-",
    "-",
    "|",
    "|",
    "-",
    "-",
    "|",
    "|",
    "=",
    "|",
    "=",
    "=",
    "|",
    "=",
    "|",
    "=",
    "=",
    "=",
    "=",
    "=",
    "=",
    "|",
    "=",
    "|",
    "=",
    "|",
    "\\\\",
    "/",
    "\\\\",
    "/",
    "=",
    "=",
    "~",
    "~",
    "|",
    "|",
    "-",
    "|",
    "-",
    "|",
    "-",
    "-",
    "-",
    "|",
    "-",
    "|",
    "|",
    "|",
    "|",
    "|",
    "|",
    "|",
    "-",
    "\\\\",
    "\\\\",
    "|",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]"
  ];
  return x21;
}
var x22;
var hasRequiredX22;
function requireX22() {
  if (hasRequiredX22) return x22;
  hasRequiredX22 = 1;
  x22 = [
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]"
  ];
  return x22;
}
var x23;
var hasRequiredX23;
function requireX23() {
  if (hasRequiredX23) return x23;
  hasRequiredX23 = 1;
  x23 = [
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]"
  ];
  return x23;
}
var x24;
var hasRequiredX24;
function requireX24() {
  if (hasRequiredX24) return x24;
  hasRequiredX24 = 1;
  x24 = [
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]"
  ];
  return x24;
}
var x25;
var hasRequiredX25;
function requireX25() {
  if (hasRequiredX25) return x25;
  hasRequiredX25 = 1;
  x25 = [
    "-",
    "-",
    "|",
    "|",
    "-",
    "-",
    "|",
    "|",
    "-",
    "-",
    "|",
    "|",
    "+",
    "+",
    "+",
    "+",
    "+",
    "+",
    "+",
    "+",
    "+",
    "+",
    "+",
    "+",
    "+",
    "+",
    "+",
    "+",
    "+",
    "+",
    "+",
    "+",
    "+",
    "+",
    "+",
    "+",
    "+",
    "+",
    "+",
    "+",
    "+",
    "+",
    "+",
    "+",
    "+",
    "+",
    "+",
    "+",
    "+",
    "+",
    "+",
    "+",
    "+",
    "+",
    "+",
    "+",
    "+",
    "+",
    "+",
    "+",
    "+",
    "+",
    "+",
    "+",
    "+",
    "+",
    "+",
    "+",
    "+",
    "+",
    "+",
    "+",
    "+",
    "+",
    "+",
    "+",
    "-",
    "-",
    "|",
    "|",
    "-",
    "|",
    "+",
    "+",
    "+",
    "+",
    "+",
    "+",
    "+",
    "+",
    "+",
    "+",
    "+",
    "+",
    "+",
    "+",
    "+",
    "+",
    "+",
    "+",
    "+",
    "+",
    "+",
    "+",
    "+",
    "+",
    "+",
    "+",
    "+",
    "+",
    "+",
    "+",
    "+",
    "/",
    "\\\\",
    "X",
    "-",
    "|",
    "-",
    "|",
    "-",
    "|",
    "-",
    "|",
    "-",
    "|",
    "-",
    "|",
    "#",
    "#",
    "#",
    "#",
    "#",
    "#",
    "#",
    "#",
    "#",
    "#",
    "#",
    "#",
    "#",
    "#",
    "#",
    "#",
    "#",
    "#",
    "#",
    "#",
    "-",
    "|",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "#",
    "#",
    "#",
    "#",
    "#",
    "#",
    "#",
    "#",
    "#",
    "#",
    "#",
    "#",
    "#",
    "#",
    "#",
    "#",
    "#",
    "#",
    "^",
    "^",
    "^",
    "^",
    ">",
    ">",
    ">",
    ">",
    ">",
    ">",
    "V",
    "V",
    "V",
    "V",
    "<",
    "<",
    "<",
    "<",
    "<",
    "<",
    "*",
    "*",
    "*",
    "*",
    "*",
    "*",
    "*",
    "*",
    "*",
    "*",
    "*",
    "*",
    "*",
    "*",
    "*",
    "*",
    "*",
    "*",
    "*",
    "*",
    "*",
    "*",
    "*",
    "*",
    "*",
    "*",
    "*",
    "*",
    "*",
    "*",
    "*",
    "*",
    "*",
    "#",
    "#",
    "#",
    "#",
    "#",
    "^",
    "^",
    "^",
    "O",
    "#",
    "#",
    "#",
    "#",
    "O",
    "O",
    "O",
    "O",
    "/",
    "\\",
    "\\",
    "#",
    "#",
    "#",
    "#",
    "/"
  ];
  return x25;
}
var x26;
var hasRequiredX26;
function requireX26() {
  if (hasRequiredX26) return x26;
  hasRequiredX26 = 1;
  x26 = [
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]"
  ];
  return x26;
}
var x27;
var hasRequiredX27;
function requireX27() {
  if (hasRequiredX27) return x27;
  hasRequiredX27 = 1;
  x27 = [
    "[?]",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "[?]",
    "[?]",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "[?]",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]"
  ];
  return x27;
}
var x28;
var hasRequiredX28;
function requireX28() {
  if (hasRequiredX28) return x28;
  hasRequiredX28 = 1;
  x28 = [
    " ",
    "a",
    "1",
    "b",
    "'",
    "k",
    "2",
    "l",
    "\\@",
    "c",
    "i",
    "f",
    "/",
    "m",
    "s",
    "p",
    '"',
    "e",
    "3",
    "h",
    "9",
    "o",
    "6",
    "r",
    "^",
    "d",
    "j",
    "g",
    ">",
    "n",
    "t",
    "q",
    ",",
    "*",
    "5",
    "<",
    "-",
    "u",
    "8",
    "v",
    ".",
    "%",
    "[",
    "\\$",
    "+",
    "x",
    "!",
    "&",
    ";",
    ":",
    "4",
    "\\\\",
    "0",
    "z",
    "7",
    "(",
    "_",
    "?",
    "w",
    "]",
    "#",
    "y",
    ")",
    "=",
    "[d7]",
    "[d17]",
    "[d27]",
    "[d127]",
    "[d37]",
    "[d137]",
    "[d237]",
    "[d1237]",
    "[d47]",
    "[d147]",
    "[d247]",
    "[d1247]",
    "[d347]",
    "[d1347]",
    "[d2347]",
    "[d12347]",
    "[d57]",
    "[d157]",
    "[d257]",
    "[d1257]",
    "[d357]",
    "[d1357]",
    "[d2357]",
    "[d12357]",
    "[d457]",
    "[d1457]",
    "[d2457]",
    "[d12457]",
    "[d3457]",
    "[d13457]",
    "[d23457]",
    "[d123457]",
    "[d67]",
    "[d167]",
    "[d267]",
    "[d1267]",
    "[d367]",
    "[d1367]",
    "[d2367]",
    "[d12367]",
    "[d467]",
    "[d1467]",
    "[d2467]",
    "[d12467]",
    "[d3467]",
    "[d13467]",
    "[d23467]",
    "[d123467]",
    "[d567]",
    "[d1567]",
    "[d2567]",
    "[d12567]",
    "[d3567]",
    "[d13567]",
    "[d23567]",
    "[d123567]",
    "[d4567]",
    "[d14567]",
    "[d24567]",
    "[d124567]",
    "[d34567]",
    "[d134567]",
    "[d234567]",
    "[d1234567]",
    "[d8]",
    "[d18]",
    "[d28]",
    "[d128]",
    "[d38]",
    "[d138]",
    "[d238]",
    "[d1238]",
    "[d48]",
    "[d148]",
    "[d248]",
    "[d1248]",
    "[d348]",
    "[d1348]",
    "[d2348]",
    "[d12348]",
    "[d58]",
    "[d158]",
    "[d258]",
    "[d1258]",
    "[d358]",
    "[d1358]",
    "[d2358]",
    "[d12358]",
    "[d458]",
    "[d1458]",
    "[d2458]",
    "[d12458]",
    "[d3458]",
    "[d13458]",
    "[d23458]",
    "[d123458]",
    "[d68]",
    "[d168]",
    "[d268]",
    "[d1268]",
    "[d368]",
    "[d1368]",
    "[d2368]",
    "[d12368]",
    "[d468]",
    "[d1468]",
    "[d2468]",
    "[d12468]",
    "[d3468]",
    "[d13468]",
    "[d23468]",
    "[d123468]",
    "[d568]",
    "[d1568]",
    "[d2568]",
    "[d12568]",
    "[d3568]",
    "[d13568]",
    "[d23568]",
    "[d123568]",
    "[d4568]",
    "[d14568]",
    "[d24568]",
    "[d124568]",
    "[d34568]",
    "[d134568]",
    "[d234568]",
    "[d1234568]",
    "[d78]",
    "[d178]",
    "[d278]",
    "[d1278]",
    "[d378]",
    "[d1378]",
    "[d2378]",
    "[d12378]",
    "[d478]",
    "[d1478]",
    "[d2478]",
    "[d12478]",
    "[d3478]",
    "[d13478]",
    "[d23478]",
    "[d123478]",
    "[d578]",
    "[d1578]",
    "[d2578]",
    "[d12578]",
    "[d3578]",
    "[d13578]",
    "[d23578]",
    "[d123578]",
    "[d4578]",
    "[d14578]",
    "[d24578]",
    "[d124578]",
    "[d34578]",
    "[d134578]",
    "[d234578]",
    "[d1234578]",
    "[d678]",
    "[d1678]",
    "[d2678]",
    "[d12678]",
    "[d3678]",
    "[d13678]",
    "[d23678]",
    "[d123678]",
    "[d4678]",
    "[d14678]",
    "[d24678]",
    "[d124678]",
    "[d34678]",
    "[d134678]",
    "[d234678]",
    "[d1234678]",
    "[d5678]",
    "[d15678]",
    "[d25678]",
    "[d125678]",
    "[d35678]",
    "[d135678]",
    "[d235678]",
    "[d1235678]",
    "[d45678]",
    "[d145678]",
    "[d245678]",
    "[d1245678]",
    "[d345678]",
    "[d1345678]",
    "[d2345678]",
    "[d12345678]"
  ];
  return x28;
}
var x2e;
var hasRequiredX2e;
function requireX2e() {
  if (hasRequiredX2e) return x2e;
  hasRequiredX2e = 1;
  x2e = [
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?] ",
    "[?] ",
    "[?] ",
    "[?] ",
    "[?] ",
    "[?] ",
    "[?] ",
    "[?] ",
    "[?] ",
    "[?] ",
    "[?] ",
    "[?] ",
    "[?] ",
    "[?] ",
    "[?] ",
    "[?] ",
    "[?] ",
    "[?] ",
    "[?] ",
    "[?] ",
    "[?] ",
    "[?] ",
    "[?] ",
    "[?] ",
    "[?] ",
    "[?] ",
    "[?]",
    "[?] ",
    "[?] ",
    "[?] ",
    "[?] ",
    "[?] ",
    "[?] ",
    "[?] ",
    "[?] ",
    "[?] ",
    "[?] ",
    "[?] ",
    "[?] ",
    "[?] ",
    "[?] ",
    "[?] ",
    "[?] ",
    "[?] ",
    "[?] ",
    "[?] ",
    "[?] ",
    "[?] ",
    "[?] ",
    "[?] ",
    "[?] ",
    "[?] ",
    "[?] ",
    "[?] ",
    "[?] ",
    "[?] ",
    "[?] ",
    "[?] ",
    "[?] ",
    "[?] ",
    "[?] ",
    "[?] ",
    "[?] ",
    "[?] ",
    "[?] ",
    "[?] ",
    "[?] ",
    "[?] ",
    "[?] ",
    "[?] ",
    "[?] ",
    "[?] ",
    "[?] ",
    "[?] ",
    "[?] ",
    "[?] ",
    "[?] ",
    "[?] ",
    "[?] ",
    "[?] ",
    "[?] ",
    "[?] ",
    "[?] ",
    "[?] ",
    "[?] ",
    "[?] ",
    "[?] ",
    "[?] ",
    "[?] ",
    "[?] ",
    "[?] ",
    "[?] ",
    "[?] ",
    "[?] ",
    "[?] ",
    "[?] ",
    "[?] ",
    "[?] ",
    "[?] ",
    "[?] ",
    "[?] ",
    "[?] ",
    "[?] ",
    "[?] ",
    "[?] ",
    "[?] ",
    "[?] ",
    "[?] ",
    "[?] ",
    "[?] ",
    "[?] ",
    "[?] ",
    "[?] ",
    "[?] ",
    "[?] ",
    "[?] ",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]"
  ];
  return x2e;
}
var x2f;
var hasRequiredX2f;
function requireX2f() {
  if (hasRequiredX2f) return x2f;
  hasRequiredX2f = 1;
  x2f = [
    "[?] ",
    "[?] ",
    "[?] ",
    "[?] ",
    "[?] ",
    "[?] ",
    "[?] ",
    "[?] ",
    "[?] ",
    "[?] ",
    "[?] ",
    "[?] ",
    "[?] ",
    "[?] ",
    "[?] ",
    "[?] ",
    "[?] ",
    "[?] ",
    "[?] ",
    "[?] ",
    "[?] ",
    "[?] ",
    "[?] ",
    "[?] ",
    "[?] ",
    "[?] ",
    "[?] ",
    "[?] ",
    "[?] ",
    "[?] ",
    "[?] ",
    "[?] ",
    "[?] ",
    "[?] ",
    "[?] ",
    "[?] ",
    "[?] ",
    "[?] ",
    "[?] ",
    "[?] ",
    "[?] ",
    "[?] ",
    "[?] ",
    "[?] ",
    "[?] ",
    "[?] ",
    "[?] ",
    "[?] ",
    "[?] ",
    "[?] ",
    "[?] ",
    "[?] ",
    "[?] ",
    "[?] ",
    "[?] ",
    "[?] ",
    "[?] ",
    "[?] ",
    "[?] ",
    "[?] ",
    "[?] ",
    "[?] ",
    "[?] ",
    "[?] ",
    "[?] ",
    "[?] ",
    "[?] ",
    "[?] ",
    "[?] ",
    "[?] ",
    "[?] ",
    "[?] ",
    "[?] ",
    "[?] ",
    "[?] ",
    "[?] ",
    "[?] ",
    "[?] ",
    "[?] ",
    "[?] ",
    "[?] ",
    "[?] ",
    "[?] ",
    "[?] ",
    "[?] ",
    "[?] ",
    "[?] ",
    "[?] ",
    "[?] ",
    "[?] ",
    "[?] ",
    "[?] ",
    "[?] ",
    "[?] ",
    "[?] ",
    "[?] ",
    "[?] ",
    "[?] ",
    "[?] ",
    "[?] ",
    "[?] ",
    "[?] ",
    "[?] ",
    "[?] ",
    "[?] ",
    "[?] ",
    "[?] ",
    "[?] ",
    "[?] ",
    "[?] ",
    "[?] ",
    "[?] ",
    "[?] ",
    "[?] ",
    "[?] ",
    "[?] ",
    "[?] ",
    "[?] ",
    "[?] ",
    "[?] ",
    "[?] ",
    "[?] ",
    "[?] ",
    "[?] ",
    "[?] ",
    "[?] ",
    "[?] ",
    "[?] ",
    "[?] ",
    "[?] ",
    "[?] ",
    "[?] ",
    "[?] ",
    "[?] ",
    "[?] ",
    "[?] ",
    "[?] ",
    "[?] ",
    "[?] ",
    "[?] ",
    "[?] ",
    "[?] ",
    "[?] ",
    "[?] ",
    "[?] ",
    "[?] ",
    "[?] ",
    "[?] ",
    "[?] ",
    "[?] ",
    "[?] ",
    "[?] ",
    "[?] ",
    "[?] ",
    "[?] ",
    "[?] ",
    "[?] ",
    "[?] ",
    "[?] ",
    "[?] ",
    "[?] ",
    "[?] ",
    "[?] ",
    "[?] ",
    "[?] ",
    "[?] ",
    "[?] ",
    "[?] ",
    "[?] ",
    "[?] ",
    "[?] ",
    "[?] ",
    "[?] ",
    "[?] ",
    "[?] ",
    "[?] ",
    "[?] ",
    "[?] ",
    "[?] ",
    "[?] ",
    "[?] ",
    "[?] ",
    "[?] ",
    "[?] ",
    "[?] ",
    "[?] ",
    "[?] ",
    "[?] ",
    "[?] ",
    "[?] ",
    "[?] ",
    "[?] ",
    "[?] ",
    "[?] ",
    "[?] ",
    "[?] ",
    "[?] ",
    "[?] ",
    "[?] ",
    "[?] ",
    "[?] ",
    "[?] ",
    "[?] ",
    "[?] ",
    "[?] ",
    "[?] ",
    "[?] ",
    "[?] ",
    "[?] ",
    "[?] ",
    "[?] ",
    "[?] ",
    "[?] ",
    "[?] ",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?] ",
    "[?] ",
    "[?] ",
    "[?] ",
    "[?] ",
    "[?] ",
    "[?] ",
    "[?] ",
    "[?] ",
    "[?] ",
    "[?] ",
    "[?] ",
    "[?]",
    "[?]",
    "[?]",
    "[?]"
  ];
  return x2f;
}
var x30;
var hasRequiredX30;
function requireX30() {
  if (hasRequiredX30) return x30;
  hasRequiredX30 = 1;
  x30 = [
    " ",
    ", ",
    ". ",
    '"',
    "[JIS]",
    '"',
    "/",
    "0",
    "<",
    "> ",
    "<<",
    ">> ",
    "[",
    "] ",
    "\\{",
    "\\} ",
    "[(",
    ")] ",
    "\\@",
    "X ",
    "[",
    "] ",
    "[[",
    "]] ",
    "((",
    ")) ",
    "[[",
    "]] ",
    "~ ",
    "``",
    "''",
    ",,",
    "\\@",
    "1",
    "2",
    "3",
    "4",
    "5",
    "6",
    "7",
    "8",
    "9",
    "",
    "",
    "",
    "",
    "",
    "",
    "~",
    "+",
    "+",
    "+",
    "+",
    "",
    "\\@",
    " // ",
    "+10+",
    "+20+",
    "+30+",
    "[?]",
    "[?]",
    "[?]",
    "",
    "",
    "[?]",
    "a",
    "a",
    "i",
    "i",
    "u",
    "u",
    "e",
    "e",
    "o",
    "o",
    "ka",
    "ga",
    "ki",
    "gi",
    "ku",
    "gu",
    "ke",
    "ge",
    "ko",
    "go",
    "sa",
    "za",
    "si",
    "zi",
    "su",
    "zu",
    "se",
    "ze",
    "so",
    "zo",
    "ta",
    "da",
    "ti",
    "di",
    "tu",
    "tu",
    "du",
    "te",
    "de",
    "to",
    "do",
    "na",
    "ni",
    "nu",
    "ne",
    "no",
    "ha",
    "ba",
    "pa",
    "hi",
    "bi",
    "pi",
    "hu",
    "bu",
    "pu",
    "he",
    "be",
    "pe",
    "ho",
    "bo",
    "po",
    "ma",
    "mi",
    "mu",
    "me",
    "mo",
    "ya",
    "ya",
    "yu",
    "yu",
    "yo",
    "yo",
    "ra",
    "ri",
    "ru",
    "re",
    "ro",
    "wa",
    "wa",
    "wi",
    "we",
    "wo",
    "n",
    "vu",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "",
    "",
    "",
    "",
    '"',
    '"',
    "[?]",
    "[?]",
    "a",
    "a",
    "i",
    "i",
    "u",
    "u",
    "e",
    "e",
    "o",
    "o",
    "ka",
    "ga",
    "ki",
    "gi",
    "ku",
    "gu",
    "ke",
    "ge",
    "ko",
    "go",
    "sa",
    "za",
    "si",
    "zi",
    "su",
    "zu",
    "se",
    "ze",
    "so",
    "zo",
    "ta",
    "da",
    "ti",
    "di",
    "tu",
    "tu",
    "du",
    "te",
    "de",
    "to",
    "do",
    "na",
    "ni",
    "nu",
    "ne",
    "no",
    "ha",
    "ba",
    "pa",
    "hi",
    "bi",
    "pi",
    "hu",
    "bu",
    "pu",
    "he",
    "be",
    "pe",
    "ho",
    "bo",
    "po",
    "ma",
    "mi",
    "mu",
    "me",
    "mo",
    "ya",
    "ya",
    "yu",
    "yu",
    "yo",
    "yo",
    "ra",
    "ri",
    "ru",
    "re",
    "ro",
    "wa",
    "wa",
    "wi",
    "we",
    "wo",
    "n",
    "vu",
    "ka",
    "ke",
    "va",
    "vi",
    "ve",
    "vo",
    "",
    "",
    '"',
    '"',
    "koto"
  ];
  return x30;
}
var x31;
var hasRequiredX31;
function requireX31() {
  if (hasRequiredX31) return x31;
  hasRequiredX31 = 1;
  x31 = [
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "B",
    "P",
    "M",
    "F",
    "D",
    "T",
    "N",
    "L",
    "G",
    "K",
    "H",
    "J",
    "Q",
    "X",
    "ZH",
    "CH",
    "SH",
    "R",
    "Z",
    "C",
    "S",
    "A",
    "O",
    "E",
    "EH",
    "AI",
    "EI",
    "AU",
    "OU",
    "AN",
    "EN",
    "ANG",
    "ENG",
    "ER",
    "I",
    "U",
    "IU",
    "V",
    "NG",
    "GN",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "g",
    "gg",
    "gs",
    "n",
    "nj",
    "nh",
    "d",
    "dd",
    "r",
    "lg",
    "lm",
    "lb",
    "ls",
    "lt",
    "lp",
    "rh",
    "m",
    "b",
    "bb",
    "bs",
    "s",
    "ss",
    "",
    "j",
    "jj",
    "c",
    "k",
    "t",
    "p",
    "h",
    "a",
    "ae",
    "ya",
    "yae",
    "eo",
    "e",
    "yeo",
    "ye",
    "o",
    "wa",
    "wae",
    "oe",
    "yo",
    "u",
    "weo",
    "we",
    "wi",
    "yu",
    "eu",
    "yi",
    "i",
    "",
    "nn",
    "nd",
    "ns",
    "nZ",
    "lgs",
    "ld",
    "lbs",
    "lZ",
    "lQ",
    "mb",
    "ms",
    "mZ",
    "mN",
    "bg",
    "",
    "bsg",
    "bst",
    "bj",
    "bt",
    "bN",
    "bbN",
    "sg",
    "sn",
    "sd",
    "sb",
    "sj",
    "Z",
    "",
    "N",
    "Ns",
    "NZ",
    "pN",
    "hh",
    "Q",
    "yo-ya",
    "yo-yae",
    "yo-i",
    "yu-yeo",
    "yu-ye",
    "yu-i",
    "U",
    "U-i",
    "[?]",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "BU",
    "ZI",
    "JI",
    "GU",
    "EE",
    "ENN",
    "OO",
    "ONN",
    "IR",
    "ANN",
    "INN",
    "UNN",
    "IM",
    "NGG",
    "AINN",
    "AUNN",
    "AM",
    "OM",
    "ONG",
    "INNN",
    "P",
    "T",
    "K",
    "H",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]"
  ];
  return x31;
}
var x32;
var hasRequiredX32;
function requireX32() {
  if (hasRequiredX32) return x32;
  hasRequiredX32 = 1;
  x32 = [
    "(g)",
    "(n)",
    "(d)",
    "(r)",
    "(m)",
    "(b)",
    "(s)",
    "()",
    "(j)",
    "(c)",
    "(k)",
    "(t)",
    "(p)",
    "(h)",
    "(ga)",
    "(na)",
    "(da)",
    "(ra)",
    "(ma)",
    "(ba)",
    "(sa)",
    "(a)",
    "(ja)",
    "(ca)",
    "(ka)",
    "(ta)",
    "(pa)",
    "(ha)",
    "(ju)",
    "[?]",
    "[?]",
    "[?]",
    "(1) ",
    "(2) ",
    "(3) ",
    "(4) ",
    "(5) ",
    "(6) ",
    "(7) ",
    "(8) ",
    "(9) ",
    "(10) ",
    "(Yue) ",
    "(Huo) ",
    "(Shui) ",
    "(Mu) ",
    "(Jin) ",
    "(Tu) ",
    "(Ri) ",
    "(Zhu) ",
    "(You) ",
    "(She) ",
    "(Ming) ",
    "(Te) ",
    "(Cai) ",
    "(Zhu) ",
    "(Lao) ",
    "(Dai) ",
    "(Hu) ",
    "(Xue) ",
    "(Jian) ",
    "(Qi) ",
    "(Zi) ",
    "(Xie) ",
    "(Ji) ",
    "(Xiu) ",
    "<<",
    ">>",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "(g)",
    "(n)",
    "(d)",
    "(r)",
    "(m)",
    "(b)",
    "(s)",
    "()",
    "(j)",
    "(c)",
    "(k)",
    "(t)",
    "(p)",
    "(h)",
    "(ga)",
    "(na)",
    "(da)",
    "(ra)",
    "(ma)",
    "(ba)",
    "(sa)",
    "(a)",
    "(ja)",
    "(ca)",
    "(ka)",
    "(ta)",
    "(pa)",
    "(ha)",
    "[?]",
    "[?]",
    "[?]",
    "KIS ",
    "(1) ",
    "(2) ",
    "(3) ",
    "(4) ",
    "(5) ",
    "(6) ",
    "(7) ",
    "(8) ",
    "(9) ",
    "(10) ",
    "(Yue) ",
    "(Huo) ",
    "(Shui) ",
    "(Mu) ",
    "(Jin) ",
    "(Tu) ",
    "(Ri) ",
    "(Zhu) ",
    "(You) ",
    "(She) ",
    "(Ming) ",
    "(Te) ",
    "(Cai) ",
    "(Zhu) ",
    "(Lao) ",
    "(Mi) ",
    "(Nan) ",
    "(Nu) ",
    "(Shi) ",
    "(You) ",
    "(Yin) ",
    "(Zhu) ",
    "(Xiang) ",
    "(Xiu) ",
    "(Xie) ",
    "(Zheng) ",
    "(Shang) ",
    "(Zhong) ",
    "(Xia) ",
    "(Zuo) ",
    "(You) ",
    "(Yi) ",
    "(Zong) ",
    "(Xue) ",
    "(Jian) ",
    "(Qi) ",
    "(Zi) ",
    "(Xie) ",
    "(Ye) ",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "1M",
    "2M",
    "3M",
    "4M",
    "5M",
    "6M",
    "7M",
    "8M",
    "9M",
    "10M",
    "11M",
    "12M",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "a",
    "i",
    "u",
    "u",
    "o",
    "ka",
    "ki",
    "ku",
    "ke",
    "ko",
    "sa",
    "si",
    "su",
    "se",
    "so",
    "ta",
    "ti",
    "tu",
    "te",
    "to",
    "na",
    "ni",
    "nu",
    "ne",
    "no",
    "ha",
    "hi",
    "hu",
    "he",
    "ho",
    "ma",
    "mi",
    "mu",
    "me",
    "mo",
    "ya",
    "yu",
    "yo",
    "ra",
    "ri",
    "ru",
    "re",
    "ro",
    "wa",
    "wi",
    "we",
    "wo",
    "[?]"
  ];
  return x32;
}
var x33;
var hasRequiredX33;
function requireX33() {
  if (hasRequiredX33) return x33;
  hasRequiredX33 = 1;
  x33 = [
    "apartment",
    "alpha",
    "ampere",
    "are",
    "inning",
    "inch",
    "won",
    "escudo",
    "acre",
    "ounce",
    "ohm",
    "kai-ri",
    "carat",
    "calorie",
    "gallon",
    "gamma",
    "giga",
    "guinea",
    "curie",
    "guilder",
    "kilo",
    "kilogram",
    "kilometer",
    "kilowatt",
    "gram",
    "gram ton",
    "cruzeiro",
    "krone",
    "case",
    "koruna",
    "co-op",
    "cycle",
    "centime",
    "shilling",
    "centi",
    "cent",
    "dozen",
    "desi",
    "dollar",
    "ton",
    "nano",
    "knot",
    "heights",
    "percent",
    "parts",
    "barrel",
    "piaster",
    "picul",
    "pico",
    "building",
    "farad",
    "feet",
    "bushel",
    "franc",
    "hectare",
    "peso",
    "pfennig",
    "hertz",
    "pence",
    "page",
    "beta",
    "point",
    "volt",
    "hon",
    "pound",
    "hall",
    "horn",
    "micro",
    "mile",
    "mach",
    "mark",
    "mansion",
    "micron",
    "milli",
    "millibar",
    "mega",
    "megaton",
    "meter",
    "yard",
    "yard",
    "yuan",
    "liter",
    "lira",
    "rupee",
    "ruble",
    "rem",
    "roentgen",
    "watt",
    "0h",
    "1h",
    "2h",
    "3h",
    "4h",
    "5h",
    "6h",
    "7h",
    "8h",
    "9h",
    "10h",
    "11h",
    "12h",
    "13h",
    "14h",
    "15h",
    "16h",
    "17h",
    "18h",
    "19h",
    "20h",
    "21h",
    "22h",
    "23h",
    "24h",
    "HPA",
    "da",
    "AU",
    "bar",
    "oV",
    "pc",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "Heisei",
    "Syouwa",
    "Taisyou",
    "Meiji",
    "Inc.",
    "pA",
    "nA",
    "microamp",
    "mA",
    "kA",
    "kB",
    "MB",
    "GB",
    "cal",
    "kcal",
    "pF",
    "nF",
    "microFarad",
    "microgram",
    "mg",
    "kg",
    "Hz",
    "kHz",
    "MHz",
    "GHz",
    "THz",
    "microliter",
    "ml",
    "dl",
    "kl",
    "fm",
    "nm",
    "micrometer",
    "mm",
    "cm",
    "km",
    "mm^2",
    "cm^2",
    "m^2",
    "km^2",
    "mm^4",
    "cm^3",
    "m^3",
    "km^3",
    "m/s",
    "m/s^2",
    "Pa",
    "kPa",
    "MPa",
    "GPa",
    "rad",
    "rad/s",
    "rad/s^2",
    "ps",
    "ns",
    "microsecond",
    "ms",
    "pV",
    "nV",
    "microvolt",
    "mV",
    "kV",
    "MV",
    "pW",
    "nW",
    "microwatt",
    "mW",
    "kW",
    "MW",
    "kOhm",
    "MOhm",
    "a.m.",
    "Bq",
    "cc",
    "cd",
    "C/kg",
    "Co.",
    "dB",
    "Gy",
    "ha",
    "HP",
    "in",
    "K.K.",
    "KM",
    "kt",
    "lm",
    "ln",
    "log",
    "lx",
    "mb",
    "mil",
    "mol",
    "pH",
    "p.m.",
    "PPM",
    "PR",
    "sr",
    "Sv",
    "Wb",
    "[?]",
    "[?]",
    "1d",
    "2d",
    "3d",
    "4d",
    "5d",
    "6d",
    "7d",
    "8d",
    "9d",
    "10d",
    "11d",
    "12d",
    "13d",
    "14d",
    "15d",
    "16d",
    "17d",
    "18d",
    "19d",
    "20d",
    "21d",
    "22d",
    "23d",
    "24d",
    "25d",
    "26d",
    "27d",
    "28d",
    "29d",
    "30d",
    "31d",
    "gal"
  ];
  return x33;
}
var x4d;
var hasRequiredX4d;
function requireX4d() {
  if (hasRequiredX4d) return x4d;
  hasRequiredX4d = 1;
  x4d = [
    "[?] ",
    "[?] ",
    "[?] ",
    "[?] ",
    "[?] ",
    "[?] ",
    "[?] ",
    "[?] ",
    "[?] ",
    "[?] ",
    "[?] ",
    "[?] ",
    "[?] ",
    "[?] ",
    "[?] ",
    "[?] ",
    "[?] ",
    "[?] ",
    "[?] ",
    "[?] ",
    "[?] ",
    "[?] ",
    "[?] ",
    "[?] ",
    "[?] ",
    "[?] ",
    "[?] ",
    "[?] ",
    "[?] ",
    "[?] ",
    "[?] ",
    "[?] ",
    "[?] ",
    "[?] ",
    "[?] ",
    "[?] ",
    "[?] ",
    "[?] ",
    "[?] ",
    "[?] ",
    "[?] ",
    "[?] ",
    "[?] ",
    "[?] ",
    "[?] ",
    "[?] ",
    "[?] ",
    "[?] ",
    "[?] ",
    "[?] ",
    "[?] ",
    "[?] ",
    "[?] ",
    "[?] ",
    "[?] ",
    "[?] ",
    "[?] ",
    "[?] ",
    "[?] ",
    "[?] ",
    "[?] ",
    "[?] ",
    "[?] ",
    "[?] ",
    "[?] ",
    "[?] ",
    "[?] ",
    "[?] ",
    "[?] ",
    "[?] ",
    "[?] ",
    "[?] ",
    "[?] ",
    "[?] ",
    "[?] ",
    "[?] ",
    "[?] ",
    "[?] ",
    "[?] ",
    "[?] ",
    "[?] ",
    "[?] ",
    "[?] ",
    "[?] ",
    "[?] ",
    "[?] ",
    "[?] ",
    "[?] ",
    "[?] ",
    "[?] ",
    "[?] ",
    "[?] ",
    "[?] ",
    "[?] ",
    "[?] ",
    "[?] ",
    "[?] ",
    "[?] ",
    "[?] ",
    "[?] ",
    "[?] ",
    "[?] ",
    "[?] ",
    "[?] ",
    "[?] ",
    "[?] ",
    "[?] ",
    "[?] ",
    "[?] ",
    "[?] ",
    "[?] ",
    "[?] ",
    "[?] ",
    "[?] ",
    "[?] ",
    "[?] ",
    "[?] ",
    "[?] ",
    "[?] ",
    "[?] ",
    "[?] ",
    "[?] ",
    "[?] ",
    "[?] ",
    "[?] ",
    "[?] ",
    "[?] ",
    "[?] ",
    "[?] ",
    "[?] ",
    "[?] ",
    "[?] ",
    "[?] ",
    "[?] ",
    "[?] ",
    "[?] ",
    "[?] ",
    "[?] ",
    "[?] ",
    "[?] ",
    "[?] ",
    "[?] ",
    "[?] ",
    "[?] ",
    "[?] ",
    "[?] ",
    "[?] ",
    "[?] ",
    "[?] ",
    "[?] ",
    "[?] ",
    "[?] ",
    "[?] ",
    "[?] ",
    "[?] ",
    "[?] ",
    "[?] ",
    "[?] ",
    "[?] ",
    "[?] ",
    "[?] ",
    "[?] ",
    "[?] ",
    "[?] ",
    "[?] ",
    "[?] ",
    "[?] ",
    "[?] ",
    "[?] ",
    "[?] ",
    "[?] ",
    "[?] ",
    "[?] ",
    "[?] ",
    "[?] ",
    "[?] ",
    "[?] ",
    "[?] ",
    "[?] ",
    "[?] ",
    "[?] ",
    "[?] ",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]"
  ];
  return x4d;
}
var x4e;
var hasRequiredX4e;
function requireX4e() {
  if (hasRequiredX4e) return x4e;
  hasRequiredX4e = 1;
  x4e = [
    "Yi ",
    "Ding ",
    "Kao ",
    "Qi ",
    "Shang ",
    "Xia ",
    "[?] ",
    "Mo ",
    "Zhang ",
    "San ",
    "Shang ",
    "Xia ",
    "Ji ",
    "Bu ",
    "Yu ",
    "Mian ",
    "Gai ",
    "Chou ",
    "Chou ",
    "Zhuan ",
    "Qie ",
    "Pi ",
    "Shi ",
    "Shi ",
    "Qiu ",
    "Bing ",
    "Ye ",
    "Cong ",
    "Dong ",
    "Si ",
    "Cheng ",
    "Diu ",
    "Qiu ",
    "Liang ",
    "Diu ",
    "You ",
    "Liang ",
    "Yan ",
    "Bing ",
    "Sang ",
    "Gun ",
    "Jiu ",
    "Ge ",
    "Ya ",
    "Qiang ",
    "Zhong ",
    "Ji ",
    "Jie ",
    "Feng ",
    "Guan ",
    "Chuan ",
    "Chan ",
    "Lin ",
    "Zhuo ",
    "Zhu ",
    "Ha ",
    "Wan ",
    "Dan ",
    "Wei ",
    "Zhu ",
    "Jing ",
    "Li ",
    "Ju ",
    "Pie ",
    "Fu ",
    "Yi ",
    "Yi ",
    "Nai ",
    "Shime ",
    "Jiu ",
    "Jiu ",
    "Zhe ",
    "Yao ",
    "Yi ",
    "[?] ",
    "Zhi ",
    "Wu ",
    "Zha ",
    "Hu ",
    "Fa ",
    "Le ",
    "Zhong ",
    "Ping ",
    "Pang ",
    "Qiao ",
    "Hu ",
    "Guai ",
    "Cheng ",
    "Cheng ",
    "Yi ",
    "Yin ",
    "[?] ",
    "Mie ",
    "Jiu ",
    "Qi ",
    "Ye ",
    "Xi ",
    "Xiang ",
    "Gai ",
    "Diu ",
    "Hal ",
    "[?] ",
    "Shu ",
    "Twul ",
    "Shi ",
    "Ji ",
    "Nang ",
    "Jia ",
    "Kel ",
    "Shi ",
    "[?] ",
    "Ol ",
    "Mai ",
    "Luan ",
    "Cal ",
    "Ru ",
    "Xue ",
    "Yan ",
    "Fu ",
    "Sha ",
    "Na ",
    "Gan ",
    "Sol ",
    "El ",
    "Cwul ",
    "[?] ",
    "Gan ",
    "Chi ",
    "Gui ",
    "Gan ",
    "Luan ",
    "Lin ",
    "Yi ",
    "Jue ",
    "Liao ",
    "Ma ",
    "Yu ",
    "Zheng ",
    "Shi ",
    "Shi ",
    "Er ",
    "Chu ",
    "Yu ",
    "Yu ",
    "Yu ",
    "Yun ",
    "Hu ",
    "Qi ",
    "Wu ",
    "Jing ",
    "Si ",
    "Sui ",
    "Gen ",
    "Gen ",
    "Ya ",
    "Xie ",
    "Ya ",
    "Qi ",
    "Ya ",
    "Ji ",
    "Tou ",
    "Wang ",
    "Kang ",
    "Ta ",
    "Jiao ",
    "Hai ",
    "Yi ",
    "Chan ",
    "Heng ",
    "Mu ",
    "[?] ",
    "Xiang ",
    "Jing ",
    "Ting ",
    "Liang ",
    "Xiang ",
    "Jing ",
    "Ye ",
    "Qin ",
    "Bo ",
    "You ",
    "Xie ",
    "Dan ",
    "Lian ",
    "Duo ",
    "Wei ",
    "Ren ",
    "Ren ",
    "Ji ",
    "La ",
    "Wang ",
    "Yi ",
    "Shi ",
    "Ren ",
    "Le ",
    "Ding ",
    "Ze ",
    "Jin ",
    "Pu ",
    "Chou ",
    "Ba ",
    "Zhang ",
    "Jin ",
    "Jie ",
    "Bing ",
    "Reng ",
    "Cong ",
    "Fo ",
    "San ",
    "Lun ",
    "Sya ",
    "Cang ",
    "Zi ",
    "Shi ",
    "Ta ",
    "Zhang ",
    "Fu ",
    "Xian ",
    "Xian ",
    "Tuo ",
    "Hong ",
    "Tong ",
    "Ren ",
    "Qian ",
    "Gan ",
    "Yi ",
    "Di ",
    "Dai ",
    "Ling ",
    "Yi ",
    "Chao ",
    "Chang ",
    "Sa ",
    "[?] ",
    "Yi ",
    "Mu ",
    "Men ",
    "Ren ",
    "Jia ",
    "Chao ",
    "Yang ",
    "Qian ",
    "Zhong ",
    "Pi ",
    "Wan ",
    "Wu ",
    "Jian ",
    "Jie ",
    "Yao ",
    "Feng ",
    "Cang ",
    "Ren ",
    "Wang ",
    "Fen ",
    "Di ",
    "Fang "
  ];
  return x4e;
}
var x4f;
var hasRequiredX4f;
function requireX4f() {
  if (hasRequiredX4f) return x4f;
  hasRequiredX4f = 1;
  x4f = [
    "Zhong ",
    "Qi ",
    "Pei ",
    "Yu ",
    "Diao ",
    "Dun ",
    "Wen ",
    "Yi ",
    "Xin ",
    "Kang ",
    "Yi ",
    "Ji ",
    "Ai ",
    "Wu ",
    "Ji ",
    "Fu ",
    "Fa ",
    "Xiu ",
    "Jin ",
    "Bei ",
    "Dan ",
    "Fu ",
    "Tang ",
    "Zhong ",
    "You ",
    "Huo ",
    "Hui ",
    "Yu ",
    "Cui ",
    "Chuan ",
    "San ",
    "Wei ",
    "Chuan ",
    "Che ",
    "Ya ",
    "Xian ",
    "Shang ",
    "Chang ",
    "Lun ",
    "Cang ",
    "Xun ",
    "Xin ",
    "Wei ",
    "Zhu ",
    "[?] ",
    "Xuan ",
    "Nu ",
    "Bo ",
    "Gu ",
    "Ni ",
    "Ni ",
    "Xie ",
    "Ban ",
    "Xu ",
    "Ling ",
    "Zhou ",
    "Shen ",
    "Qu ",
    "Si ",
    "Beng ",
    "Si ",
    "Jia ",
    "Pi ",
    "Yi ",
    "Si ",
    "Ai ",
    "Zheng ",
    "Dian ",
    "Han ",
    "Mai ",
    "Dan ",
    "Zhu ",
    "Bu ",
    "Qu ",
    "Bi ",
    "Shao ",
    "Ci ",
    "Wei ",
    "Di ",
    "Zhu ",
    "Zuo ",
    "You ",
    "Yang ",
    "Ti ",
    "Zhan ",
    "He ",
    "Bi ",
    "Tuo ",
    "She ",
    "Yu ",
    "Yi ",
    "Fo ",
    "Zuo ",
    "Kou ",
    "Ning ",
    "Tong ",
    "Ni ",
    "Xuan ",
    "Qu ",
    "Yong ",
    "Wa ",
    "Qian ",
    "[?] ",
    "Ka ",
    "[?] ",
    "Pei ",
    "Huai ",
    "He ",
    "Lao ",
    "Xiang ",
    "Ge ",
    "Yang ",
    "Bai ",
    "Fa ",
    "Ming ",
    "Jia ",
    "Er ",
    "Bing ",
    "Ji ",
    "Hen ",
    "Huo ",
    "Gui ",
    "Quan ",
    "Tiao ",
    "Jiao ",
    "Ci ",
    "Yi ",
    "Shi ",
    "Xing ",
    "Shen ",
    "Tuo ",
    "Kan ",
    "Zhi ",
    "Gai ",
    "Lai ",
    "Yi ",
    "Chi ",
    "Kua ",
    "Guang ",
    "Li ",
    "Yin ",
    "Shi ",
    "Mi ",
    "Zhu ",
    "Xu ",
    "You ",
    "An ",
    "Lu ",
    "Mou ",
    "Er ",
    "Lun ",
    "Tong ",
    "Cha ",
    "Chi ",
    "Xun ",
    "Gong ",
    "Zhou ",
    "Yi ",
    "Ru ",
    "Jian ",
    "Xia ",
    "Jia ",
    "Zai ",
    "Lu ",
    "Ko ",
    "Jiao ",
    "Zhen ",
    "Ce ",
    "Qiao ",
    "Kuai ",
    "Chai ",
    "Ning ",
    "Nong ",
    "Jin ",
    "Wu ",
    "Hou ",
    "Jiong ",
    "Cheng ",
    "Zhen ",
    "Zuo ",
    "Chou ",
    "Qin ",
    "Lu ",
    "Ju ",
    "Shu ",
    "Ting ",
    "Shen ",
    "Tuo ",
    "Bo ",
    "Nan ",
    "Hao ",
    "Bian ",
    "Tui ",
    "Yu ",
    "Xi ",
    "Cu ",
    "E ",
    "Qiu ",
    "Xu ",
    "Kuang ",
    "Ku ",
    "Wu ",
    "Jun ",
    "Yi ",
    "Fu ",
    "Lang ",
    "Zu ",
    "Qiao ",
    "Li ",
    "Yong ",
    "Hun ",
    "Jing ",
    "Xian ",
    "San ",
    "Pai ",
    "Su ",
    "Fu ",
    "Xi ",
    "Li ",
    "Fu ",
    "Ping ",
    "Bao ",
    "Yu ",
    "Si ",
    "Xia ",
    "Xin ",
    "Xiu ",
    "Yu ",
    "Ti ",
    "Che ",
    "Chou ",
    "[?] ",
    "Yan ",
    "Lia ",
    "Li ",
    "Lai ",
    "[?] ",
    "Jian ",
    "Xiu ",
    "Fu ",
    "He ",
    "Ju ",
    "Xiao ",
    "Pai ",
    "Jian ",
    "Biao ",
    "Chu ",
    "Fei ",
    "Feng ",
    "Ya ",
    "An ",
    "Bei ",
    "Yu ",
    "Xin ",
    "Bi ",
    "Jian "
  ];
  return x4f;
}
var x50;
var hasRequiredX50;
function requireX50() {
  if (hasRequiredX50) return x50;
  hasRequiredX50 = 1;
  x50 = [
    "Chang ",
    "Chi ",
    "Bing ",
    "Zan ",
    "Yao ",
    "Cui ",
    "Lia ",
    "Wan ",
    "Lai ",
    "Cang ",
    "Zong ",
    "Ge ",
    "Guan ",
    "Bei ",
    "Tian ",
    "Shu ",
    "Shu ",
    "Men ",
    "Dao ",
    "Tan ",
    "Jue ",
    "Chui ",
    "Xing ",
    "Peng ",
    "Tang ",
    "Hou ",
    "Yi ",
    "Qi ",
    "Ti ",
    "Gan ",
    "Jing ",
    "Jie ",
    "Sui ",
    "Chang ",
    "Jie ",
    "Fang ",
    "Zhi ",
    "Kong ",
    "Juan ",
    "Zong ",
    "Ju ",
    "Qian ",
    "Ni ",
    "Lun ",
    "Zhuo ",
    "Wei ",
    "Luo ",
    "Song ",
    "Leng ",
    "Hun ",
    "Dong ",
    "Zi ",
    "Ben ",
    "Wu ",
    "Ju ",
    "Nai ",
    "Cai ",
    "Jian ",
    "Zhai ",
    "Ye ",
    "Zhi ",
    "Sha ",
    "Qing ",
    "[?] ",
    "Ying ",
    "Cheng ",
    "Jian ",
    "Yan ",
    "Nuan ",
    "Zhong ",
    "Chun ",
    "Jia ",
    "Jie ",
    "Wei ",
    "Yu ",
    "Bing ",
    "Ruo ",
    "Ti ",
    "Wei ",
    "Pian ",
    "Yan ",
    "Feng ",
    "Tang ",
    "Wo ",
    "E ",
    "Xie ",
    "Che ",
    "Sheng ",
    "Kan ",
    "Di ",
    "Zuo ",
    "Cha ",
    "Ting ",
    "Bei ",
    "Ye ",
    "Huang ",
    "Yao ",
    "Zhan ",
    "Chou ",
    "Yan ",
    "You ",
    "Jian ",
    "Xu ",
    "Zha ",
    "Ci ",
    "Fu ",
    "Bi ",
    "Zhi ",
    "Zong ",
    "Mian ",
    "Ji ",
    "Yi ",
    "Xie ",
    "Xun ",
    "Si ",
    "Duan ",
    "Ce ",
    "Zhen ",
    "Ou ",
    "Tou ",
    "Tou ",
    "Bei ",
    "Za ",
    "Lu ",
    "Jie ",
    "Wei ",
    "Fen ",
    "Chang ",
    "Gui ",
    "Sou ",
    "Zhi ",
    "Su ",
    "Xia ",
    "Fu ",
    "Yuan ",
    "Rong ",
    "Li ",
    "Ru ",
    "Yun ",
    "Gou ",
    "Ma ",
    "Bang ",
    "Dian ",
    "Tang ",
    "Hao ",
    "Jie ",
    "Xi ",
    "Shan ",
    "Qian ",
    "Jue ",
    "Cang ",
    "Chu ",
    "San ",
    "Bei ",
    "Xiao ",
    "Yong ",
    "Yao ",
    "Tan ",
    "Suo ",
    "Yang ",
    "Fa ",
    "Bing ",
    "Jia ",
    "Dai ",
    "Zai ",
    "Tang ",
    "[?] ",
    "Bin ",
    "Chu ",
    "Nuo ",
    "Can ",
    "Lei ",
    "Cui ",
    "Yong ",
    "Zao ",
    "Zong ",
    "Peng ",
    "Song ",
    "Ao ",
    "Chuan ",
    "Yu ",
    "Zhai ",
    "Cou ",
    "Shang ",
    "Qiang ",
    "Jing ",
    "Chi ",
    "Sha ",
    "Han ",
    "Zhang ",
    "Qing ",
    "Yan ",
    "Di ",
    "Xi ",
    "Lu ",
    "Bei ",
    "Piao ",
    "Jin ",
    "Lian ",
    "Lu ",
    "Man ",
    "Qian ",
    "Xian ",
    "Tan ",
    "Ying ",
    "Dong ",
    "Zhuan ",
    "Xiang ",
    "Shan ",
    "Qiao ",
    "Jiong ",
    "Tui ",
    "Zun ",
    "Pu ",
    "Xi ",
    "Lao ",
    "Chang ",
    "Guang ",
    "Liao ",
    "Qi ",
    "Deng ",
    "Chan ",
    "Wei ",
    "Ji ",
    "Fan ",
    "Hui ",
    "Chuan ",
    "Jian ",
    "Dan ",
    "Jiao ",
    "Jiu ",
    "Seng ",
    "Fen ",
    "Xian ",
    "Jue ",
    "E ",
    "Jiao ",
    "Jian ",
    "Tong ",
    "Lin ",
    "Bo ",
    "Gu ",
    "[?] ",
    "Su ",
    "Xian ",
    "Jiang ",
    "Min ",
    "Ye ",
    "Jin ",
    "Jia ",
    "Qiao ",
    "Pi ",
    "Feng ",
    "Zhou ",
    "Ai ",
    "Sai "
  ];
  return x50;
}
var x51;
var hasRequiredX51;
function requireX51() {
  if (hasRequiredX51) return x51;
  hasRequiredX51 = 1;
  x51 = [
    "Yi ",
    "Jun ",
    "Nong ",
    "Chan ",
    "Yi ",
    "Dang ",
    "Jing ",
    "Xuan ",
    "Kuai ",
    "Jian ",
    "Chu ",
    "Dan ",
    "Jiao ",
    "Sha ",
    "Zai ",
    "[?] ",
    "Bin ",
    "An ",
    "Ru ",
    "Tai ",
    "Chou ",
    "Chai ",
    "Lan ",
    "Ni ",
    "Jin ",
    "Qian ",
    "Meng ",
    "Wu ",
    "Ning ",
    "Qiong ",
    "Ni ",
    "Chang ",
    "Lie ",
    "Lei ",
    "Lu ",
    "Kuang ",
    "Bao ",
    "Du ",
    "Biao ",
    "Zan ",
    "Zhi ",
    "Si ",
    "You ",
    "Hao ",
    "Chen ",
    "Chen ",
    "Li ",
    "Teng ",
    "Wei ",
    "Long ",
    "Chu ",
    "Chan ",
    "Rang ",
    "Shu ",
    "Hui ",
    "Li ",
    "Luo ",
    "Zan ",
    "Nuo ",
    "Tang ",
    "Yan ",
    "Lei ",
    "Nang ",
    "Er ",
    "Wu ",
    "Yun ",
    "Zan ",
    "Yuan ",
    "Xiong ",
    "Chong ",
    "Zhao ",
    "Xiong ",
    "Xian ",
    "Guang ",
    "Dui ",
    "Ke ",
    "Dui ",
    "Mian ",
    "Tu ",
    "Chang ",
    "Er ",
    "Dui ",
    "Er ",
    "Xin ",
    "Tu ",
    "Si ",
    "Yan ",
    "Yan ",
    "Shi ",
    "Shi ",
    "Dang ",
    "Qian ",
    "Dou ",
    "Fen ",
    "Mao ",
    "Shen ",
    "Dou ",
    "Bai ",
    "Jing ",
    "Li ",
    "Huang ",
    "Ru ",
    "Wang ",
    "Nei ",
    "Quan ",
    "Liang ",
    "Yu ",
    "Ba ",
    "Gong ",
    "Liu ",
    "Xi ",
    "[?] ",
    "Lan ",
    "Gong ",
    "Tian ",
    "Guan ",
    "Xing ",
    "Bing ",
    "Qi ",
    "Ju ",
    "Dian ",
    "Zi ",
    "Ppwun ",
    "Yang ",
    "Jian ",
    "Shou ",
    "Ji ",
    "Yi ",
    "Ji ",
    "Chan ",
    "Jiong ",
    "Mao ",
    "Ran ",
    "Nei ",
    "Yuan ",
    "Mao ",
    "Gang ",
    "Ran ",
    "Ce ",
    "Jiong ",
    "Ce ",
    "Zai ",
    "Gua ",
    "Jiong ",
    "Mao ",
    "Zhou ",
    "Mou ",
    "Gou ",
    "Xu ",
    "Mian ",
    "Mi ",
    "Rong ",
    "Yin ",
    "Xie ",
    "Kan ",
    "Jun ",
    "Nong ",
    "Yi ",
    "Mi ",
    "Shi ",
    "Guan ",
    "Meng ",
    "Zhong ",
    "Ju ",
    "Yuan ",
    "Ming ",
    "Kou ",
    "Lam ",
    "Fu ",
    "Xie ",
    "Mi ",
    "Bing ",
    "Dong ",
    "Tai ",
    "Gang ",
    "Feng ",
    "Bing ",
    "Hu ",
    "Chong ",
    "Jue ",
    "Hu ",
    "Kuang ",
    "Ye ",
    "Leng ",
    "Pan ",
    "Fu ",
    "Min ",
    "Dong ",
    "Xian ",
    "Lie ",
    "Xia ",
    "Jian ",
    "Jing ",
    "Shu ",
    "Mei ",
    "Tu ",
    "Qi ",
    "Gu ",
    "Zhun ",
    "Song ",
    "Jing ",
    "Liang ",
    "Qing ",
    "Diao ",
    "Ling ",
    "Dong ",
    "Gan ",
    "Jian ",
    "Yin ",
    "Cou ",
    "Yi ",
    "Li ",
    "Cang ",
    "Ming ",
    "Zhuen ",
    "Cui ",
    "Si ",
    "Duo ",
    "Jin ",
    "Lin ",
    "Lin ",
    "Ning ",
    "Xi ",
    "Du ",
    "Ji ",
    "Fan ",
    "Fan ",
    "Fan ",
    "Feng ",
    "Ju ",
    "Chu ",
    "Tako ",
    "Feng ",
    "Mok ",
    "Ci ",
    "Fu ",
    "Feng ",
    "Ping ",
    "Feng ",
    "Kai ",
    "Huang ",
    "Kai ",
    "Gan ",
    "Deng ",
    "Ping ",
    "Qu ",
    "Xiong ",
    "Kuai ",
    "Tu ",
    "Ao ",
    "Chu ",
    "Ji ",
    "Dang ",
    "Han ",
    "Han ",
    "Zao "
  ];
  return x51;
}
var x52;
var hasRequiredX52;
function requireX52() {
  if (hasRequiredX52) return x52;
  hasRequiredX52 = 1;
  x52 = [
    "Dao ",
    "Diao ",
    "Dao ",
    "Ren ",
    "Ren ",
    "Chuang ",
    "Fen ",
    "Qie ",
    "Yi ",
    "Ji ",
    "Kan ",
    "Qian ",
    "Cun ",
    "Chu ",
    "Wen ",
    "Ji ",
    "Dan ",
    "Xing ",
    "Hua ",
    "Wan ",
    "Jue ",
    "Li ",
    "Yue ",
    "Lie ",
    "Liu ",
    "Ze ",
    "Gang ",
    "Chuang ",
    "Fu ",
    "Chu ",
    "Qu ",
    "Ju ",
    "Shan ",
    "Min ",
    "Ling ",
    "Zhong ",
    "Pan ",
    "Bie ",
    "Jie ",
    "Jie ",
    "Bao ",
    "Li ",
    "Shan ",
    "Bie ",
    "Chan ",
    "Jing ",
    "Gua ",
    "Gen ",
    "Dao ",
    "Chuang ",
    "Kui ",
    "Ku ",
    "Duo ",
    "Er ",
    "Zhi ",
    "Shua ",
    "Quan ",
    "Cha ",
    "Ci ",
    "Ke ",
    "Jie ",
    "Gui ",
    "Ci ",
    "Gui ",
    "Kai ",
    "Duo ",
    "Ji ",
    "Ti ",
    "Jing ",
    "Lou ",
    "Gen ",
    "Ze ",
    "Yuan ",
    "Cuo ",
    "Xue ",
    "Ke ",
    "La ",
    "Qian ",
    "Cha ",
    "Chuang ",
    "Gua ",
    "Jian ",
    "Cuo ",
    "Li ",
    "Ti ",
    "Fei ",
    "Pou ",
    "Chan ",
    "Qi ",
    "Chuang ",
    "Zi ",
    "Gang ",
    "Wan ",
    "Bo ",
    "Ji ",
    "Duo ",
    "Qing ",
    "Yan ",
    "Zhuo ",
    "Jian ",
    "Ji ",
    "Bo ",
    "Yan ",
    "Ju ",
    "Huo ",
    "Sheng ",
    "Jian ",
    "Duo ",
    "Duan ",
    "Wu ",
    "Gua ",
    "Fu ",
    "Sheng ",
    "Jian ",
    "Ge ",
    "Zha ",
    "Kai ",
    "Chuang ",
    "Juan ",
    "Chan ",
    "Tuan ",
    "Lu ",
    "Li ",
    "Fou ",
    "Shan ",
    "Piao ",
    "Kou ",
    "Jiao ",
    "Gua ",
    "Qiao ",
    "Jue ",
    "Hua ",
    "Zha ",
    "Zhuo ",
    "Lian ",
    "Ju ",
    "Pi ",
    "Liu ",
    "Gui ",
    "Jiao ",
    "Gui ",
    "Jian ",
    "Jian ",
    "Tang ",
    "Huo ",
    "Ji ",
    "Jian ",
    "Yi ",
    "Jian ",
    "Zhi ",
    "Chan ",
    "Cuan ",
    "Mo ",
    "Li ",
    "Zhu ",
    "Li ",
    "Ya ",
    "Quan ",
    "Ban ",
    "Gong ",
    "Jia ",
    "Wu ",
    "Mai ",
    "Lie ",
    "Jin ",
    "Keng ",
    "Xie ",
    "Zhi ",
    "Dong ",
    "Zhu ",
    "Nu ",
    "Jie ",
    "Qu ",
    "Shao ",
    "Yi ",
    "Zhu ",
    "Miao ",
    "Li ",
    "Jing ",
    "Lao ",
    "Lao ",
    "Juan ",
    "Kou ",
    "Yang ",
    "Wa ",
    "Xiao ",
    "Mou ",
    "Kuang ",
    "Jie ",
    "Lie ",
    "He ",
    "Shi ",
    "Ke ",
    "Jing ",
    "Hao ",
    "Bo ",
    "Min ",
    "Chi ",
    "Lang ",
    "Yong ",
    "Yong ",
    "Mian ",
    "Ke ",
    "Xun ",
    "Juan ",
    "Qing ",
    "Lu ",
    "Pou ",
    "Meng ",
    "Lai ",
    "Le ",
    "Kai ",
    "Mian ",
    "Dong ",
    "Xu ",
    "Xu ",
    "Kan ",
    "Wu ",
    "Yi ",
    "Xun ",
    "Weng ",
    "Sheng ",
    "Lao ",
    "Mu ",
    "Lu ",
    "Piao ",
    "Shi ",
    "Ji ",
    "Qin ",
    "Qiang ",
    "Jiao ",
    "Quan ",
    "Yang ",
    "Yi ",
    "Jue ",
    "Fan ",
    "Juan ",
    "Tong ",
    "Ju ",
    "Dan ",
    "Xie ",
    "Mai ",
    "Xun ",
    "Xun ",
    "Lu ",
    "Li ",
    "Che ",
    "Rang ",
    "Quan ",
    "Bao ",
    "Shao ",
    "Yun ",
    "Jiu ",
    "Bao ",
    "Gou ",
    "Wu "
  ];
  return x52;
}
var x53;
var hasRequiredX53;
function requireX53() {
  if (hasRequiredX53) return x53;
  hasRequiredX53 = 1;
  x53 = [
    "Yun ",
    "Mwun ",
    "Nay ",
    "Gai ",
    "Gai ",
    "Bao ",
    "Cong ",
    "[?] ",
    "Xiong ",
    "Peng ",
    "Ju ",
    "Tao ",
    "Ge ",
    "Pu ",
    "An ",
    "Pao ",
    "Fu ",
    "Gong ",
    "Da ",
    "Jiu ",
    "Qiong ",
    "Bi ",
    "Hua ",
    "Bei ",
    "Nao ",
    "Chi ",
    "Fang ",
    "Jiu ",
    "Yi ",
    "Za ",
    "Jiang ",
    "Kang ",
    "Jiang ",
    "Kuang ",
    "Hu ",
    "Xia ",
    "Qu ",
    "Bian ",
    "Gui ",
    "Qie ",
    "Zang ",
    "Kuang ",
    "Fei ",
    "Hu ",
    "Tou ",
    "Gui ",
    "Gui ",
    "Hui ",
    "Dan ",
    "Gui ",
    "Lian ",
    "Lian ",
    "Suan ",
    "Du ",
    "Jiu ",
    "Qu ",
    "Xi ",
    "Pi ",
    "Qu ",
    "Yi ",
    "Qia ",
    "Yan ",
    "Bian ",
    "Ni ",
    "Qu ",
    "Shi ",
    "Xin ",
    "Qian ",
    "Nian ",
    "Sa ",
    "Zu ",
    "Sheng ",
    "Wu ",
    "Hui ",
    "Ban ",
    "Shi ",
    "Xi ",
    "Wan ",
    "Hua ",
    "Xie ",
    "Wan ",
    "Bei ",
    "Zu ",
    "Zhuo ",
    "Xie ",
    "Dan ",
    "Mai ",
    "Nan ",
    "Dan ",
    "Ji ",
    "Bo ",
    "Shuai ",
    "Bu ",
    "Kuang ",
    "Bian ",
    "Bu ",
    "Zhan ",
    "Qia ",
    "Lu ",
    "You ",
    "Lu ",
    "Xi ",
    "Gua ",
    "Wo ",
    "Xie ",
    "Jie ",
    "Jie ",
    "Wei ",
    "Ang ",
    "Qiong ",
    "Zhi ",
    "Mao ",
    "Yin ",
    "Wei ",
    "Shao ",
    "Ji ",
    "Que ",
    "Luan ",
    "Shi ",
    "Juan ",
    "Xie ",
    "Xu ",
    "Jin ",
    "Que ",
    "Wu ",
    "Ji ",
    "E ",
    "Qing ",
    "Xi ",
    "[?] ",
    "Han ",
    "Zhan ",
    "E ",
    "Ting ",
    "Li ",
    "Zhe ",
    "Han ",
    "Li ",
    "Ya ",
    "Ya ",
    "Yan ",
    "She ",
    "Zhi ",
    "Zha ",
    "Pang ",
    "[?] ",
    "He ",
    "Ya ",
    "Zhi ",
    "Ce ",
    "Pang ",
    "Ti ",
    "Li ",
    "She ",
    "Hou ",
    "Ting ",
    "Zui ",
    "Cuo ",
    "Fei ",
    "Yuan ",
    "Ce ",
    "Yuan ",
    "Xiang ",
    "Yan ",
    "Li ",
    "Jue ",
    "Sha ",
    "Dian ",
    "Chu ",
    "Jiu ",
    "Qin ",
    "Ao ",
    "Gui ",
    "Yan ",
    "Si ",
    "Li ",
    "Chang ",
    "Lan ",
    "Li ",
    "Yan ",
    "Yan ",
    "Yuan ",
    "Si ",
    "Gong ",
    "Lin ",
    "Qiu ",
    "Qu ",
    "Qu ",
    "Uk ",
    "Lei ",
    "Du ",
    "Xian ",
    "Zhuan ",
    "San ",
    "Can ",
    "Can ",
    "Can ",
    "Can ",
    "Ai ",
    "Dai ",
    "You ",
    "Cha ",
    "Ji ",
    "You ",
    "Shuang ",
    "Fan ",
    "Shou ",
    "Guai ",
    "Ba ",
    "Fa ",
    "Ruo ",
    "Shi ",
    "Shu ",
    "Zhuo ",
    "Qu ",
    "Shou ",
    "Bian ",
    "Xu ",
    "Jia ",
    "Pan ",
    "Sou ",
    "Gao ",
    "Wei ",
    "Sou ",
    "Die ",
    "Rui ",
    "Cong ",
    "Kou ",
    "Gu ",
    "Ju ",
    "Ling ",
    "Gua ",
    "Tao ",
    "Kou ",
    "Zhi ",
    "Jiao ",
    "Zhao ",
    "Ba ",
    "Ding ",
    "Ke ",
    "Tai ",
    "Chi ",
    "Shi ",
    "You ",
    "Qiu ",
    "Po ",
    "Xie ",
    "Hao ",
    "Si ",
    "Tan ",
    "Chi ",
    "Le ",
    "Diao ",
    "Ji ",
    "[?] ",
    "Hong "
  ];
  return x53;
}
var x54;
var hasRequiredX54;
function requireX54() {
  if (hasRequiredX54) return x54;
  hasRequiredX54 = 1;
  x54 = [
    "Mie ",
    "Xu ",
    "Mang ",
    "Chi ",
    "Ge ",
    "Xuan ",
    "Yao ",
    "Zi ",
    "He ",
    "Ji ",
    "Diao ",
    "Cun ",
    "Tong ",
    "Ming ",
    "Hou ",
    "Li ",
    "Tu ",
    "Xiang ",
    "Zha ",
    "Xia ",
    "Ye ",
    "Lu ",
    "A ",
    "Ma ",
    "Ou ",
    "Xue ",
    "Yi ",
    "Jun ",
    "Chou ",
    "Lin ",
    "Tun ",
    "Yin ",
    "Fei ",
    "Bi ",
    "Qin ",
    "Qin ",
    "Jie ",
    "Bu ",
    "Fou ",
    "Ba ",
    "Dun ",
    "Fen ",
    "E ",
    "Han ",
    "Ting ",
    "Hang ",
    "Shun ",
    "Qi ",
    "Hong ",
    "Zhi ",
    "Shen ",
    "Wu ",
    "Wu ",
    "Chao ",
    "Ne ",
    "Xue ",
    "Xi ",
    "Chui ",
    "Dou ",
    "Wen ",
    "Hou ",
    "Ou ",
    "Wu ",
    "Gao ",
    "Ya ",
    "Jun ",
    "Lu ",
    "E ",
    "Ge ",
    "Mei ",
    "Ai ",
    "Qi ",
    "Cheng ",
    "Wu ",
    "Gao ",
    "Fu ",
    "Jiao ",
    "Hong ",
    "Chi ",
    "Sheng ",
    "Ne ",
    "Tun ",
    "Fu ",
    "Yi ",
    "Dai ",
    "Ou ",
    "Li ",
    "Bai ",
    "Yuan ",
    "Kuai ",
    "[?] ",
    "Qiang ",
    "Wu ",
    "E ",
    "Shi ",
    "Quan ",
    "Pen ",
    "Wen ",
    "Ni ",
    "M ",
    "Ling ",
    "Ran ",
    "You ",
    "Di ",
    "Zhou ",
    "Shi ",
    "Zhou ",
    "Tie ",
    "Xi ",
    "Yi ",
    "Qi ",
    "Ping ",
    "Zi ",
    "Gu ",
    "Zi ",
    "Wei ",
    "Xu ",
    "He ",
    "Nao ",
    "Xia ",
    "Pei ",
    "Yi ",
    "Xiao ",
    "Shen ",
    "Hu ",
    "Ming ",
    "Da ",
    "Qu ",
    "Ju ",
    "Gem ",
    "Za ",
    "Tuo ",
    "Duo ",
    "Pou ",
    "Pao ",
    "Bi ",
    "Fu ",
    "Yang ",
    "He ",
    "Zha ",
    "He ",
    "Hai ",
    "Jiu ",
    "Yong ",
    "Fu ",
    "Que ",
    "Zhou ",
    "Wa ",
    "Ka ",
    "Gu ",
    "Ka ",
    "Zuo ",
    "Bu ",
    "Long ",
    "Dong ",
    "Ning ",
    "Tha ",
    "Si ",
    "Xian ",
    "Huo ",
    "Qi ",
    "Er ",
    "E ",
    "Guang ",
    "Zha ",
    "Xi ",
    "Yi ",
    "Lie ",
    "Zi ",
    "Mie ",
    "Mi ",
    "Zhi ",
    "Yao ",
    "Ji ",
    "Zhou ",
    "Ge ",
    "Shuai ",
    "Zan ",
    "Xiao ",
    "Ke ",
    "Hui ",
    "Kua ",
    "Huai ",
    "Tao ",
    "Xian ",
    "E ",
    "Xuan ",
    "Xiu ",
    "Wai ",
    "Yan ",
    "Lao ",
    "Yi ",
    "Ai ",
    "Pin ",
    "Shen ",
    "Tong ",
    "Hong ",
    "Xiong ",
    "Chi ",
    "Wa ",
    "Ha ",
    "Zai ",
    "Yu ",
    "Di ",
    "Pai ",
    "Xiang ",
    "Ai ",
    "Hen ",
    "Kuang ",
    "Ya ",
    "Da ",
    "Xiao ",
    "Bi ",
    "Yue ",
    "[?] ",
    "Hua ",
    "Sasou ",
    "Kuai ",
    "Duo ",
    "[?] ",
    "Ji ",
    "Nong ",
    "Mou ",
    "Yo ",
    "Hao ",
    "Yuan ",
    "Long ",
    "Pou ",
    "Mang ",
    "Ge ",
    "E ",
    "Chi ",
    "Shao ",
    "Li ",
    "Na ",
    "Zu ",
    "He ",
    "Ku ",
    "Xiao ",
    "Xian ",
    "Lao ",
    "Bo ",
    "Zhe ",
    "Zha ",
    "Liang ",
    "Ba ",
    "Mie ",
    "Le ",
    "Sui ",
    "Fou ",
    "Bu ",
    "Han ",
    "Heng ",
    "Geng ",
    "Shuo ",
    "Ge "
  ];
  return x54;
}
var x55;
var hasRequiredX55;
function requireX55() {
  if (hasRequiredX55) return x55;
  hasRequiredX55 = 1;
  x55 = [
    "You ",
    "Yan ",
    "Gu ",
    "Gu ",
    "Bai ",
    "Han ",
    "Suo ",
    "Chun ",
    "Yi ",
    "Ai ",
    "Jia ",
    "Tu ",
    "Xian ",
    "Huan ",
    "Li ",
    "Xi ",
    "Tang ",
    "Zuo ",
    "Qiu ",
    "Che ",
    "Wu ",
    "Zao ",
    "Ya ",
    "Dou ",
    "Qi ",
    "Di ",
    "Qin ",
    "Ma ",
    "Mal ",
    "Hong ",
    "Dou ",
    "Kes ",
    "Lao ",
    "Liang ",
    "Suo ",
    "Zao ",
    "Huan ",
    "Lang ",
    "Sha ",
    "Ji ",
    "Zuo ",
    "Wo ",
    "Feng ",
    "Yin ",
    "Hu ",
    "Qi ",
    "Shou ",
    "Wei ",
    "Shua ",
    "Chang ",
    "Er ",
    "Li ",
    "Qiang ",
    "An ",
    "Jie ",
    "Yo ",
    "Nian ",
    "Yu ",
    "Tian ",
    "Lai ",
    "Sha ",
    "Xi ",
    "Tuo ",
    "Hu ",
    "Ai ",
    "Zhou ",
    "Nou ",
    "Ken ",
    "Zhuo ",
    "Zhuo ",
    "Shang ",
    "Di ",
    "Heng ",
    "Lan ",
    "A ",
    "Xiao ",
    "Xiang ",
    "Tun ",
    "Wu ",
    "Wen ",
    "Cui ",
    "Sha ",
    "Hu ",
    "Qi ",
    "Qi ",
    "Tao ",
    "Dan ",
    "Dan ",
    "Ye ",
    "Zi ",
    "Bi ",
    "Cui ",
    "Chuo ",
    "He ",
    "Ya ",
    "Qi ",
    "Zhe ",
    "Pei ",
    "Liang ",
    "Xian ",
    "Pi ",
    "Sha ",
    "La ",
    "Ze ",
    "Qing ",
    "Gua ",
    "Pa ",
    "Zhe ",
    "Se ",
    "Zhuan ",
    "Nie ",
    "Guo ",
    "Luo ",
    "Yan ",
    "Di ",
    "Quan ",
    "Tan ",
    "Bo ",
    "Ding ",
    "Lang ",
    "Xiao ",
    "[?] ",
    "Tang ",
    "Chi ",
    "Ti ",
    "An ",
    "Jiu ",
    "Dan ",
    "Ke ",
    "Yong ",
    "Wei ",
    "Nan ",
    "Shan ",
    "Yu ",
    "Zhe ",
    "La ",
    "Jie ",
    "Hou ",
    "Han ",
    "Die ",
    "Zhou ",
    "Chai ",
    "Wai ",
    "Re ",
    "Yu ",
    "Yin ",
    "Zan ",
    "Yao ",
    "Wo ",
    "Mian ",
    "Hu ",
    "Yun ",
    "Chuan ",
    "Hui ",
    "Huan ",
    "Huan ",
    "Xi ",
    "He ",
    "Ji ",
    "Kui ",
    "Zhong ",
    "Wei ",
    "Sha ",
    "Xu ",
    "Huang ",
    "Du ",
    "Nie ",
    "Xuan ",
    "Liang ",
    "Yu ",
    "Sang ",
    "Chi ",
    "Qiao ",
    "Yan ",
    "Dan ",
    "Pen ",
    "Can ",
    "Li ",
    "Yo ",
    "Zha ",
    "Wei ",
    "Miao ",
    "Ying ",
    "Pen ",
    "Phos ",
    "Kui ",
    "Xi ",
    "Yu ",
    "Jie ",
    "Lou ",
    "Ku ",
    "Sao ",
    "Huo ",
    "Ti ",
    "Yao ",
    "He ",
    "A ",
    "Xiu ",
    "Qiang ",
    "Se ",
    "Yong ",
    "Su ",
    "Hong ",
    "Xie ",
    "Yi ",
    "Suo ",
    "Ma ",
    "Cha ",
    "Hai ",
    "Ke ",
    "Ta ",
    "Sang ",
    "Tian ",
    "Ru ",
    "Sou ",
    "Wa ",
    "Ji ",
    "Pang ",
    "Wu ",
    "Xian ",
    "Shi ",
    "Ge ",
    "Zi ",
    "Jie ",
    "Luo ",
    "Weng ",
    "Wa ",
    "Si ",
    "Chi ",
    "Hao ",
    "Suo ",
    "Jia ",
    "Hai ",
    "Suo ",
    "Qin ",
    "Nie ",
    "He ",
    "Cis ",
    "Sai ",
    "Ng ",
    "Ge ",
    "Na ",
    "Dia ",
    "Ai ",
    "[?] ",
    "Tong ",
    "Bi ",
    "Ao ",
    "Ao ",
    "Lian ",
    "Cui ",
    "Zhe ",
    "Mo ",
    "Sou ",
    "Sou ",
    "Tan "
  ];
  return x55;
}
var x56;
var hasRequiredX56;
function requireX56() {
  if (hasRequiredX56) return x56;
  hasRequiredX56 = 1;
  x56 = [
    "Di ",
    "Qi ",
    "Jiao ",
    "Chong ",
    "Jiao ",
    "Kai ",
    "Tan ",
    "San ",
    "Cao ",
    "Jia ",
    "Ai ",
    "Xiao ",
    "Piao ",
    "Lou ",
    "Ga ",
    "Gu ",
    "Xiao ",
    "Hu ",
    "Hui ",
    "Guo ",
    "Ou ",
    "Xian ",
    "Ze ",
    "Chang ",
    "Xu ",
    "Po ",
    "De ",
    "Ma ",
    "Ma ",
    "Hu ",
    "Lei ",
    "Du ",
    "Ga ",
    "Tang ",
    "Ye ",
    "Beng ",
    "Ying ",
    "Saai ",
    "Jiao ",
    "Mi ",
    "Xiao ",
    "Hua ",
    "Mai ",
    "Ran ",
    "Zuo ",
    "Peng ",
    "Lao ",
    "Xiao ",
    "Ji ",
    "Zhu ",
    "Chao ",
    "Kui ",
    "Zui ",
    "Xiao ",
    "Si ",
    "Hao ",
    "Fu ",
    "Liao ",
    "Qiao ",
    "Xi ",
    "Xiu ",
    "Tan ",
    "Tan ",
    "Mo ",
    "Xun ",
    "E ",
    "Zun ",
    "Fan ",
    "Chi ",
    "Hui ",
    "Zan ",
    "Chuang ",
    "Cu ",
    "Dan ",
    "Yu ",
    "Tun ",
    "Cheng ",
    "Jiao ",
    "Ye ",
    "Xi ",
    "Qi ",
    "Hao ",
    "Lian ",
    "Xu ",
    "Deng ",
    "Hui ",
    "Yin ",
    "Pu ",
    "Jue ",
    "Qin ",
    "Xun ",
    "Nie ",
    "Lu ",
    "Si ",
    "Yan ",
    "Ying ",
    "Da ",
    "Dan ",
    "Yu ",
    "Zhou ",
    "Jin ",
    "Nong ",
    "Yue ",
    "Hui ",
    "Qi ",
    "E ",
    "Zao ",
    "Yi ",
    "Shi ",
    "Jiao ",
    "Yuan ",
    "Ai ",
    "Yong ",
    "Jue ",
    "Kuai ",
    "Yu ",
    "Pen ",
    "Dao ",
    "Ge ",
    "Xin ",
    "Dun ",
    "Dang ",
    "Sin ",
    "Sai ",
    "Pi ",
    "Pi ",
    "Yin ",
    "Zui ",
    "Ning ",
    "Di ",
    "Lan ",
    "Ta ",
    "Huo ",
    "Ru ",
    "Hao ",
    "Xia ",
    "Ya ",
    "Duo ",
    "Xi ",
    "Chou ",
    "Ji ",
    "Jin ",
    "Hao ",
    "Ti ",
    "Chang ",
    "[?] ",
    "[?] ",
    "Ca ",
    "Ti ",
    "Lu ",
    "Hui ",
    "Bo ",
    "You ",
    "Nie ",
    "Yin ",
    "Hu ",
    "Mo ",
    "Huang ",
    "Zhe ",
    "Li ",
    "Liu ",
    "Haai ",
    "Nang ",
    "Xiao ",
    "Mo ",
    "Yan ",
    "Li ",
    "Lu ",
    "Long ",
    "Fu ",
    "Dan ",
    "Chen ",
    "Pin ",
    "Pi ",
    "Xiang ",
    "Huo ",
    "Mo ",
    "Xi ",
    "Duo ",
    "Ku ",
    "Yan ",
    "Chan ",
    "Ying ",
    "Rang ",
    "Dian ",
    "La ",
    "Ta ",
    "Xiao ",
    "Jiao ",
    "Chuo ",
    "Huan ",
    "Huo ",
    "Zhuan ",
    "Nie ",
    "Xiao ",
    "Ca ",
    "Li ",
    "Chan ",
    "Chai ",
    "Li ",
    "Yi ",
    "Luo ",
    "Nang ",
    "Zan ",
    "Su ",
    "Xi ",
    "So ",
    "Jian ",
    "Za ",
    "Zhu ",
    "Lan ",
    "Nie ",
    "Nang ",
    "[?] ",
    "[?] ",
    "Wei ",
    "Hui ",
    "Yin ",
    "Qiu ",
    "Si ",
    "Nin ",
    "Jian ",
    "Hui ",
    "Xin ",
    "Yin ",
    "Nan ",
    "Tuan ",
    "Tuan ",
    "Dun ",
    "Kang ",
    "Yuan ",
    "Jiong ",
    "Pian ",
    "Yun ",
    "Cong ",
    "Hu ",
    "Hui ",
    "Yuan ",
    "You ",
    "Guo ",
    "Kun ",
    "Cong ",
    "Wei ",
    "Tu ",
    "Wei ",
    "Lun ",
    "Guo ",
    "Qun ",
    "Ri ",
    "Ling ",
    "Gu ",
    "Guo ",
    "Tai ",
    "Guo ",
    "Tu ",
    "You "
  ];
  return x56;
}
var x57;
var hasRequiredX57;
function requireX57() {
  if (hasRequiredX57) return x57;
  hasRequiredX57 = 1;
  x57 = [
    "Guo ",
    "Yin ",
    "Hun ",
    "Pu ",
    "Yu ",
    "Han ",
    "Yuan ",
    "Lun ",
    "Quan ",
    "Yu ",
    "Qing ",
    "Guo ",
    "Chuan ",
    "Wei ",
    "Yuan ",
    "Quan ",
    "Ku ",
    "Fu ",
    "Yuan ",
    "Yuan ",
    "E ",
    "Tu ",
    "Tu ",
    "Tu ",
    "Tuan ",
    "Lue ",
    "Hui ",
    "Yi ",
    "Yuan ",
    "Luan ",
    "Luan ",
    "Tu ",
    "Ya ",
    "Tu ",
    "Ting ",
    "Sheng ",
    "Pu ",
    "Lu ",
    "Iri ",
    "Ya ",
    "Zai ",
    "Wei ",
    "Ge ",
    "Yu ",
    "Wu ",
    "Gui ",
    "Pi ",
    "Yi ",
    "Di ",
    "Qian ",
    "Qian ",
    "Zhen ",
    "Zhuo ",
    "Dang ",
    "Qia ",
    "Akutsu ",
    "Yama ",
    "Kuang ",
    "Chang ",
    "Qi ",
    "Nie ",
    "Mo ",
    "Ji ",
    "Jia ",
    "Zhi ",
    "Zhi ",
    "Ban ",
    "Xun ",
    "Tou ",
    "Qin ",
    "Fen ",
    "Jun ",
    "Keng ",
    "Tun ",
    "Fang ",
    "Fen ",
    "Ben ",
    "Tan ",
    "Kan ",
    "Pi ",
    "Zuo ",
    "Keng ",
    "Bi ",
    "Xing ",
    "Di ",
    "Jing ",
    "Ji ",
    "Kuai ",
    "Di ",
    "Jing ",
    "Jian ",
    "Tan ",
    "Li ",
    "Ba ",
    "Wu ",
    "Fen ",
    "Zhui ",
    "Po ",
    "Pan ",
    "Tang ",
    "Kun ",
    "Qu ",
    "Tan ",
    "Zhi ",
    "Tuo ",
    "Gan ",
    "Ping ",
    "Dian ",
    "Gua ",
    "Ni ",
    "Tai ",
    "Pi ",
    "Jiong ",
    "Yang ",
    "Fo ",
    "Ao ",
    "Liu ",
    "Qiu ",
    "Mu ",
    "Ke ",
    "Gou ",
    "Xue ",
    "Ba ",
    "Chi ",
    "Che ",
    "Ling ",
    "Zhu ",
    "Fu ",
    "Hu ",
    "Zhi ",
    "Chui ",
    "La ",
    "Long ",
    "Long ",
    "Lu ",
    "Ao ",
    "Tay ",
    "Pao ",
    "[?] ",
    "Xing ",
    "Dong ",
    "Ji ",
    "Ke ",
    "Lu ",
    "Ci ",
    "Chi ",
    "Lei ",
    "Gai ",
    "Yin ",
    "Hou ",
    "Dui ",
    "Zhao ",
    "Fu ",
    "Guang ",
    "Yao ",
    "Duo ",
    "Duo ",
    "Gui ",
    "Cha ",
    "Yang ",
    "Yin ",
    "Fa ",
    "Gou ",
    "Yuan ",
    "Die ",
    "Xie ",
    "Ken ",
    "Jiong ",
    "Shou ",
    "E ",
    "Ha ",
    "Dian ",
    "Hong ",
    "Wu ",
    "Kua ",
    "[?] ",
    "Tao ",
    "Dang ",
    "Kai ",
    "Gake ",
    "Nao ",
    "An ",
    "Xing ",
    "Xian ",
    "Huan ",
    "Bang ",
    "Pei ",
    "Ba ",
    "Yi ",
    "Yin ",
    "Han ",
    "Xu ",
    "Chui ",
    "Cen ",
    "Geng ",
    "Ai ",
    "Peng ",
    "Fang ",
    "Que ",
    "Yong ",
    "Xun ",
    "Jia ",
    "Di ",
    "Mai ",
    "Lang ",
    "Xuan ",
    "Cheng ",
    "Yan ",
    "Jin ",
    "Zhe ",
    "Lei ",
    "Lie ",
    "Bu ",
    "Cheng ",
    "Gomi ",
    "Bu ",
    "Shi ",
    "Xun ",
    "Guo ",
    "Jiong ",
    "Ye ",
    "Nian ",
    "Di ",
    "Yu ",
    "Bu ",
    "Ya ",
    "Juan ",
    "Sui ",
    "Pi ",
    "Cheng ",
    "Wan ",
    "Ju ",
    "Lun ",
    "Zheng ",
    "Kong ",
    "Chong ",
    "Dong ",
    "Dai ",
    "Tan ",
    "An ",
    "Cai ",
    "Shu ",
    "Beng ",
    "Kan ",
    "Zhi ",
    "Duo ",
    "Yi ",
    "Zhi ",
    "Yi ",
    "Pei ",
    "Ji ",
    "Zhun ",
    "Qi ",
    "Sao ",
    "Ju ",
    "Ni "
  ];
  return x57;
}
var x58;
var hasRequiredX58;
function requireX58() {
  if (hasRequiredX58) return x58;
  hasRequiredX58 = 1;
  x58 = [
    "Ku ",
    "Ke ",
    "Tang ",
    "Kun ",
    "Ni ",
    "Jian ",
    "Dui ",
    "Jin ",
    "Gang ",
    "Yu ",
    "E ",
    "Peng ",
    "Gu ",
    "Tu ",
    "Leng ",
    "[?] ",
    "Ya ",
    "Qian ",
    "[?] ",
    "An ",
    "[?] ",
    "Duo ",
    "Nao ",
    "Tu ",
    "Cheng ",
    "Yin ",
    "Hun ",
    "Bi ",
    "Lian ",
    "Guo ",
    "Die ",
    "Zhuan ",
    "Hou ",
    "Bao ",
    "Bao ",
    "Yu ",
    "Di ",
    "Mao ",
    "Jie ",
    "Ruan ",
    "E ",
    "Geng ",
    "Kan ",
    "Zong ",
    "Yu ",
    "Huang ",
    "E ",
    "Yao ",
    "Yan ",
    "Bao ",
    "Ji ",
    "Mei ",
    "Chang ",
    "Du ",
    "Tuo ",
    "Yin ",
    "Feng ",
    "Zhong ",
    "Jie ",
    "Zhen ",
    "Feng ",
    "Gang ",
    "Chuan ",
    "Jian ",
    "Pyeng ",
    "Toride ",
    "Xiang ",
    "Huang ",
    "Leng ",
    "Duan ",
    "[?] ",
    "Xuan ",
    "Ji ",
    "Ji ",
    "Kuai ",
    "Ying ",
    "Ta ",
    "Cheng ",
    "Yong ",
    "Kai ",
    "Su ",
    "Su ",
    "Shi ",
    "Mi ",
    "Ta ",
    "Weng ",
    "Cheng ",
    "Tu ",
    "Tang ",
    "Que ",
    "Zhong ",
    "Li ",
    "Peng ",
    "Bang ",
    "Sai ",
    "Zang ",
    "Dui ",
    "Tian ",
    "Wu ",
    "Cheng ",
    "Xun ",
    "Ge ",
    "Zhen ",
    "Ai ",
    "Gong ",
    "Yan ",
    "Kan ",
    "Tian ",
    "Yuan ",
    "Wen ",
    "Xie ",
    "Liu ",
    "Ama ",
    "Lang ",
    "Chang ",
    "Peng ",
    "Beng ",
    "Chen ",
    "Cu ",
    "Lu ",
    "Ou ",
    "Qian ",
    "Mei ",
    "Mo ",
    "Zhuan ",
    "Shuang ",
    "Shu ",
    "Lou ",
    "Chi ",
    "Man ",
    "Biao ",
    "Jing ",
    "Qi ",
    "Shu ",
    "Di ",
    "Zhang ",
    "Kan ",
    "Yong ",
    "Dian ",
    "Chen ",
    "Zhi ",
    "Xi ",
    "Guo ",
    "Qiang ",
    "Jin ",
    "Di ",
    "Shang ",
    "Mu ",
    "Cui ",
    "Yan ",
    "Ta ",
    "Zeng ",
    "Qi ",
    "Qiang ",
    "Liang ",
    "[?] ",
    "Zhui ",
    "Qiao ",
    "Zeng ",
    "Xu ",
    "Shan ",
    "Shan ",
    "Ba ",
    "Pu ",
    "Kuai ",
    "Dong ",
    "Fan ",
    "Que ",
    "Mo ",
    "Dun ",
    "Dun ",
    "Dun ",
    "Di ",
    "Sheng ",
    "Duo ",
    "Duo ",
    "Tan ",
    "Deng ",
    "Wu ",
    "Fen ",
    "Huang ",
    "Tan ",
    "Da ",
    "Ye ",
    "Sho ",
    "Mama ",
    "Yu ",
    "Qiang ",
    "Ji ",
    "Qiao ",
    "Ken ",
    "Yi ",
    "Pi ",
    "Bi ",
    "Dian ",
    "Jiang ",
    "Ye ",
    "Yong ",
    "Bo ",
    "Tan ",
    "Lan ",
    "Ju ",
    "Huai ",
    "Dang ",
    "Rang ",
    "Qian ",
    "Xun ",
    "Lan ",
    "Xi ",
    "He ",
    "Ai ",
    "Ya ",
    "Dao ",
    "Hao ",
    "Ruan ",
    "Mama ",
    "Lei ",
    "Kuang ",
    "Lu ",
    "Yan ",
    "Tan ",
    "Wei ",
    "Huai ",
    "Long ",
    "Long ",
    "Rui ",
    "Li ",
    "Lin ",
    "Rang ",
    "Ten ",
    "Xun ",
    "Yan ",
    "Lei ",
    "Ba ",
    "[?] ",
    "Shi ",
    "Ren ",
    "[?] ",
    "Zhuang ",
    "Zhuang ",
    "Sheng ",
    "Yi ",
    "Mai ",
    "Ke ",
    "Zhu ",
    "Zhuang ",
    "Hu ",
    "Hu ",
    "Kun ",
    "Yi ",
    "Hu ",
    "Xu ",
    "Kun ",
    "Shou ",
    "Mang ",
    "Zun "
  ];
  return x58;
}
var x59;
var hasRequiredX59;
function requireX59() {
  if (hasRequiredX59) return x59;
  hasRequiredX59 = 1;
  x59 = [
    "Shou ",
    "Yi ",
    "Zhi ",
    "Gu ",
    "Chu ",
    "Jiang ",
    "Feng ",
    "Bei ",
    "Cay ",
    "Bian ",
    "Sui ",
    "Qun ",
    "Ling ",
    "Fu ",
    "Zuo ",
    "Xia ",
    "Xiong ",
    "[?] ",
    "Nao ",
    "Xia ",
    "Kui ",
    "Xi ",
    "Wai ",
    "Yuan ",
    "Mao ",
    "Su ",
    "Duo ",
    "Duo ",
    "Ye ",
    "Qing ",
    "Uys ",
    "Gou ",
    "Gou ",
    "Qi ",
    "Meng ",
    "Meng ",
    "Yin ",
    "Huo ",
    "Chen ",
    "Da ",
    "Ze ",
    "Tian ",
    "Tai ",
    "Fu ",
    "Guai ",
    "Yao ",
    "Yang ",
    "Hang ",
    "Gao ",
    "Shi ",
    "Ben ",
    "Tai ",
    "Tou ",
    "Yan ",
    "Bi ",
    "Yi ",
    "Kua ",
    "Jia ",
    "Duo ",
    "Kwu ",
    "Kuang ",
    "Yun ",
    "Jia ",
    "Pa ",
    "En ",
    "Lian ",
    "Huan ",
    "Di ",
    "Yan ",
    "Pao ",
    "Quan ",
    "Qi ",
    "Nai ",
    "Feng ",
    "Xie ",
    "Fen ",
    "Dian ",
    "[?] ",
    "Kui ",
    "Zou ",
    "Huan ",
    "Qi ",
    "Kai ",
    "Zha ",
    "Ben ",
    "Yi ",
    "Jiang ",
    "Tao ",
    "Zang ",
    "Ben ",
    "Xi ",
    "Xiang ",
    "Fei ",
    "Diao ",
    "Xun ",
    "Keng ",
    "Dian ",
    "Ao ",
    "She ",
    "Weng ",
    "Pan ",
    "Ao ",
    "Wu ",
    "Ao ",
    "Jiang ",
    "Lian ",
    "Duo ",
    "Yun ",
    "Jiang ",
    "Shi ",
    "Fen ",
    "Huo ",
    "Bi ",
    "Lian ",
    "Duo ",
    "Nu ",
    "Nu ",
    "Ding ",
    "Nai ",
    "Qian ",
    "Jian ",
    "Ta ",
    "Jiu ",
    "Nan ",
    "Cha ",
    "Hao ",
    "Xian ",
    "Fan ",
    "Ji ",
    "Shuo ",
    "Ru ",
    "Fei ",
    "Wang ",
    "Hong ",
    "Zhuang ",
    "Fu ",
    "Ma ",
    "Dan ",
    "Ren ",
    "Fu ",
    "Jing ",
    "Yan ",
    "Xie ",
    "Wen ",
    "Zhong ",
    "Pa ",
    "Du ",
    "Ji ",
    "Keng ",
    "Zhong ",
    "Yao ",
    "Jin ",
    "Yun ",
    "Miao ",
    "Pei ",
    "Shi ",
    "Yue ",
    "Zhuang ",
    "Niu ",
    "Yan ",
    "Na ",
    "Xin ",
    "Fen ",
    "Bi ",
    "Yu ",
    "Tuo ",
    "Feng ",
    "Yuan ",
    "Fang ",
    "Wu ",
    "Yu ",
    "Gui ",
    "Du ",
    "Ba ",
    "Ni ",
    "Zhou ",
    "Zhuo ",
    "Zhao ",
    "Da ",
    "Nai ",
    "Yuan ",
    "Tou ",
    "Xuan ",
    "Zhi ",
    "E ",
    "Mei ",
    "Mo ",
    "Qi ",
    "Bi ",
    "Shen ",
    "Qie ",
    "E ",
    "He ",
    "Xu ",
    "Fa ",
    "Zheng ",
    "Min ",
    "Ban ",
    "Mu ",
    "Fu ",
    "Ling ",
    "Zi ",
    "Zi ",
    "Shi ",
    "Ran ",
    "Shan ",
    "Yang ",
    "Man ",
    "Jie ",
    "Gu ",
    "Si ",
    "Xing ",
    "Wei ",
    "Zi ",
    "Ju ",
    "Shan ",
    "Pin ",
    "Ren ",
    "Yao ",
    "Tong ",
    "Jiang ",
    "Shu ",
    "Ji ",
    "Gai ",
    "Shang ",
    "Kuo ",
    "Juan ",
    "Jiao ",
    "Gou ",
    "Mu ",
    "Jian ",
    "Jian ",
    "Yi ",
    "Nian ",
    "Zhi ",
    "Ji ",
    "Ji ",
    "Xian ",
    "Heng ",
    "Guang ",
    "Jun ",
    "Kua ",
    "Yan ",
    "Ming ",
    "Lie ",
    "Pei ",
    "Yan ",
    "You ",
    "Yan ",
    "Cha ",
    "Shen ",
    "Yin ",
    "Chi ",
    "Gui ",
    "Quan ",
    "Zi "
  ];
  return x59;
}
var x5a;
var hasRequiredX5a;
function requireX5a() {
  if (hasRequiredX5a) return x5a;
  hasRequiredX5a = 1;
  x5a = [
    "Song ",
    "Wei ",
    "Hong ",
    "Wa ",
    "Lou ",
    "Ya ",
    "Rao ",
    "Jiao ",
    "Luan ",
    "Ping ",
    "Xian ",
    "Shao ",
    "Li ",
    "Cheng ",
    "Xiao ",
    "Mang ",
    "Fu ",
    "Suo ",
    "Wu ",
    "Wei ",
    "Ke ",
    "Lai ",
    "Chuo ",
    "Ding ",
    "Niang ",
    "Xing ",
    "Nan ",
    "Yu ",
    "Nuo ",
    "Pei ",
    "Nei ",
    "Juan ",
    "Shen ",
    "Zhi ",
    "Han ",
    "Di ",
    "Zhuang ",
    "E ",
    "Pin ",
    "Tui ",
    "Han ",
    "Mian ",
    "Wu ",
    "Yan ",
    "Wu ",
    "Xi ",
    "Yan ",
    "Yu ",
    "Si ",
    "Yu ",
    "Wa ",
    "[?] ",
    "Xian ",
    "Ju ",
    "Qu ",
    "Shui ",
    "Qi ",
    "Xian ",
    "Zhui ",
    "Dong ",
    "Chang ",
    "Lu ",
    "Ai ",
    "E ",
    "E ",
    "Lou ",
    "Mian ",
    "Cong ",
    "Pou ",
    "Ju ",
    "Po ",
    "Cai ",
    "Ding ",
    "Wan ",
    "Biao ",
    "Xiao ",
    "Shu ",
    "Qi ",
    "Hui ",
    "Fu ",
    "E ",
    "Wo ",
    "Tan ",
    "Fei ",
    "Wei ",
    "Jie ",
    "Tian ",
    "Ni ",
    "Quan ",
    "Jing ",
    "Hun ",
    "Jing ",
    "Qian ",
    "Dian ",
    "Xing ",
    "Hu ",
    "Wa ",
    "Lai ",
    "Bi ",
    "Yin ",
    "Chou ",
    "Chuo ",
    "Fu ",
    "Jing ",
    "Lun ",
    "Yan ",
    "Lan ",
    "Kun ",
    "Yin ",
    "Ya ",
    "Ju ",
    "Li ",
    "Dian ",
    "Xian ",
    "Hwa ",
    "Hua ",
    "Ying ",
    "Chan ",
    "Shen ",
    "Ting ",
    "Dang ",
    "Yao ",
    "Wu ",
    "Nan ",
    "Ruo ",
    "Jia ",
    "Tou ",
    "Xu ",
    "Yu ",
    "Wei ",
    "Ti ",
    "Rou ",
    "Mei ",
    "Dan ",
    "Ruan ",
    "Qin ",
    "Hui ",
    "Wu ",
    "Qian ",
    "Chun ",
    "Mao ",
    "Fu ",
    "Jie ",
    "Duan ",
    "Xi ",
    "Zhong ",
    "Mei ",
    "Huang ",
    "Mian ",
    "An ",
    "Ying ",
    "Xuan ",
    "Jie ",
    "Wei ",
    "Mei ",
    "Yuan ",
    "Zhen ",
    "Qiu ",
    "Ti ",
    "Xie ",
    "Tuo ",
    "Lian ",
    "Mao ",
    "Ran ",
    "Si ",
    "Pian ",
    "Wei ",
    "Wa ",
    "Jiu ",
    "Hu ",
    "Ao ",
    "[?] ",
    "Bou ",
    "Xu ",
    "Tou ",
    "Gui ",
    "Zou ",
    "Yao ",
    "Pi ",
    "Xi ",
    "Yuan ",
    "Ying ",
    "Rong ",
    "Ru ",
    "Chi ",
    "Liu ",
    "Mei ",
    "Pan ",
    "Ao ",
    "Ma ",
    "Gou ",
    "Kui ",
    "Qin ",
    "Jia ",
    "Sao ",
    "Zhen ",
    "Yuan ",
    "Cha ",
    "Yong ",
    "Ming ",
    "Ying ",
    "Ji ",
    "Su ",
    "Niao ",
    "Xian ",
    "Tao ",
    "Pang ",
    "Lang ",
    "Nao ",
    "Bao ",
    "Ai ",
    "Pi ",
    "Pin ",
    "Yi ",
    "Piao ",
    "Yu ",
    "Lei ",
    "Xuan ",
    "Man ",
    "Yi ",
    "Zhang ",
    "Kang ",
    "Yong ",
    "Ni ",
    "Li ",
    "Di ",
    "Gui ",
    "Yan ",
    "Jin ",
    "Zhuan ",
    "Chang ",
    "Ce ",
    "Han ",
    "Nen ",
    "Lao ",
    "Mo ",
    "Zhe ",
    "Hu ",
    "Hu ",
    "Ao ",
    "Nen ",
    "Qiang ",
    "Ma ",
    "Pie ",
    "Gu ",
    "Wu ",
    "Jiao ",
    "Tuo ",
    "Zhan ",
    "Mao ",
    "Xian ",
    "Xian ",
    "Mo ",
    "Liao ",
    "Lian ",
    "Hua "
  ];
  return x5a;
}
var x5b;
var hasRequiredX5b;
function requireX5b() {
  if (hasRequiredX5b) return x5b;
  hasRequiredX5b = 1;
  x5b = [
    "Gui ",
    "Deng ",
    "Zhi ",
    "Xu ",
    "Yi ",
    "Hua ",
    "Xi ",
    "Hui ",
    "Rao ",
    "Xi ",
    "Yan ",
    "Chan ",
    "Jiao ",
    "Mei ",
    "Fan ",
    "Fan ",
    "Xian ",
    "Yi ",
    "Wei ",
    "Jiao ",
    "Fu ",
    "Shi ",
    "Bi ",
    "Shan ",
    "Sui ",
    "Qiang ",
    "Lian ",
    "Huan ",
    "Xin ",
    "Niao ",
    "Dong ",
    "Yi ",
    "Can ",
    "Ai ",
    "Niang ",
    "Neng ",
    "Ma ",
    "Tiao ",
    "Chou ",
    "Jin ",
    "Ci ",
    "Yu ",
    "Pin ",
    "Yong ",
    "Xu ",
    "Nai ",
    "Yan ",
    "Tai ",
    "Ying ",
    "Can ",
    "Niao ",
    "Wo ",
    "Ying ",
    "Mian ",
    "Kaka ",
    "Ma ",
    "Shen ",
    "Xing ",
    "Ni ",
    "Du ",
    "Liu ",
    "Yuan ",
    "Lan ",
    "Yan ",
    "Shuang ",
    "Ling ",
    "Jiao ",
    "Niang ",
    "Lan ",
    "Xian ",
    "Ying ",
    "Shuang ",
    "Shuai ",
    "Quan ",
    "Mi ",
    "Li ",
    "Luan ",
    "Yan ",
    "Zhu ",
    "Lan ",
    "Zi ",
    "Jie ",
    "Jue ",
    "Jue ",
    "Kong ",
    "Yun ",
    "Zi ",
    "Zi ",
    "Cun ",
    "Sun ",
    "Fu ",
    "Bei ",
    "Zi ",
    "Xiao ",
    "Xin ",
    "Meng ",
    "Si ",
    "Tai ",
    "Bao ",
    "Ji ",
    "Gu ",
    "Nu ",
    "Xue ",
    "[?] ",
    "Zhuan ",
    "Hai ",
    "Luan ",
    "Sun ",
    "Huai ",
    "Mie ",
    "Cong ",
    "Qian ",
    "Shu ",
    "Chan ",
    "Ya ",
    "Zi ",
    "Ni ",
    "Fu ",
    "Zi ",
    "Li ",
    "Xue ",
    "Bo ",
    "Ru ",
    "Lai ",
    "Nie ",
    "Nie ",
    "Ying ",
    "Luan ",
    "Mian ",
    "Zhu ",
    "Rong ",
    "Ta ",
    "Gui ",
    "Zhai ",
    "Qiong ",
    "Yu ",
    "Shou ",
    "An ",
    "Tu ",
    "Song ",
    "Wan ",
    "Rou ",
    "Yao ",
    "Hong ",
    "Yi ",
    "Jing ",
    "Zhun ",
    "Mi ",
    "Zhu ",
    "Dang ",
    "Hong ",
    "Zong ",
    "Guan ",
    "Zhou ",
    "Ding ",
    "Wan ",
    "Yi ",
    "Bao ",
    "Shi ",
    "Shi ",
    "Chong ",
    "Shen ",
    "Ke ",
    "Xuan ",
    "Shi ",
    "You ",
    "Huan ",
    "Yi ",
    "Tiao ",
    "Shi ",
    "Xian ",
    "Gong ",
    "Cheng ",
    "Qun ",
    "Gong ",
    "Xiao ",
    "Zai ",
    "Zha ",
    "Bao ",
    "Hai ",
    "Yan ",
    "Xiao ",
    "Jia ",
    "Shen ",
    "Chen ",
    "Rong ",
    "Huang ",
    "Mi ",
    "Kou ",
    "Kuan ",
    "Bin ",
    "Su ",
    "Cai ",
    "Zan ",
    "Ji ",
    "Yuan ",
    "Ji ",
    "Yin ",
    "Mi ",
    "Kou ",
    "Qing ",
    "Que ",
    "Zhen ",
    "Jian ",
    "Fu ",
    "Ning ",
    "Bing ",
    "Huan ",
    "Mei ",
    "Qin ",
    "Han ",
    "Yu ",
    "Shi ",
    "Ning ",
    "Qin ",
    "Ning ",
    "Zhi ",
    "Yu ",
    "Bao ",
    "Kuan ",
    "Ning ",
    "Qin ",
    "Mo ",
    "Cha ",
    "Ju ",
    "Gua ",
    "Qin ",
    "Hu ",
    "Wu ",
    "Liao ",
    "Shi ",
    "Zhu ",
    "Zhai ",
    "Shen ",
    "Wei ",
    "Xie ",
    "Kuan ",
    "Hui ",
    "Liao ",
    "Jun ",
    "Huan ",
    "Yi ",
    "Yi ",
    "Bao ",
    "Qin ",
    "Chong ",
    "Bao ",
    "Feng ",
    "Cun ",
    "Dui ",
    "Si ",
    "Xun ",
    "Dao ",
    "Lu ",
    "Dui ",
    "Shou "
  ];
  return x5b;
}
var x5c;
var hasRequiredX5c;
function requireX5c() {
  if (hasRequiredX5c) return x5c;
  hasRequiredX5c = 1;
  x5c = [
    "Po ",
    "Feng ",
    "Zhuan ",
    "Fu ",
    "She ",
    "Ke ",
    "Jiang ",
    "Jiang ",
    "Zhuan ",
    "Wei ",
    "Zun ",
    "Xun ",
    "Shu ",
    "Dui ",
    "Dao ",
    "Xiao ",
    "Ji ",
    "Shao ",
    "Er ",
    "Er ",
    "Er ",
    "Ga ",
    "Jian ",
    "Shu ",
    "Chen ",
    "Shang ",
    "Shang ",
    "Mo ",
    "Ga ",
    "Chang ",
    "Liao ",
    "Xian ",
    "Xian ",
    "[?] ",
    "Wang ",
    "Wang ",
    "You ",
    "Liao ",
    "Liao ",
    "Yao ",
    "Mang ",
    "Wang ",
    "Wang ",
    "Wang ",
    "Ga ",
    "Yao ",
    "Duo ",
    "Kui ",
    "Zhong ",
    "Jiu ",
    "Gan ",
    "Gu ",
    "Gan ",
    "Tui ",
    "Gan ",
    "Gan ",
    "Shi ",
    "Yin ",
    "Chi ",
    "Kao ",
    "Ni ",
    "Jin ",
    "Wei ",
    "Niao ",
    "Ju ",
    "Pi ",
    "Ceng ",
    "Xi ",
    "Bi ",
    "Ju ",
    "Jie ",
    "Tian ",
    "Qu ",
    "Ti ",
    "Jie ",
    "Wu ",
    "Diao ",
    "Shi ",
    "Shi ",
    "Ping ",
    "Ji ",
    "Xie ",
    "Chen ",
    "Xi ",
    "Ni ",
    "Zhan ",
    "Xi ",
    "[?] ",
    "Man ",
    "E ",
    "Lou ",
    "Ping ",
    "Ti ",
    "Fei ",
    "Shu ",
    "Xie ",
    "Tu ",
    "Lu ",
    "Lu ",
    "Xi ",
    "Ceng ",
    "Lu ",
    "Ju ",
    "Xie ",
    "Ju ",
    "Jue ",
    "Liao ",
    "Jue ",
    "Shu ",
    "Xi ",
    "Che ",
    "Tun ",
    "Ni ",
    "Shan ",
    "[?] ",
    "Xian ",
    "Li ",
    "Xue ",
    "Nata ",
    "[?] ",
    "Long ",
    "Yi ",
    "Qi ",
    "Ren ",
    "Wu ",
    "Han ",
    "Shen ",
    "Yu ",
    "Chu ",
    "Sui ",
    "Qi ",
    "[?] ",
    "Yue ",
    "Ban ",
    "Yao ",
    "Ang ",
    "Ya ",
    "Wu ",
    "Jie ",
    "E ",
    "Ji ",
    "Qian ",
    "Fen ",
    "Yuan ",
    "Qi ",
    "Cen ",
    "Qian ",
    "Qi ",
    "Cha ",
    "Jie ",
    "Qu ",
    "Gang ",
    "Xian ",
    "Ao ",
    "Lan ",
    "Dao ",
    "Ba ",
    "Zuo ",
    "Zuo ",
    "Yang ",
    "Ju ",
    "Gang ",
    "Ke ",
    "Gou ",
    "Xue ",
    "Bei ",
    "Li ",
    "Tiao ",
    "Ju ",
    "Yan ",
    "Fu ",
    "Xiu ",
    "Jia ",
    "Ling ",
    "Tuo ",
    "Pei ",
    "You ",
    "Dai ",
    "Kuang ",
    "Yue ",
    "Qu ",
    "Hu ",
    "Po ",
    "Min ",
    "An ",
    "Tiao ",
    "Ling ",
    "Chi ",
    "Yuri ",
    "Dong ",
    "Cem ",
    "Kui ",
    "Xiu ",
    "Mao ",
    "Tong ",
    "Xue ",
    "Yi ",
    "Kura ",
    "He ",
    "Ke ",
    "Luo ",
    "E ",
    "Fu ",
    "Xun ",
    "Die ",
    "Lu ",
    "An ",
    "Er ",
    "Gai ",
    "Quan ",
    "Tong ",
    "Yi ",
    "Mu ",
    "Shi ",
    "An ",
    "Wei ",
    "Hu ",
    "Zhi ",
    "Mi ",
    "Li ",
    "Ji ",
    "Tong ",
    "Wei ",
    "You ",
    "Sang ",
    "Xia ",
    "Li ",
    "Yao ",
    "Jiao ",
    "Zheng ",
    "Luan ",
    "Jiao ",
    "E ",
    "E ",
    "Yu ",
    "Ye ",
    "Bu ",
    "Qiao ",
    "Qun ",
    "Feng ",
    "Feng ",
    "Nao ",
    "Li ",
    "You ",
    "Xian ",
    "Hong ",
    "Dao ",
    "Shen ",
    "Cheng ",
    "Tu ",
    "Geng ",
    "Jun ",
    "Hao ",
    "Xia ",
    "Yin ",
    "Yu "
  ];
  return x5c;
}
var x5d;
var hasRequiredX5d;
function requireX5d() {
  if (hasRequiredX5d) return x5d;
  hasRequiredX5d = 1;
  x5d = [
    "Lang ",
    "Kan ",
    "Lao ",
    "Lai ",
    "Xian ",
    "Que ",
    "Kong ",
    "Chong ",
    "Chong ",
    "Ta ",
    "Lin ",
    "Hua ",
    "Ju ",
    "Lai ",
    "Qi ",
    "Min ",
    "Kun ",
    "Kun ",
    "Zu ",
    "Gu ",
    "Cui ",
    "Ya ",
    "Ya ",
    "Gang ",
    "Lun ",
    "Lun ",
    "Leng ",
    "Jue ",
    "Duo ",
    "Zheng ",
    "Guo ",
    "Yin ",
    "Dong ",
    "Han ",
    "Zheng ",
    "Wei ",
    "Yao ",
    "Pi ",
    "Yan ",
    "Song ",
    "Jie ",
    "Beng ",
    "Zu ",
    "Jue ",
    "Dong ",
    "Zhan ",
    "Gu ",
    "Yin ",
    "[?] ",
    "Ze ",
    "Huang ",
    "Yu ",
    "Wei ",
    "Yang ",
    "Feng ",
    "Qiu ",
    "Dun ",
    "Ti ",
    "Yi ",
    "Zhi ",
    "Shi ",
    "Zai ",
    "Yao ",
    "E ",
    "Zhu ",
    "Kan ",
    "Lu ",
    "Yan ",
    "Mei ",
    "Gan ",
    "Ji ",
    "Ji ",
    "Huan ",
    "Ting ",
    "Sheng ",
    "Mei ",
    "Qian ",
    "Wu ",
    "Yu ",
    "Zong ",
    "Lan ",
    "Jue ",
    "Yan ",
    "Yan ",
    "Wei ",
    "Zong ",
    "Cha ",
    "Sui ",
    "Rong ",
    "Yamashina ",
    "Qin ",
    "Yu ",
    "Kewashii ",
    "Lou ",
    "Tu ",
    "Dui ",
    "Xi ",
    "Weng ",
    "Cang ",
    "Dang ",
    "Hong ",
    "Jie ",
    "Ai ",
    "Liu ",
    "Wu ",
    "Song ",
    "Qiao ",
    "Zi ",
    "Wei ",
    "Beng ",
    "Dian ",
    "Cuo ",
    "Qian ",
    "Yong ",
    "Nie ",
    "Cuo ",
    "Ji ",
    "[?] ",
    "Tao ",
    "Song ",
    "Zong ",
    "Jiang ",
    "Liao ",
    "Kang ",
    "Chan ",
    "Die ",
    "Cen ",
    "Ding ",
    "Tu ",
    "Lou ",
    "Zhang ",
    "Zhan ",
    "Zhan ",
    "Ao ",
    "Cao ",
    "Qu ",
    "Qiang ",
    "Zui ",
    "Zui ",
    "Dao ",
    "Dao ",
    "Xi ",
    "Yu ",
    "Bo ",
    "Long ",
    "Xiang ",
    "Ceng ",
    "Bo ",
    "Qin ",
    "Jiao ",
    "Yan ",
    "Lao ",
    "Zhan ",
    "Lin ",
    "Liao ",
    "Liao ",
    "Jin ",
    "Deng ",
    "Duo ",
    "Zun ",
    "Jiao ",
    "Gui ",
    "Yao ",
    "Qiao ",
    "Yao ",
    "Jue ",
    "Zhan ",
    "Yi ",
    "Xue ",
    "Nao ",
    "Ye ",
    "Ye ",
    "Yi ",
    "E ",
    "Xian ",
    "Ji ",
    "Xie ",
    "Ke ",
    "Xi ",
    "Di ",
    "Ao ",
    "Zui ",
    "[?] ",
    "Ni ",
    "Rong ",
    "Dao ",
    "Ling ",
    "Za ",
    "Yu ",
    "Yue ",
    "Yin ",
    "[?] ",
    "Jie ",
    "Li ",
    "Sui ",
    "Long ",
    "Long ",
    "Dian ",
    "Ying ",
    "Xi ",
    "Ju ",
    "Chan ",
    "Ying ",
    "Kui ",
    "Yan ",
    "Wei ",
    "Nao ",
    "Quan ",
    "Chao ",
    "Cuan ",
    "Luan ",
    "Dian ",
    "Dian ",
    "[?] ",
    "Yan ",
    "Yan ",
    "Yan ",
    "Nao ",
    "Yan ",
    "Chuan ",
    "Gui ",
    "Chuan ",
    "Zhou ",
    "Huang ",
    "Jing ",
    "Xun ",
    "Chao ",
    "Chao ",
    "Lie ",
    "Gong ",
    "Zuo ",
    "Qiao ",
    "Ju ",
    "Gong ",
    "Kek ",
    "Wu ",
    "Pwu ",
    "Pwu ",
    "Chai ",
    "Qiu ",
    "Qiu ",
    "Ji ",
    "Yi ",
    "Si ",
    "Ba ",
    "Zhi ",
    "Zhao ",
    "Xiang ",
    "Yi ",
    "Jin ",
    "Xun ",
    "Juan ",
    "Phas ",
    "Xun ",
    "Jin ",
    "Fu "
  ];
  return x5d;
}
var x5e;
var hasRequiredX5e;
function requireX5e() {
  if (hasRequiredX5e) return x5e;
  hasRequiredX5e = 1;
  x5e = [
    "Za ",
    "Bi ",
    "Shi ",
    "Bu ",
    "Ding ",
    "Shuai ",
    "Fan ",
    "Nie ",
    "Shi ",
    "Fen ",
    "Pa ",
    "Zhi ",
    "Xi ",
    "Hu ",
    "Dan ",
    "Wei ",
    "Zhang ",
    "Tang ",
    "Dai ",
    "Ma ",
    "Pei ",
    "Pa ",
    "Tie ",
    "Fu ",
    "Lian ",
    "Zhi ",
    "Zhou ",
    "Bo ",
    "Zhi ",
    "Di ",
    "Mo ",
    "Yi ",
    "Yi ",
    "Ping ",
    "Qia ",
    "Juan ",
    "Ru ",
    "Shuai ",
    "Dai ",
    "Zheng ",
    "Shui ",
    "Qiao ",
    "Zhen ",
    "Shi ",
    "Qun ",
    "Xi ",
    "Bang ",
    "Dai ",
    "Gui ",
    "Chou ",
    "Ping ",
    "Zhang ",
    "Sha ",
    "Wan ",
    "Dai ",
    "Wei ",
    "Chang ",
    "Sha ",
    "Qi ",
    "Ze ",
    "Guo ",
    "Mao ",
    "Du ",
    "Hou ",
    "Zheng ",
    "Xu ",
    "Mi ",
    "Wei ",
    "Wo ",
    "Fu ",
    "Yi ",
    "Bang ",
    "Ping ",
    "Tazuna ",
    "Gong ",
    "Pan ",
    "Huang ",
    "Dao ",
    "Mi ",
    "Jia ",
    "Teng ",
    "Hui ",
    "Zhong ",
    "Shan ",
    "Man ",
    "Mu ",
    "Biao ",
    "Guo ",
    "Ze ",
    "Mu ",
    "Bang ",
    "Zhang ",
    "Jiong ",
    "Chan ",
    "Fu ",
    "Zhi ",
    "Hu ",
    "Fan ",
    "Chuang ",
    "Bi ",
    "Hei ",
    "[?] ",
    "Mi ",
    "Qiao ",
    "Chan ",
    "Fen ",
    "Meng ",
    "Bang ",
    "Chou ",
    "Mie ",
    "Chu ",
    "Jie ",
    "Xian ",
    "Lan ",
    "Gan ",
    "Ping ",
    "Nian ",
    "Qian ",
    "Bing ",
    "Bing ",
    "Xing ",
    "Gan ",
    "Yao ",
    "Huan ",
    "You ",
    "You ",
    "Ji ",
    "Yan ",
    "Pi ",
    "Ting ",
    "Ze ",
    "Guang ",
    "Zhuang ",
    "Mo ",
    "Qing ",
    "Bi ",
    "Qin ",
    "Dun ",
    "Chuang ",
    "Gui ",
    "Ya ",
    "Bai ",
    "Jie ",
    "Xu ",
    "Lu ",
    "Wu ",
    "[?] ",
    "Ku ",
    "Ying ",
    "Di ",
    "Pao ",
    "Dian ",
    "Ya ",
    "Miao ",
    "Geng ",
    "Ci ",
    "Fu ",
    "Tong ",
    "Pang ",
    "Fei ",
    "Xiang ",
    "Yi ",
    "Zhi ",
    "Tiao ",
    "Zhi ",
    "Xiu ",
    "Du ",
    "Zuo ",
    "Xiao ",
    "Tu ",
    "Gui ",
    "Ku ",
    "Pang ",
    "Ting ",
    "You ",
    "Bu ",
    "Ding ",
    "Cheng ",
    "Lai ",
    "Bei ",
    "Ji ",
    "An ",
    "Shu ",
    "Kang ",
    "Yong ",
    "Tuo ",
    "Song ",
    "Shu ",
    "Qing ",
    "Yu ",
    "Yu ",
    "Miao ",
    "Sou ",
    "Ce ",
    "Xiang ",
    "Fei ",
    "Jiu ",
    "He ",
    "Hui ",
    "Liu ",
    "Sha ",
    "Lian ",
    "Lang ",
    "Sou ",
    "Jian ",
    "Pou ",
    "Qing ",
    "Jiu ",
    "Jiu ",
    "Qin ",
    "Ao ",
    "Kuo ",
    "Lou ",
    "Yin ",
    "Liao ",
    "Dai ",
    "Lu ",
    "Yi ",
    "Chu ",
    "Chan ",
    "Tu ",
    "Si ",
    "Xin ",
    "Miao ",
    "Chang ",
    "Wu ",
    "Fei ",
    "Guang ",
    "Koc ",
    "Kuai ",
    "Bi ",
    "Qiang ",
    "Xie ",
    "Lin ",
    "Lin ",
    "Liao ",
    "Lu ",
    "[?] ",
    "Ying ",
    "Xian ",
    "Ting ",
    "Yong ",
    "Li ",
    "Ting ",
    "Yin ",
    "Xun ",
    "Yan ",
    "Ting ",
    "Di ",
    "Po ",
    "Jian ",
    "Hui ",
    "Nai ",
    "Hui ",
    "Gong ",
    "Nian "
  ];
  return x5e;
}
var x5f;
var hasRequiredX5f;
function requireX5f() {
  if (hasRequiredX5f) return x5f;
  hasRequiredX5f = 1;
  x5f = [
    "Kai ",
    "Bian ",
    "Yi ",
    "Qi ",
    "Nong ",
    "Fen ",
    "Ju ",
    "Yan ",
    "Yi ",
    "Zang ",
    "Bi ",
    "Yi ",
    "Yi ",
    "Er ",
    "San ",
    "Shi ",
    "Er ",
    "Shi ",
    "Shi ",
    "Gong ",
    "Diao ",
    "Yin ",
    "Hu ",
    "Fu ",
    "Hong ",
    "Wu ",
    "Tui ",
    "Chi ",
    "Jiang ",
    "Ba ",
    "Shen ",
    "Di ",
    "Zhang ",
    "Jue ",
    "Tao ",
    "Fu ",
    "Di ",
    "Mi ",
    "Xian ",
    "Hu ",
    "Chao ",
    "Nu ",
    "Jing ",
    "Zhen ",
    "Yi ",
    "Mi ",
    "Quan ",
    "Wan ",
    "Shao ",
    "Ruo ",
    "Xuan ",
    "Jing ",
    "Dun ",
    "Zhang ",
    "Jiang ",
    "Qiang ",
    "Peng ",
    "Dan ",
    "Qiang ",
    "Bi ",
    "Bi ",
    "She ",
    "Dan ",
    "Jian ",
    "Gou ",
    "Sei ",
    "Fa ",
    "Bi ",
    "Kou ",
    "Nagi ",
    "Bie ",
    "Xiao ",
    "Dan ",
    "Kuo ",
    "Qiang ",
    "Hong ",
    "Mi ",
    "Kuo ",
    "Wan ",
    "Jue ",
    "Ji ",
    "Ji ",
    "Gui ",
    "Dang ",
    "Lu ",
    "Lu ",
    "Tuan ",
    "Hui ",
    "Zhi ",
    "Hui ",
    "Hui ",
    "Yi ",
    "Yi ",
    "Yi ",
    "Yi ",
    "Huo ",
    "Huo ",
    "Shan ",
    "Xing ",
    "Wen ",
    "Tong ",
    "Yan ",
    "Yan ",
    "Yu ",
    "Chi ",
    "Cai ",
    "Biao ",
    "Diao ",
    "Bin ",
    "Peng ",
    "Yong ",
    "Piao ",
    "Zhang ",
    "Ying ",
    "Chi ",
    "Chi ",
    "Zhuo ",
    "Tuo ",
    "Ji ",
    "Pang ",
    "Zhong ",
    "Yi ",
    "Wang ",
    "Che ",
    "Bi ",
    "Chi ",
    "Ling ",
    "Fu ",
    "Wang ",
    "Zheng ",
    "Cu ",
    "Wang ",
    "Jing ",
    "Dai ",
    "Xi ",
    "Xun ",
    "Hen ",
    "Yang ",
    "Huai ",
    "Lu ",
    "Hou ",
    "Wa ",
    "Cheng ",
    "Zhi ",
    "Xu ",
    "Jing ",
    "Tu ",
    "Cong ",
    "[?] ",
    "Lai ",
    "Cong ",
    "De ",
    "Pai ",
    "Xi ",
    "[?] ",
    "Qi ",
    "Chang ",
    "Zhi ",
    "Cong ",
    "Zhou ",
    "Lai ",
    "Yu ",
    "Xie ",
    "Jie ",
    "Jian ",
    "Chi ",
    "Jia ",
    "Bian ",
    "Huang ",
    "Fu ",
    "Xun ",
    "Wei ",
    "Pang ",
    "Yao ",
    "Wei ",
    "Xi ",
    "Zheng ",
    "Piao ",
    "Chi ",
    "De ",
    "Zheng ",
    "Zheng ",
    "Bie ",
    "De ",
    "Chong ",
    "Che ",
    "Jiao ",
    "Wei ",
    "Jiao ",
    "Hui ",
    "Mei ",
    "Long ",
    "Xiang ",
    "Bao ",
    "Qu ",
    "Xin ",
    "Shu ",
    "Bi ",
    "Yi ",
    "Le ",
    "Ren ",
    "Dao ",
    "Ding ",
    "Gai ",
    "Ji ",
    "Ren ",
    "Ren ",
    "Chan ",
    "Tan ",
    "Te ",
    "Te ",
    "Gan ",
    "Qi ",
    "Shi ",
    "Cun ",
    "Zhi ",
    "Wang ",
    "Mang ",
    "Xi ",
    "Fan ",
    "Ying ",
    "Tian ",
    "Min ",
    "Min ",
    "Zhong ",
    "Chong ",
    "Wu ",
    "Ji ",
    "Wu ",
    "Xi ",
    "Ye ",
    "You ",
    "Wan ",
    "Cong ",
    "Zhong ",
    "Kuai ",
    "Yu ",
    "Bian ",
    "Zhi ",
    "Qi ",
    "Cui ",
    "Chen ",
    "Tai ",
    "Tun ",
    "Qian ",
    "Nian ",
    "Hun ",
    "Xiong ",
    "Niu ",
    "Wang ",
    "Xian ",
    "Xin ",
    "Kang ",
    "Hu ",
    "Kai ",
    "Fen "
  ];
  return x5f;
}
var x60;
var hasRequiredX60;
function requireX60() {
  if (hasRequiredX60) return x60;
  hasRequiredX60 = 1;
  x60 = [
    "Huai ",
    "Tai ",
    "Song ",
    "Wu ",
    "Ou ",
    "Chang ",
    "Chuang ",
    "Ju ",
    "Yi ",
    "Bao ",
    "Chao ",
    "Min ",
    "Pei ",
    "Zuo ",
    "Zen ",
    "Yang ",
    "Kou ",
    "Ban ",
    "Nu ",
    "Nao ",
    "Zheng ",
    "Pa ",
    "Bu ",
    "Tie ",
    "Gu ",
    "Hu ",
    "Ju ",
    "Da ",
    "Lian ",
    "Si ",
    "Chou ",
    "Di ",
    "Dai ",
    "Yi ",
    "Tu ",
    "You ",
    "Fu ",
    "Ji ",
    "Peng ",
    "Xing ",
    "Yuan ",
    "Ni ",
    "Guai ",
    "Fu ",
    "Xi ",
    "Bi ",
    "You ",
    "Qie ",
    "Xuan ",
    "Cong ",
    "Bing ",
    "Huang ",
    "Xu ",
    "Chu ",
    "Pi ",
    "Xi ",
    "Xi ",
    "Tan ",
    "Koraeru ",
    "Zong ",
    "Dui ",
    "[?] ",
    "Ki ",
    "Yi ",
    "Chi ",
    "Ren ",
    "Xun ",
    "Shi ",
    "Xi ",
    "Lao ",
    "Heng ",
    "Kuang ",
    "Mu ",
    "Zhi ",
    "Xie ",
    "Lian ",
    "Tiao ",
    "Huang ",
    "Die ",
    "Hao ",
    "Kong ",
    "Gui ",
    "Heng ",
    "Xi ",
    "Xiao ",
    "Shu ",
    "S ",
    "Kua ",
    "Qiu ",
    "Yang ",
    "Hui ",
    "Hui ",
    "Chi ",
    "Jia ",
    "Yi ",
    "Xiong ",
    "Guai ",
    "Lin ",
    "Hui ",
    "Zi ",
    "Xu ",
    "Chi ",
    "Xiang ",
    "Nu ",
    "Hen ",
    "En ",
    "Ke ",
    "Tong ",
    "Tian ",
    "Gong ",
    "Quan ",
    "Xi ",
    "Qia ",
    "Yue ",
    "Peng ",
    "Ken ",
    "De ",
    "Hui ",
    "E ",
    "Kyuu ",
    "Tong ",
    "Yan ",
    "Kai ",
    "Ce ",
    "Nao ",
    "Yun ",
    "Mang ",
    "Yong ",
    "Yong ",
    "Yuan ",
    "Pi ",
    "Kun ",
    "Qiao ",
    "Yue ",
    "Yu ",
    "Yu ",
    "Jie ",
    "Xi ",
    "Zhe ",
    "Lin ",
    "Ti ",
    "Han ",
    "Hao ",
    "Qie ",
    "Ti ",
    "Bu ",
    "Yi ",
    "Qian ",
    "Hui ",
    "Xi ",
    "Bei ",
    "Man ",
    "Yi ",
    "Heng ",
    "Song ",
    "Quan ",
    "Cheng ",
    "Hui ",
    "Wu ",
    "Wu ",
    "You ",
    "Li ",
    "Liang ",
    "Huan ",
    "Cong ",
    "Yi ",
    "Yue ",
    "Li ",
    "Nin ",
    "Nao ",
    "E ",
    "Que ",
    "Xuan ",
    "Qian ",
    "Wu ",
    "Min ",
    "Cong ",
    "Fei ",
    "Bei ",
    "Duo ",
    "Cui ",
    "Chang ",
    "Men ",
    "Li ",
    "Ji ",
    "Guan ",
    "Guan ",
    "Xing ",
    "Dao ",
    "Qi ",
    "Kong ",
    "Tian ",
    "Lun ",
    "Xi ",
    "Kan ",
    "Kun ",
    "Ni ",
    "Qing ",
    "Chou ",
    "Dun ",
    "Guo ",
    "Chan ",
    "Liang ",
    "Wan ",
    "Yuan ",
    "Jin ",
    "Ji ",
    "Lin ",
    "Yu ",
    "Huo ",
    "He ",
    "Quan ",
    "Tan ",
    "Ti ",
    "Ti ",
    "Nie ",
    "Wang ",
    "Chuo ",
    "Bu ",
    "Hun ",
    "Xi ",
    "Tang ",
    "Xin ",
    "Wei ",
    "Hui ",
    "E ",
    "Rui ",
    "Zong ",
    "Jian ",
    "Yong ",
    "Dian ",
    "Ju ",
    "Can ",
    "Cheng ",
    "De ",
    "Bei ",
    "Qie ",
    "Can ",
    "Dan ",
    "Guan ",
    "Duo ",
    "Nao ",
    "Yun ",
    "Xiang ",
    "Zhui ",
    "Die ",
    "Huang ",
    "Chun ",
    "Qiong ",
    "Re ",
    "Xing ",
    "Ce ",
    "Bian ",
    "Hun ",
    "Zong ",
    "Ti "
  ];
  return x60;
}
var x61;
var hasRequiredX61;
function requireX61() {
  if (hasRequiredX61) return x61;
  hasRequiredX61 = 1;
  x61 = [
    "Qiao ",
    "Chou ",
    "Bei ",
    "Xuan ",
    "Wei ",
    "Ge ",
    "Qian ",
    "Wei ",
    "Yu ",
    "Yu ",
    "Bi ",
    "Xuan ",
    "Huan ",
    "Min ",
    "Bi ",
    "Yi ",
    "Mian ",
    "Yong ",
    "Kai ",
    "Dang ",
    "Yin ",
    "E ",
    "Chen ",
    "Mou ",
    "Ke ",
    "Ke ",
    "Yu ",
    "Ai ",
    "Qie ",
    "Yan ",
    "Nuo ",
    "Gan ",
    "Yun ",
    "Zong ",
    "Sai ",
    "Leng ",
    "Fen ",
    "[?] ",
    "Kui ",
    "Kui ",
    "Que ",
    "Gong ",
    "Yun ",
    "Su ",
    "Su ",
    "Qi ",
    "Yao ",
    "Song ",
    "Huang ",
    "Ji ",
    "Gu ",
    "Ju ",
    "Chuang ",
    "Ni ",
    "Xie ",
    "Kai ",
    "Zheng ",
    "Yong ",
    "Cao ",
    "Sun ",
    "Shen ",
    "Bo ",
    "Kai ",
    "Yuan ",
    "Xie ",
    "Hun ",
    "Yong ",
    "Yang ",
    "Li ",
    "Sao ",
    "Tao ",
    "Yin ",
    "Ci ",
    "Xu ",
    "Qian ",
    "Tai ",
    "Huang ",
    "Yun ",
    "Shen ",
    "Ming ",
    "[?] ",
    "She ",
    "Cong ",
    "Piao ",
    "Mo ",
    "Mu ",
    "Guo ",
    "Chi ",
    "Can ",
    "Can ",
    "Can ",
    "Cui ",
    "Min ",
    "Te ",
    "Zhang ",
    "Tong ",
    "Ao ",
    "Shuang ",
    "Man ",
    "Guan ",
    "Que ",
    "Zao ",
    "Jiu ",
    "Hui ",
    "Kai ",
    "Lian ",
    "Ou ",
    "Song ",
    "Jin ",
    "Yin ",
    "Lu ",
    "Shang ",
    "Wei ",
    "Tuan ",
    "Man ",
    "Qian ",
    "She ",
    "Yong ",
    "Qing ",
    "Kang ",
    "Di ",
    "Zhi ",
    "Lou ",
    "Juan ",
    "Qi ",
    "Qi ",
    "Yu ",
    "Ping ",
    "Liao ",
    "Cong ",
    "You ",
    "Chong ",
    "Zhi ",
    "Tong ",
    "Cheng ",
    "Qi ",
    "Qu ",
    "Peng ",
    "Bei ",
    "Bie ",
    "Chun ",
    "Jiao ",
    "Zeng ",
    "Chi ",
    "Lian ",
    "Ping ",
    "Kui ",
    "Hui ",
    "Qiao ",
    "Cheng ",
    "Yin ",
    "Yin ",
    "Xi ",
    "Xi ",
    "Dan ",
    "Tan ",
    "Duo ",
    "Dui ",
    "Dui ",
    "Su ",
    "Jue ",
    "Ce ",
    "Xiao ",
    "Fan ",
    "Fen ",
    "Lao ",
    "Lao ",
    "Chong ",
    "Han ",
    "Qi ",
    "Xian ",
    "Min ",
    "Jing ",
    "Liao ",
    "Wu ",
    "Can ",
    "Jue ",
    "Cu ",
    "Xian ",
    "Tan ",
    "Sheng ",
    "Pi ",
    "Yi ",
    "Chu ",
    "Xian ",
    "Nao ",
    "Dan ",
    "Tan ",
    "Jing ",
    "Song ",
    "Han ",
    "Jiao ",
    "Wai ",
    "Huan ",
    "Dong ",
    "Qin ",
    "Qin ",
    "Qu ",
    "Cao ",
    "Ken ",
    "Xie ",
    "Ying ",
    "Ao ",
    "Mao ",
    "Yi ",
    "Lin ",
    "Se ",
    "Jun ",
    "Huai ",
    "Men ",
    "Lan ",
    "Ai ",
    "Lin ",
    "Yan ",
    "Gua ",
    "Xia ",
    "Chi ",
    "Yu ",
    "Yin ",
    "Dai ",
    "Meng ",
    "Ai ",
    "Meng ",
    "Dui ",
    "Qi ",
    "Mo ",
    "Lan ",
    "Men ",
    "Chou ",
    "Zhi ",
    "Nuo ",
    "Nuo ",
    "Yan ",
    "Yang ",
    "Bo ",
    "Zhi ",
    "Kuang ",
    "Kuang ",
    "You ",
    "Fu ",
    "Liu ",
    "Mie ",
    "Cheng ",
    "[?] ",
    "Chan ",
    "Meng ",
    "Lan ",
    "Huai ",
    "Xuan ",
    "Rang ",
    "Chan ",
    "Ji ",
    "Ju ",
    "Huan ",
    "She ",
    "Yi "
  ];
  return x61;
}
var x62;
var hasRequiredX62;
function requireX62() {
  if (hasRequiredX62) return x62;
  hasRequiredX62 = 1;
  x62 = [
    "Lian ",
    "Nan ",
    "Mi ",
    "Tang ",
    "Jue ",
    "Gang ",
    "Gang ",
    "Gang ",
    "Ge ",
    "Yue ",
    "Wu ",
    "Jian ",
    "Xu ",
    "Shu ",
    "Rong ",
    "Xi ",
    "Cheng ",
    "Wo ",
    "Jie ",
    "Ge ",
    "Jian ",
    "Qiang ",
    "Huo ",
    "Qiang ",
    "Zhan ",
    "Dong ",
    "Qi ",
    "Jia ",
    "Die ",
    "Zei ",
    "Jia ",
    "Ji ",
    "Shi ",
    "Kan ",
    "Ji ",
    "Kui ",
    "Gai ",
    "Deng ",
    "Zhan ",
    "Chuang ",
    "Ge ",
    "Jian ",
    "Jie ",
    "Yu ",
    "Jian ",
    "Yan ",
    "Lu ",
    "Xi ",
    "Zhan ",
    "Xi ",
    "Xi ",
    "Chuo ",
    "Dai ",
    "Qu ",
    "Hu ",
    "Hu ",
    "Hu ",
    "E ",
    "Shi ",
    "Li ",
    "Mao ",
    "Hu ",
    "Li ",
    "Fang ",
    "Suo ",
    "Bian ",
    "Dian ",
    "Jiong ",
    "Shang ",
    "Yi ",
    "Yi ",
    "Shan ",
    "Hu ",
    "Fei ",
    "Yan ",
    "Shou ",
    "T ",
    "Cai ",
    "Zha ",
    "Qiu ",
    "Le ",
    "Bu ",
    "Ba ",
    "Da ",
    "Reng ",
    "Fu ",
    "Hameru ",
    "Zai ",
    "Tuo ",
    "Zhang ",
    "Diao ",
    "Kang ",
    "Yu ",
    "Ku ",
    "Han ",
    "Shen ",
    "Cha ",
    "Yi ",
    "Gu ",
    "Kou ",
    "Wu ",
    "Tuo ",
    "Qian ",
    "Zhi ",
    "Ren ",
    "Kuo ",
    "Men ",
    "Sao ",
    "Yang ",
    "Niu ",
    "Ban ",
    "Che ",
    "Rao ",
    "Xi ",
    "Qian ",
    "Ban ",
    "Jia ",
    "Yu ",
    "Fu ",
    "Ao ",
    "Xi ",
    "Pi ",
    "Zhi ",
    "Zi ",
    "E ",
    "Dun ",
    "Zhao ",
    "Cheng ",
    "Ji ",
    "Yan ",
    "Kuang ",
    "Bian ",
    "Chao ",
    "Ju ",
    "Wen ",
    "Hu ",
    "Yue ",
    "Jue ",
    "Ba ",
    "Qin ",
    "Zhen ",
    "Zheng ",
    "Yun ",
    "Wan ",
    "Nu ",
    "Yi ",
    "Shu ",
    "Zhua ",
    "Pou ",
    "Tou ",
    "Dou ",
    "Kang ",
    "Zhe ",
    "Pou ",
    "Fu ",
    "Pao ",
    "Ba ",
    "Ao ",
    "Ze ",
    "Tuan ",
    "Kou ",
    "Lun ",
    "Qiang ",
    "[?] ",
    "Hu ",
    "Bao ",
    "Bing ",
    "Zhi ",
    "Peng ",
    "Tan ",
    "Pu ",
    "Pi ",
    "Tai ",
    "Yao ",
    "Zhen ",
    "Zha ",
    "Yang ",
    "Bao ",
    "He ",
    "Ni ",
    "Yi ",
    "Di ",
    "Chi ",
    "Pi ",
    "Za ",
    "Mo ",
    "Mo ",
    "Shen ",
    "Ya ",
    "Chou ",
    "Qu ",
    "Min ",
    "Chu ",
    "Jia ",
    "Fu ",
    "Zhan ",
    "Zhu ",
    "Dan ",
    "Chai ",
    "Mu ",
    "Nian ",
    "La ",
    "Fu ",
    "Pao ",
    "Ban ",
    "Pai ",
    "Ling ",
    "Na ",
    "Guai ",
    "Qian ",
    "Ju ",
    "Tuo ",
    "Ba ",
    "Tuo ",
    "Tuo ",
    "Ao ",
    "Ju ",
    "Zhuo ",
    "Pan ",
    "Zhao ",
    "Bai ",
    "Bai ",
    "Di ",
    "Ni ",
    "Ju ",
    "Kuo ",
    "Long ",
    "Jian ",
    "[?] ",
    "Yong ",
    "Lan ",
    "Ning ",
    "Bo ",
    "Ze ",
    "Qian ",
    "Hen ",
    "Gua ",
    "Shi ",
    "Jie ",
    "Zheng ",
    "Nin ",
    "Gong ",
    "Gong ",
    "Quan ",
    "Shuan ",
    "Cun ",
    "Zan ",
    "Kao ",
    "Chi ",
    "Xie ",
    "Ce ",
    "Hui ",
    "Pin ",
    "Zhuai ",
    "Shi ",
    "Na "
  ];
  return x62;
}
var x63;
var hasRequiredX63;
function requireX63() {
  if (hasRequiredX63) return x63;
  hasRequiredX63 = 1;
  x63 = [
    "Bo ",
    "Chi ",
    "Gua ",
    "Zhi ",
    "Kuo ",
    "Duo ",
    "Duo ",
    "Zhi ",
    "Qie ",
    "An ",
    "Nong ",
    "Zhen ",
    "Ge ",
    "Jiao ",
    "Ku ",
    "Dong ",
    "Ru ",
    "Tiao ",
    "Lie ",
    "Zha ",
    "Lu ",
    "Die ",
    "Wa ",
    "Jue ",
    "Mushiru ",
    "Ju ",
    "Zhi ",
    "Luan ",
    "Ya ",
    "Zhua ",
    "Ta ",
    "Xie ",
    "Nao ",
    "Dang ",
    "Jiao ",
    "Zheng ",
    "Ji ",
    "Hui ",
    "Xun ",
    "Ku ",
    "Ai ",
    "Tuo ",
    "Nuo ",
    "Cuo ",
    "Bo ",
    "Geng ",
    "Ti ",
    "Zhen ",
    "Cheng ",
    "Suo ",
    "Suo ",
    "Keng ",
    "Mei ",
    "Long ",
    "Ju ",
    "Peng ",
    "Jian ",
    "Yi ",
    "Ting ",
    "Shan ",
    "Nuo ",
    "Wan ",
    "Xie ",
    "Cha ",
    "Feng ",
    "Jiao ",
    "Wu ",
    "Jun ",
    "Jiu ",
    "Tong ",
    "Kun ",
    "Huo ",
    "Tu ",
    "Zhuo ",
    "Pou ",
    "Le ",
    "Ba ",
    "Han ",
    "Shao ",
    "Nie ",
    "Juan ",
    "Ze ",
    "Song ",
    "Ye ",
    "Jue ",
    "Bu ",
    "Huan ",
    "Bu ",
    "Zun ",
    "Yi ",
    "Zhai ",
    "Lu ",
    "Sou ",
    "Tuo ",
    "Lao ",
    "Sun ",
    "Bang ",
    "Jian ",
    "Huan ",
    "Dao ",
    "[?] ",
    "Wan ",
    "Qin ",
    "Peng ",
    "She ",
    "Lie ",
    "Min ",
    "Men ",
    "Fu ",
    "Bai ",
    "Ju ",
    "Dao ",
    "Wo ",
    "Ai ",
    "Juan ",
    "Yue ",
    "Zong ",
    "Chen ",
    "Chui ",
    "Jie ",
    "Tu ",
    "Ben ",
    "Na ",
    "Nian ",
    "Nuo ",
    "Zu ",
    "Wo ",
    "Xi ",
    "Xian ",
    "Cheng ",
    "Dian ",
    "Sao ",
    "Lun ",
    "Qing ",
    "Gang ",
    "Duo ",
    "Shou ",
    "Diao ",
    "Pou ",
    "Di ",
    "Zhang ",
    "Gun ",
    "Ji ",
    "Tao ",
    "Qia ",
    "Qi ",
    "Pai ",
    "Shu ",
    "Qian ",
    "Ling ",
    "Yi ",
    "Ya ",
    "Jue ",
    "Zheng ",
    "Liang ",
    "Gua ",
    "Yi ",
    "Huo ",
    "Shan ",
    "Zheng ",
    "Lue ",
    "Cai ",
    "Tan ",
    "Che ",
    "Bing ",
    "Jie ",
    "Ti ",
    "Kong ",
    "Tui ",
    "Yan ",
    "Cuo ",
    "Zou ",
    "Ju ",
    "Tian ",
    "Qian ",
    "Ken ",
    "Bai ",
    "Shou ",
    "Jie ",
    "Lu ",
    "Guo ",
    "Haba ",
    "[?] ",
    "Zhi ",
    "Dan ",
    "Mang ",
    "Xian ",
    "Sao ",
    "Guan ",
    "Peng ",
    "Yuan ",
    "Nuo ",
    "Jian ",
    "Zhen ",
    "Jiu ",
    "Jian ",
    "Yu ",
    "Yan ",
    "Kui ",
    "Nan ",
    "Hong ",
    "Rou ",
    "Pi ",
    "Wei ",
    "Sai ",
    "Zou ",
    "Xuan ",
    "Miao ",
    "Ti ",
    "Nie ",
    "Cha ",
    "Shi ",
    "Zong ",
    "Zhen ",
    "Yi ",
    "Shun ",
    "Heng ",
    "Bian ",
    "Yang ",
    "Huan ",
    "Yan ",
    "Zuan ",
    "An ",
    "Xu ",
    "Ya ",
    "Wo ",
    "Ke ",
    "Chuai ",
    "Ji ",
    "Ti ",
    "La ",
    "La ",
    "Cheng ",
    "Kai ",
    "Jiu ",
    "Jiu ",
    "Tu ",
    "Jie ",
    "Hui ",
    "Geng ",
    "Chong ",
    "Shuo ",
    "She ",
    "Xie ",
    "Yuan ",
    "Qian ",
    "Ye ",
    "Cha ",
    "Zha ",
    "Bei ",
    "Yao ",
    "[?] ",
    "[?] ",
    "Lan ",
    "Wen ",
    "Qin "
  ];
  return x63;
}
var x64;
var hasRequiredX64;
function requireX64() {
  if (hasRequiredX64) return x64;
  hasRequiredX64 = 1;
  x64 = [
    "Chan ",
    "Ge ",
    "Lou ",
    "Zong ",
    "Geng ",
    "Jiao ",
    "Gou ",
    "Qin ",
    "Yong ",
    "Que ",
    "Chou ",
    "Chi ",
    "Zhan ",
    "Sun ",
    "Sun ",
    "Bo ",
    "Chu ",
    "Rong ",
    "Beng ",
    "Cuo ",
    "Sao ",
    "Ke ",
    "Yao ",
    "Dao ",
    "Zhi ",
    "Nu ",
    "Xie ",
    "Jian ",
    "Sou ",
    "Qiu ",
    "Gao ",
    "Xian ",
    "Shuo ",
    "Sang ",
    "Jin ",
    "Mie ",
    "E ",
    "Chui ",
    "Nuo ",
    "Shan ",
    "Ta ",
    "Jie ",
    "Tang ",
    "Pan ",
    "Ban ",
    "Da ",
    "Li ",
    "Tao ",
    "Hu ",
    "Zhi ",
    "Wa ",
    "Xia ",
    "Qian ",
    "Wen ",
    "Qiang ",
    "Tian ",
    "Zhen ",
    "E ",
    "Xi ",
    "Nuo ",
    "Quan ",
    "Cha ",
    "Zha ",
    "Ge ",
    "Wu ",
    "En ",
    "She ",
    "Kang ",
    "She ",
    "Shu ",
    "Bai ",
    "Yao ",
    "Bin ",
    "Sou ",
    "Tan ",
    "Sa ",
    "Chan ",
    "Suo ",
    "Liao ",
    "Chong ",
    "Chuang ",
    "Guo ",
    "Bing ",
    "Feng ",
    "Shuai ",
    "Di ",
    "Qi ",
    "Sou ",
    "Zhai ",
    "Lian ",
    "Tang ",
    "Chi ",
    "Guan ",
    "Lu ",
    "Luo ",
    "Lou ",
    "Zong ",
    "Gai ",
    "Hu ",
    "Zha ",
    "Chuang ",
    "Tang ",
    "Hua ",
    "Cui ",
    "Nai ",
    "Mo ",
    "Jiang ",
    "Gui ",
    "Ying ",
    "Zhi ",
    "Ao ",
    "Zhi ",
    "Nie ",
    "Man ",
    "Shan ",
    "Kou ",
    "Shu ",
    "Suo ",
    "Tuan ",
    "Jiao ",
    "Mo ",
    "Mo ",
    "Zhe ",
    "Xian ",
    "Keng ",
    "Piao ",
    "Jiang ",
    "Yin ",
    "Gou ",
    "Qian ",
    "Lue ",
    "Ji ",
    "Ying ",
    "Jue ",
    "Pie ",
    "Pie ",
    "Lao ",
    "Dun ",
    "Xian ",
    "Ruan ",
    "Kui ",
    "Zan ",
    "Yi ",
    "Xun ",
    "Cheng ",
    "Cheng ",
    "Sa ",
    "Nao ",
    "Heng ",
    "Si ",
    "Qian ",
    "Huang ",
    "Da ",
    "Zun ",
    "Nian ",
    "Lin ",
    "Zheng ",
    "Hui ",
    "Zhuang ",
    "Jiao ",
    "Ji ",
    "Cao ",
    "Dan ",
    "Dan ",
    "Che ",
    "Bo ",
    "Che ",
    "Jue ",
    "Xiao ",
    "Liao ",
    "Ben ",
    "Fu ",
    "Qiao ",
    "Bo ",
    "Cuo ",
    "Zhuo ",
    "Zhuan ",
    "Tuo ",
    "Pu ",
    "Qin ",
    "Dun ",
    "Nian ",
    "[?] ",
    "Xie ",
    "Lu ",
    "Jiao ",
    "Cuan ",
    "Ta ",
    "Han ",
    "Qiao ",
    "Zhua ",
    "Jian ",
    "Gan ",
    "Yong ",
    "Lei ",
    "Kuo ",
    "Lu ",
    "Shan ",
    "Zhuo ",
    "Ze ",
    "Pu ",
    "Chuo ",
    "Ji ",
    "Dang ",
    "Suo ",
    "Cao ",
    "Qing ",
    "Jing ",
    "Huan ",
    "Jie ",
    "Qin ",
    "Kuai ",
    "Dan ",
    "Xi ",
    "Ge ",
    "Pi ",
    "Bo ",
    "Ao ",
    "Ju ",
    "Ye ",
    "[?] ",
    "Mang ",
    "Sou ",
    "Mi ",
    "Ji ",
    "Tai ",
    "Zhuo ",
    "Dao ",
    "Xing ",
    "Lan ",
    "Ca ",
    "Ju ",
    "Ye ",
    "Ru ",
    "Ye ",
    "Ye ",
    "Ni ",
    "Hu ",
    "Ji ",
    "Bin ",
    "Ning ",
    "Ge ",
    "Zhi ",
    "Jie ",
    "Kuo ",
    "Mo ",
    "Jian ",
    "Xie ",
    "Lie ",
    "Tan ",
    "Bai ",
    "Sou ",
    "Lu ",
    "Lue ",
    "Rao ",
    "Zhi "
  ];
  return x64;
}
var x65;
var hasRequiredX65;
function requireX65() {
  if (hasRequiredX65) return x65;
  hasRequiredX65 = 1;
  x65 = [
    "Pan ",
    "Yang ",
    "Lei ",
    "Sa ",
    "Shu ",
    "Zan ",
    "Nian ",
    "Xian ",
    "Jun ",
    "Huo ",
    "Li ",
    "La ",
    "Han ",
    "Ying ",
    "Lu ",
    "Long ",
    "Qian ",
    "Qian ",
    "Zan ",
    "Qian ",
    "Lan ",
    "San ",
    "Ying ",
    "Mei ",
    "Rang ",
    "Chan ",
    "[?] ",
    "Cuan ",
    "Xi ",
    "She ",
    "Luo ",
    "Jun ",
    "Mi ",
    "Li ",
    "Zan ",
    "Luan ",
    "Tan ",
    "Zuan ",
    "Li ",
    "Dian ",
    "Wa ",
    "Dang ",
    "Jiao ",
    "Jue ",
    "Lan ",
    "Li ",
    "Nang ",
    "Zhi ",
    "Gui ",
    "Gui ",
    "Qi ",
    "Xin ",
    "Pu ",
    "Sui ",
    "Shou ",
    "Kao ",
    "You ",
    "Gai ",
    "Yi ",
    "Gong ",
    "Gan ",
    "Ban ",
    "Fang ",
    "Zheng ",
    "Bo ",
    "Dian ",
    "Kou ",
    "Min ",
    "Wu ",
    "Gu ",
    "He ",
    "Ce ",
    "Xiao ",
    "Mi ",
    "Chu ",
    "Ge ",
    "Di ",
    "Xu ",
    "Jiao ",
    "Min ",
    "Chen ",
    "Jiu ",
    "Zhen ",
    "Duo ",
    "Yu ",
    "Chi ",
    "Ao ",
    "Bai ",
    "Xu ",
    "Jiao ",
    "Duo ",
    "Lian ",
    "Nie ",
    "Bi ",
    "Chang ",
    "Dian ",
    "Duo ",
    "Yi ",
    "Gan ",
    "San ",
    "Ke ",
    "Yan ",
    "Dun ",
    "Qi ",
    "Dou ",
    "Xiao ",
    "Duo ",
    "Jiao ",
    "Jing ",
    "Yang ",
    "Xia ",
    "Min ",
    "Shu ",
    "Ai ",
    "Qiao ",
    "Ai ",
    "Zheng ",
    "Di ",
    "Zhen ",
    "Fu ",
    "Shu ",
    "Liao ",
    "Qu ",
    "Xiong ",
    "Xi ",
    "Jiao ",
    "Sen ",
    "Jiao ",
    "Zhuo ",
    "Yi ",
    "Lian ",
    "Bi ",
    "Li ",
    "Xiao ",
    "Xiao ",
    "Wen ",
    "Xue ",
    "Qi ",
    "Qi ",
    "Zhai ",
    "Bin ",
    "Jue ",
    "Zhai ",
    "[?] ",
    "Fei ",
    "Ban ",
    "Ban ",
    "Lan ",
    "Yu ",
    "Lan ",
    "Wei ",
    "Dou ",
    "Sheng ",
    "Liao ",
    "Jia ",
    "Hu ",
    "Xie ",
    "Jia ",
    "Yu ",
    "Zhen ",
    "Jiao ",
    "Wo ",
    "Tou ",
    "Chu ",
    "Jin ",
    "Chi ",
    "Yin ",
    "Fu ",
    "Qiang ",
    "Zhan ",
    "Qu ",
    "Zhuo ",
    "Zhan ",
    "Duan ",
    "Zhuo ",
    "Si ",
    "Xin ",
    "Zhuo ",
    "Zhuo ",
    "Qin ",
    "Lin ",
    "Zhuo ",
    "Chu ",
    "Duan ",
    "Zhu ",
    "Fang ",
    "Xie ",
    "Hang ",
    "Yu ",
    "Shi ",
    "Pei ",
    "You ",
    "Mye ",
    "Pang ",
    "Qi ",
    "Zhan ",
    "Mao ",
    "Lu ",
    "Pei ",
    "Pi ",
    "Liu ",
    "Fu ",
    "Fang ",
    "Xuan ",
    "Jing ",
    "Jing ",
    "Ni ",
    "Zu ",
    "Zhao ",
    "Yi ",
    "Liu ",
    "Shao ",
    "Jian ",
    "Es ",
    "Yi ",
    "Qi ",
    "Zhi ",
    "Fan ",
    "Piao ",
    "Fan ",
    "Zhan ",
    "Guai ",
    "Sui ",
    "Yu ",
    "Wu ",
    "Ji ",
    "Ji ",
    "Ji ",
    "Huo ",
    "Ri ",
    "Dan ",
    "Jiu ",
    "Zhi ",
    "Zao ",
    "Xie ",
    "Tiao ",
    "Xun ",
    "Xu ",
    "Xu ",
    "Xu ",
    "Gan ",
    "Han ",
    "Tai ",
    "Di ",
    "Xu ",
    "Chan ",
    "Shi ",
    "Kuang ",
    "Yang ",
    "Shi ",
    "Wang ",
    "Min ",
    "Min ",
    "Tun ",
    "Chun ",
    "Wu "
  ];
  return x65;
}
var x66;
var hasRequiredX66;
function requireX66() {
  if (hasRequiredX66) return x66;
  hasRequiredX66 = 1;
  x66 = [
    "Yun ",
    "Bei ",
    "Ang ",
    "Ze ",
    "Ban ",
    "Jie ",
    "Kun ",
    "Sheng ",
    "Hu ",
    "Fang ",
    "Hao ",
    "Gui ",
    "Chang ",
    "Xuan ",
    "Ming ",
    "Hun ",
    "Fen ",
    "Qin ",
    "Hu ",
    "Yi ",
    "Xi ",
    "Xin ",
    "Yan ",
    "Ze ",
    "Fang ",
    "Tan ",
    "Shen ",
    "Ju ",
    "Yang ",
    "Zan ",
    "Bing ",
    "Xing ",
    "Ying ",
    "Xuan ",
    "Pei ",
    "Zhen ",
    "Ling ",
    "Chun ",
    "Hao ",
    "Mei ",
    "Zuo ",
    "Mo ",
    "Bian ",
    "Xu ",
    "Hun ",
    "Zhao ",
    "Zong ",
    "Shi ",
    "Shi ",
    "Yu ",
    "Fei ",
    "Die ",
    "Mao ",
    "Ni ",
    "Chang ",
    "Wen ",
    "Dong ",
    "Ai ",
    "Bing ",
    "Ang ",
    "Zhou ",
    "Long ",
    "Xian ",
    "Kuang ",
    "Tiao ",
    "Chao ",
    "Shi ",
    "Huang ",
    "Huang ",
    "Xuan ",
    "Kui ",
    "Xu ",
    "Jiao ",
    "Jin ",
    "Zhi ",
    "Jin ",
    "Shang ",
    "Tong ",
    "Hong ",
    "Yan ",
    "Gai ",
    "Xiang ",
    "Shai ",
    "Xiao ",
    "Ye ",
    "Yun ",
    "Hui ",
    "Han ",
    "Han ",
    "Jun ",
    "Wan ",
    "Xian ",
    "Kun ",
    "Zhou ",
    "Xi ",
    "Cheng ",
    "Sheng ",
    "Bu ",
    "Zhe ",
    "Zhe ",
    "Wu ",
    "Han ",
    "Hui ",
    "Hao ",
    "Chen ",
    "Wan ",
    "Tian ",
    "Zhuo ",
    "Zui ",
    "Zhou ",
    "Pu ",
    "Jing ",
    "Xi ",
    "Shan ",
    "Yi ",
    "Xi ",
    "Qing ",
    "Qi ",
    "Jing ",
    "Gui ",
    "Zhen ",
    "Yi ",
    "Zhi ",
    "An ",
    "Wan ",
    "Lin ",
    "Liang ",
    "Chang ",
    "Wang ",
    "Xiao ",
    "Zan ",
    "Hi ",
    "Xuan ",
    "Xuan ",
    "Yi ",
    "Xia ",
    "Yun ",
    "Hui ",
    "Fu ",
    "Min ",
    "Kui ",
    "He ",
    "Ying ",
    "Du ",
    "Wei ",
    "Shu ",
    "Qing ",
    "Mao ",
    "Nan ",
    "Jian ",
    "Nuan ",
    "An ",
    "Yang ",
    "Chun ",
    "Yao ",
    "Suo ",
    "Jin ",
    "Ming ",
    "Jiao ",
    "Kai ",
    "Gao ",
    "Weng ",
    "Chang ",
    "Qi ",
    "Hao ",
    "Yan ",
    "Li ",
    "Ai ",
    "Ji ",
    "Gui ",
    "Men ",
    "Zan ",
    "Xie ",
    "Hao ",
    "Mu ",
    "Mo ",
    "Cong ",
    "Ni ",
    "Zhang ",
    "Hui ",
    "Bao ",
    "Han ",
    "Xuan ",
    "Chuan ",
    "Liao ",
    "Xian ",
    "Dan ",
    "Jing ",
    "Pie ",
    "Lin ",
    "Tun ",
    "Xi ",
    "Yi ",
    "Ji ",
    "Huang ",
    "Tai ",
    "Ye ",
    "Ye ",
    "Li ",
    "Tan ",
    "Tong ",
    "Xiao ",
    "Fei ",
    "Qin ",
    "Zhao ",
    "Hao ",
    "Yi ",
    "Xiang ",
    "Xing ",
    "Sen ",
    "Jiao ",
    "Bao ",
    "Jing ",
    "Yian ",
    "Ai ",
    "Ye ",
    "Ru ",
    "Shu ",
    "Meng ",
    "Xun ",
    "Yao ",
    "Pu ",
    "Li ",
    "Chen ",
    "Kuang ",
    "Die ",
    "[?] ",
    "Yan ",
    "Huo ",
    "Lu ",
    "Xi ",
    "Rong ",
    "Long ",
    "Nang ",
    "Luo ",
    "Luan ",
    "Shai ",
    "Tang ",
    "Yan ",
    "Chu ",
    "Yue ",
    "Yue ",
    "Qu ",
    "Yi ",
    "Geng ",
    "Ye ",
    "Hu ",
    "He ",
    "Shu ",
    "Cao ",
    "Cao ",
    "Noboru ",
    "Man ",
    "Ceng ",
    "Ceng ",
    "Ti "
  ];
  return x66;
}
var x67;
var hasRequiredX67;
function requireX67() {
  if (hasRequiredX67) return x67;
  hasRequiredX67 = 1;
  x67 = [
    "Zui ",
    "Can ",
    "Xu ",
    "Hui ",
    "Yin ",
    "Qie ",
    "Fen ",
    "Pi ",
    "Yue ",
    "You ",
    "Ruan ",
    "Peng ",
    "Ban ",
    "Fu ",
    "Ling ",
    "Fei ",
    "Qu ",
    "[?] ",
    "Nu ",
    "Tiao ",
    "Shuo ",
    "Zhen ",
    "Lang ",
    "Lang ",
    "Juan ",
    "Ming ",
    "Huang ",
    "Wang ",
    "Tun ",
    "Zhao ",
    "Ji ",
    "Qi ",
    "Ying ",
    "Zong ",
    "Wang ",
    "Tong ",
    "Lang ",
    "[?] ",
    "Meng ",
    "Long ",
    "Mu ",
    "Deng ",
    "Wei ",
    "Mo ",
    "Ben ",
    "Zha ",
    "Zhu ",
    "Zhu ",
    "[?] ",
    "Zhu ",
    "Ren ",
    "Ba ",
    "Po ",
    "Duo ",
    "Duo ",
    "Dao ",
    "Li ",
    "Qiu ",
    "Ji ",
    "Jiu ",
    "Bi ",
    "Xiu ",
    "Ting ",
    "Ci ",
    "Sha ",
    "Eburi ",
    "Za ",
    "Quan ",
    "Qian ",
    "Yu ",
    "Gan ",
    "Wu ",
    "Cha ",
    "Shan ",
    "Xun ",
    "Fan ",
    "Wu ",
    "Zi ",
    "Li ",
    "Xing ",
    "Cai ",
    "Cun ",
    "Ren ",
    "Shao ",
    "Tuo ",
    "Di ",
    "Zhang ",
    "Mang ",
    "Chi ",
    "Yi ",
    "Gu ",
    "Gong ",
    "Du ",
    "Yi ",
    "Qi ",
    "Shu ",
    "Gang ",
    "Tiao ",
    "Moku ",
    "Soma ",
    "Tochi ",
    "Lai ",
    "Sugi ",
    "Mang ",
    "Yang ",
    "Ma ",
    "Miao ",
    "Si ",
    "Yuan ",
    "Hang ",
    "Fei ",
    "Bei ",
    "Jie ",
    "Dong ",
    "Gao ",
    "Yao ",
    "Xian ",
    "Chu ",
    "Qun ",
    "Pa ",
    "Shu ",
    "Hua ",
    "Xin ",
    "Chou ",
    "Zhu ",
    "Chou ",
    "Song ",
    "Ban ",
    "Song ",
    "Ji ",
    "Yue ",
    "Jin ",
    "Gou ",
    "Ji ",
    "Mao ",
    "Pi ",
    "Bi ",
    "Wang ",
    "Ang ",
    "Fang ",
    "Fen ",
    "Yi ",
    "Fu ",
    "Nan ",
    "Xi ",
    "Hu ",
    "Ya ",
    "Dou ",
    "Xun ",
    "Zhen ",
    "Yao ",
    "Lin ",
    "Rui ",
    "E ",
    "Mei ",
    "Zhao ",
    "Guo ",
    "Zhi ",
    "Cong ",
    "Yun ",
    "Waku ",
    "Dou ",
    "Shu ",
    "Zao ",
    "[?] ",
    "Li ",
    "Haze ",
    "Jian ",
    "Cheng ",
    "Matsu ",
    "Qiang ",
    "Feng ",
    "Nan ",
    "Xiao ",
    "Xian ",
    "Ku ",
    "Ping ",
    "Yi ",
    "Xi ",
    "Zhi ",
    "Guai ",
    "Xiao ",
    "Jia ",
    "Jia ",
    "Gou ",
    "Fu ",
    "Mo ",
    "Yi ",
    "Ye ",
    "Ye ",
    "Shi ",
    "Nie ",
    "Bi ",
    "Duo ",
    "Yi ",
    "Ling ",
    "Bing ",
    "Ni ",
    "La ",
    "He ",
    "Pan ",
    "Fan ",
    "Zhong ",
    "Dai ",
    "Ci ",
    "Yang ",
    "Fu ",
    "Bo ",
    "Mou ",
    "Gan ",
    "Qi ",
    "Ran ",
    "Rou ",
    "Mao ",
    "Zhao ",
    "Song ",
    "Zhe ",
    "Xia ",
    "You ",
    "Shen ",
    "Ju ",
    "Tuo ",
    "Zuo ",
    "Nan ",
    "Ning ",
    "Yong ",
    "Di ",
    "Zhi ",
    "Zha ",
    "Cha ",
    "Dan ",
    "Gu ",
    "Pu ",
    "Jiu ",
    "Ao ",
    "Fu ",
    "Jian ",
    "Bo ",
    "Duo ",
    "Ke ",
    "Nai ",
    "Zhu ",
    "Bi ",
    "Liu ",
    "Chai ",
    "Zha ",
    "Si ",
    "Zhu ",
    "Pei ",
    "Shi ",
    "Guai ",
    "Cha ",
    "Yao ",
    "Jue ",
    "Jiu ",
    "Shi "
  ];
  return x67;
}
var x68;
var hasRequiredX68;
function requireX68() {
  if (hasRequiredX68) return x68;
  hasRequiredX68 = 1;
  x68 = [
    "Zhi ",
    "Liu ",
    "Mei ",
    "Hoy ",
    "Rong ",
    "Zha ",
    "[?] ",
    "Biao ",
    "Zhan ",
    "Jie ",
    "Long ",
    "Dong ",
    "Lu ",
    "Sayng ",
    "Li ",
    "Lan ",
    "Yong ",
    "Shu ",
    "Xun ",
    "Shuan ",
    "Qi ",
    "Zhen ",
    "Qi ",
    "Li ",
    "Yi ",
    "Xiang ",
    "Zhen ",
    "Li ",
    "Su ",
    "Gua ",
    "Kan ",
    "Bing ",
    "Ren ",
    "Xiao ",
    "Bo ",
    "Ren ",
    "Bing ",
    "Zi ",
    "Chou ",
    "Yi ",
    "Jie ",
    "Xu ",
    "Zhu ",
    "Jian ",
    "Zui ",
    "Er ",
    "Er ",
    "You ",
    "Fa ",
    "Gong ",
    "Kao ",
    "Lao ",
    "Zhan ",
    "Li ",
    "Yin ",
    "Yang ",
    "He ",
    "Gen ",
    "Zhi ",
    "Chi ",
    "Ge ",
    "Zai ",
    "Luan ",
    "Fu ",
    "Jie ",
    "Hang ",
    "Gui ",
    "Tao ",
    "Guang ",
    "Wei ",
    "Kuang ",
    "Ru ",
    "An ",
    "An ",
    "Juan ",
    "Yi ",
    "Zhuo ",
    "Ku ",
    "Zhi ",
    "Qiong ",
    "Tong ",
    "Sang ",
    "Sang ",
    "Huan ",
    "Jie ",
    "Jiu ",
    "Xue ",
    "Duo ",
    "Zhui ",
    "Yu ",
    "Zan ",
    "Kasei ",
    "Ying ",
    "Masu ",
    "[?] ",
    "Zhan ",
    "Ya ",
    "Nao ",
    "Zhen ",
    "Dang ",
    "Qi ",
    "Qiao ",
    "Hua ",
    "Kuai ",
    "Jiang ",
    "Zhuang ",
    "Xun ",
    "Suo ",
    "Sha ",
    "Zhen ",
    "Bei ",
    "Ting ",
    "Gua ",
    "Jing ",
    "Bo ",
    "Ben ",
    "Fu ",
    "Rui ",
    "Tong ",
    "Jue ",
    "Xi ",
    "Lang ",
    "Liu ",
    "Feng ",
    "Qi ",
    "Wen ",
    "Jun ",
    "Gan ",
    "Cu ",
    "Liang ",
    "Qiu ",
    "Ting ",
    "You ",
    "Mei ",
    "Bang ",
    "Long ",
    "Peng ",
    "Zhuang ",
    "Di ",
    "Xuan ",
    "Tu ",
    "Zao ",
    "Ao ",
    "Gu ",
    "Bi ",
    "Di ",
    "Han ",
    "Zi ",
    "Zhi ",
    "Ren ",
    "Bei ",
    "Geng ",
    "Jian ",
    "Huan ",
    "Wan ",
    "Nuo ",
    "Jia ",
    "Tiao ",
    "Ji ",
    "Xiao ",
    "Lu ",
    "Huan ",
    "Shao ",
    "Cen ",
    "Fen ",
    "Song ",
    "Meng ",
    "Wu ",
    "Li ",
    "Li ",
    "Dou ",
    "Cen ",
    "Ying ",
    "Suo ",
    "Ju ",
    "Ti ",
    "Jie ",
    "Kun ",
    "Zhuo ",
    "Shu ",
    "Chan ",
    "Fan ",
    "Wei ",
    "Jing ",
    "Li ",
    "Bing ",
    "Fumoto ",
    "Shikimi ",
    "Tao ",
    "Zhi ",
    "Lai ",
    "Lian ",
    "Jian ",
    "Zhuo ",
    "Ling ",
    "Li ",
    "Qi ",
    "Bing ",
    "Zhun ",
    "Cong ",
    "Qian ",
    "Mian ",
    "Qi ",
    "Qi ",
    "Cai ",
    "Gun ",
    "Chan ",
    "Te ",
    "Fei ",
    "Pai ",
    "Bang ",
    "Pou ",
    "Hun ",
    "Zong ",
    "Cheng ",
    "Zao ",
    "Ji ",
    "Li ",
    "Peng ",
    "Yu ",
    "Yu ",
    "Gu ",
    "Hun ",
    "Dong ",
    "Tang ",
    "Gang ",
    "Wang ",
    "Di ",
    "Xi ",
    "Fan ",
    "Cheng ",
    "Zhan ",
    "Qi ",
    "Yuan ",
    "Yan ",
    "Yu ",
    "Quan ",
    "Yi ",
    "Sen ",
    "Ren ",
    "Chui ",
    "Leng ",
    "Qi ",
    "Zhuo ",
    "Fu ",
    "Ke ",
    "Lai ",
    "Zou ",
    "Zou ",
    "Zhuo ",
    "Guan ",
    "Fen ",
    "Fen ",
    "Chen ",
    "Qiong ",
    "Nie "
  ];
  return x68;
}
var x69;
var hasRequiredX69;
function requireX69() {
  if (hasRequiredX69) return x69;
  hasRequiredX69 = 1;
  x69 = [
    "Wan ",
    "Guo ",
    "Lu ",
    "Hao ",
    "Jie ",
    "Yi ",
    "Chou ",
    "Ju ",
    "Ju ",
    "Cheng ",
    "Zuo ",
    "Liang ",
    "Qiang ",
    "Zhi ",
    "Zhui ",
    "Ya ",
    "Ju ",
    "Bei ",
    "Jiao ",
    "Zhuo ",
    "Zi ",
    "Bin ",
    "Peng ",
    "Ding ",
    "Chu ",
    "Chang ",
    "Kunugi ",
    "Momiji ",
    "Jian ",
    "Gui ",
    "Xi ",
    "Du ",
    "Qian ",
    "Kunugi ",
    "Soko ",
    "Shide ",
    "Luo ",
    "Zhi ",
    "Ken ",
    "Myeng ",
    "Tafu ",
    "[?] ",
    "Peng ",
    "Zhan ",
    "[?] ",
    "Tuo ",
    "Sen ",
    "Duo ",
    "Ye ",
    "Fou ",
    "Wei ",
    "Wei ",
    "Duan ",
    "Jia ",
    "Zong ",
    "Jian ",
    "Yi ",
    "Shen ",
    "Xi ",
    "Yan ",
    "Yan ",
    "Chuan ",
    "Zhan ",
    "Chun ",
    "Yu ",
    "He ",
    "Zha ",
    "Wo ",
    "Pian ",
    "Bi ",
    "Yao ",
    "Huo ",
    "Xu ",
    "Ruo ",
    "Yang ",
    "La ",
    "Yan ",
    "Ben ",
    "Hun ",
    "Kui ",
    "Jie ",
    "Kui ",
    "Si ",
    "Feng ",
    "Xie ",
    "Tuo ",
    "Zhi ",
    "Jian ",
    "Mu ",
    "Mao ",
    "Chu ",
    "Hu ",
    "Hu ",
    "Lian ",
    "Leng ",
    "Ting ",
    "Nan ",
    "Yu ",
    "You ",
    "Mei ",
    "Song ",
    "Xuan ",
    "Xuan ",
    "Ying ",
    "Zhen ",
    "Pian ",
    "Ye ",
    "Ji ",
    "Jie ",
    "Ye ",
    "Chu ",
    "Shun ",
    "Yu ",
    "Cou ",
    "Wei ",
    "Mei ",
    "Di ",
    "Ji ",
    "Jie ",
    "Kai ",
    "Qiu ",
    "Ying ",
    "Rou ",
    "Heng ",
    "Lou ",
    "Le ",
    "Hazou ",
    "Katsura ",
    "Pin ",
    "Muro ",
    "Gai ",
    "Tan ",
    "Lan ",
    "Yun ",
    "Yu ",
    "Chen ",
    "Lu ",
    "Ju ",
    "Sakaki ",
    "[?] ",
    "Pi ",
    "Xie ",
    "Jia ",
    "Yi ",
    "Zhan ",
    "Fu ",
    "Nai ",
    "Mi ",
    "Lang ",
    "Rong ",
    "Gu ",
    "Jian ",
    "Ju ",
    "Ta ",
    "Yao ",
    "Zhen ",
    "Bang ",
    "Sha ",
    "Yuan ",
    "Zi ",
    "Ming ",
    "Su ",
    "Jia ",
    "Yao ",
    "Jie ",
    "Huang ",
    "Gan ",
    "Fei ",
    "Zha ",
    "Qian ",
    "Ma ",
    "Sun ",
    "Yuan ",
    "Xie ",
    "Rong ",
    "Shi ",
    "Zhi ",
    "Cui ",
    "Yun ",
    "Ting ",
    "Liu ",
    "Rong ",
    "Tang ",
    "Que ",
    "Zhai ",
    "Si ",
    "Sheng ",
    "Ta ",
    "Ke ",
    "Xi ",
    "Gu ",
    "Qi ",
    "Kao ",
    "Gao ",
    "Sun ",
    "Pan ",
    "Tao ",
    "Ge ",
    "Xun ",
    "Dian ",
    "Nou ",
    "Ji ",
    "Shuo ",
    "Gou ",
    "Chui ",
    "Qiang ",
    "Cha ",
    "Qian ",
    "Huai ",
    "Mei ",
    "Xu ",
    "Gang ",
    "Gao ",
    "Zhuo ",
    "Tuo ",
    "Hashi ",
    "Yang ",
    "Dian ",
    "Jia ",
    "Jian ",
    "Zui ",
    "Kashi ",
    "Ori ",
    "Bin ",
    "Zhu ",
    "[?] ",
    "Xi ",
    "Qi ",
    "Lian ",
    "Hui ",
    "Yong ",
    "Qian ",
    "Guo ",
    "Gai ",
    "Gai ",
    "Tuan ",
    "Hua ",
    "Cu ",
    "Sen ",
    "Cui ",
    "Beng ",
    "You ",
    "Hu ",
    "Jiang ",
    "Hu ",
    "Huan ",
    "Kui ",
    "Yi ",
    "Nie ",
    "Gao ",
    "Kang ",
    "Gui ",
    "Gui ",
    "Cao ",
    "Man ",
    "Jin "
  ];
  return x69;
}
var x6a;
var hasRequiredX6a;
function requireX6a() {
  if (hasRequiredX6a) return x6a;
  hasRequiredX6a = 1;
  x6a = [
    "Di ",
    "Zhuang ",
    "Le ",
    "Lang ",
    "Chen ",
    "Cong ",
    "Li ",
    "Xiu ",
    "Qing ",
    "Shuang ",
    "Fan ",
    "Tong ",
    "Guan ",
    "Ji ",
    "Suo ",
    "Lei ",
    "Lu ",
    "Liang ",
    "Mi ",
    "Lou ",
    "Chao ",
    "Su ",
    "Ke ",
    "Shu ",
    "Tang ",
    "Biao ",
    "Lu ",
    "Jiu ",
    "Shu ",
    "Zha ",
    "Shu ",
    "Zhang ",
    "Men ",
    "Mo ",
    "Niao ",
    "Yang ",
    "Tiao ",
    "Peng ",
    "Zhu ",
    "Sha ",
    "Xi ",
    "Quan ",
    "Heng ",
    "Jian ",
    "Cong ",
    "[?] ",
    "Hokuso ",
    "Qiang ",
    "Tara ",
    "Ying ",
    "Er ",
    "Xin ",
    "Zhi ",
    "Qiao ",
    "Zui ",
    "Cong ",
    "Pu ",
    "Shu ",
    "Hua ",
    "Kui ",
    "Zhen ",
    "Zun ",
    "Yue ",
    "Zhan ",
    "Xi ",
    "Xun ",
    "Dian ",
    "Fa ",
    "Gan ",
    "Mo ",
    "Wu ",
    "Qiao ",
    "Nao ",
    "Lin ",
    "Liu ",
    "Qiao ",
    "Xian ",
    "Run ",
    "Fan ",
    "Zhan ",
    "Tuo ",
    "Lao ",
    "Yun ",
    "Shun ",
    "Tui ",
    "Cheng ",
    "Tang ",
    "Meng ",
    "Ju ",
    "Cheng ",
    "Su ",
    "Jue ",
    "Jue ",
    "Tan ",
    "Hui ",
    "Ji ",
    "Nuo ",
    "Xiang ",
    "Tuo ",
    "Ning ",
    "Rui ",
    "Zhu ",
    "Chuang ",
    "Zeng ",
    "Fen ",
    "Qiong ",
    "Ran ",
    "Heng ",
    "Cen ",
    "Gu ",
    "Liu ",
    "Lao ",
    "Gao ",
    "Chu ",
    "Zusa ",
    "Nude ",
    "Ca ",
    "San ",
    "Ji ",
    "Dou ",
    "Shou ",
    "Lu ",
    "[?] ",
    "[?] ",
    "Yuan ",
    "Ta ",
    "Shu ",
    "Jiang ",
    "Tan ",
    "Lin ",
    "Nong ",
    "Yin ",
    "Xi ",
    "Sui ",
    "Shan ",
    "Zui ",
    "Xuan ",
    "Cheng ",
    "Gan ",
    "Ju ",
    "Zui ",
    "Yi ",
    "Qin ",
    "Pu ",
    "Yan ",
    "Lei ",
    "Feng ",
    "Hui ",
    "Dang ",
    "Ji ",
    "Sui ",
    "Bo ",
    "Bi ",
    "Ding ",
    "Chu ",
    "Zhua ",
    "Kuai ",
    "Ji ",
    "Jie ",
    "Jia ",
    "Qing ",
    "Zhe ",
    "Jian ",
    "Qiang ",
    "Dao ",
    "Yi ",
    "Biao ",
    "Song ",
    "She ",
    "Lin ",
    "Kunugi ",
    "Cha ",
    "Meng ",
    "Yin ",
    "Tao ",
    "Tai ",
    "Mian ",
    "Qi ",
    "Toan ",
    "Bin ",
    "Huo ",
    "Ji ",
    "Qian ",
    "Mi ",
    "Ning ",
    "Yi ",
    "Gao ",
    "Jian ",
    "Yin ",
    "Er ",
    "Qing ",
    "Yan ",
    "Qi ",
    "Mi ",
    "Zhao ",
    "Gui ",
    "Chun ",
    "Ji ",
    "Kui ",
    "Po ",
    "Deng ",
    "Chu ",
    "[?] ",
    "Mian ",
    "You ",
    "Zhi ",
    "Guang ",
    "Qian ",
    "Lei ",
    "Lei ",
    "Sa ",
    "Lu ",
    "Li ",
    "Cuan ",
    "Lu ",
    "Mie ",
    "Hui ",
    "Ou ",
    "Lu ",
    "Jie ",
    "Gao ",
    "Du ",
    "Yuan ",
    "Li ",
    "Fei ",
    "Zhuo ",
    "Sou ",
    "Lian ",
    "Tamo ",
    "Chu ",
    "[?] ",
    "Zhu ",
    "Lu ",
    "Yan ",
    "Li ",
    "Zhu ",
    "Chen ",
    "Jie ",
    "E ",
    "Su ",
    "Huai ",
    "Nie ",
    "Yu ",
    "Long ",
    "Lai ",
    "[?] ",
    "Xian ",
    "Kwi ",
    "Ju ",
    "Xiao ",
    "Ling ",
    "Ying ",
    "Jian ",
    "Yin ",
    "You ",
    "Ying "
  ];
  return x6a;
}
var x6b;
var hasRequiredX6b;
function requireX6b() {
  if (hasRequiredX6b) return x6b;
  hasRequiredX6b = 1;
  x6b = [
    "Xiang ",
    "Nong ",
    "Bo ",
    "Chan ",
    "Lan ",
    "Ju ",
    "Shuang ",
    "She ",
    "Wei ",
    "Cong ",
    "Quan ",
    "Qu ",
    "Cang ",
    "[?] ",
    "Yu ",
    "Luo ",
    "Li ",
    "Zan ",
    "Luan ",
    "Dang ",
    "Jue ",
    "Em ",
    "Lan ",
    "Lan ",
    "Zhu ",
    "Lei ",
    "Li ",
    "Ba ",
    "Nang ",
    "Yu ",
    "Ling ",
    "Tsuki ",
    "Qian ",
    "Ci ",
    "Huan ",
    "Xin ",
    "Yu ",
    "Yu ",
    "Qian ",
    "Ou ",
    "Xu ",
    "Chao ",
    "Chu ",
    "Chi ",
    "Kai ",
    "Yi ",
    "Jue ",
    "Xi ",
    "Xu ",
    "Xia ",
    "Yu ",
    "Kuai ",
    "Lang ",
    "Kuan ",
    "Shuo ",
    "Xi ",
    "Ai ",
    "Yi ",
    "Qi ",
    "Hu ",
    "Chi ",
    "Qin ",
    "Kuan ",
    "Kan ",
    "Kuan ",
    "Kan ",
    "Chuan ",
    "Sha ",
    "Gua ",
    "Yin ",
    "Xin ",
    "Xie ",
    "Yu ",
    "Qian ",
    "Xiao ",
    "Yi ",
    "Ge ",
    "Wu ",
    "Tan ",
    "Jin ",
    "Ou ",
    "Hu ",
    "Ti ",
    "Huan ",
    "Xu ",
    "Pen ",
    "Xi ",
    "Xiao ",
    "Xu ",
    "Xi ",
    "Sen ",
    "Lian ",
    "Chu ",
    "Yi ",
    "Kan ",
    "Yu ",
    "Chuo ",
    "Huan ",
    "Zhi ",
    "Zheng ",
    "Ci ",
    "Bu ",
    "Wu ",
    "Qi ",
    "Bu ",
    "Bu ",
    "Wai ",
    "Ju ",
    "Qian ",
    "Chi ",
    "Se ",
    "Chi ",
    "Se ",
    "Zhong ",
    "Sui ",
    "Sui ",
    "Li ",
    "Cuo ",
    "Yu ",
    "Li ",
    "Gui ",
    "Dai ",
    "Dai ",
    "Si ",
    "Jian ",
    "Zhe ",
    "Mo ",
    "Mo ",
    "Yao ",
    "Mo ",
    "Cu ",
    "Yang ",
    "Tian ",
    "Sheng ",
    "Dai ",
    "Shang ",
    "Xu ",
    "Xun ",
    "Shu ",
    "Can ",
    "Jue ",
    "Piao ",
    "Qia ",
    "Qiu ",
    "Su ",
    "Qing ",
    "Yun ",
    "Lian ",
    "Yi ",
    "Fou ",
    "Zhi ",
    "Ye ",
    "Can ",
    "Hun ",
    "Dan ",
    "Ji ",
    "Ye ",
    "Zhen ",
    "Yun ",
    "Wen ",
    "Chou ",
    "Bin ",
    "Ti ",
    "Jin ",
    "Shang ",
    "Yin ",
    "Diao ",
    "Cu ",
    "Hui ",
    "Cuan ",
    "Yi ",
    "Dan ",
    "Du ",
    "Jiang ",
    "Lian ",
    "Bin ",
    "Du ",
    "Tsukusu ",
    "Jian ",
    "Shu ",
    "Ou ",
    "Duan ",
    "Zhu ",
    "Yin ",
    "Qing ",
    "Yi ",
    "Sha ",
    "Que ",
    "Ke ",
    "Yao ",
    "Jun ",
    "Dian ",
    "Hui ",
    "Hui ",
    "Gu ",
    "Que ",
    "Ji ",
    "Yi ",
    "Ou ",
    "Hui ",
    "Duan ",
    "Yi ",
    "Xiao ",
    "Wu ",
    "Guan ",
    "Mu ",
    "Mei ",
    "Mei ",
    "Ai ",
    "Zuo ",
    "Du ",
    "Yu ",
    "Bi ",
    "Bi ",
    "Bi ",
    "Pi ",
    "Pi ",
    "Bi ",
    "Chan ",
    "Mao ",
    "[?] ",
    "[?] ",
    "Pu ",
    "Mushiru ",
    "Jia ",
    "Zhan ",
    "Sai ",
    "Mu ",
    "Tuo ",
    "Xun ",
    "Er ",
    "Rong ",
    "Xian ",
    "Ju ",
    "Mu ",
    "Hao ",
    "Qiu ",
    "Dou ",
    "Mushiru ",
    "Tan ",
    "Pei ",
    "Ju ",
    "Duo ",
    "Cui ",
    "Bi ",
    "San ",
    "[?] ",
    "Mao ",
    "Sui ",
    "Yu ",
    "Yu ",
    "Tuo ",
    "He ",
    "Jian ",
    "Ta ",
    "San "
  ];
  return x6b;
}
var x6c;
var hasRequiredX6c;
function requireX6c() {
  if (hasRequiredX6c) return x6c;
  hasRequiredX6c = 1;
  x6c = [
    "Lu ",
    "Mu ",
    "Li ",
    "Tong ",
    "Rong ",
    "Chang ",
    "Pu ",
    "Luo ",
    "Zhan ",
    "Sao ",
    "Zhan ",
    "Meng ",
    "Luo ",
    "Qu ",
    "Die ",
    "Shi ",
    "Di ",
    "Min ",
    "Jue ",
    "Mang ",
    "Qi ",
    "Pie ",
    "Nai ",
    "Qi ",
    "Dao ",
    "Xian ",
    "Chuan ",
    "Fen ",
    "Ri ",
    "Nei ",
    "[?] ",
    "Fu ",
    "Shen ",
    "Dong ",
    "Qing ",
    "Qi ",
    "Yin ",
    "Xi ",
    "Hai ",
    "Yang ",
    "An ",
    "Ya ",
    "Ke ",
    "Qing ",
    "Ya ",
    "Dong ",
    "Dan ",
    "Lu ",
    "Qing ",
    "Yang ",
    "Yun ",
    "Yun ",
    "Shui ",
    "San ",
    "Zheng ",
    "Bing ",
    "Yong ",
    "Dang ",
    "Shitamizu ",
    "Le ",
    "Ni ",
    "Tun ",
    "Fan ",
    "Gui ",
    "Ting ",
    "Zhi ",
    "Qiu ",
    "Bin ",
    "Ze ",
    "Mian ",
    "Cuan ",
    "Hui ",
    "Diao ",
    "Yi ",
    "Cha ",
    "Zhuo ",
    "Chuan ",
    "Wan ",
    "Fan ",
    "Dai ",
    "Xi ",
    "Tuo ",
    "Mang ",
    "Qiu ",
    "Qi ",
    "Shan ",
    "Pai ",
    "Han ",
    "Qian ",
    "Wu ",
    "Wu ",
    "Xun ",
    "Si ",
    "Ru ",
    "Gong ",
    "Jiang ",
    "Chi ",
    "Wu ",
    "Tsuchi ",
    "[?] ",
    "Tang ",
    "Zhi ",
    "Chi ",
    "Qian ",
    "Mi ",
    "Yu ",
    "Wang ",
    "Qing ",
    "Jing ",
    "Rui ",
    "Jun ",
    "Hong ",
    "Tai ",
    "Quan ",
    "Ji ",
    "Bian ",
    "Bian ",
    "Gan ",
    "Wen ",
    "Zhong ",
    "Fang ",
    "Xiong ",
    "Jue ",
    "Hang ",
    "Niou ",
    "Qi ",
    "Fen ",
    "Xu ",
    "Xu ",
    "Qin ",
    "Yi ",
    "Wo ",
    "Yun ",
    "Yuan ",
    "Hang ",
    "Yan ",
    "Chen ",
    "Chen ",
    "Dan ",
    "You ",
    "Dun ",
    "Hu ",
    "Huo ",
    "Qie ",
    "Mu ",
    "Rou ",
    "Mei ",
    "Ta ",
    "Mian ",
    "Wu ",
    "Chong ",
    "Tian ",
    "Bi ",
    "Sha ",
    "Zhi ",
    "Pei ",
    "Pan ",
    "Zhui ",
    "Za ",
    "Gou ",
    "Liu ",
    "Mei ",
    "Ze ",
    "Feng ",
    "Ou ",
    "Li ",
    "Lun ",
    "Cang ",
    "Feng ",
    "Wei ",
    "Hu ",
    "Mo ",
    "Mei ",
    "Shu ",
    "Ju ",
    "Zan ",
    "Tuo ",
    "Tuo ",
    "Tuo ",
    "He ",
    "Li ",
    "Mi ",
    "Yi ",
    "Fa ",
    "Fei ",
    "You ",
    "Tian ",
    "Zhi ",
    "Zhao ",
    "Gu ",
    "Zhan ",
    "Yan ",
    "Si ",
    "Kuang ",
    "Jiong ",
    "Ju ",
    "Xie ",
    "Qiu ",
    "Yi ",
    "Jia ",
    "Zhong ",
    "Quan ",
    "Bo ",
    "Hui ",
    "Mi ",
    "Ben ",
    "Zhuo ",
    "Chu ",
    "Le ",
    "You ",
    "Gu ",
    "Hong ",
    "Gan ",
    "Fa ",
    "Mao ",
    "Si ",
    "Hu ",
    "Ping ",
    "Ci ",
    "Fan ",
    "Chi ",
    "Su ",
    "Ning ",
    "Cheng ",
    "Ling ",
    "Pao ",
    "Bo ",
    "Qi ",
    "Si ",
    "Ni ",
    "Ju ",
    "Yue ",
    "Zhu ",
    "Sheng ",
    "Lei ",
    "Xuan ",
    "Xue ",
    "Fu ",
    "Pan ",
    "Min ",
    "Tai ",
    "Yang ",
    "Ji ",
    "Yong ",
    "Guan ",
    "Beng ",
    "Xue ",
    "Long ",
    "Lu ",
    "[?] ",
    "Bo ",
    "Xie ",
    "Po ",
    "Ze ",
    "Jing ",
    "Yin "
  ];
  return x6c;
}
var x6d;
var hasRequiredX6d;
function requireX6d() {
  if (hasRequiredX6d) return x6d;
  hasRequiredX6d = 1;
  x6d = [
    "Zhou ",
    "Ji ",
    "Yi ",
    "Hui ",
    "Hui ",
    "Zui ",
    "Cheng ",
    "Yin ",
    "Wei ",
    "Hou ",
    "Jian ",
    "Yang ",
    "Lie ",
    "Si ",
    "Ji ",
    "Er ",
    "Xing ",
    "Fu ",
    "Sa ",
    "Suo ",
    "Zhi ",
    "Yin ",
    "Wu ",
    "Xi ",
    "Kao ",
    "Zhu ",
    "Jiang ",
    "Luo ",
    "[?] ",
    "An ",
    "Dong ",
    "Yi ",
    "Mou ",
    "Lei ",
    "Yi ",
    "Mi ",
    "Quan ",
    "Jin ",
    "Mo ",
    "Wei ",
    "Xiao ",
    "Xie ",
    "Hong ",
    "Xu ",
    "Shuo ",
    "Kuang ",
    "Tao ",
    "Qie ",
    "Ju ",
    "Er ",
    "Zhou ",
    "Ru ",
    "Ping ",
    "Xun ",
    "Xiong ",
    "Zhi ",
    "Guang ",
    "Huan ",
    "Ming ",
    "Huo ",
    "Wa ",
    "Qia ",
    "Pai ",
    "Wu ",
    "Qu ",
    "Liu ",
    "Yi ",
    "Jia ",
    "Jing ",
    "Qian ",
    "Jiang ",
    "Jiao ",
    "Cheng ",
    "Shi ",
    "Zhuo ",
    "Ce ",
    "Pal ",
    "Kuai ",
    "Ji ",
    "Liu ",
    "Chan ",
    "Hun ",
    "Hu ",
    "Nong ",
    "Xun ",
    "Jin ",
    "Lie ",
    "Qiu ",
    "Wei ",
    "Zhe ",
    "Jun ",
    "Han ",
    "Bang ",
    "Mang ",
    "Zhuo ",
    "You ",
    "Xi ",
    "Bo ",
    "Dou ",
    "Wan ",
    "Hong ",
    "Yi ",
    "Pu ",
    "Ying ",
    "Lan ",
    "Hao ",
    "Lang ",
    "Han ",
    "Li ",
    "Geng ",
    "Fu ",
    "Wu ",
    "Lian ",
    "Chun ",
    "Feng ",
    "Yi ",
    "Yu ",
    "Tong ",
    "Lao ",
    "Hai ",
    "Jin ",
    "Jia ",
    "Chong ",
    "Weng ",
    "Mei ",
    "Sui ",
    "Cheng ",
    "Pei ",
    "Xian ",
    "Shen ",
    "Tu ",
    "Kun ",
    "Pin ",
    "Nie ",
    "Han ",
    "Jing ",
    "Xiao ",
    "She ",
    "Nian ",
    "Tu ",
    "Yong ",
    "Xiao ",
    "Xian ",
    "Ting ",
    "E ",
    "Su ",
    "Tun ",
    "Juan ",
    "Cen ",
    "Ti ",
    "Li ",
    "Shui ",
    "Si ",
    "Lei ",
    "Shui ",
    "Tao ",
    "Du ",
    "Lao ",
    "Lai ",
    "Lian ",
    "Wei ",
    "Wo ",
    "Yun ",
    "Huan ",
    "Di ",
    "[?] ",
    "Run ",
    "Jian ",
    "Zhang ",
    "Se ",
    "Fu ",
    "Guan ",
    "Xing ",
    "Shou ",
    "Shuan ",
    "Ya ",
    "Chuo ",
    "Zhang ",
    "Ye ",
    "Kong ",
    "Wo ",
    "Han ",
    "Tuo ",
    "Dong ",
    "He ",
    "Wo ",
    "Ju ",
    "Gan ",
    "Liang ",
    "Hun ",
    "Ta ",
    "Zhuo ",
    "Dian ",
    "Qie ",
    "De ",
    "Juan ",
    "Zi ",
    "Xi ",
    "Yao ",
    "Qi ",
    "Gu ",
    "Guo ",
    "Han ",
    "Lin ",
    "Tang ",
    "Zhou ",
    "Peng ",
    "Hao ",
    "Chang ",
    "Shu ",
    "Qi ",
    "Fang ",
    "Chi ",
    "Lu ",
    "Nao ",
    "Ju ",
    "Tao ",
    "Cong ",
    "Lei ",
    "Zhi ",
    "Peng ",
    "Fei ",
    "Song ",
    "Tian ",
    "Pi ",
    "Dan ",
    "Yu ",
    "Ni ",
    "Yu ",
    "Lu ",
    "Gan ",
    "Mi ",
    "Jing ",
    "Ling ",
    "Lun ",
    "Yin ",
    "Cui ",
    "Qu ",
    "Huai ",
    "Yu ",
    "Nian ",
    "Shen ",
    "Piao ",
    "Chun ",
    "Wa ",
    "Yuan ",
    "Lai ",
    "Hun ",
    "Qing ",
    "Yan ",
    "Qian ",
    "Tian ",
    "Miao ",
    "Zhi ",
    "Yin ",
    "Mi "
  ];
  return x6d;
}
var x6e;
var hasRequiredX6e;
function requireX6e() {
  if (hasRequiredX6e) return x6e;
  hasRequiredX6e = 1;
  x6e = [
    "Ben ",
    "Yuan ",
    "Wen ",
    "Re ",
    "Fei ",
    "Qing ",
    "Yuan ",
    "Ke ",
    "Ji ",
    "She ",
    "Yuan ",
    "Shibui ",
    "Lu ",
    "Zi ",
    "Du ",
    "[?] ",
    "Jian ",
    "Min ",
    "Pi ",
    "Tani ",
    "Yu ",
    "Yuan ",
    "Shen ",
    "Shen ",
    "Rou ",
    "Huan ",
    "Zhu ",
    "Jian ",
    "Nuan ",
    "Yu ",
    "Qiu ",
    "Ting ",
    "Qu ",
    "Du ",
    "Feng ",
    "Zha ",
    "Bo ",
    "Wo ",
    "Wo ",
    "Di ",
    "Wei ",
    "Wen ",
    "Ru ",
    "Xie ",
    "Ce ",
    "Wei ",
    "Ge ",
    "Gang ",
    "Yan ",
    "Hong ",
    "Xuan ",
    "Mi ",
    "Ke ",
    "Mao ",
    "Ying ",
    "Yan ",
    "You ",
    "Hong ",
    "Miao ",
    "Xing ",
    "Mei ",
    "Zai ",
    "Hun ",
    "Nai ",
    "Kui ",
    "Shi ",
    "E ",
    "Pai ",
    "Mei ",
    "Lian ",
    "Qi ",
    "Qi ",
    "Mei ",
    "Tian ",
    "Cou ",
    "Wei ",
    "Can ",
    "Tuan ",
    "Mian ",
    "Hui ",
    "Mo ",
    "Xu ",
    "Ji ",
    "Pen ",
    "Jian ",
    "Jian ",
    "Hu ",
    "Feng ",
    "Xiang ",
    "Yi ",
    "Yin ",
    "Zhan ",
    "Shi ",
    "Jie ",
    "Cheng ",
    "Huang ",
    "Tan ",
    "Yu ",
    "Bi ",
    "Min ",
    "Shi ",
    "Tu ",
    "Sheng ",
    "Yong ",
    "Qu ",
    "Zhong ",
    "Suei ",
    "Jiu ",
    "Jiao ",
    "Qiou ",
    "Yin ",
    "Tang ",
    "Long ",
    "Huo ",
    "Yuan ",
    "Nan ",
    "Ban ",
    "You ",
    "Quan ",
    "Chui ",
    "Liang ",
    "Chan ",
    "Yan ",
    "Chun ",
    "Nie ",
    "Zi ",
    "Wan ",
    "Shi ",
    "Man ",
    "Ying ",
    "Ratsu ",
    "Kui ",
    "[?] ",
    "Jian ",
    "Xu ",
    "Lu ",
    "Gui ",
    "Gai ",
    "[?] ",
    "[?] ",
    "Po ",
    "Jin ",
    "Gui ",
    "Tang ",
    "Yuan ",
    "Suo ",
    "Yuan ",
    "Lian ",
    "Yao ",
    "Meng ",
    "Zhun ",
    "Sheng ",
    "Ke ",
    "Tai ",
    "Da ",
    "Wa ",
    "Liu ",
    "Gou ",
    "Sao ",
    "Ming ",
    "Zha ",
    "Shi ",
    "Yi ",
    "Lun ",
    "Ma ",
    "Pu ",
    "Wei ",
    "Li ",
    "Cai ",
    "Wu ",
    "Xi ",
    "Wen ",
    "Qiang ",
    "Ze ",
    "Shi ",
    "Su ",
    "Yi ",
    "Zhen ",
    "Sou ",
    "Yun ",
    "Xiu ",
    "Yin ",
    "Rong ",
    "Hun ",
    "Su ",
    "Su ",
    "Ni ",
    "Ta ",
    "Shi ",
    "Ru ",
    "Wei ",
    "Pan ",
    "Chu ",
    "Chu ",
    "Pang ",
    "Weng ",
    "Cang ",
    "Mie ",
    "He ",
    "Dian ",
    "Hao ",
    "Huang ",
    "Xi ",
    "Zi ",
    "Di ",
    "Zhi ",
    "Ying ",
    "Fu ",
    "Jie ",
    "Hua ",
    "Ge ",
    "Zi ",
    "Tao ",
    "Teng ",
    "Sui ",
    "Bi ",
    "Jiao ",
    "Hui ",
    "Gun ",
    "Yin ",
    "Gao ",
    "Long ",
    "Zhi ",
    "Yan ",
    "She ",
    "Man ",
    "Ying ",
    "Chun ",
    "Lu ",
    "Lan ",
    "Luan ",
    "[?] ",
    "Bin ",
    "Tan ",
    "Yu ",
    "Sou ",
    "Hu ",
    "Bi ",
    "Biao ",
    "Zhi ",
    "Jiang ",
    "Kou ",
    "Shen ",
    "Shang ",
    "Di ",
    "Mi ",
    "Ao ",
    "Lu ",
    "Hu ",
    "Hu ",
    "You ",
    "Chan ",
    "Fan ",
    "Yong ",
    "Gun ",
    "Man "
  ];
  return x6e;
}
var x6f;
var hasRequiredX6f;
function requireX6f() {
  if (hasRequiredX6f) return x6f;
  hasRequiredX6f = 1;
  x6f = [
    "Qing ",
    "Yu ",
    "Piao ",
    "Ji ",
    "Ya ",
    "Jiao ",
    "Qi ",
    "Xi ",
    "Ji ",
    "Lu ",
    "Lu ",
    "Long ",
    "Jin ",
    "Guo ",
    "Cong ",
    "Lou ",
    "Zhi ",
    "Gai ",
    "Qiang ",
    "Li ",
    "Yan ",
    "Cao ",
    "Jiao ",
    "Cong ",
    "Qun ",
    "Tuan ",
    "Ou ",
    "Teng ",
    "Ye ",
    "Xi ",
    "Mi ",
    "Tang ",
    "Mo ",
    "Shang ",
    "Han ",
    "Lian ",
    "Lan ",
    "Wa ",
    "Li ",
    "Qian ",
    "Feng ",
    "Xuan ",
    "Yi ",
    "Man ",
    "Zi ",
    "Mang ",
    "Kang ",
    "Lei ",
    "Peng ",
    "Shu ",
    "Zhang ",
    "Zhang ",
    "Chong ",
    "Xu ",
    "Huan ",
    "Kuo ",
    "Jian ",
    "Yan ",
    "Chuang ",
    "Liao ",
    "Cui ",
    "Ti ",
    "Yang ",
    "Jiang ",
    "Cong ",
    "Ying ",
    "Hong ",
    "Xun ",
    "Shu ",
    "Guan ",
    "Ying ",
    "Xiao ",
    "[?] ",
    "[?] ",
    "Xu ",
    "Lian ",
    "Zhi ",
    "Wei ",
    "Pi ",
    "Jue ",
    "Jiao ",
    "Po ",
    "Dang ",
    "Hui ",
    "Jie ",
    "Wu ",
    "Pa ",
    "Ji ",
    "Pan ",
    "Gui ",
    "Xiao ",
    "Qian ",
    "Qian ",
    "Xi ",
    "Lu ",
    "Xi ",
    "Xuan ",
    "Dun ",
    "Huang ",
    "Min ",
    "Run ",
    "Su ",
    "Liao ",
    "Zhen ",
    "Zhong ",
    "Yi ",
    "Di ",
    "Wan ",
    "Dan ",
    "Tan ",
    "Chao ",
    "Xun ",
    "Kui ",
    "Yie ",
    "Shao ",
    "Tu ",
    "Zhu ",
    "San ",
    "Hei ",
    "Bi ",
    "Shan ",
    "Chan ",
    "Chan ",
    "Shu ",
    "Tong ",
    "Pu ",
    "Lin ",
    "Wei ",
    "Se ",
    "Se ",
    "Cheng ",
    "Jiong ",
    "Cheng ",
    "Hua ",
    "Jiao ",
    "Lao ",
    "Che ",
    "Gan ",
    "Cun ",
    "Heng ",
    "Si ",
    "Shu ",
    "Peng ",
    "Han ",
    "Yun ",
    "Liu ",
    "Hong ",
    "Fu ",
    "Hao ",
    "He ",
    "Xian ",
    "Jian ",
    "Shan ",
    "Xi ",
    "Oki ",
    "[?] ",
    "Lan ",
    "[?] ",
    "Yu ",
    "Lin ",
    "Min ",
    "Zao ",
    "Dang ",
    "Wan ",
    "Ze ",
    "Xie ",
    "Yu ",
    "Li ",
    "Shi ",
    "Xue ",
    "Ling ",
    "Man ",
    "Zi ",
    "Yong ",
    "Kuai ",
    "Can ",
    "Lian ",
    "Dian ",
    "Ye ",
    "Ao ",
    "Huan ",
    "Zhen ",
    "Chan ",
    "Man ",
    "Dan ",
    "Dan ",
    "Yi ",
    "Sui ",
    "Pi ",
    "Ju ",
    "Ta ",
    "Qin ",
    "Ji ",
    "Zhuo ",
    "Lian ",
    "Nong ",
    "Guo ",
    "Jin ",
    "Fen ",
    "Se ",
    "Ji ",
    "Sui ",
    "Hui ",
    "Chu ",
    "Ta ",
    "Song ",
    "Ding ",
    "[?] ",
    "Zhu ",
    "Lai ",
    "Bin ",
    "Lian ",
    "Mi ",
    "Shi ",
    "Shu ",
    "Mi ",
    "Ning ",
    "Ying ",
    "Ying ",
    "Meng ",
    "Jin ",
    "Qi ",
    "Pi ",
    "Ji ",
    "Hao ",
    "Ru ",
    "Zui ",
    "Wo ",
    "Tao ",
    "Yin ",
    "Yin ",
    "Dui ",
    "Ci ",
    "Huo ",
    "Jing ",
    "Lan ",
    "Jun ",
    "Ai ",
    "Pu ",
    "Zhuo ",
    "Wei ",
    "Bin ",
    "Gu ",
    "Qian ",
    "Xing ",
    "Hama ",
    "Kuo ",
    "Fei ",
    "[?] ",
    "Boku ",
    "Jian ",
    "Wei ",
    "Luo ",
    "Zan ",
    "Lu ",
    "Li "
  ];
  return x6f;
}
var x70;
var hasRequiredX70;
function requireX70() {
  if (hasRequiredX70) return x70;
  hasRequiredX70 = 1;
  x70 = [
    "You ",
    "Yang ",
    "Lu ",
    "Si ",
    "Jie ",
    "Ying ",
    "Du ",
    "Wang ",
    "Hui ",
    "Xie ",
    "Pan ",
    "Shen ",
    "Biao ",
    "Chan ",
    "Mo ",
    "Liu ",
    "Jian ",
    "Pu ",
    "Se ",
    "Cheng ",
    "Gu ",
    "Bin ",
    "Huo ",
    "Xian ",
    "Lu ",
    "Qin ",
    "Han ",
    "Ying ",
    "Yong ",
    "Li ",
    "Jing ",
    "Xiao ",
    "Ying ",
    "Sui ",
    "Wei ",
    "Xie ",
    "Huai ",
    "Hao ",
    "Zhu ",
    "Long ",
    "Lai ",
    "Dui ",
    "Fan ",
    "Hu ",
    "Lai ",
    "[?] ",
    "[?] ",
    "Ying ",
    "Mi ",
    "Ji ",
    "Lian ",
    "Jian ",
    "Ying ",
    "Fen ",
    "Lin ",
    "Yi ",
    "Jian ",
    "Yue ",
    "Chan ",
    "Dai ",
    "Rang ",
    "Jian ",
    "Lan ",
    "Fan ",
    "Shuang ",
    "Yuan ",
    "Zhuo ",
    "Feng ",
    "She ",
    "Lei ",
    "Lan ",
    "Cong ",
    "Qu ",
    "Yong ",
    "Qian ",
    "Fa ",
    "Guan ",
    "Que ",
    "Yan ",
    "Hao ",
    "Hyeng ",
    "Sa ",
    "Zan ",
    "Luan ",
    "Yan ",
    "Li ",
    "Mi ",
    "Shan ",
    "Tan ",
    "Dang ",
    "Jiao ",
    "Chan ",
    "[?] ",
    "Hao ",
    "Ba ",
    "Zhu ",
    "Lan ",
    "Lan ",
    "Nang ",
    "Wan ",
    "Luan ",
    "Xun ",
    "Xian ",
    "Yan ",
    "Gan ",
    "Yan ",
    "Yu ",
    "Huo ",
    "Si ",
    "Mie ",
    "Guang ",
    "Deng ",
    "Hui ",
    "Xiao ",
    "Xiao ",
    "Hu ",
    "Hong ",
    "Ling ",
    "Zao ",
    "Zhuan ",
    "Jiu ",
    "Zha ",
    "Xie ",
    "Chi ",
    "Zhuo ",
    "Zai ",
    "Zai ",
    "Can ",
    "Yang ",
    "Qi ",
    "Zhong ",
    "Fen ",
    "Niu ",
    "Jiong ",
    "Wen ",
    "Po ",
    "Yi ",
    "Lu ",
    "Chui ",
    "Pi ",
    "Kai ",
    "Pan ",
    "Yan ",
    "Kai ",
    "Pang ",
    "Mu ",
    "Chao ",
    "Liao ",
    "Gui ",
    "Kang ",
    "Tun ",
    "Guang ",
    "Xin ",
    "Zhi ",
    "Guang ",
    "Guang ",
    "Wei ",
    "Qiang ",
    "[?] ",
    "Da ",
    "Xia ",
    "Zheng ",
    "Zhu ",
    "Ke ",
    "Zhao ",
    "Fu ",
    "Ba ",
    "Duo ",
    "Duo ",
    "Ling ",
    "Zhuo ",
    "Xuan ",
    "Ju ",
    "Tan ",
    "Pao ",
    "Jiong ",
    "Pao ",
    "Tai ",
    "Tai ",
    "Bing ",
    "Yang ",
    "Tong ",
    "Han ",
    "Zhu ",
    "Zha ",
    "Dian ",
    "Wei ",
    "Shi ",
    "Lian ",
    "Chi ",
    "Huang ",
    "[?] ",
    "Hu ",
    "Shuo ",
    "Lan ",
    "Jing ",
    "Jiao ",
    "Xu ",
    "Xing ",
    "Quan ",
    "Lie ",
    "Huan ",
    "Yang ",
    "Xiao ",
    "Xiu ",
    "Xian ",
    "Yin ",
    "Wu ",
    "Zhou ",
    "Yao ",
    "Shi ",
    "Wei ",
    "Tong ",
    "Xue ",
    "Zai ",
    "Kai ",
    "Hong ",
    "Luo ",
    "Xia ",
    "Zhu ",
    "Xuan ",
    "Zheng ",
    "Po ",
    "Yan ",
    "Hui ",
    "Guang ",
    "Zhe ",
    "Hui ",
    "Kao ",
    "[?] ",
    "Fan ",
    "Shao ",
    "Ye ",
    "Hui ",
    "[?] ",
    "Tang ",
    "Jin ",
    "Re ",
    "[?] ",
    "Xi ",
    "Fu ",
    "Jiong ",
    "Che ",
    "Pu ",
    "Jing ",
    "Zhuo ",
    "Ting ",
    "Wan ",
    "Hai ",
    "Peng ",
    "Lang ",
    "Shan ",
    "Hu ",
    "Feng ",
    "Chi ",
    "Rong "
  ];
  return x70;
}
var x71;
var hasRequiredX71;
function requireX71() {
  if (hasRequiredX71) return x71;
  hasRequiredX71 = 1;
  x71 = [
    "Hu ",
    "Xi ",
    "Shu ",
    "He ",
    "Xun ",
    "Ku ",
    "Jue ",
    "Xiao ",
    "Xi ",
    "Yan ",
    "Han ",
    "Zhuang ",
    "Jun ",
    "Di ",
    "Xie ",
    "Ji ",
    "Wu ",
    "[?] ",
    "[?] ",
    "Han ",
    "Yan ",
    "Huan ",
    "Men ",
    "Ju ",
    "Chou ",
    "Bei ",
    "Fen ",
    "Lin ",
    "Kun ",
    "Hun ",
    "Tun ",
    "Xi ",
    "Cui ",
    "Wu ",
    "Hong ",
    "Ju ",
    "Fu ",
    "Wo ",
    "Jiao ",
    "Cong ",
    "Feng ",
    "Ping ",
    "Qiong ",
    "Ruo ",
    "Xi ",
    "Qiong ",
    "Xin ",
    "Zhuo ",
    "Yan ",
    "Yan ",
    "Yi ",
    "Jue ",
    "Yu ",
    "Gang ",
    "Ran ",
    "Pi ",
    "Gu ",
    "[?] ",
    "Sheng ",
    "Chang ",
    "Shao ",
    "[?] ",
    "[?] ",
    "[?] ",
    "[?] ",
    "Chen ",
    "He ",
    "Kui ",
    "Zhong ",
    "Duan ",
    "Xia ",
    "Hui ",
    "Feng ",
    "Lian ",
    "Xuan ",
    "Xing ",
    "Huang ",
    "Jiao ",
    "Jian ",
    "Bi ",
    "Ying ",
    "Zhu ",
    "Wei ",
    "Tuan ",
    "Tian ",
    "Xi ",
    "Nuan ",
    "Nuan ",
    "Chan ",
    "Yan ",
    "Jiong ",
    "Jiong ",
    "Yu ",
    "Mei ",
    "Sha ",
    "Wei ",
    "Ye ",
    "Xin ",
    "Qiong ",
    "Rou ",
    "Mei ",
    "Huan ",
    "Xu ",
    "Zhao ",
    "Wei ",
    "Fan ",
    "Qiu ",
    "Sui ",
    "Yang ",
    "Lie ",
    "Zhu ",
    "Jie ",
    "Gao ",
    "Gua ",
    "Bao ",
    "Hu ",
    "Yun ",
    "Xia ",
    "[?] ",
    "[?] ",
    "Bian ",
    "Gou ",
    "Tui ",
    "Tang ",
    "Chao ",
    "Shan ",
    "N ",
    "Bo ",
    "Huang ",
    "Xie ",
    "Xi ",
    "Wu ",
    "Xi ",
    "Yun ",
    "He ",
    "He ",
    "Xi ",
    "Yun ",
    "Xiong ",
    "Nai ",
    "Shan ",
    "Qiong ",
    "Yao ",
    "Xun ",
    "Mi ",
    "Lian ",
    "Ying ",
    "Wen ",
    "Rong ",
    "Oozutsu ",
    "[?] ",
    "Qiang ",
    "Liu ",
    "Xi ",
    "Bi ",
    "Biao ",
    "Zong ",
    "Lu ",
    "Jian ",
    "Shou ",
    "Yi ",
    "Lou ",
    "Feng ",
    "Sui ",
    "Yi ",
    "Tong ",
    "Jue ",
    "Zong ",
    "Yun ",
    "Hu ",
    "Yi ",
    "Zhi ",
    "Ao ",
    "Wei ",
    "Liao ",
    "Han ",
    "Ou ",
    "Re ",
    "Jiong ",
    "Man ",
    "[?] ",
    "Shang ",
    "Cuan ",
    "Zeng ",
    "Jian ",
    "Xi ",
    "Xi ",
    "Xi ",
    "Yi ",
    "Xiao ",
    "Chi ",
    "Huang ",
    "Chan ",
    "Ye ",
    "Qian ",
    "Ran ",
    "Yan ",
    "Xian ",
    "Qiao ",
    "Zun ",
    "Deng ",
    "Dun ",
    "Shen ",
    "Jiao ",
    "Fen ",
    "Si ",
    "Liao ",
    "Yu ",
    "Lin ",
    "Tong ",
    "Shao ",
    "Fen ",
    "Fan ",
    "Yan ",
    "Xun ",
    "Lan ",
    "Mei ",
    "Tang ",
    "Yi ",
    "Jing ",
    "Men ",
    "[?] ",
    "[?] ",
    "Ying ",
    "Yu ",
    "Yi ",
    "Xue ",
    "Lan ",
    "Tai ",
    "Zao ",
    "Can ",
    "Sui ",
    "Xi ",
    "Que ",
    "Cong ",
    "Lian ",
    "Hui ",
    "Zhu ",
    "Xie ",
    "Ling ",
    "Wei ",
    "Yi ",
    "Xie ",
    "Zhao ",
    "Hui ",
    "Tatsu ",
    "Nung ",
    "Lan ",
    "Ru ",
    "Xian ",
    "Kao ",
    "Xun ",
    "Jin ",
    "Chou ",
    "Chou ",
    "Yao "
  ];
  return x71;
}
var x72;
var hasRequiredX72;
function requireX72() {
  if (hasRequiredX72) return x72;
  hasRequiredX72 = 1;
  x72 = [
    "He ",
    "Lan ",
    "Biao ",
    "Rong ",
    "Li ",
    "Mo ",
    "Bao ",
    "Ruo ",
    "Lu ",
    "La ",
    "Ao ",
    "Xun ",
    "Kuang ",
    "Shuo ",
    "[?] ",
    "Li ",
    "Lu ",
    "Jue ",
    "Liao ",
    "Yan ",
    "Xi ",
    "Xie ",
    "Long ",
    "Ye ",
    "[?] ",
    "Rang ",
    "Yue ",
    "Lan ",
    "Cong ",
    "Jue ",
    "Tong ",
    "Guan ",
    "[?] ",
    "Che ",
    "Mi ",
    "Tang ",
    "Lan ",
    "Zhu ",
    "[?] ",
    "Ling ",
    "Cuan ",
    "Yu ",
    "Zhua ",
    "Tsumekanmuri ",
    "Pa ",
    "Zheng ",
    "Pao ",
    "Cheng ",
    "Yuan ",
    "Ai ",
    "Wei ",
    "[?] ",
    "Jue ",
    "Jue ",
    "Fu ",
    "Ye ",
    "Ba ",
    "Die ",
    "Ye ",
    "Yao ",
    "Zu ",
    "Shuang ",
    "Er ",
    "Qiang ",
    "Chuang ",
    "Ge ",
    "Zang ",
    "Die ",
    "Qiang ",
    "Yong ",
    "Qiang ",
    "Pian ",
    "Ban ",
    "Pan ",
    "Shao ",
    "Jian ",
    "Pai ",
    "Du ",
    "Chuang ",
    "Tou ",
    "Zha ",
    "Bian ",
    "Die ",
    "Bang ",
    "Bo ",
    "Chuang ",
    "You ",
    "[?] ",
    "Du ",
    "Ya ",
    "Cheng ",
    "Niu ",
    "Ushihen ",
    "Pin ",
    "Jiu ",
    "Mou ",
    "Tuo ",
    "Mu ",
    "Lao ",
    "Ren ",
    "Mang ",
    "Fang ",
    "Mao ",
    "Mu ",
    "Gang ",
    "Wu ",
    "Yan ",
    "Ge ",
    "Bei ",
    "Si ",
    "Jian ",
    "Gu ",
    "You ",
    "Ge ",
    "Sheng ",
    "Mu ",
    "Di ",
    "Qian ",
    "Quan ",
    "Quan ",
    "Zi ",
    "Te ",
    "Xi ",
    "Mang ",
    "Keng ",
    "Qian ",
    "Wu ",
    "Gu ",
    "Xi ",
    "Li ",
    "Li ",
    "Pou ",
    "Ji ",
    "Gang ",
    "Zhi ",
    "Ben ",
    "Quan ",
    "Run ",
    "Du ",
    "Ju ",
    "Jia ",
    "Jian ",
    "Feng ",
    "Pian ",
    "Ke ",
    "Ju ",
    "Kao ",
    "Chu ",
    "Xi ",
    "Bei ",
    "Luo ",
    "Jie ",
    "Ma ",
    "San ",
    "Wei ",
    "Li ",
    "Dun ",
    "Tong ",
    "[?] ",
    "Jiang ",
    "Ikenie ",
    "Li ",
    "Du ",
    "Lie ",
    "Pi ",
    "Piao ",
    "Bao ",
    "Xi ",
    "Chou ",
    "Wei ",
    "Kui ",
    "Chou ",
    "Quan ",
    "Fan ",
    "Ba ",
    "Fan ",
    "Qiu ",
    "Ji ",
    "Cai ",
    "Chuo ",
    "An ",
    "Jie ",
    "Zhuang ",
    "Guang ",
    "Ma ",
    "You ",
    "Kang ",
    "Bo ",
    "Hou ",
    "Ya ",
    "Yin ",
    "Huan ",
    "Zhuang ",
    "Yun ",
    "Kuang ",
    "Niu ",
    "Di ",
    "Qing ",
    "Zhong ",
    "Mu ",
    "Bei ",
    "Pi ",
    "Ju ",
    "Ni ",
    "Sheng ",
    "Pao ",
    "Xia ",
    "Tuo ",
    "Hu ",
    "Ling ",
    "Fei ",
    "Pi ",
    "Ni ",
    "Ao ",
    "You ",
    "Gou ",
    "Yue ",
    "Ju ",
    "Dan ",
    "Po ",
    "Gu ",
    "Xian ",
    "Ning ",
    "Huan ",
    "Hen ",
    "Jiao ",
    "He ",
    "Zhao ",
    "Ji ",
    "Xun ",
    "Shan ",
    "Ta ",
    "Rong ",
    "Shou ",
    "Tong ",
    "Lao ",
    "Du ",
    "Xia ",
    "Shi ",
    "Hua ",
    "Zheng ",
    "Yu ",
    "Sun ",
    "Yu ",
    "Bi ",
    "Mang ",
    "Xi ",
    "Juan ",
    "Li ",
    "Xia ",
    "Yin ",
    "Suan ",
    "Lang ",
    "Bei ",
    "Zhi ",
    "Yan "
  ];
  return x72;
}
var x73;
var hasRequiredX73;
function requireX73() {
  if (hasRequiredX73) return x73;
  hasRequiredX73 = 1;
  x73 = [
    "Sha ",
    "Li ",
    "Han ",
    "Xian ",
    "Jing ",
    "Pai ",
    "Fei ",
    "Yao ",
    "Ba ",
    "Qi ",
    "Ni ",
    "Biao ",
    "Yin ",
    "Lai ",
    "Xi ",
    "Jian ",
    "Qiang ",
    "Kun ",
    "Yan ",
    "Guo ",
    "Zong ",
    "Mi ",
    "Chang ",
    "Yi ",
    "Zhi ",
    "Zheng ",
    "Ya ",
    "Meng ",
    "Cai ",
    "Cu ",
    "She ",
    "Kari ",
    "Cen ",
    "Luo ",
    "Hu ",
    "Zong ",
    "Ji ",
    "Wei ",
    "Feng ",
    "Wo ",
    "Yuan ",
    "Xing ",
    "Zhu ",
    "Mao ",
    "Wei ",
    "Yuan ",
    "Xian ",
    "Tuan ",
    "Ya ",
    "Nao ",
    "Xie ",
    "Jia ",
    "Hou ",
    "Bian ",
    "You ",
    "You ",
    "Mei ",
    "Zha ",
    "Yao ",
    "Sun ",
    "Bo ",
    "Ming ",
    "Hua ",
    "Yuan ",
    "Sou ",
    "Ma ",
    "Yuan ",
    "Dai ",
    "Yu ",
    "Shi ",
    "Hao ",
    "[?] ",
    "Yi ",
    "Zhen ",
    "Chuang ",
    "Hao ",
    "Man ",
    "Jing ",
    "Jiang ",
    "Mu ",
    "Zhang ",
    "Chan ",
    "Ao ",
    "Ao ",
    "Hao ",
    "Cui ",
    "Fen ",
    "Jue ",
    "Bi ",
    "Bi ",
    "Huang ",
    "Pu ",
    "Lin ",
    "Yu ",
    "Tong ",
    "Yao ",
    "Liao ",
    "Shuo ",
    "Xiao ",
    "Swu ",
    "Ton ",
    "Xi ",
    "Ge ",
    "Juan ",
    "Du ",
    "Hui ",
    "Kuai ",
    "Xian ",
    "Xie ",
    "Ta ",
    "Xian ",
    "Xun ",
    "Ning ",
    "Pin ",
    "Huo ",
    "Nou ",
    "Meng ",
    "Lie ",
    "Nao ",
    "Guang ",
    "Shou ",
    "Lu ",
    "Ta ",
    "Xian ",
    "Mi ",
    "Rang ",
    "Huan ",
    "Nao ",
    "Luo ",
    "Xian ",
    "Qi ",
    "Jue ",
    "Xuan ",
    "Miao ",
    "Zi ",
    "Lu ",
    "Lu ",
    "Yu ",
    "Su ",
    "Wang ",
    "Qiu ",
    "Ga ",
    "Ding ",
    "Le ",
    "Ba ",
    "Ji ",
    "Hong ",
    "Di ",
    "Quan ",
    "Gan ",
    "Jiu ",
    "Yu ",
    "Ji ",
    "Yu ",
    "Yang ",
    "Ma ",
    "Gong ",
    "Wu ",
    "Fu ",
    "Wen ",
    "Jie ",
    "Ya ",
    "Fen ",
    "Bian ",
    "Beng ",
    "Yue ",
    "Jue ",
    "Yun ",
    "Jue ",
    "Wan ",
    "Jian ",
    "Mei ",
    "Dan ",
    "Pi ",
    "Wei ",
    "Huan ",
    "Xian ",
    "Qiang ",
    "Ling ",
    "Dai ",
    "Yi ",
    "An ",
    "Ping ",
    "Dian ",
    "Fu ",
    "Xuan ",
    "Xi ",
    "Bo ",
    "Ci ",
    "Gou ",
    "Jia ",
    "Shao ",
    "Po ",
    "Ci ",
    "Ke ",
    "Ran ",
    "Sheng ",
    "Shen ",
    "Yi ",
    "Zu ",
    "Jia ",
    "Min ",
    "Shan ",
    "Liu ",
    "Bi ",
    "Zhen ",
    "Zhen ",
    "Jue ",
    "Fa ",
    "Long ",
    "Jin ",
    "Jiao ",
    "Jian ",
    "Li ",
    "Guang ",
    "Xian ",
    "Zhou ",
    "Gong ",
    "Yan ",
    "Xiu ",
    "Yang ",
    "Xu ",
    "Luo ",
    "Su ",
    "Zhu ",
    "Qin ",
    "Ken ",
    "Xun ",
    "Bao ",
    "Er ",
    "Xiang ",
    "Yao ",
    "Xia ",
    "Heng ",
    "Gui ",
    "Chong ",
    "Xu ",
    "Ban ",
    "Pei ",
    "[?] ",
    "Dang ",
    "Ei ",
    "Hun ",
    "Wen ",
    "E ",
    "Cheng ",
    "Ti ",
    "Wu ",
    "Wu ",
    "Cheng ",
    "Jun ",
    "Mei ",
    "Bei ",
    "Ting ",
    "Xian ",
    "Chuo "
  ];
  return x73;
}
var x74;
var hasRequiredX74;
function requireX74() {
  if (hasRequiredX74) return x74;
  hasRequiredX74 = 1;
  x74 = [
    "Han ",
    "Xuan ",
    "Yan ",
    "Qiu ",
    "Quan ",
    "Lang ",
    "Li ",
    "Xiu ",
    "Fu ",
    "Liu ",
    "Ye ",
    "Xi ",
    "Ling ",
    "Li ",
    "Jin ",
    "Lian ",
    "Suo ",
    "Chiisai ",
    "[?] ",
    "Wan ",
    "Dian ",
    "Pin ",
    "Zhan ",
    "Cui ",
    "Min ",
    "Yu ",
    "Ju ",
    "Chen ",
    "Lai ",
    "Wen ",
    "Sheng ",
    "Wei ",
    "Dian ",
    "Chu ",
    "Zhuo ",
    "Pei ",
    "Cheng ",
    "Hu ",
    "Qi ",
    "E ",
    "Kun ",
    "Chang ",
    "Qi ",
    "Beng ",
    "Wan ",
    "Lu ",
    "Cong ",
    "Guan ",
    "Yan ",
    "Diao ",
    "Bei ",
    "Lin ",
    "Qin ",
    "Pi ",
    "Pa ",
    "Que ",
    "Zhuo ",
    "Qin ",
    "Fa ",
    "[?] ",
    "Qiong ",
    "Du ",
    "Jie ",
    "Hun ",
    "Yu ",
    "Mao ",
    "Mei ",
    "Chun ",
    "Xuan ",
    "Ti ",
    "Xing ",
    "Dai ",
    "Rou ",
    "Min ",
    "Zhen ",
    "Wei ",
    "Ruan ",
    "Huan ",
    "Jie ",
    "Chuan ",
    "Jian ",
    "Zhuan ",
    "Yang ",
    "Lian ",
    "Quan ",
    "Xia ",
    "Duan ",
    "Yuan ",
    "Ye ",
    "Nao ",
    "Hu ",
    "Ying ",
    "Yu ",
    "Huang ",
    "Rui ",
    "Se ",
    "Liu ",
    "Shi ",
    "Rong ",
    "Suo ",
    "Yao ",
    "Wen ",
    "Wu ",
    "Jin ",
    "Jin ",
    "Ying ",
    "Ma ",
    "Tao ",
    "Liu ",
    "Tang ",
    "Li ",
    "Lang ",
    "Gui ",
    "Zhen ",
    "Qiang ",
    "Cuo ",
    "Jue ",
    "Zhao ",
    "Yao ",
    "Ai ",
    "Bin ",
    "Tu ",
    "Chang ",
    "Kun ",
    "Zhuan ",
    "Cong ",
    "Jin ",
    "Yi ",
    "Cui ",
    "Cong ",
    "Qi ",
    "Li ",
    "Ying ",
    "Suo ",
    "Qiu ",
    "Xuan ",
    "Ao ",
    "Lian ",
    "Man ",
    "Zhang ",
    "Yin ",
    "[?] ",
    "Ying ",
    "Zhi ",
    "Lu ",
    "Wu ",
    "Deng ",
    "Xiou ",
    "Zeng ",
    "Xun ",
    "Qu ",
    "Dang ",
    "Lin ",
    "Liao ",
    "Qiong ",
    "Su ",
    "Huang ",
    "Gui ",
    "Pu ",
    "Jing ",
    "Fan ",
    "Jin ",
    "Liu ",
    "Ji ",
    "[?] ",
    "Jing ",
    "Ai ",
    "Bi ",
    "Can ",
    "Qu ",
    "Zao ",
    "Dang ",
    "Jiao ",
    "Gun ",
    "Tan ",
    "Hui ",
    "Huan ",
    "Se ",
    "Sui ",
    "Tian ",
    "[?] ",
    "Yu ",
    "Jin ",
    "Lu ",
    "Bin ",
    "Shou ",
    "Wen ",
    "Zui ",
    "Lan ",
    "Xi ",
    "Ji ",
    "Xuan ",
    "Ruan ",
    "Huo ",
    "Gai ",
    "Lei ",
    "Du ",
    "Li ",
    "Zhi ",
    "Rou ",
    "Li ",
    "Zan ",
    "Qiong ",
    "Zhe ",
    "Gui ",
    "Sui ",
    "La ",
    "Long ",
    "Lu ",
    "Li ",
    "Zan ",
    "Lan ",
    "Ying ",
    "Mi ",
    "Xiang ",
    "Xi ",
    "Guan ",
    "Dao ",
    "Zan ",
    "Huan ",
    "Gua ",
    "Bo ",
    "Die ",
    "Bao ",
    "Hu ",
    "Zhi ",
    "Piao ",
    "Ban ",
    "Rang ",
    "Li ",
    "Wa ",
    "Dekaguramu ",
    "Jiang ",
    "Qian ",
    "Fan ",
    "Pen ",
    "Fang ",
    "Dan ",
    "Weng ",
    "Ou ",
    "Deshiguramu ",
    "Miriguramu ",
    "Thon ",
    "Hu ",
    "Ling ",
    "Yi ",
    "Ping ",
    "Ci ",
    "Hekutogura ",
    "Juan ",
    "Chang ",
    "Chi ",
    "Sarake ",
    "Dang ",
    "Meng ",
    "Pou "
  ];
  return x74;
}
var x75;
var hasRequiredX75;
function requireX75() {
  if (hasRequiredX75) return x75;
  hasRequiredX75 = 1;
  x75 = [
    "Zhui ",
    "Ping ",
    "Bian ",
    "Zhou ",
    "Zhen ",
    "Senchigura ",
    "Ci ",
    "Ying ",
    "Qi ",
    "Xian ",
    "Lou ",
    "Di ",
    "Ou ",
    "Meng ",
    "Zhuan ",
    "Peng ",
    "Lin ",
    "Zeng ",
    "Wu ",
    "Pi ",
    "Dan ",
    "Weng ",
    "Ying ",
    "Yan ",
    "Gan ",
    "Dai ",
    "Shen ",
    "Tian ",
    "Tian ",
    "Han ",
    "Chang ",
    "Sheng ",
    "Qing ",
    "Sheng ",
    "Chan ",
    "Chan ",
    "Rui ",
    "Sheng ",
    "Su ",
    "Sen ",
    "Yong ",
    "Shuai ",
    "Lu ",
    "Fu ",
    "Yong ",
    "Beng ",
    "Feng ",
    "Ning ",
    "Tian ",
    "You ",
    "Jia ",
    "Shen ",
    "Zha ",
    "Dian ",
    "Fu ",
    "Nan ",
    "Dian ",
    "Ping ",
    "Ting ",
    "Hua ",
    "Ting ",
    "Quan ",
    "Zi ",
    "Meng ",
    "Bi ",
    "Qi ",
    "Liu ",
    "Xun ",
    "Liu ",
    "Chang ",
    "Mu ",
    "Yun ",
    "Fan ",
    "Fu ",
    "Geng ",
    "Tian ",
    "Jie ",
    "Jie ",
    "Quan ",
    "Wei ",
    "Fu ",
    "Tian ",
    "Mu ",
    "Tap ",
    "Pan ",
    "Jiang ",
    "Wa ",
    "Da ",
    "Nan ",
    "Liu ",
    "Ben ",
    "Zhen ",
    "Chu ",
    "Mu ",
    "Mu ",
    "Ce ",
    "Cen ",
    "Gai ",
    "Bi ",
    "Da ",
    "Zhi ",
    "Lue ",
    "Qi ",
    "Lue ",
    "Pan ",
    "Kesa ",
    "Fan ",
    "Hua ",
    "Yu ",
    "Yu ",
    "Mu ",
    "Jun ",
    "Yi ",
    "Liu ",
    "Yu ",
    "Die ",
    "Chou ",
    "Hua ",
    "Dang ",
    "Chuo ",
    "Ji ",
    "Wan ",
    "Jiang ",
    "Sheng ",
    "Chang ",
    "Tuan ",
    "Lei ",
    "Ji ",
    "Cha ",
    "Liu ",
    "Tatamu ",
    "Tuan ",
    "Lin ",
    "Jiang ",
    "Jiang ",
    "Chou ",
    "Bo ",
    "Die ",
    "Die ",
    "Pi ",
    "Nie ",
    "Dan ",
    "Shu ",
    "Shu ",
    "Zhi ",
    "Yi ",
    "Chuang ",
    "Nai ",
    "Ding ",
    "Bi ",
    "Jie ",
    "Liao ",
    "Gong ",
    "Ge ",
    "Jiu ",
    "Zhou ",
    "Xia ",
    "Shan ",
    "Xu ",
    "Nue ",
    "Li ",
    "Yang ",
    "Chen ",
    "You ",
    "Ba ",
    "Jie ",
    "Jue ",
    "Zhi ",
    "Xia ",
    "Cui ",
    "Bi ",
    "Yi ",
    "Li ",
    "Zong ",
    "Chuang ",
    "Feng ",
    "Zhu ",
    "Pao ",
    "Pi ",
    "Gan ",
    "Ke ",
    "Ci ",
    "Xie ",
    "Qi ",
    "Dan ",
    "Zhen ",
    "Fa ",
    "Zhi ",
    "Teng ",
    "Ju ",
    "Ji ",
    "Fei ",
    "Qu ",
    "Dian ",
    "Jia ",
    "Xian ",
    "Cha ",
    "Bing ",
    "Ni ",
    "Zheng ",
    "Yong ",
    "Jing ",
    "Quan ",
    "Chong ",
    "Tong ",
    "Yi ",
    "Kai ",
    "Wei ",
    "Hui ",
    "Duo ",
    "Yang ",
    "Chi ",
    "Zhi ",
    "Hen ",
    "Ya ",
    "Mei ",
    "Dou ",
    "Jing ",
    "Xiao ",
    "Tong ",
    "Tu ",
    "Mang ",
    "Pi ",
    "Xiao ",
    "Suan ",
    "Pu ",
    "Li ",
    "Zhi ",
    "Cuo ",
    "Duo ",
    "Wu ",
    "Sha ",
    "Lao ",
    "Shou ",
    "Huan ",
    "Xian ",
    "Yi ",
    "Peng ",
    "Zhang ",
    "Guan ",
    "Tan ",
    "Fei ",
    "Ma ",
    "Lin ",
    "Chi ",
    "Ji ",
    "Dian ",
    "An ",
    "Chi ",
    "Bi ",
    "Bei ",
    "Min ",
    "Gu ",
    "Dui ",
    "E ",
    "Wei "
  ];
  return x75;
}
var x76;
var hasRequiredX76;
function requireX76() {
  if (hasRequiredX76) return x76;
  hasRequiredX76 = 1;
  x76 = [
    "Yu ",
    "Cui ",
    "Ya ",
    "Zhu ",
    "Cu ",
    "Dan ",
    "Shen ",
    "Zhung ",
    "Ji ",
    "Yu ",
    "Hou ",
    "Feng ",
    "La ",
    "Yang ",
    "Shen ",
    "Tu ",
    "Yu ",
    "Gua ",
    "Wen ",
    "Huan ",
    "Ku ",
    "Jia ",
    "Yin ",
    "Yi ",
    "Lu ",
    "Sao ",
    "Jue ",
    "Chi ",
    "Xi ",
    "Guan ",
    "Yi ",
    "Wen ",
    "Ji ",
    "Chuang ",
    "Ban ",
    "Lei ",
    "Liu ",
    "Chai ",
    "Shou ",
    "Nue ",
    "Dian ",
    "Da ",
    "Pie ",
    "Tan ",
    "Zhang ",
    "Biao ",
    "Shen ",
    "Cu ",
    "Luo ",
    "Yi ",
    "Zong ",
    "Chou ",
    "Zhang ",
    "Zhai ",
    "Sou ",
    "Suo ",
    "Que ",
    "Diao ",
    "Lou ",
    "Lu ",
    "Mo ",
    "Jin ",
    "Yin ",
    "Ying ",
    "Huang ",
    "Fu ",
    "Liao ",
    "Long ",
    "Qiao ",
    "Liu ",
    "Lao ",
    "Xian ",
    "Fei ",
    "Dan ",
    "Yin ",
    "He ",
    "Yan ",
    "Ban ",
    "Xian ",
    "Guan ",
    "Guai ",
    "Nong ",
    "Yu ",
    "Wei ",
    "Yi ",
    "Yong ",
    "Pi ",
    "Lei ",
    "Li ",
    "Shu ",
    "Dan ",
    "Lin ",
    "Dian ",
    "Lin ",
    "Lai ",
    "Pie ",
    "Ji ",
    "Chi ",
    "Yang ",
    "Xian ",
    "Jie ",
    "Zheng ",
    "[?] ",
    "Li ",
    "Huo ",
    "Lai ",
    "Shaku ",
    "Dian ",
    "Xian ",
    "Ying ",
    "Yin ",
    "Qu ",
    "Yong ",
    "Tan ",
    "Dian ",
    "Luo ",
    "Luan ",
    "Luan ",
    "Bo ",
    "[?] ",
    "Gui ",
    "Po ",
    "Fa ",
    "Deng ",
    "Fa ",
    "Bai ",
    "Bai ",
    "Qie ",
    "Bi ",
    "Zao ",
    "Zao ",
    "Mao ",
    "De ",
    "Pa ",
    "Jie ",
    "Huang ",
    "Gui ",
    "Ci ",
    "Ling ",
    "Gao ",
    "Mo ",
    "Ji ",
    "Jiao ",
    "Peng ",
    "Gao ",
    "Ai ",
    "E ",
    "Hao ",
    "Han ",
    "Bi ",
    "Wan ",
    "Chou ",
    "Qian ",
    "Xi ",
    "Ai ",
    "Jiong ",
    "Hao ",
    "Huang ",
    "Hao ",
    "Ze ",
    "Cui ",
    "Hao ",
    "Xiao ",
    "Ye ",
    "Po ",
    "Hao ",
    "Jiao ",
    "Ai ",
    "Xing ",
    "Huang ",
    "Li ",
    "Piao ",
    "He ",
    "Jiao ",
    "Pi ",
    "Gan ",
    "Pao ",
    "Zhou ",
    "Jun ",
    "Qiu ",
    "Cun ",
    "Que ",
    "Zha ",
    "Gu ",
    "Jun ",
    "Jun ",
    "Zhou ",
    "Zha ",
    "Gu ",
    "Zhan ",
    "Du ",
    "Min ",
    "Qi ",
    "Ying ",
    "Yu ",
    "Bei ",
    "Zhao ",
    "Zhong ",
    "Pen ",
    "He ",
    "Ying ",
    "He ",
    "Yi ",
    "Bo ",
    "Wan ",
    "He ",
    "Ang ",
    "Zhan ",
    "Yan ",
    "Jian ",
    "He ",
    "Yu ",
    "Kui ",
    "Fan ",
    "Gai ",
    "Dao ",
    "Pan ",
    "Fu ",
    "Qiu ",
    "Sheng ",
    "Dao ",
    "Lu ",
    "Zhan ",
    "Meng ",
    "Li ",
    "Jin ",
    "Xu ",
    "Jian ",
    "Pan ",
    "Guan ",
    "An ",
    "Lu ",
    "Shu ",
    "Zhou ",
    "Dang ",
    "An ",
    "Gu ",
    "Li ",
    "Mu ",
    "Cheng ",
    "Gan ",
    "Xu ",
    "Mang ",
    "Mang ",
    "Zhi ",
    "Qi ",
    "Ruan ",
    "Tian ",
    "Xiang ",
    "Dun ",
    "Xin ",
    "Xi ",
    "Pan ",
    "Feng ",
    "Dun ",
    "Min "
  ];
  return x76;
}
var x77;
var hasRequiredX77;
function requireX77() {
  if (hasRequiredX77) return x77;
  hasRequiredX77 = 1;
  x77 = [
    "Ming ",
    "Sheng ",
    "Shi ",
    "Yun ",
    "Mian ",
    "Pan ",
    "Fang ",
    "Miao ",
    "Dan ",
    "Mei ",
    "Mao ",
    "Kan ",
    "Xian ",
    "Ou ",
    "Shi ",
    "Yang ",
    "Zheng ",
    "Yao ",
    "Shen ",
    "Huo ",
    "Da ",
    "Zhen ",
    "Kuang ",
    "Ju ",
    "Shen ",
    "Chi ",
    "Sheng ",
    "Mei ",
    "Mo ",
    "Zhu ",
    "Zhen ",
    "Zhen ",
    "Mian ",
    "Di ",
    "Yuan ",
    "Die ",
    "Yi ",
    "Zi ",
    "Zi ",
    "Chao ",
    "Zha ",
    "Xuan ",
    "Bing ",
    "Mi ",
    "Long ",
    "Sui ",
    "Dong ",
    "Mi ",
    "Die ",
    "Yi ",
    "Er ",
    "Ming ",
    "Xuan ",
    "Chi ",
    "Kuang ",
    "Juan ",
    "Mou ",
    "Zhen ",
    "Tiao ",
    "Yang ",
    "Yan ",
    "Mo ",
    "Zhong ",
    "Mai ",
    "Zhao ",
    "Zheng ",
    "Mei ",
    "Jun ",
    "Shao ",
    "Han ",
    "Huan ",
    "Di ",
    "Cheng ",
    "Cuo ",
    "Juan ",
    "E ",
    "Wan ",
    "Xian ",
    "Xi ",
    "Kun ",
    "Lai ",
    "Jian ",
    "Shan ",
    "Tian ",
    "Hun ",
    "Wan ",
    "Ling ",
    "Shi ",
    "Qiong ",
    "Lie ",
    "Yai ",
    "Jing ",
    "Zheng ",
    "Li ",
    "Lai ",
    "Sui ",
    "Juan ",
    "Shui ",
    "Sui ",
    "Du ",
    "Bi ",
    "Bi ",
    "Mu ",
    "Hun ",
    "Ni ",
    "Lu ",
    "Yi ",
    "Jie ",
    "Cai ",
    "Zhou ",
    "Yu ",
    "Hun ",
    "Ma ",
    "Xia ",
    "Xing ",
    "Xi ",
    "Gun ",
    "Cai ",
    "Chun ",
    "Jian ",
    "Mei ",
    "Du ",
    "Hou ",
    "Xuan ",
    "Ti ",
    "Kui ",
    "Gao ",
    "Rui ",
    "Mou ",
    "Xu ",
    "Fa ",
    "Wen ",
    "Miao ",
    "Chou ",
    "Kui ",
    "Mi ",
    "Weng ",
    "Kou ",
    "Dang ",
    "Chen ",
    "Ke ",
    "Sou ",
    "Xia ",
    "Qiong ",
    "Mao ",
    "Ming ",
    "Man ",
    "Shui ",
    "Ze ",
    "Zhang ",
    "Yi ",
    "Diao ",
    "Ou ",
    "Mo ",
    "Shun ",
    "Cong ",
    "Lou ",
    "Chi ",
    "Man ",
    "Piao ",
    "Cheng ",
    "Ji ",
    "Meng ",
    "[?] ",
    "Run ",
    "Pie ",
    "Xi ",
    "Qiao ",
    "Pu ",
    "Zhu ",
    "Deng ",
    "Shen ",
    "Shun ",
    "Liao ",
    "Che ",
    "Xian ",
    "Kan ",
    "Ye ",
    "Xu ",
    "Tong ",
    "Mou ",
    "Lin ",
    "Kui ",
    "Xian ",
    "Ye ",
    "Ai ",
    "Hui ",
    "Zhan ",
    "Jian ",
    "Gu ",
    "Zhao ",
    "Qu ",
    "Wei ",
    "Chou ",
    "Sao ",
    "Ning ",
    "Xun ",
    "Yao ",
    "Huo ",
    "Meng ",
    "Mian ",
    "Bin ",
    "Mian ",
    "Li ",
    "Kuang ",
    "Jue ",
    "Xuan ",
    "Mian ",
    "Huo ",
    "Lu ",
    "Meng ",
    "Long ",
    "Guan ",
    "Man ",
    "Xi ",
    "Chu ",
    "Tang ",
    "Kan ",
    "Zhu ",
    "Mao ",
    "Jin ",
    "Lin ",
    "Yu ",
    "Shuo ",
    "Ce ",
    "Jue ",
    "Shi ",
    "Yi ",
    "Shen ",
    "Zhi ",
    "Hou ",
    "Shen ",
    "Ying ",
    "Ju ",
    "Zhou ",
    "Jiao ",
    "Cuo ",
    "Duan ",
    "Ai ",
    "Jiao ",
    "Zeng ",
    "Huo ",
    "Bai ",
    "Shi ",
    "Ding ",
    "Qi ",
    "Ji ",
    "Zi ",
    "Gan ",
    "Wu ",
    "Tuo ",
    "Ku ",
    "Qiang ",
    "Xi ",
    "Fan ",
    "Kuang "
  ];
  return x77;
}
var x78;
var hasRequiredX78;
function requireX78() {
  if (hasRequiredX78) return x78;
  hasRequiredX78 = 1;
  x78 = [
    "Dang ",
    "Ma ",
    "Sha ",
    "Dan ",
    "Jue ",
    "Li ",
    "Fu ",
    "Min ",
    "Nuo ",
    "Huo ",
    "Kang ",
    "Zhi ",
    "Qi ",
    "Kan ",
    "Jie ",
    "Fen ",
    "E ",
    "Ya ",
    "Pi ",
    "Zhe ",
    "Yan ",
    "Sui ",
    "Zhuan ",
    "Che ",
    "Dun ",
    "Pan ",
    "Yan ",
    "[?] ",
    "Feng ",
    "Fa ",
    "Mo ",
    "Zha ",
    "Qu ",
    "Yu ",
    "Luo ",
    "Tuo ",
    "Tuo ",
    "Di ",
    "Zhai ",
    "Zhen ",
    "Ai ",
    "Fei ",
    "Mu ",
    "Zhu ",
    "Li ",
    "Bian ",
    "Nu ",
    "Ping ",
    "Peng ",
    "Ling ",
    "Pao ",
    "Le ",
    "Po ",
    "Bo ",
    "Po ",
    "Shen ",
    "Za ",
    "Nuo ",
    "Li ",
    "Long ",
    "Tong ",
    "[?] ",
    "Li ",
    "Aragane ",
    "Chu ",
    "Keng ",
    "Quan ",
    "Zhu ",
    "Kuang ",
    "Huo ",
    "E ",
    "Nao ",
    "Jia ",
    "Lu ",
    "Wei ",
    "Ai ",
    "Luo ",
    "Ken ",
    "Xing ",
    "Yan ",
    "Tong ",
    "Peng ",
    "Xi ",
    "[?] ",
    "Hong ",
    "Shuo ",
    "Xia ",
    "Qiao ",
    "[?] ",
    "Wei ",
    "Qiao ",
    "[?] ",
    "Keng ",
    "Xiao ",
    "Que ",
    "Chan ",
    "Lang ",
    "Hong ",
    "Yu ",
    "Xiao ",
    "Xia ",
    "Mang ",
    "Long ",
    "Iong ",
    "Che ",
    "Che ",
    "E ",
    "Liu ",
    "Ying ",
    "Mang ",
    "Que ",
    "Yan ",
    "Sha ",
    "Kun ",
    "Yu ",
    "[?] ",
    "Kaki ",
    "Lu ",
    "Chen ",
    "Jian ",
    "Nue ",
    "Song ",
    "Zhuo ",
    "Keng ",
    "Peng ",
    "Yan ",
    "Zhui ",
    "Kong ",
    "Ceng ",
    "Qi ",
    "Zong ",
    "Qing ",
    "Lin ",
    "Jun ",
    "Bo ",
    "Ding ",
    "Min ",
    "Diao ",
    "Jian ",
    "He ",
    "Lu ",
    "Ai ",
    "Sui ",
    "Que ",
    "Ling ",
    "Bei ",
    "Yin ",
    "Dui ",
    "Wu ",
    "Qi ",
    "Lun ",
    "Wan ",
    "Dian ",
    "Gang ",
    "Pei ",
    "Qi ",
    "Chen ",
    "Ruan ",
    "Yan ",
    "Die ",
    "Ding ",
    "Du ",
    "Tuo ",
    "Jie ",
    "Ying ",
    "Bian ",
    "Ke ",
    "Bi ",
    "Wei ",
    "Shuo ",
    "Zhen ",
    "Duan ",
    "Xia ",
    "Dang ",
    "Ti ",
    "Nao ",
    "Peng ",
    "Jian ",
    "Di ",
    "Tan ",
    "Cha ",
    "Seki ",
    "Qi ",
    "[?] ",
    "Feng ",
    "Xuan ",
    "Que ",
    "Que ",
    "Ma ",
    "Gong ",
    "Nian ",
    "Su ",
    "E ",
    "Ci ",
    "Liu ",
    "Si ",
    "Tang ",
    "Bang ",
    "Hua ",
    "Pi ",
    "Wei ",
    "Sang ",
    "Lei ",
    "Cuo ",
    "Zhen ",
    "Xia ",
    "Qi ",
    "Lian ",
    "Pan ",
    "Wei ",
    "Yun ",
    "Dui ",
    "Zhe ",
    "Ke ",
    "La ",
    "[?] ",
    "Qing ",
    "Gun ",
    "Zhuan ",
    "Chan ",
    "Qi ",
    "Ao ",
    "Peng ",
    "Lu ",
    "Lu ",
    "Kan ",
    "Qiang ",
    "Chen ",
    "Yin ",
    "Lei ",
    "Biao ",
    "Qi ",
    "Mo ",
    "Qi ",
    "Cui ",
    "Zong ",
    "Qing ",
    "Chuo ",
    "[?] ",
    "Ji ",
    "Shan ",
    "Lao ",
    "Qu ",
    "Zeng ",
    "Deng ",
    "Jian ",
    "Xi ",
    "Lin ",
    "Ding ",
    "Dian ",
    "Huang ",
    "Pan ",
    "Za ",
    "Qiao ",
    "Di ",
    "Li "
  ];
  return x78;
}
var x79;
var hasRequiredX79;
function requireX79() {
  if (hasRequiredX79) return x79;
  hasRequiredX79 = 1;
  x79 = [
    "Tani ",
    "Jiao ",
    "[?] ",
    "Zhang ",
    "Qiao ",
    "Dun ",
    "Xian ",
    "Yu ",
    "Zhui ",
    "He ",
    "Huo ",
    "Zhai ",
    "Lei ",
    "Ke ",
    "Chu ",
    "Ji ",
    "Que ",
    "Dang ",
    "Yi ",
    "Jiang ",
    "Pi ",
    "Pi ",
    "Yu ",
    "Pin ",
    "Qi ",
    "Ai ",
    "Kai ",
    "Jian ",
    "Yu ",
    "Ruan ",
    "Meng ",
    "Pao ",
    "Ci ",
    "[?] ",
    "[?] ",
    "Mie ",
    "Ca ",
    "Xian ",
    "Kuang ",
    "Lei ",
    "Lei ",
    "Zhi ",
    "Li ",
    "Li ",
    "Fan ",
    "Que ",
    "Pao ",
    "Ying ",
    "Li ",
    "Long ",
    "Long ",
    "Mo ",
    "Bo ",
    "Shuang ",
    "Guan ",
    "Lan ",
    "Zan ",
    "Yan ",
    "Shi ",
    "Shi ",
    "Li ",
    "Reng ",
    "She ",
    "Yue ",
    "Si ",
    "Qi ",
    "Ta ",
    "Ma ",
    "Xie ",
    "Xian ",
    "Xian ",
    "Zhi ",
    "Qi ",
    "Zhi ",
    "Beng ",
    "Dui ",
    "Zhong ",
    "[?] ",
    "Yi ",
    "Shi ",
    "You ",
    "Zhi ",
    "Tiao ",
    "Fu ",
    "Fu ",
    "Mi ",
    "Zu ",
    "Zhi ",
    "Suan ",
    "Mei ",
    "Zuo ",
    "Qu ",
    "Hu ",
    "Zhu ",
    "Shen ",
    "Sui ",
    "Ci ",
    "Chai ",
    "Mi ",
    "Lu ",
    "Yu ",
    "Xiang ",
    "Wu ",
    "Tiao ",
    "Piao ",
    "Zhu ",
    "Gui ",
    "Xia ",
    "Zhi ",
    "Ji ",
    "Gao ",
    "Zhen ",
    "Gao ",
    "Shui ",
    "Jin ",
    "Chen ",
    "Gai ",
    "Kun ",
    "Di ",
    "Dao ",
    "Huo ",
    "Tao ",
    "Qi ",
    "Gu ",
    "Guan ",
    "Zui ",
    "Ling ",
    "Lu ",
    "Bing ",
    "Jin ",
    "Dao ",
    "Zhi ",
    "Lu ",
    "Shan ",
    "Bei ",
    "Zhe ",
    "Hui ",
    "You ",
    "Xi ",
    "Yin ",
    "Zi ",
    "Huo ",
    "Zhen ",
    "Fu ",
    "Yuan ",
    "Wu ",
    "Xian ",
    "Yang ",
    "Ti ",
    "Yi ",
    "Mei ",
    "Si ",
    "Di ",
    "[?] ",
    "Zhuo ",
    "Zhen ",
    "Yong ",
    "Ji ",
    "Gao ",
    "Tang ",
    "Si ",
    "Ma ",
    "Ta ",
    "[?] ",
    "Xuan ",
    "Qi ",
    "Yu ",
    "Xi ",
    "Ji ",
    "Si ",
    "Chan ",
    "Tan ",
    "Kuai ",
    "Sui ",
    "Li ",
    "Nong ",
    "Ni ",
    "Dao ",
    "Li ",
    "Rang ",
    "Yue ",
    "Ti ",
    "Zan ",
    "Lei ",
    "Rou ",
    "Yu ",
    "Yu ",
    "Chi ",
    "Xie ",
    "Qin ",
    "He ",
    "Tu ",
    "Xiu ",
    "Si ",
    "Ren ",
    "Tu ",
    "Zi ",
    "Cha ",
    "Gan ",
    "Yi ",
    "Xian ",
    "Bing ",
    "Nian ",
    "Qiu ",
    "Qiu ",
    "Chong ",
    "Fen ",
    "Hao ",
    "Yun ",
    "Ke ",
    "Miao ",
    "Zhi ",
    "Geng ",
    "Bi ",
    "Zhi ",
    "Yu ",
    "Mi ",
    "Ku ",
    "Ban ",
    "Pi ",
    "Ni ",
    "Li ",
    "You ",
    "Zu ",
    "Pi ",
    "Ba ",
    "Ling ",
    "Mo ",
    "Cheng ",
    "Nian ",
    "Qin ",
    "Yang ",
    "Zuo ",
    "Zhi ",
    "Zhi ",
    "Shu ",
    "Ju ",
    "Zi ",
    "Huo ",
    "Ji ",
    "Cheng ",
    "Tong ",
    "Zhi ",
    "Huo ",
    "He ",
    "Yin ",
    "Zi ",
    "Zhi ",
    "Jie ",
    "Ren ",
    "Du ",
    "Yi ",
    "Zhu ",
    "Hui ",
    "Nong ",
    "Fu "
  ];
  return x79;
}
var x7a;
var hasRequiredX7a;
function requireX7a() {
  if (hasRequiredX7a) return x7a;
  hasRequiredX7a = 1;
  x7a = [
    "Xi ",
    "Kao ",
    "Lang ",
    "Fu ",
    "Ze ",
    "Shui ",
    "Lu ",
    "Kun ",
    "Gan ",
    "Geng ",
    "Ti ",
    "Cheng ",
    "Tu ",
    "Shao ",
    "Shui ",
    "Ya ",
    "Lun ",
    "Lu ",
    "Gu ",
    "Zuo ",
    "Ren ",
    "Zhun ",
    "Bang ",
    "Bai ",
    "Ji ",
    "Zhi ",
    "Zhi ",
    "Kun ",
    "Leng ",
    "Peng ",
    "Ke ",
    "Bing ",
    "Chou ",
    "Zu ",
    "Yu ",
    "Su ",
    "Lue ",
    "[?] ",
    "Yi ",
    "Xi ",
    "Bian ",
    "Ji ",
    "Fu ",
    "Bi ",
    "Nuo ",
    "Jie ",
    "Zhong ",
    "Zong ",
    "Xu ",
    "Cheng ",
    "Dao ",
    "Wen ",
    "Lian ",
    "Zi ",
    "Yu ",
    "Ji ",
    "Xu ",
    "Zhen ",
    "Zhi ",
    "Dao ",
    "Jia ",
    "Ji ",
    "Gao ",
    "Gao ",
    "Gu ",
    "Rong ",
    "Sui ",
    "You ",
    "Ji ",
    "Kang ",
    "Mu ",
    "Shan ",
    "Men ",
    "Zhi ",
    "Ji ",
    "Lu ",
    "Su ",
    "Ji ",
    "Ying ",
    "Wen ",
    "Qiu ",
    "Se ",
    "[?] ",
    "Yi ",
    "Huang ",
    "Qie ",
    "Ji ",
    "Sui ",
    "Xiao ",
    "Pu ",
    "Jiao ",
    "Zhuo ",
    "Tong ",
    "Sai ",
    "Lu ",
    "Sui ",
    "Nong ",
    "Se ",
    "Hui ",
    "Rang ",
    "Nuo ",
    "Yu ",
    "Bin ",
    "Ji ",
    "Tui ",
    "Wen ",
    "Cheng ",
    "Huo ",
    "Gong ",
    "Lu ",
    "Biao ",
    "[?] ",
    "Rang ",
    "Zhuo ",
    "Li ",
    "Zan ",
    "Xue ",
    "Wa ",
    "Jiu ",
    "Qiong ",
    "Xi ",
    "Qiong ",
    "Kong ",
    "Yu ",
    "Sen ",
    "Jing ",
    "Yao ",
    "Chuan ",
    "Zhun ",
    "Tu ",
    "Lao ",
    "Qie ",
    "Zhai ",
    "Yao ",
    "Bian ",
    "Bao ",
    "Yao ",
    "Bing ",
    "Wa ",
    "Zhu ",
    "Jiao ",
    "Qiao ",
    "Diao ",
    "Wu ",
    "Gui ",
    "Yao ",
    "Zhi ",
    "Chuang ",
    "Yao ",
    "Tiao ",
    "Jiao ",
    "Chuang ",
    "Jiong ",
    "Xiao ",
    "Cheng ",
    "Kou ",
    "Cuan ",
    "Wo ",
    "Dan ",
    "Ku ",
    "Ke ",
    "Zhui ",
    "Xu ",
    "Su ",
    "Guan ",
    "Kui ",
    "Dou ",
    "[?] ",
    "Yin ",
    "Wo ",
    "Wa ",
    "Ya ",
    "Yu ",
    "Ju ",
    "Qiong ",
    "Yao ",
    "Yao ",
    "Tiao ",
    "Chao ",
    "Yu ",
    "Tian ",
    "Diao ",
    "Ju ",
    "Liao ",
    "Xi ",
    "Wu ",
    "Kui ",
    "Chuang ",
    "Zhao ",
    "[?] ",
    "Kuan ",
    "Long ",
    "Cheng ",
    "Cui ",
    "Piao ",
    "Zao ",
    "Cuan ",
    "Qiao ",
    "Qiong ",
    "Dou ",
    "Zao ",
    "Long ",
    "Qie ",
    "Li ",
    "Chu ",
    "Shi ",
    "Fou ",
    "Qian ",
    "Chu ",
    "Hong ",
    "Qi ",
    "Qian ",
    "Gong ",
    "Shi ",
    "Shu ",
    "Miao ",
    "Ju ",
    "Zhan ",
    "Zhu ",
    "Ling ",
    "Long ",
    "Bing ",
    "Jing ",
    "Jing ",
    "Zhang ",
    "Yi ",
    "Si ",
    "Jun ",
    "Hong ",
    "Tong ",
    "Song ",
    "Jing ",
    "Diao ",
    "Yi ",
    "Shu ",
    "Jing ",
    "Qu ",
    "Jie ",
    "Ping ",
    "Duan ",
    "Shao ",
    "Zhuan ",
    "Ceng ",
    "Deng ",
    "Cui ",
    "Huai ",
    "Jing ",
    "Kan ",
    "Jing ",
    "Zhu ",
    "Zhu ",
    "Le ",
    "Peng ",
    "Yu ",
    "Chi ",
    "Gan "
  ];
  return x7a;
}
var x7b;
var hasRequiredX7b;
function requireX7b() {
  if (hasRequiredX7b) return x7b;
  hasRequiredX7b = 1;
  x7b = [
    "Mang ",
    "Zhu ",
    "Utsubo ",
    "Du ",
    "Ji ",
    "Xiao ",
    "Ba ",
    "Suan ",
    "Ji ",
    "Zhen ",
    "Zhao ",
    "Sun ",
    "Ya ",
    "Zhui ",
    "Yuan ",
    "Hu ",
    "Gang ",
    "Xiao ",
    "Cen ",
    "Pi ",
    "Bi ",
    "Jian ",
    "Yi ",
    "Dong ",
    "Shan ",
    "Sheng ",
    "Xia ",
    "Di ",
    "Zhu ",
    "Na ",
    "Chi ",
    "Gu ",
    "Li ",
    "Qie ",
    "Min ",
    "Bao ",
    "Tiao ",
    "Si ",
    "Fu ",
    "Ce ",
    "Ben ",
    "Pei ",
    "Da ",
    "Zi ",
    "Di ",
    "Ling ",
    "Ze ",
    "Nu ",
    "Fu ",
    "Gou ",
    "Fan ",
    "Jia ",
    "Ge ",
    "Fan ",
    "Shi ",
    "Mao ",
    "Po ",
    "Sey ",
    "Jian ",
    "Qiong ",
    "Long ",
    "Souke ",
    "Bian ",
    "Luo ",
    "Gui ",
    "Qu ",
    "Chi ",
    "Yin ",
    "Yao ",
    "Xian ",
    "Bi ",
    "Qiong ",
    "Gua ",
    "Deng ",
    "Jiao ",
    "Jin ",
    "Quan ",
    "Sun ",
    "Ru ",
    "Fa ",
    "Kuang ",
    "Zhu ",
    "Tong ",
    "Ji ",
    "Da ",
    "Xing ",
    "Ce ",
    "Zhong ",
    "Kou ",
    "Lai ",
    "Bi ",
    "Shai ",
    "Dang ",
    "Zheng ",
    "Ce ",
    "Fu ",
    "Yun ",
    "Tu ",
    "Pa ",
    "Li ",
    "Lang ",
    "Ju ",
    "Guan ",
    "Jian ",
    "Han ",
    "Tong ",
    "Xia ",
    "Zhi ",
    "Cheng ",
    "Suan ",
    "Shi ",
    "Zhu ",
    "Zuo ",
    "Xiao ",
    "Shao ",
    "Ting ",
    "Ce ",
    "Yan ",
    "Gao ",
    "Kuai ",
    "Gan ",
    "Chou ",
    "Kago ",
    "Gang ",
    "Yun ",
    "O ",
    "Qian ",
    "Xiao ",
    "Jian ",
    "Pu ",
    "Lai ",
    "Zou ",
    "Bi ",
    "Bi ",
    "Bi ",
    "Ge ",
    "Chi ",
    "Guai ",
    "Yu ",
    "Jian ",
    "Zhao ",
    "Gu ",
    "Chi ",
    "Zheng ",
    "Jing ",
    "Sha ",
    "Zhou ",
    "Lu ",
    "Bo ",
    "Ji ",
    "Lin ",
    "Suan ",
    "Jun ",
    "Fu ",
    "Zha ",
    "Gu ",
    "Kong ",
    "Qian ",
    "Quan ",
    "Jun ",
    "Chui ",
    "Guan ",
    "Yuan ",
    "Ce ",
    "Ju ",
    "Bo ",
    "Ze ",
    "Qie ",
    "Tuo ",
    "Luo ",
    "Dan ",
    "Xiao ",
    "Ruo ",
    "Jian ",
    "Xuan ",
    "Bian ",
    "Sun ",
    "Xiang ",
    "Xian ",
    "Ping ",
    "Zhen ",
    "Sheng ",
    "Hu ",
    "Shi ",
    "Zhu ",
    "Yue ",
    "Chun ",
    "Lu ",
    "Wu ",
    "Dong ",
    "Xiao ",
    "Ji ",
    "Jie ",
    "Huang ",
    "Xing ",
    "Mei ",
    "Fan ",
    "Chui ",
    "Zhuan ",
    "Pian ",
    "Feng ",
    "Zhu ",
    "Hong ",
    "Qie ",
    "Hou ",
    "Qiu ",
    "Miao ",
    "Qian ",
    "[?] ",
    "Kui ",
    "Sik ",
    "Lou ",
    "Yun ",
    "He ",
    "Tang ",
    "Yue ",
    "Chou ",
    "Gao ",
    "Fei ",
    "Ruo ",
    "Zheng ",
    "Gou ",
    "Nie ",
    "Qian ",
    "Xiao ",
    "Cuan ",
    "Gong ",
    "Pang ",
    "Du ",
    "Li ",
    "Bi ",
    "Zhuo ",
    "Chu ",
    "Shai ",
    "Chi ",
    "Zhu ",
    "Qiang ",
    "Long ",
    "Lan ",
    "Jian ",
    "Bu ",
    "Li ",
    "Hui ",
    "Bi ",
    "Di ",
    "Cong ",
    "Yan ",
    "Peng ",
    "Sen ",
    "Zhuan ",
    "Pai ",
    "Piao ",
    "Dou ",
    "Yu ",
    "Mie ",
    "Zhuan "
  ];
  return x7b;
}
var x7c;
var hasRequiredX7c;
function requireX7c() {
  if (hasRequiredX7c) return x7c;
  hasRequiredX7c = 1;
  x7c = [
    "Ze ",
    "Xi ",
    "Guo ",
    "Yi ",
    "Hu ",
    "Chan ",
    "Kou ",
    "Cu ",
    "Ping ",
    "Chou ",
    "Ji ",
    "Gui ",
    "Su ",
    "Lou ",
    "Zha ",
    "Lu ",
    "Nian ",
    "Suo ",
    "Cuan ",
    "Sasara ",
    "Suo ",
    "Le ",
    "Duan ",
    "Yana ",
    "Xiao ",
    "Bo ",
    "Mi ",
    "Si ",
    "Dang ",
    "Liao ",
    "Dan ",
    "Dian ",
    "Fu ",
    "Jian ",
    "Min ",
    "Kui ",
    "Dai ",
    "Qiao ",
    "Deng ",
    "Huang ",
    "Sun ",
    "Lao ",
    "Zan ",
    "Xiao ",
    "Du ",
    "Shi ",
    "Zan ",
    "[?] ",
    "Pai ",
    "Hata ",
    "Pai ",
    "Gan ",
    "Ju ",
    "Du ",
    "Lu ",
    "Yan ",
    "Bo ",
    "Dang ",
    "Sai ",
    "Ke ",
    "Long ",
    "Qian ",
    "Lian ",
    "Bo ",
    "Zhou ",
    "Lai ",
    "[?] ",
    "Lan ",
    "Kui ",
    "Yu ",
    "Yue ",
    "Hao ",
    "Zhen ",
    "Tai ",
    "Ti ",
    "Mi ",
    "Chou ",
    "Ji ",
    "[?] ",
    "Hata ",
    "Teng ",
    "Zhuan ",
    "Zhou ",
    "Fan ",
    "Sou ",
    "Zhou ",
    "Kuji ",
    "Zhuo ",
    "Teng ",
    "Lu ",
    "Lu ",
    "Jian ",
    "Tuo ",
    "Ying ",
    "Yu ",
    "Lai ",
    "Long ",
    "Shinshi ",
    "Lian ",
    "Lan ",
    "Qian ",
    "Yue ",
    "Zhong ",
    "Qu ",
    "Lian ",
    "Bian ",
    "Duan ",
    "Zuan ",
    "Li ",
    "Si ",
    "Luo ",
    "Ying ",
    "Yue ",
    "Zhuo ",
    "Xu ",
    "Mi ",
    "Di ",
    "Fan ",
    "Shen ",
    "Zhe ",
    "Shen ",
    "Nu ",
    "Xie ",
    "Lei ",
    "Xian ",
    "Zi ",
    "Ni ",
    "Cun ",
    "[?] ",
    "Qian ",
    "Kume ",
    "Bi ",
    "Ban ",
    "Wu ",
    "Sha ",
    "Kang ",
    "Rou ",
    "Fen ",
    "Bi ",
    "Cui ",
    "[?] ",
    "Li ",
    "Chi ",
    "Nukamiso ",
    "Ro ",
    "Ba ",
    "Li ",
    "Gan ",
    "Ju ",
    "Po ",
    "Mo ",
    "Cu ",
    "Nian ",
    "Zhou ",
    "Li ",
    "Su ",
    "Tiao ",
    "Li ",
    "Qi ",
    "Su ",
    "Hong ",
    "Tong ",
    "Zi ",
    "Ce ",
    "Yue ",
    "Zhou ",
    "Lin ",
    "Zhuang ",
    "Bai ",
    "[?] ",
    "Fen ",
    "Ji ",
    "[?] ",
    "Sukumo ",
    "Liang ",
    "Xian ",
    "Fu ",
    "Liang ",
    "Can ",
    "Geng ",
    "Li ",
    "Yue ",
    "Lu ",
    "Ju ",
    "Qi ",
    "Cui ",
    "Bai ",
    "Zhang ",
    "Lin ",
    "Zong ",
    "Jing ",
    "Guo ",
    "Kouji ",
    "San ",
    "San ",
    "Tang ",
    "Bian ",
    "Rou ",
    "Mian ",
    "Hou ",
    "Xu ",
    "Zong ",
    "Hu ",
    "Jian ",
    "Zan ",
    "Ci ",
    "Li ",
    "Xie ",
    "Fu ",
    "Ni ",
    "Bei ",
    "Gu ",
    "Xiu ",
    "Gao ",
    "Tang ",
    "Qiu ",
    "Sukumo ",
    "Cao ",
    "Zhuang ",
    "Tang ",
    "Mi ",
    "San ",
    "Fen ",
    "Zao ",
    "Kang ",
    "Jiang ",
    "Mo ",
    "San ",
    "San ",
    "Nuo ",
    "Xi ",
    "Liang ",
    "Jiang ",
    "Kuai ",
    "Bo ",
    "Huan ",
    "[?] ",
    "Zong ",
    "Xian ",
    "Nuo ",
    "Tuan ",
    "Nie ",
    "Li ",
    "Zuo ",
    "Di ",
    "Nie ",
    "Tiao ",
    "Lan ",
    "Mi ",
    "Jiao ",
    "Jiu ",
    "Xi ",
    "Gong ",
    "Zheng ",
    "Jiu ",
    "You "
  ];
  return x7c;
}
var x7d;
var hasRequiredX7d;
function requireX7d() {
  if (hasRequiredX7d) return x7d;
  hasRequiredX7d = 1;
  x7d = [
    "Ji ",
    "Cha ",
    "Zhou ",
    "Xun ",
    "Yue ",
    "Hong ",
    "Yu ",
    "He ",
    "Wan ",
    "Ren ",
    "Wen ",
    "Wen ",
    "Qiu ",
    "Na ",
    "Zi ",
    "Tou ",
    "Niu ",
    "Fou ",
    "Jie ",
    "Shu ",
    "Chun ",
    "Pi ",
    "Yin ",
    "Sha ",
    "Hong ",
    "Zhi ",
    "Ji ",
    "Fen ",
    "Yun ",
    "Ren ",
    "Dan ",
    "Jin ",
    "Su ",
    "Fang ",
    "Suo ",
    "Cui ",
    "Jiu ",
    "Zha ",
    "Kinu ",
    "Jin ",
    "Fu ",
    "Zhi ",
    "Ci ",
    "Zi ",
    "Chou ",
    "Hong ",
    "Zha ",
    "Lei ",
    "Xi ",
    "Fu ",
    "Xie ",
    "Shen ",
    "Bei ",
    "Zhu ",
    "Qu ",
    "Ling ",
    "Zhu ",
    "Shao ",
    "Gan ",
    "Yang ",
    "Fu ",
    "Tuo ",
    "Zhen ",
    "Dai ",
    "Zhuo ",
    "Shi ",
    "Zhong ",
    "Xian ",
    "Zu ",
    "Jiong ",
    "Ban ",
    "Ju ",
    "Mo ",
    "Shu ",
    "Zui ",
    "Wata ",
    "Jing ",
    "Ren ",
    "Heng ",
    "Xie ",
    "Jie ",
    "Zhu ",
    "Chou ",
    "Gua ",
    "Bai ",
    "Jue ",
    "Kuang ",
    "Hu ",
    "Ci ",
    "Geng ",
    "Geng ",
    "Tao ",
    "Xie ",
    "Ku ",
    "Jiao ",
    "Quan ",
    "Gai ",
    "Luo ",
    "Xuan ",
    "Bing ",
    "Xian ",
    "Fu ",
    "Gei ",
    "Tong ",
    "Rong ",
    "Tiao ",
    "Yin ",
    "Lei ",
    "Xie ",
    "Quan ",
    "Xu ",
    "Lun ",
    "Die ",
    "Tong ",
    "Si ",
    "Jiang ",
    "Xiang ",
    "Hui ",
    "Jue ",
    "Zhi ",
    "Jian ",
    "Juan ",
    "Chi ",
    "Mian ",
    "Zhen ",
    "Lu ",
    "Cheng ",
    "Qiu ",
    "Shu ",
    "Bang ",
    "Tong ",
    "Xiao ",
    "Wan ",
    "Qin ",
    "Geng ",
    "Xiu ",
    "Ti ",
    "Xiu ",
    "Xie ",
    "Hong ",
    "Xi ",
    "Fu ",
    "Ting ",
    "Sui ",
    "Dui ",
    "Kun ",
    "Fu ",
    "Jing ",
    "Hu ",
    "Zhi ",
    "Yan ",
    "Jiong ",
    "Feng ",
    "Ji ",
    "Sok ",
    "Kase ",
    "Zong ",
    "Lin ",
    "Duo ",
    "Li ",
    "Lu ",
    "Liang ",
    "Chou ",
    "Quan ",
    "Shao ",
    "Qi ",
    "Qi ",
    "Zhun ",
    "Qi ",
    "Wan ",
    "Qian ",
    "Xian ",
    "Shou ",
    "Wei ",
    "Qi ",
    "Tao ",
    "Wan ",
    "Gang ",
    "Wang ",
    "Beng ",
    "Zhui ",
    "Cai ",
    "Guo ",
    "Cui ",
    "Lun ",
    "Liu ",
    "Qi ",
    "Zhan ",
    "Bei ",
    "Chuo ",
    "Ling ",
    "Mian ",
    "Qi ",
    "Qie ",
    "Tan ",
    "Zong ",
    "Gun ",
    "Zou ",
    "Yi ",
    "Zi ",
    "Xing ",
    "Liang ",
    "Jin ",
    "Fei ",
    "Rui ",
    "Min ",
    "Yu ",
    "Zong ",
    "Fan ",
    "Lu ",
    "Xu ",
    "Yingl ",
    "Zhang ",
    "Kasuri ",
    "Xu ",
    "Xiang ",
    "Jian ",
    "Ke ",
    "Xian ",
    "Ruan ",
    "Mian ",
    "Qi ",
    "Duan ",
    "Zhong ",
    "Di ",
    "Min ",
    "Miao ",
    "Yuan ",
    "Xie ",
    "Bao ",
    "Si ",
    "Qiu ",
    "Bian ",
    "Huan ",
    "Geng ",
    "Cong ",
    "Mian ",
    "Wei ",
    "Fu ",
    "Wei ",
    "Yu ",
    "Gou ",
    "Miao ",
    "Xie ",
    "Lian ",
    "Zong ",
    "Bian ",
    "Yun ",
    "Yin ",
    "Ti ",
    "Gua ",
    "Zhi ",
    "Yun ",
    "Cheng ",
    "Chan ",
    "Dai "
  ];
  return x7d;
}
var x7e;
var hasRequiredX7e;
function requireX7e() {
  if (hasRequiredX7e) return x7e;
  hasRequiredX7e = 1;
  x7e = [
    "Xia ",
    "Yuan ",
    "Zong ",
    "Xu ",
    "Nawa ",
    "Odoshi ",
    "Geng ",
    "Sen ",
    "Ying ",
    "Jin ",
    "Yi ",
    "Zhui ",
    "Ni ",
    "Bang ",
    "Gu ",
    "Pan ",
    "Zhou ",
    "Jian ",
    "Cuo ",
    "Quan ",
    "Shuang ",
    "Yun ",
    "Xia ",
    "Shuai ",
    "Xi ",
    "Rong ",
    "Tao ",
    "Fu ",
    "Yun ",
    "Zhen ",
    "Gao ",
    "Ru ",
    "Hu ",
    "Zai ",
    "Teng ",
    "Xian ",
    "Su ",
    "Zhen ",
    "Zong ",
    "Tao ",
    "Horo ",
    "Cai ",
    "Bi ",
    "Feng ",
    "Cu ",
    "Li ",
    "Suo ",
    "Yin ",
    "Xi ",
    "Zong ",
    "Lei ",
    "Zhuan ",
    "Qian ",
    "Man ",
    "Zhi ",
    "Lu ",
    "Mo ",
    "Piao ",
    "Lian ",
    "Mi ",
    "Xuan ",
    "Zong ",
    "Ji ",
    "Shan ",
    "Sui ",
    "Fan ",
    "Shuai ",
    "Beng ",
    "Yi ",
    "Sao ",
    "Mou ",
    "Zhou ",
    "Qiang ",
    "Hun ",
    "Sem ",
    "Xi ",
    "Jung ",
    "Xiu ",
    "Ran ",
    "Xuan ",
    "Hui ",
    "Qiao ",
    "Zeng ",
    "Zuo ",
    "Zhi ",
    "Shan ",
    "San ",
    "Lin ",
    "Yu ",
    "Fan ",
    "Liao ",
    "Chuo ",
    "Zun ",
    "Jian ",
    "Rao ",
    "Chan ",
    "Rui ",
    "Xiu ",
    "Hui ",
    "Hua ",
    "Zuan ",
    "Xi ",
    "Qiang ",
    "Un ",
    "Da ",
    "Sheng ",
    "Hui ",
    "Xi ",
    "Se ",
    "Jian ",
    "Jiang ",
    "Huan ",
    "Zao ",
    "Cong ",
    "Jie ",
    "Jiao ",
    "Bo ",
    "Chan ",
    "Yi ",
    "Nao ",
    "Sui ",
    "Yi ",
    "Shai ",
    "Xu ",
    "Ji ",
    "Bin ",
    "Qian ",
    "Lan ",
    "Pu ",
    "Xun ",
    "Zuan ",
    "Qi ",
    "Peng ",
    "Li ",
    "Mo ",
    "Lei ",
    "Xie ",
    "Zuan ",
    "Kuang ",
    "You ",
    "Xu ",
    "Lei ",
    "Xian ",
    "Chan ",
    "Kou ",
    "Lu ",
    "Chan ",
    "Ying ",
    "Cai ",
    "Xiang ",
    "Xian ",
    "Zui ",
    "Zuan ",
    "Luo ",
    "Xi ",
    "Dao ",
    "Lan ",
    "Lei ",
    "Lian ",
    "Si ",
    "Jiu ",
    "Yu ",
    "Hong ",
    "Zhou ",
    "Xian ",
    "He ",
    "Yue ",
    "Ji ",
    "Wan ",
    "Kuang ",
    "Ji ",
    "Ren ",
    "Wei ",
    "Yun ",
    "Hong ",
    "Chun ",
    "Pi ",
    "Sha ",
    "Gang ",
    "Na ",
    "Ren ",
    "Zong ",
    "Lun ",
    "Fen ",
    "Zhi ",
    "Wen ",
    "Fang ",
    "Zhu ",
    "Yin ",
    "Niu ",
    "Shu ",
    "Xian ",
    "Gan ",
    "Xie ",
    "Fu ",
    "Lian ",
    "Zu ",
    "Shen ",
    "Xi ",
    "Zhi ",
    "Zhong ",
    "Zhou ",
    "Ban ",
    "Fu ",
    "Zhuo ",
    "Shao ",
    "Yi ",
    "Jing ",
    "Dai ",
    "Bang ",
    "Rong ",
    "Jie ",
    "Ku ",
    "Rao ",
    "Die ",
    "Heng ",
    "Hui ",
    "Gei ",
    "Xuan ",
    "Jiang ",
    "Luo ",
    "Jue ",
    "Jiao ",
    "Tong ",
    "Geng ",
    "Xiao ",
    "Juan ",
    "Xiu ",
    "Xi ",
    "Sui ",
    "Tao ",
    "Ji ",
    "Ti ",
    "Ji ",
    "Xu ",
    "Ling ",
    "[?] ",
    "Xu ",
    "Qi ",
    "Fei ",
    "Chuo ",
    "Zhang ",
    "Gun ",
    "Sheng ",
    "Wei ",
    "Mian ",
    "Shou ",
    "Beng ",
    "Chou ",
    "Tao ",
    "Liu ",
    "Quan ",
    "Zong ",
    "Zhan ",
    "Wan ",
    "Lu "
  ];
  return x7e;
}
var x7f;
var hasRequiredX7f;
function requireX7f() {
  if (hasRequiredX7f) return x7f;
  hasRequiredX7f = 1;
  x7f = [
    "Zhui ",
    "Zi ",
    "Ke ",
    "Xiang ",
    "Jian ",
    "Mian ",
    "Lan ",
    "Ti ",
    "Miao ",
    "Qi ",
    "Yun ",
    "Hui ",
    "Si ",
    "Duo ",
    "Duan ",
    "Bian ",
    "Xian ",
    "Gou ",
    "Zhui ",
    "Huan ",
    "Di ",
    "Lu ",
    "Bian ",
    "Min ",
    "Yuan ",
    "Jin ",
    "Fu ",
    "Ru ",
    "Zhen ",
    "Feng ",
    "Shuai ",
    "Gao ",
    "Chan ",
    "Li ",
    "Yi ",
    "Jian ",
    "Bin ",
    "Piao ",
    "Man ",
    "Lei ",
    "Ying ",
    "Suo ",
    "Mou ",
    "Sao ",
    "Xie ",
    "Liao ",
    "Shan ",
    "Zeng ",
    "Jiang ",
    "Qian ",
    "Zao ",
    "Huan ",
    "Jiao ",
    "Zuan ",
    "Fou ",
    "Xie ",
    "Gang ",
    "Fou ",
    "Que ",
    "Fou ",
    "Kaakeru ",
    "Bo ",
    "Ping ",
    "Hou ",
    "[?] ",
    "Gang ",
    "Ying ",
    "Ying ",
    "Qing ",
    "Xia ",
    "Guan ",
    "Zun ",
    "Tan ",
    "Chang ",
    "Qi ",
    "Weng ",
    "Ying ",
    "Lei ",
    "Tan ",
    "Lu ",
    "Guan ",
    "Wang ",
    "Wang ",
    "Gang ",
    "Wang ",
    "Han ",
    "[?] ",
    "Luo ",
    "Fu ",
    "Mi ",
    "Fa ",
    "Gu ",
    "Zhu ",
    "Ju ",
    "Mao ",
    "Gu ",
    "Min ",
    "Gang ",
    "Ba ",
    "Gua ",
    "Ti ",
    "Juan ",
    "Fu ",
    "Lin ",
    "Yan ",
    "Zhao ",
    "Zui ",
    "Gua ",
    "Zhuo ",
    "Yu ",
    "Zhi ",
    "An ",
    "Fa ",
    "Nan ",
    "Shu ",
    "Si ",
    "Pi ",
    "Ma ",
    "Liu ",
    "Ba ",
    "Fa ",
    "Li ",
    "Chao ",
    "Wei ",
    "Bi ",
    "Ji ",
    "Zeng ",
    "Tong ",
    "Liu ",
    "Ji ",
    "Juan ",
    "Mi ",
    "Zhao ",
    "Luo ",
    "Pi ",
    "Ji ",
    "Ji ",
    "Luan ",
    "Yang ",
    "Mie ",
    "Qiang ",
    "Ta ",
    "Mei ",
    "Yang ",
    "You ",
    "You ",
    "Fen ",
    "Ba ",
    "Gao ",
    "Yang ",
    "Gu ",
    "Qiang ",
    "Zang ",
    "Gao ",
    "Ling ",
    "Yi ",
    "Zhu ",
    "Di ",
    "Xiu ",
    "Qian ",
    "Yi ",
    "Xian ",
    "Rong ",
    "Qun ",
    "Qun ",
    "Qian ",
    "Huan ",
    "Zui ",
    "Xian ",
    "Yi ",
    "Yashinau ",
    "Qiang ",
    "Xian ",
    "Yu ",
    "Geng ",
    "Jie ",
    "Tang ",
    "Yuan ",
    "Xi ",
    "Fan ",
    "Shan ",
    "Fen ",
    "Shan ",
    "Lian ",
    "Lei ",
    "Geng ",
    "Nou ",
    "Qiang ",
    "Chan ",
    "Yu ",
    "Gong ",
    "Yi ",
    "Chong ",
    "Weng ",
    "Fen ",
    "Hong ",
    "Chi ",
    "Chi ",
    "Cui ",
    "Fu ",
    "Xia ",
    "Pen ",
    "Yi ",
    "La ",
    "Yi ",
    "Pi ",
    "Ling ",
    "Liu ",
    "Zhi ",
    "Qu ",
    "Xi ",
    "Xie ",
    "Xiang ",
    "Xi ",
    "Xi ",
    "Qi ",
    "Qiao ",
    "Hui ",
    "Hui ",
    "Xiao ",
    "Se ",
    "Hong ",
    "Jiang ",
    "Di ",
    "Cui ",
    "Fei ",
    "Tao ",
    "Sha ",
    "Chi ",
    "Zhu ",
    "Jian ",
    "Xuan ",
    "Shi ",
    "Pian ",
    "Zong ",
    "Wan ",
    "Hui ",
    "Hou ",
    "He ",
    "He ",
    "Han ",
    "Ao ",
    "Piao ",
    "Yi ",
    "Lian ",
    "Qu ",
    "[?] ",
    "Lin ",
    "Pen ",
    "Qiao ",
    "Ao ",
    "Fan ",
    "Yi ",
    "Hui ",
    "Xuan ",
    "Dao "
  ];
  return x7f;
}
var x80;
var hasRequiredX80;
function requireX80() {
  if (hasRequiredX80) return x80;
  hasRequiredX80 = 1;
  x80 = [
    "Yao ",
    "Lao ",
    "[?] ",
    "Kao ",
    "Mao ",
    "Zhe ",
    "Qi ",
    "Gou ",
    "Gou ",
    "Gou ",
    "Die ",
    "Die ",
    "Er ",
    "Shua ",
    "Ruan ",
    "Er ",
    "Nai ",
    "Zhuan ",
    "Lei ",
    "Ting ",
    "Zi ",
    "Geng ",
    "Chao ",
    "Hao ",
    "Yun ",
    "Pa ",
    "Pi ",
    "Chi ",
    "Si ",
    "Chu ",
    "Jia ",
    "Ju ",
    "He ",
    "Chu ",
    "Lao ",
    "Lun ",
    "Ji ",
    "Tang ",
    "Ou ",
    "Lou ",
    "Nou ",
    "Gou ",
    "Pang ",
    "Ze ",
    "Lou ",
    "Ji ",
    "Lao ",
    "Huo ",
    "You ",
    "Mo ",
    "Huai ",
    "Er ",
    "Zhe ",
    "Ting ",
    "Ye ",
    "Da ",
    "Song ",
    "Qin ",
    "Yun ",
    "Chi ",
    "Dan ",
    "Dan ",
    "Hong ",
    "Geng ",
    "Zhi ",
    "[?] ",
    "Nie ",
    "Dan ",
    "Zhen ",
    "Che ",
    "Ling ",
    "Zheng ",
    "You ",
    "Wa ",
    "Liao ",
    "Long ",
    "Zhi ",
    "Ning ",
    "Tiao ",
    "Er ",
    "Ya ",
    "Die ",
    "Gua ",
    "[?] ",
    "Lian ",
    "Hao ",
    "Sheng ",
    "Lie ",
    "Pin ",
    "Jing ",
    "Ju ",
    "Bi ",
    "Di ",
    "Guo ",
    "Wen ",
    "Xu ",
    "Ping ",
    "Cong ",
    "Shikato ",
    "[?] ",
    "Ting ",
    "Yu ",
    "Cong ",
    "Kui ",
    "Tsuraneru ",
    "Kui ",
    "Cong ",
    "Lian ",
    "Weng ",
    "Kui ",
    "Lian ",
    "Lian ",
    "Cong ",
    "Ao ",
    "Sheng ",
    "Song ",
    "Ting ",
    "Kui ",
    "Nie ",
    "Zhi ",
    "Dan ",
    "Ning ",
    "Qie ",
    "Ji ",
    "Ting ",
    "Ting ",
    "Long ",
    "Yu ",
    "Yu ",
    "Zhao ",
    "Si ",
    "Su ",
    "Yi ",
    "Su ",
    "Si ",
    "Zhao ",
    "Zhao ",
    "Rou ",
    "Yi ",
    "Le ",
    "Ji ",
    "Qiu ",
    "Ken ",
    "Cao ",
    "Ge ",
    "Di ",
    "Huan ",
    "Huang ",
    "Yi ",
    "Ren ",
    "Xiao ",
    "Ru ",
    "Zhou ",
    "Yuan ",
    "Du ",
    "Gang ",
    "Rong ",
    "Gan ",
    "Cha ",
    "Wo ",
    "Chang ",
    "Gu ",
    "Zhi ",
    "Han ",
    "Fu ",
    "Fei ",
    "Fen ",
    "Pei ",
    "Pang ",
    "Jian ",
    "Fang ",
    "Zhun ",
    "You ",
    "Na ",
    "Hang ",
    "Ken ",
    "Ran ",
    "Gong ",
    "Yu ",
    "Wen ",
    "Yao ",
    "Jin ",
    "Pi ",
    "Qian ",
    "Xi ",
    "Xi ",
    "Fei ",
    "Ken ",
    "Jing ",
    "Tai ",
    "Shen ",
    "Zhong ",
    "Zhang ",
    "Xie ",
    "Shen ",
    "Wei ",
    "Zhou ",
    "Die ",
    "Dan ",
    "Fei ",
    "Ba ",
    "Bo ",
    "Qu ",
    "Tian ",
    "Bei ",
    "Gua ",
    "Tai ",
    "Zi ",
    "Ku ",
    "Zhi ",
    "Ni ",
    "Ping ",
    "Zi ",
    "Fu ",
    "Pang ",
    "Zhen ",
    "Xian ",
    "Zuo ",
    "Pei ",
    "Jia ",
    "Sheng ",
    "Zhi ",
    "Bao ",
    "Mu ",
    "Qu ",
    "Hu ",
    "Ke ",
    "Yi ",
    "Yin ",
    "Xu ",
    "Yang ",
    "Long ",
    "Dong ",
    "Ka ",
    "Lu ",
    "Jing ",
    "Nu ",
    "Yan ",
    "Pang ",
    "Kua ",
    "Yi ",
    "Guang ",
    "Gai ",
    "Ge ",
    "Dong ",
    "Zhi ",
    "Xiao ",
    "Xiong ",
    "Xiong ",
    "Er ",
    "E ",
    "Xing ",
    "Pian ",
    "Neng ",
    "Zi ",
    "Gui "
  ];
  return x80;
}
var x81;
var hasRequiredX81;
function requireX81() {
  if (hasRequiredX81) return x81;
  hasRequiredX81 = 1;
  x81 = [
    "Cheng ",
    "Tiao ",
    "Zhi ",
    "Cui ",
    "Mei ",
    "Xie ",
    "Cui ",
    "Xie ",
    "Mo ",
    "Mai ",
    "Ji ",
    "Obiyaakasu ",
    "[?] ",
    "Kuai ",
    "Sa ",
    "Zang ",
    "Qi ",
    "Nao ",
    "Mi ",
    "Nong ",
    "Luan ",
    "Wan ",
    "Bo ",
    "Wen ",
    "Guan ",
    "Qiu ",
    "Jiao ",
    "Jing ",
    "Rou ",
    "Heng ",
    "Cuo ",
    "Lie ",
    "Shan ",
    "Ting ",
    "Mei ",
    "Chun ",
    "Shen ",
    "Xie ",
    "De ",
    "Zui ",
    "Cu ",
    "Xiu ",
    "Xin ",
    "Tuo ",
    "Pao ",
    "Cheng ",
    "Nei ",
    "Fu ",
    "Dou ",
    "Tuo ",
    "Niao ",
    "Noy ",
    "Pi ",
    "Gu ",
    "Gua ",
    "Li ",
    "Lian ",
    "Zhang ",
    "Cui ",
    "Jie ",
    "Liang ",
    "Zhou ",
    "Pi ",
    "Biao ",
    "Lun ",
    "Pian ",
    "Guo ",
    "Kui ",
    "Chui ",
    "Dan ",
    "Tian ",
    "Nei ",
    "Jing ",
    "Jie ",
    "La ",
    "Yi ",
    "An ",
    "Ren ",
    "Shen ",
    "Chuo ",
    "Fu ",
    "Fu ",
    "Ju ",
    "Fei ",
    "Qiang ",
    "Wan ",
    "Dong ",
    "Pi ",
    "Guo ",
    "Zong ",
    "Ding ",
    "Wu ",
    "Mei ",
    "Ruan ",
    "Zhuan ",
    "Zhi ",
    "Cou ",
    "Gua ",
    "Ou ",
    "Di ",
    "An ",
    "Xing ",
    "Nao ",
    "Yu ",
    "Chuan ",
    "Nan ",
    "Yun ",
    "Zhong ",
    "Rou ",
    "E ",
    "Sai ",
    "Tu ",
    "Yao ",
    "Jian ",
    "Wei ",
    "Jiao ",
    "Yu ",
    "Jia ",
    "Duan ",
    "Bi ",
    "Chang ",
    "Fu ",
    "Xian ",
    "Ni ",
    "Mian ",
    "Wa ",
    "Teng ",
    "Tui ",
    "Bang ",
    "Qian ",
    "Lu ",
    "Wa ",
    "Sou ",
    "Tang ",
    "Su ",
    "Zhui ",
    "Ge ",
    "Yi ",
    "Bo ",
    "Liao ",
    "Ji ",
    "Pi ",
    "Xie ",
    "Gao ",
    "Lu ",
    "Bin ",
    "Ou ",
    "Chang ",
    "Lu ",
    "Guo ",
    "Pang ",
    "Chuai ",
    "Piao ",
    "Jiang ",
    "Fu ",
    "Tang ",
    "Mo ",
    "Xi ",
    "Zhuan ",
    "Lu ",
    "Jiao ",
    "Ying ",
    "Lu ",
    "Zhi ",
    "Tara ",
    "Chun ",
    "Lian ",
    "Tong ",
    "Peng ",
    "Ni ",
    "Zha ",
    "Liao ",
    "Cui ",
    "Gui ",
    "Xiao ",
    "Teng ",
    "Fan ",
    "Zhi ",
    "Jiao ",
    "Shan ",
    "Wu ",
    "Cui ",
    "Run ",
    "Xiang ",
    "Sui ",
    "Fen ",
    "Ying ",
    "Tan ",
    "Zhua ",
    "Dan ",
    "Kuai ",
    "Nong ",
    "Tun ",
    "Lian ",
    "Bi ",
    "Yong ",
    "Jue ",
    "Chu ",
    "Yi ",
    "Juan ",
    "La ",
    "Lian ",
    "Sao ",
    "Tun ",
    "Gu ",
    "Qi ",
    "Cui ",
    "Bin ",
    "Xun ",
    "Ru ",
    "Huo ",
    "Zang ",
    "Xian ",
    "Biao ",
    "Xing ",
    "Kuan ",
    "La ",
    "Yan ",
    "Lu ",
    "Huo ",
    "Zang ",
    "Luo ",
    "Qu ",
    "Zang ",
    "Luan ",
    "Ni ",
    "Zang ",
    "Chen ",
    "Qian ",
    "Wo ",
    "Guang ",
    "Zang ",
    "Lin ",
    "Guang ",
    "Zi ",
    "Jiao ",
    "Nie ",
    "Chou ",
    "Ji ",
    "Gao ",
    "Chou ",
    "Mian ",
    "Nie ",
    "Zhi ",
    "Zhi ",
    "Ge ",
    "Jian ",
    "Die ",
    "Zhi ",
    "Xiu ",
    "Tai ",
    "Zhen ",
    "Jiu ",
    "Xian ",
    "Yu ",
    "Cha "
  ];
  return x81;
}
var x82;
var hasRequiredX82;
function requireX82() {
  if (hasRequiredX82) return x82;
  hasRequiredX82 = 1;
  x82 = [
    "Yao ",
    "Yu ",
    "Chong ",
    "Xi ",
    "Xi ",
    "Jiu ",
    "Yu ",
    "Yu ",
    "Xing ",
    "Ju ",
    "Jiu ",
    "Xin ",
    "She ",
    "She ",
    "Yadoru ",
    "Jiu ",
    "Shi ",
    "Tan ",
    "Shu ",
    "Shi ",
    "Tian ",
    "Dan ",
    "Pu ",
    "Pu ",
    "Guan ",
    "Hua ",
    "Tan ",
    "Chuan ",
    "Shun ",
    "Xia ",
    "Wu ",
    "Zhou ",
    "Dao ",
    "Gang ",
    "Shan ",
    "Yi ",
    "[?] ",
    "Pa ",
    "Tai ",
    "Fan ",
    "Ban ",
    "Chuan ",
    "Hang ",
    "Fang ",
    "Ban ",
    "Que ",
    "Hesaki ",
    "Zhong ",
    "Jian ",
    "Cang ",
    "Ling ",
    "Zhu ",
    "Ze ",
    "Duo ",
    "Bo ",
    "Xian ",
    "Ge ",
    "Chuan ",
    "Jia ",
    "Lu ",
    "Hong ",
    "Pang ",
    "Xi ",
    "[?] ",
    "Fu ",
    "Zao ",
    "Feng ",
    "Li ",
    "Shao ",
    "Yu ",
    "Lang ",
    "Ting ",
    "[?] ",
    "Wei ",
    "Bo ",
    "Meng ",
    "Nian ",
    "Ju ",
    "Huang ",
    "Shou ",
    "Zong ",
    "Bian ",
    "Mao ",
    "Die ",
    "[?] ",
    "Bang ",
    "Cha ",
    "Yi ",
    "Sao ",
    "Cang ",
    "Cao ",
    "Lou ",
    "Dai ",
    "Sori ",
    "Yao ",
    "Tong ",
    "Yofune ",
    "Dang ",
    "Tan ",
    "Lu ",
    "Yi ",
    "Jie ",
    "Jian ",
    "Huo ",
    "Meng ",
    "Qi ",
    "Lu ",
    "Lu ",
    "Chan ",
    "Shuang ",
    "Gen ",
    "Liang ",
    "Jian ",
    "Jian ",
    "Se ",
    "Yan ",
    "Fu ",
    "Ping ",
    "Yan ",
    "Yan ",
    "Cao ",
    "Cao ",
    "Yi ",
    "Le ",
    "Ting ",
    "Qiu ",
    "Ai ",
    "Nai ",
    "Tiao ",
    "Jiao ",
    "Jie ",
    "Peng ",
    "Wan ",
    "Yi ",
    "Chai ",
    "Mian ",
    "Mie ",
    "Gan ",
    "Qian ",
    "Yu ",
    "Yu ",
    "Shuo ",
    "Qiong ",
    "Tu ",
    "Xia ",
    "Qi ",
    "Mang ",
    "Zi ",
    "Hui ",
    "Sui ",
    "Zhi ",
    "Xiang ",
    "Bi ",
    "Fu ",
    "Tun ",
    "Wei ",
    "Wu ",
    "Zhi ",
    "Qi ",
    "Shan ",
    "Wen ",
    "Qian ",
    "Ren ",
    "Fou ",
    "Kou ",
    "Jie ",
    "Lu ",
    "Xu ",
    "Ji ",
    "Qin ",
    "Qi ",
    "Yuan ",
    "Fen ",
    "Ba ",
    "Rui ",
    "Xin ",
    "Ji ",
    "Hua ",
    "Hua ",
    "Fang ",
    "Wu ",
    "Jue ",
    "Gou ",
    "Zhi ",
    "Yun ",
    "Qin ",
    "Ao ",
    "Chu ",
    "Mao ",
    "Ya ",
    "Fei ",
    "Reng ",
    "Hang ",
    "Cong ",
    "Yin ",
    "You ",
    "Bian ",
    "Yi ",
    "Susa ",
    "Wei ",
    "Li ",
    "Pi ",
    "E ",
    "Xian ",
    "Chang ",
    "Cang ",
    "Meng ",
    "Su ",
    "Yi ",
    "Yuan ",
    "Ran ",
    "Ling ",
    "Tai ",
    "Tiao ",
    "Di ",
    "Miao ",
    "Qiong ",
    "Li ",
    "Yong ",
    "Ke ",
    "Mu ",
    "Pei ",
    "Bao ",
    "Gou ",
    "Min ",
    "Yi ",
    "Yi ",
    "Ju ",
    "Pi ",
    "Ruo ",
    "Ku ",
    "Zhu ",
    "Ni ",
    "Bo ",
    "Bing ",
    "Shan ",
    "Qiu ",
    "Yao ",
    "Xian ",
    "Ben ",
    "Hong ",
    "Ying ",
    "Zha ",
    "Dong ",
    "Ju ",
    "Die ",
    "Nie ",
    "Gan ",
    "Hu ",
    "Ping ",
    "Mei ",
    "Fu ",
    "Sheng ",
    "Gu ",
    "Bi ",
    "Wei "
  ];
  return x82;
}
var x83;
var hasRequiredX83;
function requireX83() {
  if (hasRequiredX83) return x83;
  hasRequiredX83 = 1;
  x83 = [
    "Fu ",
    "Zhuo ",
    "Mao ",
    "Fan ",
    "Qie ",
    "Mao ",
    "Mao ",
    "Ba ",
    "Zi ",
    "Mo ",
    "Zi ",
    "Di ",
    "Chi ",
    "Ji ",
    "Jing ",
    "Long ",
    "[?] ",
    "Niao ",
    "[?] ",
    "Xue ",
    "Ying ",
    "Qiong ",
    "Ge ",
    "Ming ",
    "Li ",
    "Rong ",
    "Yin ",
    "Gen ",
    "Qian ",
    "Chai ",
    "Chen ",
    "Yu ",
    "Xiu ",
    "Zi ",
    "Lie ",
    "Wu ",
    "Ji ",
    "Kui ",
    "Ce ",
    "Chong ",
    "Ci ",
    "Gou ",
    "Guang ",
    "Mang ",
    "Chi ",
    "Jiao ",
    "Jiao ",
    "Fu ",
    "Yu ",
    "Zhu ",
    "Zi ",
    "Jiang ",
    "Hui ",
    "Yin ",
    "Cha ",
    "Fa ",
    "Rong ",
    "Ru ",
    "Chong ",
    "Mang ",
    "Tong ",
    "Zhong ",
    "[?] ",
    "Zhu ",
    "Xun ",
    "Huan ",
    "Kua ",
    "Quan ",
    "Gai ",
    "Da ",
    "Jing ",
    "Xing ",
    "Quan ",
    "Cao ",
    "Jing ",
    "Er ",
    "An ",
    "Shou ",
    "Chi ",
    "Ren ",
    "Jian ",
    "Ti ",
    "Huang ",
    "Ping ",
    "Li ",
    "Jin ",
    "Lao ",
    "Shu ",
    "Zhuang ",
    "Da ",
    "Jia ",
    "Rao ",
    "Bi ",
    "Ze ",
    "Qiao ",
    "Hui ",
    "Qi ",
    "Dang ",
    "[?] ",
    "Rong ",
    "Hun ",
    "Ying ",
    "Luo ",
    "Ying ",
    "Xun ",
    "Jin ",
    "Sun ",
    "Yin ",
    "Mai ",
    "Hong ",
    "Zhou ",
    "Yao ",
    "Du ",
    "Wei ",
    "Chu ",
    "Dou ",
    "Fu ",
    "Ren ",
    "Yin ",
    "He ",
    "Bi ",
    "Bu ",
    "Yun ",
    "Di ",
    "Tu ",
    "Sui ",
    "Sui ",
    "Cheng ",
    "Chen ",
    "Wu ",
    "Bie ",
    "Xi ",
    "Geng ",
    "Li ",
    "Fu ",
    "Zhu ",
    "Mo ",
    "Li ",
    "Zhuang ",
    "Ji ",
    "Duo ",
    "Qiu ",
    "Sha ",
    "Suo ",
    "Chen ",
    "Feng ",
    "Ju ",
    "Mei ",
    "Meng ",
    "Xing ",
    "Jing ",
    "Che ",
    "Xin ",
    "Jun ",
    "Yan ",
    "Ting ",
    "Diao ",
    "Cuo ",
    "Wan ",
    "Han ",
    "You ",
    "Cuo ",
    "Jia ",
    "Wang ",
    "You ",
    "Niu ",
    "Shao ",
    "Xian ",
    "Lang ",
    "Fu ",
    "E ",
    "Mo ",
    "Wen ",
    "Jie ",
    "Nan ",
    "Mu ",
    "Kan ",
    "Lai ",
    "Lian ",
    "Shi ",
    "Wo ",
    "Usagi ",
    "Lian ",
    "Huo ",
    "You ",
    "Ying ",
    "Ying ",
    "Nuc ",
    "Chun ",
    "Mang ",
    "Mang ",
    "Ci ",
    "Wan ",
    "Jing ",
    "Di ",
    "Qu ",
    "Dong ",
    "Jian ",
    "Zou ",
    "Gu ",
    "La ",
    "Lu ",
    "Ju ",
    "Wei ",
    "Jun ",
    "Nie ",
    "Kun ",
    "He ",
    "Pu ",
    "Zi ",
    "Gao ",
    "Guo ",
    "Fu ",
    "Lun ",
    "Chang ",
    "Chou ",
    "Song ",
    "Chui ",
    "Zhan ",
    "Men ",
    "Cai ",
    "Ba ",
    "Li ",
    "Tu ",
    "Bo ",
    "Han ",
    "Bao ",
    "Qin ",
    "Juan ",
    "Xi ",
    "Qin ",
    "Di ",
    "Jie ",
    "Pu ",
    "Dang ",
    "Jin ",
    "Zhao ",
    "Tai ",
    "Geng ",
    "Hua ",
    "Gu ",
    "Ling ",
    "Fei ",
    "Jin ",
    "An ",
    "Wang ",
    "Beng ",
    "Zhou ",
    "Yan ",
    "Ju ",
    "Jian ",
    "Lin ",
    "Tan ",
    "Shu ",
    "Tian ",
    "Dao "
  ];
  return x83;
}
var x84;
var hasRequiredX84;
function requireX84() {
  if (hasRequiredX84) return x84;
  hasRequiredX84 = 1;
  x84 = [
    "Hu ",
    "Qi ",
    "He ",
    "Cui ",
    "Tao ",
    "Chun ",
    "Bei ",
    "Chang ",
    "Huan ",
    "Fei ",
    "Lai ",
    "Qi ",
    "Meng ",
    "Ping ",
    "Wei ",
    "Dan ",
    "Sha ",
    "Huan ",
    "Yan ",
    "Yi ",
    "Tiao ",
    "Qi ",
    "Wan ",
    "Ce ",
    "Nai ",
    "Kutabireru ",
    "Tuo ",
    "Jiu ",
    "Tie ",
    "Luo ",
    "[?] ",
    "[?] ",
    "Meng ",
    "[?] ",
    "Yaji ",
    "[?] ",
    "Ying ",
    "Ying ",
    "Ying ",
    "Xiao ",
    "Sa ",
    "Qiu ",
    "Ke ",
    "Xiang ",
    "Wan ",
    "Yu ",
    "Yu ",
    "Fu ",
    "Lian ",
    "Xuan ",
    "Yuan ",
    "Nan ",
    "Ze ",
    "Wo ",
    "Chun ",
    "Xiao ",
    "Yu ",
    "Pian ",
    "Mao ",
    "An ",
    "E ",
    "Luo ",
    "Ying ",
    "Huo ",
    "Gua ",
    "Jiang ",
    "Mian ",
    "Zuo ",
    "Zuo ",
    "Ju ",
    "Bao ",
    "Rou ",
    "Xi ",
    "Xie ",
    "An ",
    "Qu ",
    "Jian ",
    "Fu ",
    "Lu ",
    "Jing ",
    "Pen ",
    "Feng ",
    "Hong ",
    "Hong ",
    "Hou ",
    "Yan ",
    "Tu ",
    "Zhu ",
    "Zi ",
    "Xiang ",
    "Shen ",
    "Ge ",
    "Jie ",
    "Jing ",
    "Mi ",
    "Huang ",
    "Shen ",
    "Pu ",
    "Gai ",
    "Dong ",
    "Zhou ",
    "Qian ",
    "Wei ",
    "Bo ",
    "Wei ",
    "Pa ",
    "Ji ",
    "Hu ",
    "Zang ",
    "Jia ",
    "Duan ",
    "Yao ",
    "Jun ",
    "Cong ",
    "Quan ",
    "Wei ",
    "Xian ",
    "Kui ",
    "Ting ",
    "Hun ",
    "Xi ",
    "Shi ",
    "Qi ",
    "Lan ",
    "Zong ",
    "Yao ",
    "Yuan ",
    "Mei ",
    "Yun ",
    "Shu ",
    "Di ",
    "Zhuan ",
    "Guan ",
    "Sukumo ",
    "Xue ",
    "Chan ",
    "Kai ",
    "Kui ",
    "[?] ",
    "Jiang ",
    "Lou ",
    "Wei ",
    "Pai ",
    "[?] ",
    "Sou ",
    "Yin ",
    "Shi ",
    "Chun ",
    "Shi ",
    "Yun ",
    "Zhen ",
    "Lang ",
    "Nu ",
    "Meng ",
    "He ",
    "Que ",
    "Suan ",
    "Yuan ",
    "Li ",
    "Ju ",
    "Xi ",
    "Pang ",
    "Chu ",
    "Xu ",
    "Tu ",
    "Liu ",
    "Wo ",
    "Zhen ",
    "Qian ",
    "Zu ",
    "Po ",
    "Cuo ",
    "Yuan ",
    "Chu ",
    "Yu ",
    "Kuai ",
    "Pan ",
    "Pu ",
    "Pu ",
    "Na ",
    "Shuo ",
    "Xi ",
    "Fen ",
    "Yun ",
    "Zheng ",
    "Jian ",
    "Ji ",
    "Ruo ",
    "Cang ",
    "En ",
    "Mi ",
    "Hao ",
    "Sun ",
    "Zhen ",
    "Ming ",
    "Sou ",
    "Xu ",
    "Liu ",
    "Xi ",
    "Gu ",
    "Lang ",
    "Rong ",
    "Weng ",
    "Gai ",
    "Cuo ",
    "Shi ",
    "Tang ",
    "Luo ",
    "Ru ",
    "Suo ",
    "Xian ",
    "Bei ",
    "Yao ",
    "Gui ",
    "Bi ",
    "Zong ",
    "Gun ",
    "Za ",
    "Xiu ",
    "Ce ",
    "Hai ",
    "Lan ",
    "[?] ",
    "Ji ",
    "Li ",
    "Can ",
    "Lang ",
    "Yu ",
    "[?] ",
    "Ying ",
    "Mo ",
    "Diao ",
    "Tiao ",
    "Mao ",
    "Tong ",
    "Zhu ",
    "Peng ",
    "An ",
    "Lian ",
    "Cong ",
    "Xi ",
    "Ping ",
    "Qiu ",
    "Jin ",
    "Chun ",
    "Jie ",
    "Wei ",
    "Tui ",
    "Cao ",
    "Yu ",
    "Yi ",
    "Ji ",
    "Liao ",
    "Bi ",
    "Lu ",
    "Su "
  ];
  return x84;
}
var x85;
var hasRequiredX85;
function requireX85() {
  if (hasRequiredX85) return x85;
  hasRequiredX85 = 1;
  x85 = [
    "Bu ",
    "Zhang ",
    "Luo ",
    "Jiang ",
    "Man ",
    "Yan ",
    "Ling ",
    "Ji ",
    "Piao ",
    "Gun ",
    "Han ",
    "Di ",
    "Su ",
    "Lu ",
    "She ",
    "Shang ",
    "Di ",
    "Mie ",
    "Xun ",
    "Man ",
    "Bo ",
    "Di ",
    "Cuo ",
    "Zhe ",
    "Sen ",
    "Xuan ",
    "Wei ",
    "Hu ",
    "Ao ",
    "Mi ",
    "Lou ",
    "Cu ",
    "Zhong ",
    "Cai ",
    "Po ",
    "Jiang ",
    "Mi ",
    "Cong ",
    "Niao ",
    "Hui ",
    "Jun ",
    "Yin ",
    "Jian ",
    "Yan ",
    "Shu ",
    "Yin ",
    "Kui ",
    "Chen ",
    "Hu ",
    "Sha ",
    "Kou ",
    "Qian ",
    "Ma ",
    "Zang ",
    "Sonoko ",
    "Qiang ",
    "Dou ",
    "Lian ",
    "Lin ",
    "Kou ",
    "Ai ",
    "Bi ",
    "Li ",
    "Wei ",
    "Ji ",
    "Xun ",
    "Sheng ",
    "Fan ",
    "Meng ",
    "Ou ",
    "Chan ",
    "Dian ",
    "Xun ",
    "Jiao ",
    "Rui ",
    "Rui ",
    "Lei ",
    "Yu ",
    "Qiao ",
    "Chu ",
    "Hua ",
    "Jian ",
    "Mai ",
    "Yun ",
    "Bao ",
    "You ",
    "Qu ",
    "Lu ",
    "Rao ",
    "Hui ",
    "E ",
    "Teng ",
    "Fei ",
    "Jue ",
    "Zui ",
    "Fa ",
    "Ru ",
    "Fen ",
    "Kui ",
    "Shun ",
    "Rui ",
    "Ya ",
    "Xu ",
    "Fu ",
    "Jue ",
    "Dang ",
    "Wu ",
    "Tong ",
    "Si ",
    "Xiao ",
    "Xi ",
    "Long ",
    "Yun ",
    "[?] ",
    "Qi ",
    "Jian ",
    "Yun ",
    "Sun ",
    "Ling ",
    "Yu ",
    "Xia ",
    "Yong ",
    "Ji ",
    "Hong ",
    "Si ",
    "Nong ",
    "Lei ",
    "Xuan ",
    "Yun ",
    "Yu ",
    "Xi ",
    "Hao ",
    "Bo ",
    "Hao ",
    "Ai ",
    "Wei ",
    "Hui ",
    "Wei ",
    "Ji ",
    "Ci ",
    "Xiang ",
    "Luan ",
    "Mie ",
    "Yi ",
    "Leng ",
    "Jiang ",
    "Can ",
    "Shen ",
    "Qiang ",
    "Lian ",
    "Ke ",
    "Yuan ",
    "Da ",
    "Ti ",
    "Tang ",
    "Xie ",
    "Bi ",
    "Zhan ",
    "Sun ",
    "Lian ",
    "Fan ",
    "Ding ",
    "Jie ",
    "Gu ",
    "Xie ",
    "Shu ",
    "Jian ",
    "Kao ",
    "Hong ",
    "Sa ",
    "Xin ",
    "Xun ",
    "Yao ",
    "Hie ",
    "Sou ",
    "Shu ",
    "Xun ",
    "Dui ",
    "Pin ",
    "Wei ",
    "Neng ",
    "Chou ",
    "Mai ",
    "Ru ",
    "Piao ",
    "Tai ",
    "Qi ",
    "Zao ",
    "Chen ",
    "Zhen ",
    "Er ",
    "Ni ",
    "Ying ",
    "Gao ",
    "Cong ",
    "Xiao ",
    "Qi ",
    "Fa ",
    "Jian ",
    "Xu ",
    "Kui ",
    "Jie ",
    "Bian ",
    "Diao ",
    "Mi ",
    "Lan ",
    "Jin ",
    "Cang ",
    "Miao ",
    "Qiong ",
    "Qie ",
    "Xian ",
    "[?] ",
    "Ou ",
    "Xian ",
    "Su ",
    "Lu ",
    "Yi ",
    "Xu ",
    "Xie ",
    "Li ",
    "Yi ",
    "La ",
    "Lei ",
    "Xiao ",
    "Di ",
    "Zhi ",
    "Bei ",
    "Teng ",
    "Yao ",
    "Mo ",
    "Huan ",
    "Piao ",
    "Fan ",
    "Sou ",
    "Tan ",
    "Tui ",
    "Qiong ",
    "Qiao ",
    "Wei ",
    "Liu ",
    "Hui ",
    "[?] ",
    "Gao ",
    "Yun ",
    "[?] ",
    "Li ",
    "Shu ",
    "Chu ",
    "Ai ",
    "Lin ",
    "Zao ",
    "Xuan ",
    "Chen ",
    "Lai ",
    "Huo "
  ];
  return x85;
}
var x86;
var hasRequiredX86;
function requireX86() {
  if (hasRequiredX86) return x86;
  hasRequiredX86 = 1;
  x86 = [
    "Tuo ",
    "Wu ",
    "Rui ",
    "Rui ",
    "Qi ",
    "Heng ",
    "Lu ",
    "Su ",
    "Tui ",
    "Mang ",
    "Yun ",
    "Pin ",
    "Yu ",
    "Xun ",
    "Ji ",
    "Jiong ",
    "Xian ",
    "Mo ",
    "Hagi ",
    "Su ",
    "Jiong ",
    "[?] ",
    "Nie ",
    "Bo ",
    "Rang ",
    "Yi ",
    "Xian ",
    "Yu ",
    "Ju ",
    "Lian ",
    "Lian ",
    "Yin ",
    "Qiang ",
    "Ying ",
    "Long ",
    "Tong ",
    "Wei ",
    "Yue ",
    "Ling ",
    "Qu ",
    "Yao ",
    "Fan ",
    "Mi ",
    "Lan ",
    "Kui ",
    "Lan ",
    "Ji ",
    "Dang ",
    "Katsura ",
    "Lei ",
    "Lei ",
    "Hua ",
    "Feng ",
    "Zhi ",
    "Wei ",
    "Kui ",
    "Zhan ",
    "Huai ",
    "Li ",
    "Ji ",
    "Mi ",
    "Lei ",
    "Huai ",
    "Luo ",
    "Ji ",
    "Kui ",
    "Lu ",
    "Jian ",
    "San ",
    "[?] ",
    "Lei ",
    "Quan ",
    "Xiao ",
    "Yi ",
    "Luan ",
    "Men ",
    "Bie ",
    "Hu ",
    "Hu ",
    "Lu ",
    "Nue ",
    "Lu ",
    "Si ",
    "Xiao ",
    "Qian ",
    "Chu ",
    "Hu ",
    "Xu ",
    "Cuo ",
    "Fu ",
    "Xu ",
    "Xu ",
    "Lu ",
    "Hu ",
    "Yu ",
    "Hao ",
    "Jiao ",
    "Ju ",
    "Guo ",
    "Bao ",
    "Yan ",
    "Zhan ",
    "Zhan ",
    "Kui ",
    "Ban ",
    "Xi ",
    "Shu ",
    "Chong ",
    "Qiu ",
    "Diao ",
    "Ji ",
    "Qiu ",
    "Cheng ",
    "Shi ",
    "[?] ",
    "Di ",
    "Zhe ",
    "She ",
    "Yu ",
    "Gan ",
    "Zi ",
    "Hong ",
    "Hui ",
    "Meng ",
    "Ge ",
    "Sui ",
    "Xia ",
    "Chai ",
    "Shi ",
    "Yi ",
    "Ma ",
    "Xiang ",
    "Fang ",
    "E ",
    "Pa ",
    "Chi ",
    "Qian ",
    "Wen ",
    "Wen ",
    "Rui ",
    "Bang ",
    "Bi ",
    "Yue ",
    "Yue ",
    "Jun ",
    "Qi ",
    "Ran ",
    "Yin ",
    "Qi ",
    "Tian ",
    "Yuan ",
    "Jue ",
    "Hui ",
    "Qin ",
    "Qi ",
    "Zhong ",
    "Ya ",
    "Ci ",
    "Mu ",
    "Wang ",
    "Fen ",
    "Fen ",
    "Hang ",
    "Gong ",
    "Zao ",
    "Fu ",
    "Ran ",
    "Jie ",
    "Fu ",
    "Chi ",
    "Dou ",
    "Piao ",
    "Xian ",
    "Ni ",
    "Te ",
    "Qiu ",
    "You ",
    "Zha ",
    "Ping ",
    "Chi ",
    "You ",
    "He ",
    "Han ",
    "Ju ",
    "Li ",
    "Fu ",
    "Ran ",
    "Zha ",
    "Gou ",
    "Pi ",
    "Bo ",
    "Xian ",
    "Zhu ",
    "Diao ",
    "Bie ",
    "Bing ",
    "Gu ",
    "Ran ",
    "Qu ",
    "She ",
    "Tie ",
    "Ling ",
    "Gu ",
    "Dan ",
    "Gu ",
    "Ying ",
    "Li ",
    "Cheng ",
    "Qu ",
    "Mou ",
    "Ge ",
    "Ci ",
    "Hui ",
    "Hui ",
    "Mang ",
    "Fu ",
    "Yang ",
    "Wa ",
    "Lie ",
    "Zhu ",
    "Yi ",
    "Xian ",
    "Kuo ",
    "Jiao ",
    "Li ",
    "Yi ",
    "Ping ",
    "Ji ",
    "Ha ",
    "She ",
    "Yi ",
    "Wang ",
    "Mo ",
    "Qiong ",
    "Qie ",
    "Gui ",
    "Gong ",
    "Zhi ",
    "Man ",
    "Ebi ",
    "Zhi ",
    "Jia ",
    "Rao ",
    "Si ",
    "Qi ",
    "Xing ",
    "Lie ",
    "Qiu ",
    "Shao ",
    "Yong ",
    "Jia ",
    "Shui ",
    "Che ",
    "Bai ",
    "E ",
    "Han "
  ];
  return x86;
}
var x87;
var hasRequiredX87;
function requireX87() {
  if (hasRequiredX87) return x87;
  hasRequiredX87 = 1;
  x87 = [
    "Shu ",
    "Xuan ",
    "Feng ",
    "Shen ",
    "Zhen ",
    "Fu ",
    "Xian ",
    "Zhe ",
    "Wu ",
    "Fu ",
    "Li ",
    "Lang ",
    "Bi ",
    "Chu ",
    "Yuan ",
    "You ",
    "Jie ",
    "Dan ",
    "Yan ",
    "Ting ",
    "Dian ",
    "Shui ",
    "Hui ",
    "Gua ",
    "Zhi ",
    "Song ",
    "Fei ",
    "Ju ",
    "Mi ",
    "Qi ",
    "Qi ",
    "Yu ",
    "Jun ",
    "Zha ",
    "Meng ",
    "Qiang ",
    "Si ",
    "Xi ",
    "Lun ",
    "Li ",
    "Die ",
    "Tiao ",
    "Tao ",
    "Kun ",
    "Gan ",
    "Han ",
    "Yu ",
    "Bang ",
    "Fei ",
    "Pi ",
    "Wei ",
    "Dun ",
    "Yi ",
    "Yuan ",
    "Su ",
    "Quan ",
    "Qian ",
    "Rui ",
    "Ni ",
    "Qing ",
    "Wei ",
    "Liang ",
    "Guo ",
    "Wan ",
    "Dong ",
    "E ",
    "Ban ",
    "Di ",
    "Wang ",
    "Can ",
    "Yang ",
    "Ying ",
    "Guo ",
    "Chan ",
    "[?] ",
    "La ",
    "Ke ",
    "Ji ",
    "He ",
    "Ting ",
    "Mai ",
    "Xu ",
    "Mian ",
    "Yu ",
    "Jie ",
    "Shi ",
    "Xuan ",
    "Huang ",
    "Yan ",
    "Bian ",
    "Rou ",
    "Wei ",
    "Fu ",
    "Yuan ",
    "Mei ",
    "Wei ",
    "Fu ",
    "Ruan ",
    "Xie ",
    "You ",
    "Qiu ",
    "Mao ",
    "Xia ",
    "Ying ",
    "Shi ",
    "Chong ",
    "Tang ",
    "Zhu ",
    "Zong ",
    "Ti ",
    "Fu ",
    "Yuan ",
    "Hui ",
    "Meng ",
    "La ",
    "Du ",
    "Hu ",
    "Qiu ",
    "Die ",
    "Li ",
    "Gua ",
    "Yun ",
    "Ju ",
    "Nan ",
    "Lou ",
    "Qun ",
    "Rong ",
    "Ying ",
    "Jiang ",
    "[?] ",
    "Lang ",
    "Pang ",
    "Si ",
    "Xi ",
    "Ci ",
    "Xi ",
    "Yuan ",
    "Weng ",
    "Lian ",
    "Sou ",
    "Ban ",
    "Rong ",
    "Rong ",
    "Ji ",
    "Wu ",
    "Qiu ",
    "Han ",
    "Qin ",
    "Yi ",
    "Bi ",
    "Hua ",
    "Tang ",
    "Yi ",
    "Du ",
    "Nai ",
    "He ",
    "Hu ",
    "Hui ",
    "Ma ",
    "Ming ",
    "Yi ",
    "Wen ",
    "Ying ",
    "Teng ",
    "Yu ",
    "Cang ",
    "So ",
    "Ebi ",
    "Man ",
    "[?] ",
    "Shang ",
    "Zhe ",
    "Cao ",
    "Chi ",
    "Di ",
    "Ao ",
    "Lu ",
    "Wei ",
    "Zhi ",
    "Tang ",
    "Chen ",
    "Piao ",
    "Qu ",
    "Pi ",
    "Yu ",
    "Jian ",
    "Luo ",
    "Lou ",
    "Qin ",
    "Zhong ",
    "Yin ",
    "Jiang ",
    "Shuai ",
    "Wen ",
    "Jiao ",
    "Wan ",
    "Zhi ",
    "Zhe ",
    "Ma ",
    "Ma ",
    "Guo ",
    "Liu ",
    "Mao ",
    "Xi ",
    "Cong ",
    "Li ",
    "Man ",
    "Xiao ",
    "Kamakiri ",
    "Zhang ",
    "Mang ",
    "Xiang ",
    "Mo ",
    "Zui ",
    "Si ",
    "Qiu ",
    "Te ",
    "Zhi ",
    "Peng ",
    "Peng ",
    "Jiao ",
    "Qu ",
    "Bie ",
    "Liao ",
    "Pan ",
    "Gui ",
    "Xi ",
    "Ji ",
    "Zhuan ",
    "Huang ",
    "Fei ",
    "Lao ",
    "Jue ",
    "Jue ",
    "Hui ",
    "Yin ",
    "Chan ",
    "Jiao ",
    "Shan ",
    "Rao ",
    "Xiao ",
    "Mou ",
    "Chong ",
    "Xun ",
    "Si ",
    "[?] ",
    "Cheng ",
    "Dang ",
    "Li ",
    "Xie ",
    "Shan ",
    "Yi ",
    "Jing ",
    "Da ",
    "Chan ",
    "Qi "
  ];
  return x87;
}
var x88;
var hasRequiredX88;
function requireX88() {
  if (hasRequiredX88) return x88;
  hasRequiredX88 = 1;
  x88 = [
    "Ci ",
    "Xiang ",
    "She ",
    "Luo ",
    "Qin ",
    "Ying ",
    "Chai ",
    "Li ",
    "Ze ",
    "Xuan ",
    "Lian ",
    "Zhu ",
    "Ze ",
    "Xie ",
    "Mang ",
    "Xie ",
    "Qi ",
    "Rong ",
    "Jian ",
    "Meng ",
    "Hao ",
    "Ruan ",
    "Huo ",
    "Zhuo ",
    "Jie ",
    "Bin ",
    "He ",
    "Mie ",
    "Fan ",
    "Lei ",
    "Jie ",
    "La ",
    "Mi ",
    "Li ",
    "Chun ",
    "Li ",
    "Qiu ",
    "Nie ",
    "Lu ",
    "Du ",
    "Xiao ",
    "Zhu ",
    "Long ",
    "Li ",
    "Long ",
    "Feng ",
    "Ye ",
    "Beng ",
    "Shang ",
    "Gu ",
    "Juan ",
    "Ying ",
    "[?] ",
    "Xi ",
    "Can ",
    "Qu ",
    "Quan ",
    "Du ",
    "Can ",
    "Man ",
    "Jue ",
    "Jie ",
    "Zhu ",
    "Zha ",
    "Xie ",
    "Huang ",
    "Niu ",
    "Pei ",
    "Nu ",
    "Xin ",
    "Zhong ",
    "Mo ",
    "Er ",
    "Ke ",
    "Mie ",
    "Xi ",
    "Xing ",
    "Yan ",
    "Kan ",
    "Yuan ",
    "[?] ",
    "Ling ",
    "Xuan ",
    "Shu ",
    "Xian ",
    "Tong ",
    "Long ",
    "Jie ",
    "Xian ",
    "Ya ",
    "Hu ",
    "Wei ",
    "Dao ",
    "Chong ",
    "Wei ",
    "Dao ",
    "Zhun ",
    "Heng ",
    "Qu ",
    "Yi ",
    "Yi ",
    "Bu ",
    "Gan ",
    "Yu ",
    "Biao ",
    "Cha ",
    "Yi ",
    "Shan ",
    "Chen ",
    "Fu ",
    "Gun ",
    "Fen ",
    "Shuai ",
    "Jie ",
    "Na ",
    "Zhong ",
    "Dan ",
    "Ri ",
    "Zhong ",
    "Zhong ",
    "Xie ",
    "Qi ",
    "Xie ",
    "Ran ",
    "Zhi ",
    "Ren ",
    "Qin ",
    "Jin ",
    "Jun ",
    "Yuan ",
    "Mei ",
    "Chai ",
    "Ao ",
    "Niao ",
    "Hui ",
    "Ran ",
    "Jia ",
    "Tuo ",
    "Ling ",
    "Dai ",
    "Bao ",
    "Pao ",
    "Yao ",
    "Zuo ",
    "Bi ",
    "Shao ",
    "Tan ",
    "Ju ",
    "He ",
    "Shu ",
    "Xiu ",
    "Zhen ",
    "Yi ",
    "Pa ",
    "Bo ",
    "Di ",
    "Wa ",
    "Fu ",
    "Gun ",
    "Zhi ",
    "Zhi ",
    "Ran ",
    "Pan ",
    "Yi ",
    "Mao ",
    "Tuo ",
    "Na ",
    "Kou ",
    "Xian ",
    "Chan ",
    "Qu ",
    "Bei ",
    "Gun ",
    "Xi ",
    "Ne ",
    "Bo ",
    "Horo ",
    "Fu ",
    "Yi ",
    "Chi ",
    "Ku ",
    "Ren ",
    "Jiang ",
    "Jia ",
    "Cun ",
    "Mo ",
    "Jie ",
    "Er ",
    "Luo ",
    "Ru ",
    "Zhu ",
    "Gui ",
    "Yin ",
    "Cai ",
    "Lie ",
    "Kamishimo ",
    "Yuki ",
    "Zhuang ",
    "Dang ",
    "[?] ",
    "Kun ",
    "Ken ",
    "Niao ",
    "Shu ",
    "Jia ",
    "Kun ",
    "Cheng ",
    "Li ",
    "Juan ",
    "Shen ",
    "Pou ",
    "Ge ",
    "Yi ",
    "Yu ",
    "Zhen ",
    "Liu ",
    "Qiu ",
    "Qun ",
    "Ji ",
    "Yi ",
    "Bu ",
    "Zhuang ",
    "Shui ",
    "Sha ",
    "Qun ",
    "Li ",
    "Lian ",
    "Lian ",
    "Ku ",
    "Jian ",
    "Fou ",
    "Chan ",
    "Bi ",
    "Gun ",
    "Tao ",
    "Yuan ",
    "Ling ",
    "Chi ",
    "Chang ",
    "Chou ",
    "Duo ",
    "Biao ",
    "Liang ",
    "Chang ",
    "Pei ",
    "Pei ",
    "Fei ",
    "Yuan ",
    "Luo ",
    "Guo ",
    "Yan ",
    "Du ",
    "Xi ",
    "Zhi ",
    "Ju ",
    "Qi "
  ];
  return x88;
}
var x89;
var hasRequiredX89;
function requireX89() {
  if (hasRequiredX89) return x89;
  hasRequiredX89 = 1;
  x89 = [
    "Ji ",
    "Zhi ",
    "Gua ",
    "Ken ",
    "Che ",
    "Ti ",
    "Ti ",
    "Fu ",
    "Chong ",
    "Xie ",
    "Bian ",
    "Die ",
    "Kun ",
    "Duan ",
    "Xiu ",
    "Xiu ",
    "He ",
    "Yuan ",
    "Bao ",
    "Bao ",
    "Fu ",
    "Yu ",
    "Tuan ",
    "Yan ",
    "Hui ",
    "Bei ",
    "Chu ",
    "Lu ",
    "Ena ",
    "Hitoe ",
    "Yun ",
    "Da ",
    "Gou ",
    "Da ",
    "Huai ",
    "Rong ",
    "Yuan ",
    "Ru ",
    "Nai ",
    "Jiong ",
    "Suo ",
    "Ban ",
    "Tun ",
    "Chi ",
    "Sang ",
    "Niao ",
    "Ying ",
    "Jie ",
    "Qian ",
    "Huai ",
    "Ku ",
    "Lian ",
    "Bao ",
    "Li ",
    "Zhe ",
    "Shi ",
    "Lu ",
    "Yi ",
    "Die ",
    "Xie ",
    "Xian ",
    "Wei ",
    "Biao ",
    "Cao ",
    "Ji ",
    "Jiang ",
    "Sen ",
    "Bao ",
    "Xiang ",
    "Chihaya ",
    "Pu ",
    "Jian ",
    "Zhuan ",
    "Jian ",
    "Zui ",
    "Ji ",
    "Dan ",
    "Za ",
    "Fan ",
    "Bo ",
    "Xiang ",
    "Xin ",
    "Bie ",
    "Rao ",
    "Man ",
    "Lan ",
    "Ao ",
    "Duo ",
    "Gui ",
    "Cao ",
    "Sui ",
    "Nong ",
    "Chan ",
    "Lian ",
    "Bi ",
    "Jin ",
    "Dang ",
    "Shu ",
    "Tan ",
    "Bi ",
    "Lan ",
    "Pu ",
    "Ru ",
    "Zhi ",
    "[?] ",
    "Shu ",
    "Wa ",
    "Shi ",
    "Bai ",
    "Xie ",
    "Bo ",
    "Chen ",
    "Lai ",
    "Long ",
    "Xi ",
    "Xian ",
    "Lan ",
    "Zhe ",
    "Dai ",
    "Tasuki ",
    "Zan ",
    "Shi ",
    "Jian ",
    "Pan ",
    "Yi ",
    "Ran ",
    "Ya ",
    "Xi ",
    "Xi ",
    "Yao ",
    "Feng ",
    "Tan ",
    "[?] ",
    "Biao ",
    "Fu ",
    "Ba ",
    "He ",
    "Ji ",
    "Ji ",
    "Jian ",
    "Guan ",
    "Bian ",
    "Yan ",
    "Gui ",
    "Jue ",
    "Pian ",
    "Mao ",
    "Mi ",
    "Mi ",
    "Mie ",
    "Shi ",
    "Si ",
    "Zhan ",
    "Luo ",
    "Jue ",
    "Mi ",
    "Tiao ",
    "Lian ",
    "Yao ",
    "Zhi ",
    "Jun ",
    "Xi ",
    "Shan ",
    "Wei ",
    "Xi ",
    "Tian ",
    "Yu ",
    "Lan ",
    "E ",
    "Du ",
    "Qin ",
    "Pang ",
    "Ji ",
    "Ming ",
    "Ying ",
    "Gou ",
    "Qu ",
    "Zhan ",
    "Jin ",
    "Guan ",
    "Deng ",
    "Jian ",
    "Luo ",
    "Qu ",
    "Jian ",
    "Wei ",
    "Jue ",
    "Qu ",
    "Luo ",
    "Lan ",
    "Shen ",
    "Di ",
    "Guan ",
    "Jian ",
    "Guan ",
    "Yan ",
    "Gui ",
    "Mi ",
    "Shi ",
    "Zhan ",
    "Lan ",
    "Jue ",
    "Ji ",
    "Xi ",
    "Di ",
    "Tian ",
    "Yu ",
    "Gou ",
    "Jin ",
    "Qu ",
    "Jiao ",
    "Jiu ",
    "Jin ",
    "Cu ",
    "Jue ",
    "Zhi ",
    "Chao ",
    "Ji ",
    "Gu ",
    "Dan ",
    "Zui ",
    "Di ",
    "Shang ",
    "Hua ",
    "Quan ",
    "Ge ",
    "Chi ",
    "Jie ",
    "Gui ",
    "Gong ",
    "Hong ",
    "Jie ",
    "Hun ",
    "Qiu ",
    "Xing ",
    "Su ",
    "Ni ",
    "Ji ",
    "Lu ",
    "Zhi ",
    "Zha ",
    "Bi ",
    "Xing ",
    "Hu ",
    "Shang ",
    "Gong ",
    "Zhi ",
    "Xue ",
    "Chu ",
    "Xi ",
    "Yi ",
    "Lu ",
    "Jue ",
    "Xi ",
    "Yan ",
    "Xi "
  ];
  return x89;
}
var x8a;
var hasRequiredX8a;
function requireX8a() {
  if (hasRequiredX8a) return x8a;
  hasRequiredX8a = 1;
  x8a = [
    "Yan ",
    "Yan ",
    "Ding ",
    "Fu ",
    "Qiu ",
    "Qiu ",
    "Jiao ",
    "Hong ",
    "Ji ",
    "Fan ",
    "Xun ",
    "Diao ",
    "Hong ",
    "Cha ",
    "Tao ",
    "Xu ",
    "Jie ",
    "Yi ",
    "Ren ",
    "Xun ",
    "Yin ",
    "Shan ",
    "Qi ",
    "Tuo ",
    "Ji ",
    "Xun ",
    "Yin ",
    "E ",
    "Fen ",
    "Ya ",
    "Yao ",
    "Song ",
    "Shen ",
    "Yin ",
    "Xin ",
    "Jue ",
    "Xiao ",
    "Ne ",
    "Chen ",
    "You ",
    "Zhi ",
    "Xiong ",
    "Fang ",
    "Xin ",
    "Chao ",
    "She ",
    "Xian ",
    "Sha ",
    "Tun ",
    "Xu ",
    "Yi ",
    "Yi ",
    "Su ",
    "Chi ",
    "He ",
    "Shen ",
    "He ",
    "Xu ",
    "Zhen ",
    "Zhu ",
    "Zheng ",
    "Gou ",
    "Zi ",
    "Zi ",
    "Zhan ",
    "Gu ",
    "Fu ",
    "Quan ",
    "Die ",
    "Ling ",
    "Di ",
    "Yang ",
    "Li ",
    "Nao ",
    "Pan ",
    "Zhou ",
    "Gan ",
    "Yi ",
    "Ju ",
    "Ao ",
    "Zha ",
    "Tuo ",
    "Yi ",
    "Qu ",
    "Zhao ",
    "Ping ",
    "Bi ",
    "Xiong ",
    "Qu ",
    "Ba ",
    "Da ",
    "Zu ",
    "Tao ",
    "Zhu ",
    "Ci ",
    "Zhe ",
    "Yong ",
    "Xu ",
    "Xun ",
    "Yi ",
    "Huang ",
    "He ",
    "Shi ",
    "Cha ",
    "Jiao ",
    "Shi ",
    "Hen ",
    "Cha ",
    "Gou ",
    "Gui ",
    "Quan ",
    "Hui ",
    "Jie ",
    "Hua ",
    "Gai ",
    "Xiang ",
    "Wei ",
    "Shen ",
    "Chou ",
    "Tong ",
    "Mi ",
    "Zhan ",
    "Ming ",
    "E ",
    "Hui ",
    "Yan ",
    "Xiong ",
    "Gua ",
    "Er ",
    "Beng ",
    "Tiao ",
    "Chi ",
    "Lei ",
    "Zhu ",
    "Kuang ",
    "Kua ",
    "Wu ",
    "Yu ",
    "Teng ",
    "Ji ",
    "Zhi ",
    "Ren ",
    "Su ",
    "Lang ",
    "E ",
    "Kuang ",
    "E ",
    "Shi ",
    "Ting ",
    "Dan ",
    "Bo ",
    "Chan ",
    "You ",
    "Heng ",
    "Qiao ",
    "Qin ",
    "Shua ",
    "An ",
    "Yu ",
    "Xiao ",
    "Cheng ",
    "Jie ",
    "Xian ",
    "Wu ",
    "Wu ",
    "Gao ",
    "Song ",
    "Pu ",
    "Hui ",
    "Jing ",
    "Shuo ",
    "Zhen ",
    "Shuo ",
    "Du ",
    "Yasashi ",
    "Chang ",
    "Shui ",
    "Jie ",
    "Ke ",
    "Qu ",
    "Cong ",
    "Xiao ",
    "Sui ",
    "Wang ",
    "Xuan ",
    "Fei ",
    "Chi ",
    "Ta ",
    "Yi ",
    "Na ",
    "Yin ",
    "Diao ",
    "Pi ",
    "Chuo ",
    "Chan ",
    "Chen ",
    "Zhun ",
    "Ji ",
    "Qi ",
    "Tan ",
    "Zhui ",
    "Wei ",
    "Ju ",
    "Qing ",
    "Jian ",
    "Zheng ",
    "Ze ",
    "Zou ",
    "Qian ",
    "Zhuo ",
    "Liang ",
    "Jian ",
    "Zhu ",
    "Hao ",
    "Lun ",
    "Shen ",
    "Biao ",
    "Huai ",
    "Pian ",
    "Yu ",
    "Die ",
    "Xu ",
    "Pian ",
    "Shi ",
    "Xuan ",
    "Shi ",
    "Hun ",
    "Hua ",
    "E ",
    "Zhong ",
    "Di ",
    "Xie ",
    "Fu ",
    "Pu ",
    "Ting ",
    "Jian ",
    "Qi ",
    "Yu ",
    "Zi ",
    "Chuan ",
    "Xi ",
    "Hui ",
    "Yin ",
    "An ",
    "Xian ",
    "Nan ",
    "Chen ",
    "Feng ",
    "Zhu ",
    "Yang ",
    "Yan ",
    "Heng ",
    "Xuan ",
    "Ge ",
    "Nuo ",
    "Qi "
  ];
  return x8a;
}
var x8b;
var hasRequiredX8b;
function requireX8b() {
  if (hasRequiredX8b) return x8b;
  hasRequiredX8b = 1;
  x8b = [
    "Mou ",
    "Ye ",
    "Wei ",
    "[?] ",
    "Teng ",
    "Zou ",
    "Shan ",
    "Jian ",
    "Bo ",
    "Ku ",
    "Huang ",
    "Huo ",
    "Ge ",
    "Ying ",
    "Mi ",
    "Xiao ",
    "Mi ",
    "Xi ",
    "Qiang ",
    "Chen ",
    "Nue ",
    "Ti ",
    "Su ",
    "Bang ",
    "Chi ",
    "Qian ",
    "Shi ",
    "Jiang ",
    "Yuan ",
    "Xie ",
    "Xue ",
    "Tao ",
    "Yao ",
    "Yao ",
    "[?] ",
    "Yu ",
    "Biao ",
    "Cong ",
    "Qing ",
    "Li ",
    "Mo ",
    "Mo ",
    "Shang ",
    "Zhe ",
    "Miu ",
    "Jian ",
    "Ze ",
    "Jie ",
    "Lian ",
    "Lou ",
    "Can ",
    "Ou ",
    "Guan ",
    "Xi ",
    "Zhuo ",
    "Ao ",
    "Ao ",
    "Jin ",
    "Zhe ",
    "Yi ",
    "Hu ",
    "Jiang ",
    "Man ",
    "Chao ",
    "Han ",
    "Hua ",
    "Chan ",
    "Xu ",
    "Zeng ",
    "Se ",
    "Xi ",
    "She ",
    "Dui ",
    "Zheng ",
    "Nao ",
    "Lan ",
    "E ",
    "Ying ",
    "Jue ",
    "Ji ",
    "Zun ",
    "Jiao ",
    "Bo ",
    "Hui ",
    "Zhuan ",
    "Mu ",
    "Zen ",
    "Zha ",
    "Shi ",
    "Qiao ",
    "Tan ",
    "Zen ",
    "Pu ",
    "Sheng ",
    "Xuan ",
    "Zao ",
    "Tan ",
    "Dang ",
    "Sui ",
    "Qian ",
    "Ji ",
    "Jiao ",
    "Jing ",
    "Lian ",
    "Nou ",
    "Yi ",
    "Ai ",
    "Zhan ",
    "Pi ",
    "Hui ",
    "Hua ",
    "Yi ",
    "Yi ",
    "Shan ",
    "Rang ",
    "Nou ",
    "Qian ",
    "Zhui ",
    "Ta ",
    "Hu ",
    "Zhou ",
    "Hao ",
    "Ye ",
    "Ying ",
    "Jian ",
    "Yu ",
    "Jian ",
    "Hui ",
    "Du ",
    "Zhe ",
    "Xuan ",
    "Zan ",
    "Lei ",
    "Shen ",
    "Wei ",
    "Chan ",
    "Li ",
    "Yi ",
    "Bian ",
    "Zhe ",
    "Yan ",
    "E ",
    "Chou ",
    "Wei ",
    "Chou ",
    "Yao ",
    "Chan ",
    "Rang ",
    "Yin ",
    "Lan ",
    "Chen ",
    "Huo ",
    "Zhe ",
    "Huan ",
    "Zan ",
    "Yi ",
    "Dang ",
    "Zhan ",
    "Yan ",
    "Du ",
    "Yan ",
    "Ji ",
    "Ding ",
    "Fu ",
    "Ren ",
    "Ji ",
    "Jie ",
    "Hong ",
    "Tao ",
    "Rang ",
    "Shan ",
    "Qi ",
    "Tuo ",
    "Xun ",
    "Yi ",
    "Xun ",
    "Ji ",
    "Ren ",
    "Jiang ",
    "Hui ",
    "Ou ",
    "Ju ",
    "Ya ",
    "Ne ",
    "Xu ",
    "E ",
    "Lun ",
    "Xiong ",
    "Song ",
    "Feng ",
    "She ",
    "Fang ",
    "Jue ",
    "Zheng ",
    "Gu ",
    "He ",
    "Ping ",
    "Zu ",
    "Shi ",
    "Xiong ",
    "Zha ",
    "Su ",
    "Zhen ",
    "Di ",
    "Zou ",
    "Ci ",
    "Qu ",
    "Zhao ",
    "Bi ",
    "Yi ",
    "Yi ",
    "Kuang ",
    "Lei ",
    "Shi ",
    "Gua ",
    "Shi ",
    "Jie ",
    "Hui ",
    "Cheng ",
    "Zhu ",
    "Shen ",
    "Hua ",
    "Dan ",
    "Gou ",
    "Quan ",
    "Gui ",
    "Xun ",
    "Yi ",
    "Zheng ",
    "Gai ",
    "Xiang ",
    "Cha ",
    "Hun ",
    "Xu ",
    "Zhou ",
    "Jie ",
    "Wu ",
    "Yu ",
    "Qiao ",
    "Wu ",
    "Gao ",
    "You ",
    "Hui ",
    "Kuang ",
    "Shuo ",
    "Song ",
    "Ai ",
    "Qing ",
    "Zhu ",
    "Zou ",
    "Nuo ",
    "Du ",
    "Zhuo ",
    "Fei ",
    "Ke ",
    "Wei "
  ];
  return x8b;
}
var x8c;
var hasRequiredX8c;
function requireX8c() {
  if (hasRequiredX8c) return x8c;
  hasRequiredX8c = 1;
  x8c = [
    "Yu ",
    "Shui ",
    "Shen ",
    "Diao ",
    "Chan ",
    "Liang ",
    "Zhun ",
    "Sui ",
    "Tan ",
    "Shen ",
    "Yi ",
    "Mou ",
    "Chen ",
    "Die ",
    "Huang ",
    "Jian ",
    "Xie ",
    "Nue ",
    "Ye ",
    "Wei ",
    "E ",
    "Yu ",
    "Xuan ",
    "Chan ",
    "Zi ",
    "An ",
    "Yan ",
    "Di ",
    "Mi ",
    "Pian ",
    "Xu ",
    "Mo ",
    "Dang ",
    "Su ",
    "Xie ",
    "Yao ",
    "Bang ",
    "Shi ",
    "Qian ",
    "Mi ",
    "Jin ",
    "Man ",
    "Zhe ",
    "Jian ",
    "Miu ",
    "Tan ",
    "Zen ",
    "Qiao ",
    "Lan ",
    "Pu ",
    "Jue ",
    "Yan ",
    "Qian ",
    "Zhan ",
    "Chen ",
    "Gu ",
    "Qian ",
    "Hong ",
    "Xia ",
    "Jue ",
    "Hong ",
    "Han ",
    "Hong ",
    "Xi ",
    "Xi ",
    "Huo ",
    "Liao ",
    "Han ",
    "Du ",
    "Long ",
    "Dou ",
    "Jiang ",
    "Qi ",
    "Shi ",
    "Li ",
    "Deng ",
    "Wan ",
    "Bi ",
    "Shu ",
    "Xian ",
    "Feng ",
    "Zhi ",
    "Zhi ",
    "Yan ",
    "Yan ",
    "Shi ",
    "Chu ",
    "Hui ",
    "Tun ",
    "Yi ",
    "Tun ",
    "Yi ",
    "Jian ",
    "Ba ",
    "Hou ",
    "E ",
    "Cu ",
    "Xiang ",
    "Huan ",
    "Jian ",
    "Ken ",
    "Gai ",
    "Qu ",
    "Fu ",
    "Xi ",
    "Bin ",
    "Hao ",
    "Yu ",
    "Zhu ",
    "Jia ",
    "[?] ",
    "Xi ",
    "Bo ",
    "Wen ",
    "Huan ",
    "Bin ",
    "Di ",
    "Zong ",
    "Fen ",
    "Yi ",
    "Zhi ",
    "Bao ",
    "Chai ",
    "Han ",
    "Pi ",
    "Na ",
    "Pi ",
    "Gou ",
    "Na ",
    "You ",
    "Diao ",
    "Mo ",
    "Si ",
    "Xiu ",
    "Huan ",
    "Kun ",
    "He ",
    "He ",
    "Mo ",
    "Han ",
    "Mao ",
    "Li ",
    "Ni ",
    "Bi ",
    "Yu ",
    "Jia ",
    "Tuan ",
    "Mao ",
    "Pi ",
    "Xi ",
    "E ",
    "Ju ",
    "Mo ",
    "Chu ",
    "Tan ",
    "Huan ",
    "Jue ",
    "Bei ",
    "Zhen ",
    "Yuan ",
    "Fu ",
    "Cai ",
    "Gong ",
    "Te ",
    "Yi ",
    "Hang ",
    "Wan ",
    "Pin ",
    "Huo ",
    "Fan ",
    "Tan ",
    "Guan ",
    "Ze ",
    "Zhi ",
    "Er ",
    "Zhu ",
    "Shi ",
    "Bi ",
    "Zi ",
    "Er ",
    "Gui ",
    "Pian ",
    "Bian ",
    "Mai ",
    "Dai ",
    "Sheng ",
    "Kuang ",
    "Fei ",
    "Tie ",
    "Yi ",
    "Chi ",
    "Mao ",
    "He ",
    "Bi ",
    "Lu ",
    "Ren ",
    "Hui ",
    "Gai ",
    "Pian ",
    "Zi ",
    "Jia ",
    "Xu ",
    "Zei ",
    "Jiao ",
    "Gai ",
    "Zang ",
    "Jian ",
    "Ying ",
    "Xun ",
    "Zhen ",
    "She ",
    "Bin ",
    "Bin ",
    "Qiu ",
    "She ",
    "Chuan ",
    "Zang ",
    "Zhou ",
    "Lai ",
    "Zan ",
    "Si ",
    "Chen ",
    "Shang ",
    "Tian ",
    "Pei ",
    "Geng ",
    "Xian ",
    "Mai ",
    "Jian ",
    "Sui ",
    "Fu ",
    "Tan ",
    "Cong ",
    "Cong ",
    "Zhi ",
    "Ji ",
    "Zhang ",
    "Du ",
    "Jin ",
    "Xiong ",
    "Shun ",
    "Yun ",
    "Bao ",
    "Zai ",
    "Lai ",
    "Feng ",
    "Cang ",
    "Ji ",
    "Sheng ",
    "Ai ",
    "Zhuan ",
    "Fu ",
    "Gou ",
    "Sai ",
    "Ze ",
    "Liao "
  ];
  return x8c;
}
var x8d;
var hasRequiredX8d;
function requireX8d() {
  if (hasRequiredX8d) return x8d;
  hasRequiredX8d = 1;
  x8d = [
    "Wei ",
    "Bai ",
    "Chen ",
    "Zhuan ",
    "Zhi ",
    "Zhui ",
    "Biao ",
    "Yun ",
    "Zeng ",
    "Tan ",
    "Zan ",
    "Yan ",
    "[?] ",
    "Shan ",
    "Wan ",
    "Ying ",
    "Jin ",
    "Gan ",
    "Xian ",
    "Zang ",
    "Bi ",
    "Du ",
    "Shu ",
    "Yan ",
    "[?] ",
    "Xuan ",
    "Long ",
    "Gan ",
    "Zang ",
    "Bei ",
    "Zhen ",
    "Fu ",
    "Yuan ",
    "Gong ",
    "Cai ",
    "Ze ",
    "Xian ",
    "Bai ",
    "Zhang ",
    "Huo ",
    "Zhi ",
    "Fan ",
    "Tan ",
    "Pin ",
    "Bian ",
    "Gou ",
    "Zhu ",
    "Guan ",
    "Er ",
    "Jian ",
    "Bi ",
    "Shi ",
    "Tie ",
    "Gui ",
    "Kuang ",
    "Dai ",
    "Mao ",
    "Fei ",
    "He ",
    "Yi ",
    "Zei ",
    "Zhi ",
    "Jia ",
    "Hui ",
    "Zi ",
    "Ren ",
    "Lu ",
    "Zang ",
    "Zi ",
    "Gai ",
    "Jin ",
    "Qiu ",
    "Zhen ",
    "Lai ",
    "She ",
    "Fu ",
    "Du ",
    "Ji ",
    "Shu ",
    "Shang ",
    "Si ",
    "Bi ",
    "Zhou ",
    "Geng ",
    "Pei ",
    "Tan ",
    "Lai ",
    "Feng ",
    "Zhui ",
    "Fu ",
    "Zhuan ",
    "Sai ",
    "Ze ",
    "Yan ",
    "Zan ",
    "Yun ",
    "Zeng ",
    "Shan ",
    "Ying ",
    "Gan ",
    "Chi ",
    "Xi ",
    "She ",
    "Nan ",
    "Xiong ",
    "Xi ",
    "Cheng ",
    "He ",
    "Cheng ",
    "Zhe ",
    "Xia ",
    "Tang ",
    "Zou ",
    "Zou ",
    "Li ",
    "Jiu ",
    "Fu ",
    "Zhao ",
    "Gan ",
    "Qi ",
    "Shan ",
    "Qiong ",
    "Qin ",
    "Xian ",
    "Ci ",
    "Jue ",
    "Qin ",
    "Chi ",
    "Ci ",
    "Chen ",
    "Chen ",
    "Die ",
    "Ju ",
    "Chao ",
    "Di ",
    "Se ",
    "Zhan ",
    "Zhu ",
    "Yue ",
    "Qu ",
    "Jie ",
    "Chi ",
    "Chu ",
    "Gua ",
    "Xue ",
    "Ci ",
    "Tiao ",
    "Duo ",
    "Lie ",
    "Gan ",
    "Suo ",
    "Cu ",
    "Xi ",
    "Zhao ",
    "Su ",
    "Yin ",
    "Ju ",
    "Jian ",
    "Que ",
    "Tang ",
    "Chuo ",
    "Cui ",
    "Lu ",
    "Qu ",
    "Dang ",
    "Qiu ",
    "Zi ",
    "Ti ",
    "Qu ",
    "Chi ",
    "Huang ",
    "Qiao ",
    "Qiao ",
    "Yao ",
    "Zao ",
    "Ti ",
    "[?] ",
    "Zan ",
    "Zan ",
    "Zu ",
    "Pa ",
    "Bao ",
    "Ku ",
    "Ke ",
    "Dun ",
    "Jue ",
    "Fu ",
    "Chen ",
    "Jian ",
    "Fang ",
    "Zhi ",
    "Sa ",
    "Yue ",
    "Pa ",
    "Qi ",
    "Yue ",
    "Qiang ",
    "Tuo ",
    "Tai ",
    "Yi ",
    "Nian ",
    "Ling ",
    "Mei ",
    "Ba ",
    "Die ",
    "Ku ",
    "Tuo ",
    "Jia ",
    "Ci ",
    "Pao ",
    "Qia ",
    "Zhu ",
    "Ju ",
    "Die ",
    "Zhi ",
    "Fu ",
    "Pan ",
    "Ju ",
    "Shan ",
    "Bo ",
    "Ni ",
    "Ju ",
    "Li ",
    "Gen ",
    "Yi ",
    "Ji ",
    "Dai ",
    "Xian ",
    "Jiao ",
    "Duo ",
    "Zhu ",
    "Zhuan ",
    "Kua ",
    "Zhuai ",
    "Gui ",
    "Qiong ",
    "Kui ",
    "Xiang ",
    "Chi ",
    "Lu ",
    "Beng ",
    "Zhi ",
    "Jia ",
    "Tiao ",
    "Cai ",
    "Jian ",
    "Ta ",
    "Qiao ",
    "Bi ",
    "Xian ",
    "Duo ",
    "Ji ",
    "Ju ",
    "Ji ",
    "Shu ",
    "Tu "
  ];
  return x8d;
}
var x8e;
var hasRequiredX8e;
function requireX8e() {
  if (hasRequiredX8e) return x8e;
  hasRequiredX8e = 1;
  x8e = [
    "Chu ",
    "Jing ",
    "Nie ",
    "Xiao ",
    "Bo ",
    "Chi ",
    "Qun ",
    "Mou ",
    "Shu ",
    "Lang ",
    "Yong ",
    "Jiao ",
    "Chou ",
    "Qiao ",
    "[?] ",
    "Ta ",
    "Jian ",
    "Qi ",
    "Wo ",
    "Wei ",
    "Zhuo ",
    "Jie ",
    "Ji ",
    "Nie ",
    "Ju ",
    "Ju ",
    "Lun ",
    "Lu ",
    "Leng ",
    "Huai ",
    "Ju ",
    "Chi ",
    "Wan ",
    "Quan ",
    "Ti ",
    "Bo ",
    "Zu ",
    "Qie ",
    "Ji ",
    "Cu ",
    "Zong ",
    "Cai ",
    "Zong ",
    "Peng ",
    "Zhi ",
    "Zheng ",
    "Dian ",
    "Zhi ",
    "Yu ",
    "Duo ",
    "Dun ",
    "Chun ",
    "Yong ",
    "Zhong ",
    "Di ",
    "Zhe ",
    "Chen ",
    "Chuai ",
    "Jian ",
    "Gua ",
    "Tang ",
    "Ju ",
    "Fu ",
    "Zu ",
    "Die ",
    "Pian ",
    "Rou ",
    "Nuo ",
    "Ti ",
    "Cha ",
    "Tui ",
    "Jian ",
    "Dao ",
    "Cuo ",
    "Xi ",
    "Ta ",
    "Qiang ",
    "Zhan ",
    "Dian ",
    "Ti ",
    "Ji ",
    "Nie ",
    "Man ",
    "Liu ",
    "Zhan ",
    "Bi ",
    "Chong ",
    "Lu ",
    "Liao ",
    "Cu ",
    "Tang ",
    "Dai ",
    "Suo ",
    "Xi ",
    "Kui ",
    "Ji ",
    "Zhi ",
    "Qiang ",
    "Di ",
    "Man ",
    "Zong ",
    "Lian ",
    "Beng ",
    "Zao ",
    "Nian ",
    "Bie ",
    "Tui ",
    "Ju ",
    "Deng ",
    "Ceng ",
    "Xian ",
    "Fan ",
    "Chu ",
    "Zhong ",
    "Dun ",
    "Bo ",
    "Cu ",
    "Zu ",
    "Jue ",
    "Jue ",
    "Lin ",
    "Ta ",
    "Qiao ",
    "Qiao ",
    "Pu ",
    "Liao ",
    "Dun ",
    "Cuan ",
    "Kuang ",
    "Zao ",
    "Ta ",
    "Bi ",
    "Bi ",
    "Zhu ",
    "Ju ",
    "Chu ",
    "Qiao ",
    "Dun ",
    "Chou ",
    "Ji ",
    "Wu ",
    "Yue ",
    "Nian ",
    "Lin ",
    "Lie ",
    "Zhi ",
    "Li ",
    "Zhi ",
    "Chan ",
    "Chu ",
    "Duan ",
    "Wei ",
    "Long ",
    "Lin ",
    "Xian ",
    "Wei ",
    "Zuan ",
    "Lan ",
    "Xie ",
    "Rang ",
    "Xie ",
    "Nie ",
    "Ta ",
    "Qu ",
    "Jie ",
    "Cuan ",
    "Zuan ",
    "Xi ",
    "Kui ",
    "Jue ",
    "Lin ",
    "Shen ",
    "Gong ",
    "Dan ",
    "Segare ",
    "Qu ",
    "Ti ",
    "Duo ",
    "Duo ",
    "Gong ",
    "Lang ",
    "Nerau ",
    "Luo ",
    "Ai ",
    "Ji ",
    "Ju ",
    "Tang ",
    "Utsuke ",
    "[?] ",
    "Yan ",
    "Shitsuke ",
    "Kang ",
    "Qu ",
    "Lou ",
    "Lao ",
    "Tuo ",
    "Zhi ",
    "Yagate ",
    "Ti ",
    "Dao ",
    "Yagate ",
    "Yu ",
    "Che ",
    "Ya ",
    "Gui ",
    "Jun ",
    "Wei ",
    "Yue ",
    "Xin ",
    "Di ",
    "Xuan ",
    "Fan ",
    "Ren ",
    "Shan ",
    "Qiang ",
    "Shu ",
    "Tun ",
    "Chen ",
    "Dai ",
    "E ",
    "Na ",
    "Qi ",
    "Mao ",
    "Ruan ",
    "Ren ",
    "Fan ",
    "Zhuan ",
    "Hong ",
    "Hu ",
    "Qu ",
    "Huang ",
    "Di ",
    "Ling ",
    "Dai ",
    "Ao ",
    "Zhen ",
    "Fan ",
    "Kuang ",
    "Ang ",
    "Peng ",
    "Bei ",
    "Gu ",
    "Ku ",
    "Pao ",
    "Zhu ",
    "Rong ",
    "E ",
    "Ba ",
    "Zhou ",
    "Zhi ",
    "Yao ",
    "Ke ",
    "Yi ",
    "Qing ",
    "Shi ",
    "Ping "
  ];
  return x8e;
}
var x8f;
var hasRequiredX8f;
function requireX8f() {
  if (hasRequiredX8f) return x8f;
  hasRequiredX8f = 1;
  x8f = [
    "Er ",
    "Qiong ",
    "Ju ",
    "Jiao ",
    "Guang ",
    "Lu ",
    "Kai ",
    "Quan ",
    "Zhou ",
    "Zai ",
    "Zhi ",
    "She ",
    "Liang ",
    "Yu ",
    "Shao ",
    "You ",
    "Huan ",
    "Yun ",
    "Zhe ",
    "Wan ",
    "Fu ",
    "Qing ",
    "Zhou ",
    "Ni ",
    "Ling ",
    "Zhe ",
    "Zhan ",
    "Liang ",
    "Zi ",
    "Hui ",
    "Wang ",
    "Chuo ",
    "Guo ",
    "Kan ",
    "Yi ",
    "Peng ",
    "Qian ",
    "Gun ",
    "Nian ",
    "Pian ",
    "Guan ",
    "Bei ",
    "Lun ",
    "Pai ",
    "Liang ",
    "Ruan ",
    "Rou ",
    "Ji ",
    "Yang ",
    "Xian ",
    "Chuan ",
    "Cou ",
    "Qun ",
    "Ge ",
    "You ",
    "Hong ",
    "Shu ",
    "Fu ",
    "Zi ",
    "Fu ",
    "Wen ",
    "Ben ",
    "Zhan ",
    "Yu ",
    "Wen ",
    "Tao ",
    "Gu ",
    "Zhen ",
    "Xia ",
    "Yuan ",
    "Lu ",
    "Jiu ",
    "Chao ",
    "Zhuan ",
    "Wei ",
    "Hun ",
    "Sori ",
    "Che ",
    "Jiao ",
    "Zhan ",
    "Pu ",
    "Lao ",
    "Fen ",
    "Fan ",
    "Lin ",
    "Ge ",
    "Se ",
    "Kan ",
    "Huan ",
    "Yi ",
    "Ji ",
    "Dui ",
    "Er ",
    "Yu ",
    "Xian ",
    "Hong ",
    "Lei ",
    "Pei ",
    "Li ",
    "Li ",
    "Lu ",
    "Lin ",
    "Che ",
    "Ya ",
    "Gui ",
    "Xuan ",
    "Di ",
    "Ren ",
    "Zhuan ",
    "E ",
    "Lun ",
    "Ruan ",
    "Hong ",
    "Ku ",
    "Ke ",
    "Lu ",
    "Zhou ",
    "Zhi ",
    "Yi ",
    "Hu ",
    "Zhen ",
    "Li ",
    "Yao ",
    "Qing ",
    "Shi ",
    "Zai ",
    "Zhi ",
    "Jiao ",
    "Zhou ",
    "Quan ",
    "Lu ",
    "Jiao ",
    "Zhe ",
    "Fu ",
    "Liang ",
    "Nian ",
    "Bei ",
    "Hui ",
    "Gun ",
    "Wang ",
    "Liang ",
    "Chuo ",
    "Zi ",
    "Cou ",
    "Fu ",
    "Ji ",
    "Wen ",
    "Shu ",
    "Pei ",
    "Yuan ",
    "Xia ",
    "Zhan ",
    "Lu ",
    "Che ",
    "Lin ",
    "Xin ",
    "Gu ",
    "Ci ",
    "Ci ",
    "Pi ",
    "Zui ",
    "Bian ",
    "La ",
    "La ",
    "Ci ",
    "Xue ",
    "Ban ",
    "Bian ",
    "Bian ",
    "Bian ",
    "[?] ",
    "Bian ",
    "Ban ",
    "Ci ",
    "Bian ",
    "Bian ",
    "Chen ",
    "Ru ",
    "Nong ",
    "Nong ",
    "Zhen ",
    "Chuo ",
    "Chuo ",
    "Suberu ",
    "Reng ",
    "Bian ",
    "Bian ",
    "Sip ",
    "Ip ",
    "Liao ",
    "Da ",
    "Chan ",
    "Gan ",
    "Qian ",
    "Yu ",
    "Yu ",
    "Qi ",
    "Xun ",
    "Yi ",
    "Guo ",
    "Mai ",
    "Qi ",
    "Za ",
    "Wang ",
    "Jia ",
    "Zhun ",
    "Ying ",
    "Ti ",
    "Yun ",
    "Jin ",
    "Hang ",
    "Ya ",
    "Fan ",
    "Wu ",
    "Da ",
    "E ",
    "Huan ",
    "Zhe ",
    "Totemo ",
    "Jin ",
    "Yuan ",
    "Wei ",
    "Lian ",
    "Chi ",
    "Che ",
    "Ni ",
    "Tiao ",
    "Zhi ",
    "Yi ",
    "Jiong ",
    "Jia ",
    "Chen ",
    "Dai ",
    "Er ",
    "Di ",
    "Po ",
    "Wang ",
    "Die ",
    "Ze ",
    "Tao ",
    "Shu ",
    "Tuo ",
    "Kep ",
    "Jing ",
    "Hui ",
    "Tong ",
    "You ",
    "Mi ",
    "Beng ",
    "Ji ",
    "Nai ",
    "Yi ",
    "Jie ",
    "Zhui ",
    "Lie ",
    "Xun "
  ];
  return x8f;
}
var x90;
var hasRequiredX90;
function requireX90() {
  if (hasRequiredX90) return x90;
  hasRequiredX90 = 1;
  x90 = [
    "Tui ",
    "Song ",
    "Gua ",
    "Tao ",
    "Pang ",
    "Hou ",
    "Ni ",
    "Dun ",
    "Jiong ",
    "Xuan ",
    "Xun ",
    "Bu ",
    "You ",
    "Xiao ",
    "Qiu ",
    "Tou ",
    "Zhu ",
    "Qiu ",
    "Di ",
    "Di ",
    "Tu ",
    "Jing ",
    "Ti ",
    "Dou ",
    "Yi ",
    "Zhe ",
    "Tong ",
    "Guang ",
    "Wu ",
    "Shi ",
    "Cheng ",
    "Su ",
    "Zao ",
    "Qun ",
    "Feng ",
    "Lian ",
    "Suo ",
    "Hui ",
    "Li ",
    "Sako ",
    "Lai ",
    "Ben ",
    "Cuo ",
    "Jue ",
    "Beng ",
    "Huan ",
    "Dai ",
    "Lu ",
    "You ",
    "Zhou ",
    "Jin ",
    "Yu ",
    "Chuo ",
    "Kui ",
    "Wei ",
    "Ti ",
    "Yi ",
    "Da ",
    "Yuan ",
    "Luo ",
    "Bi ",
    "Nuo ",
    "Yu ",
    "Dang ",
    "Sui ",
    "Dun ",
    "Sui ",
    "Yan ",
    "Chuan ",
    "Chi ",
    "Ti ",
    "Yu ",
    "Shi ",
    "Zhen ",
    "You ",
    "Yun ",
    "E ",
    "Bian ",
    "Guo ",
    "E ",
    "Xia ",
    "Huang ",
    "Qiu ",
    "Dao ",
    "Da ",
    "Wei ",
    "Appare ",
    "Yi ",
    "Gou ",
    "Yao ",
    "Chu ",
    "Liu ",
    "Xun ",
    "Ta ",
    "Di ",
    "Chi ",
    "Yuan ",
    "Su ",
    "Ta ",
    "Qian ",
    "[?] ",
    "Yao ",
    "Guan ",
    "Zhang ",
    "Ao ",
    "Shi ",
    "Ce ",
    "Chi ",
    "Su ",
    "Zao ",
    "Zhe ",
    "Dun ",
    "Di ",
    "Lou ",
    "Chi ",
    "Cuo ",
    "Lin ",
    "Zun ",
    "Rao ",
    "Qian ",
    "Xuan ",
    "Yu ",
    "Yi ",
    "Wu ",
    "Liao ",
    "Ju ",
    "Shi ",
    "Bi ",
    "Yao ",
    "Mai ",
    "Xie ",
    "Sui ",
    "Huan ",
    "Zhan ",
    "Teng ",
    "Er ",
    "Miao ",
    "Bian ",
    "Bian ",
    "La ",
    "Li ",
    "Yuan ",
    "Yao ",
    "Luo ",
    "Li ",
    "Yi ",
    "Ting ",
    "Deng ",
    "Qi ",
    "Yong ",
    "Shan ",
    "Han ",
    "Yu ",
    "Mang ",
    "Ru ",
    "Qiong ",
    "[?] ",
    "Kuang ",
    "Fu ",
    "Kang ",
    "Bin ",
    "Fang ",
    "Xing ",
    "Na ",
    "Xin ",
    "Shen ",
    "Bang ",
    "Yuan ",
    "Cun ",
    "Huo ",
    "Xie ",
    "Bang ",
    "Wu ",
    "Ju ",
    "You ",
    "Han ",
    "Tai ",
    "Qiu ",
    "Bi ",
    "Pei ",
    "Bing ",
    "Shao ",
    "Bei ",
    "Wa ",
    "Di ",
    "Zou ",
    "Ye ",
    "Lin ",
    "Kuang ",
    "Gui ",
    "Zhu ",
    "Shi ",
    "Ku ",
    "Yu ",
    "Gai ",
    "Ge ",
    "Xi ",
    "Zhi ",
    "Ji ",
    "Xun ",
    "Hou ",
    "Xing ",
    "Jiao ",
    "Xi ",
    "Gui ",
    "Nuo ",
    "Lang ",
    "Jia ",
    "Kuai ",
    "Zheng ",
    "Otoko ",
    "Yun ",
    "Yan ",
    "Cheng ",
    "Dou ",
    "Chi ",
    "Lu ",
    "Fu ",
    "Wu ",
    "Fu ",
    "Gao ",
    "Hao ",
    "Lang ",
    "Jia ",
    "Geng ",
    "Jun ",
    "Ying ",
    "Bo ",
    "Xi ",
    "Bei ",
    "Li ",
    "Yun ",
    "Bu ",
    "Xiao ",
    "Qi ",
    "Pi ",
    "Qing ",
    "Guo ",
    "Zhou ",
    "Tan ",
    "Zou ",
    "Ping ",
    "Lai ",
    "Ni ",
    "Chen ",
    "You ",
    "Bu ",
    "Xiang ",
    "Dan ",
    "Ju ",
    "Yong ",
    "Qiao ",
    "Yi ",
    "Du ",
    "Yan ",
    "Mei "
  ];
  return x90;
}
var x91;
var hasRequiredX91;
function requireX91() {
  if (hasRequiredX91) return x91;
  hasRequiredX91 = 1;
  x91 = [
    "Ruo ",
    "Bei ",
    "E ",
    "Yu ",
    "Juan ",
    "Yu ",
    "Yun ",
    "Hou ",
    "Kui ",
    "Xiang ",
    "Xiang ",
    "Sou ",
    "Tang ",
    "Ming ",
    "Xi ",
    "Ru ",
    "Chu ",
    "Zi ",
    "Zou ",
    "Ju ",
    "Wu ",
    "Xiang ",
    "Yun ",
    "Hao ",
    "Yong ",
    "Bi ",
    "Mo ",
    "Chao ",
    "Fu ",
    "Liao ",
    "Yin ",
    "Zhuan ",
    "Hu ",
    "Qiao ",
    "Yan ",
    "Zhang ",
    "Fan ",
    "Qiao ",
    "Xu ",
    "Deng ",
    "Bi ",
    "Xin ",
    "Bi ",
    "Ceng ",
    "Wei ",
    "Zheng ",
    "Mao ",
    "Shan ",
    "Lin ",
    "Po ",
    "Dan ",
    "Meng ",
    "Ye ",
    "Cao ",
    "Kuai ",
    "Feng ",
    "Meng ",
    "Zou ",
    "Kuang ",
    "Lian ",
    "Zan ",
    "Chan ",
    "You ",
    "Qi ",
    "Yan ",
    "Chan ",
    "Zan ",
    "Ling ",
    "Huan ",
    "Xi ",
    "Feng ",
    "Zan ",
    "Li ",
    "You ",
    "Ding ",
    "Qiu ",
    "Zhuo ",
    "Pei ",
    "Zhou ",
    "Yi ",
    "Hang ",
    "Yu ",
    "Jiu ",
    "Yan ",
    "Zui ",
    "Mao ",
    "Dan ",
    "Xu ",
    "Tou ",
    "Zhen ",
    "Fen ",
    "Sakenomoto ",
    "[?] ",
    "Yun ",
    "Tai ",
    "Tian ",
    "Qia ",
    "Tuo ",
    "Zuo ",
    "Han ",
    "Gu ",
    "Su ",
    "Po ",
    "Chou ",
    "Zai ",
    "Ming ",
    "Luo ",
    "Chuo ",
    "Chou ",
    "You ",
    "Tong ",
    "Zhi ",
    "Xian ",
    "Jiang ",
    "Cheng ",
    "Yin ",
    "Tu ",
    "Xiao ",
    "Mei ",
    "Ku ",
    "Suan ",
    "Lei ",
    "Pu ",
    "Zui ",
    "Hai ",
    "Yan ",
    "Xi ",
    "Niang ",
    "Wei ",
    "Lu ",
    "Lan ",
    "Yan ",
    "Tao ",
    "Pei ",
    "Zhan ",
    "Chun ",
    "Tan ",
    "Zui ",
    "Chuo ",
    "Cu ",
    "Kun ",
    "Ti ",
    "Mian ",
    "Du ",
    "Hu ",
    "Xu ",
    "Xing ",
    "Tan ",
    "Jiu ",
    "Chun ",
    "Yun ",
    "Po ",
    "Ke ",
    "Sou ",
    "Mi ",
    "Quan ",
    "Chou ",
    "Cuo ",
    "Yun ",
    "Yong ",
    "Ang ",
    "Zha ",
    "Hai ",
    "Tang ",
    "Jiang ",
    "Piao ",
    "Shan ",
    "Yu ",
    "Li ",
    "Zao ",
    "Lao ",
    "Yi ",
    "Jiang ",
    "Pu ",
    "Jiao ",
    "Xi ",
    "Tan ",
    "Po ",
    "Nong ",
    "Yi ",
    "Li ",
    "Ju ",
    "Jiao ",
    "Yi ",
    "Niang ",
    "Ru ",
    "Xun ",
    "Chou ",
    "Yan ",
    "Ling ",
    "Mi ",
    "Mi ",
    "Niang ",
    "Xin ",
    "Jiao ",
    "Xi ",
    "Mi ",
    "Yan ",
    "Bian ",
    "Cai ",
    "Shi ",
    "You ",
    "Shi ",
    "Shi ",
    "Li ",
    "Zhong ",
    "Ye ",
    "Liang ",
    "Li ",
    "Jin ",
    "Jin ",
    "Qiu ",
    "Yi ",
    "Diao ",
    "Dao ",
    "Zhao ",
    "Ding ",
    "Po ",
    "Qiu ",
    "He ",
    "Fu ",
    "Zhen ",
    "Zhi ",
    "Ba ",
    "Luan ",
    "Fu ",
    "Nai ",
    "Diao ",
    "Shan ",
    "Qiao ",
    "Kou ",
    "Chuan ",
    "Zi ",
    "Fan ",
    "Yu ",
    "Hua ",
    "Han ",
    "Gong ",
    "Qi ",
    "Mang ",
    "Ri ",
    "Di ",
    "Si ",
    "Xi ",
    "Yi ",
    "Chai ",
    "Shi ",
    "Tu ",
    "Xi ",
    "Nu ",
    "Qian ",
    "Ishiyumi ",
    "Jian ",
    "Pi ",
    "Ye ",
    "Yin "
  ];
  return x91;
}
var x92;
var hasRequiredX92;
function requireX92() {
  if (hasRequiredX92) return x92;
  hasRequiredX92 = 1;
  x92 = [
    "Ba ",
    "Fang ",
    "Chen ",
    "Xing ",
    "Tou ",
    "Yue ",
    "Yan ",
    "Fu ",
    "Pi ",
    "Na ",
    "Xin ",
    "E ",
    "Jue ",
    "Dun ",
    "Gou ",
    "Yin ",
    "Qian ",
    "Ban ",
    "Ji ",
    "Ren ",
    "Chao ",
    "Niu ",
    "Fen ",
    "Yun ",
    "Ji ",
    "Qin ",
    "Pi ",
    "Guo ",
    "Hong ",
    "Yin ",
    "Jun ",
    "Shi ",
    "Yi ",
    "Zhong ",
    "Nie ",
    "Gai ",
    "Ri ",
    "Huo ",
    "Tai ",
    "Kang ",
    "Habaki ",
    "Irori ",
    "Ngaak ",
    "[?] ",
    "Duo ",
    "Zi ",
    "Ni ",
    "Tu ",
    "Shi ",
    "Min ",
    "Gu ",
    "E ",
    "Ling ",
    "Bing ",
    "Yi ",
    "Gu ",
    "Ba ",
    "Pi ",
    "Yu ",
    "Si ",
    "Zuo ",
    "Bu ",
    "You ",
    "Dian ",
    "Jia ",
    "Zhen ",
    "Shi ",
    "Shi ",
    "Tie ",
    "Ju ",
    "Zhan ",
    "Shi ",
    "She ",
    "Xuan ",
    "Zhao ",
    "Bao ",
    "He ",
    "Bi ",
    "Sheng ",
    "Chu ",
    "Shi ",
    "Bo ",
    "Zhu ",
    "Chi ",
    "Za ",
    "Po ",
    "Tong ",
    "Qian ",
    "Fu ",
    "Zhai ",
    "Liu ",
    "Qian ",
    "Fu ",
    "Li ",
    "Yue ",
    "Pi ",
    "Yang ",
    "Ban ",
    "Bo ",
    "Jie ",
    "Gou ",
    "Shu ",
    "Zheng ",
    "Mu ",
    "Ni ",
    "Nie ",
    "Di ",
    "Jia ",
    "Mu ",
    "Dan ",
    "Shen ",
    "Yi ",
    "Si ",
    "Kuang ",
    "Ka ",
    "Bei ",
    "Jian ",
    "Tong ",
    "Xing ",
    "Hong ",
    "Jiao ",
    "Chi ",
    "Er ",
    "Ge ",
    "Bing ",
    "Shi ",
    "Mou ",
    "Jia ",
    "Yin ",
    "Jun ",
    "Zhou ",
    "Chong ",
    "Shang ",
    "Tong ",
    "Mo ",
    "Lei ",
    "Ji ",
    "Yu ",
    "Xu ",
    "Ren ",
    "Zun ",
    "Zhi ",
    "Qiong ",
    "Shan ",
    "Chi ",
    "Xian ",
    "Xing ",
    "Quan ",
    "Pi ",
    "Tie ",
    "Zhu ",
    "Hou ",
    "Ming ",
    "Kua ",
    "Yao ",
    "Xian ",
    "Xian ",
    "Xiu ",
    "Jun ",
    "Cha ",
    "Lao ",
    "Ji ",
    "Pi ",
    "Ru ",
    "Mi ",
    "Yi ",
    "Yin ",
    "Guang ",
    "An ",
    "Diou ",
    "You ",
    "Se ",
    "Kao ",
    "Qian ",
    "Luan ",
    "Kasugai ",
    "Ai ",
    "Diao ",
    "Han ",
    "Rui ",
    "Shi ",
    "Keng ",
    "Qiu ",
    "Xiao ",
    "Zhe ",
    "Xiu ",
    "Zang ",
    "Ti ",
    "Cuo ",
    "Gua ",
    "Gong ",
    "Zhong ",
    "Dou ",
    "Lu ",
    "Mei ",
    "Lang ",
    "Wan ",
    "Xin ",
    "Yun ",
    "Bei ",
    "Wu ",
    "Su ",
    "Yu ",
    "Chan ",
    "Ting ",
    "Bo ",
    "Han ",
    "Jia ",
    "Hong ",
    "Cuan ",
    "Feng ",
    "Chan ",
    "Wan ",
    "Zhi ",
    "Si ",
    "Xuan ",
    "Wu ",
    "Wu ",
    "Tiao ",
    "Gong ",
    "Zhuo ",
    "Lue ",
    "Xing ",
    "Qian ",
    "Shen ",
    "Han ",
    "Lue ",
    "Xie ",
    "Chu ",
    "Zheng ",
    "Ju ",
    "Xian ",
    "Tie ",
    "Mang ",
    "Pu ",
    "Li ",
    "Pan ",
    "Rui ",
    "Cheng ",
    "Gao ",
    "Li ",
    "Te ",
    "Pyeng ",
    "Zhu ",
    "[?] ",
    "Tu ",
    "Liu ",
    "Zui ",
    "Ju ",
    "Chang ",
    "Yuan ",
    "Jian ",
    "Gang ",
    "Diao ",
    "Tao ",
    "Chang "
  ];
  return x92;
}
var x93;
var hasRequiredX93;
function requireX93() {
  if (hasRequiredX93) return x93;
  hasRequiredX93 = 1;
  x93 = [
    "Lun ",
    "Kua ",
    "Ling ",
    "Bei ",
    "Lu ",
    "Li ",
    "Qiang ",
    "Pou ",
    "Juan ",
    "Min ",
    "Zui ",
    "Peng ",
    "An ",
    "Pi ",
    "Xian ",
    "Ya ",
    "Zhui ",
    "Lei ",
    "A ",
    "Kong ",
    "Ta ",
    "Kun ",
    "Du ",
    "Wei ",
    "Chui ",
    "Zi ",
    "Zheng ",
    "Ben ",
    "Nie ",
    "Cong ",
    "Qun ",
    "Tan ",
    "Ding ",
    "Qi ",
    "Qian ",
    "Zhuo ",
    "Qi ",
    "Yu ",
    "Jin ",
    "Guan ",
    "Mao ",
    "Chang ",
    "Tian ",
    "Xi ",
    "Lian ",
    "Tao ",
    "Gu ",
    "Cuo ",
    "Shu ",
    "Zhen ",
    "Lu ",
    "Meng ",
    "Lu ",
    "Hua ",
    "Biao ",
    "Ga ",
    "Lai ",
    "Ken ",
    "Kazari ",
    "Bu ",
    "Nai ",
    "Wan ",
    "Zan ",
    "[?] ",
    "De ",
    "Xian ",
    "[?] ",
    "Huo ",
    "Liang ",
    "[?] ",
    "Men ",
    "Kai ",
    "Ying ",
    "Di ",
    "Lian ",
    "Guo ",
    "Xian ",
    "Du ",
    "Tu ",
    "Wei ",
    "Cong ",
    "Fu ",
    "Rou ",
    "Ji ",
    "E ",
    "Rou ",
    "Chen ",
    "Ti ",
    "Zha ",
    "Hong ",
    "Yang ",
    "Duan ",
    "Xia ",
    "Yu ",
    "Keng ",
    "Xing ",
    "Huang ",
    "Wei ",
    "Fu ",
    "Zhao ",
    "Cha ",
    "Qie ",
    "She ",
    "Hong ",
    "Kui ",
    "Tian ",
    "Mou ",
    "Qiao ",
    "Qiao ",
    "Hou ",
    "Tou ",
    "Cong ",
    "Huan ",
    "Ye ",
    "Min ",
    "Jian ",
    "Duan ",
    "Jian ",
    "Song ",
    "Kui ",
    "Hu ",
    "Xuan ",
    "Duo ",
    "Jie ",
    "Zhen ",
    "Bian ",
    "Zhong ",
    "Zi ",
    "Xiu ",
    "Ye ",
    "Mei ",
    "Pai ",
    "Ai ",
    "Jie ",
    "[?] ",
    "Mei ",
    "Chuo ",
    "Ta ",
    "Bang ",
    "Xia ",
    "Lian ",
    "Suo ",
    "Xi ",
    "Liu ",
    "Zu ",
    "Ye ",
    "Nou ",
    "Weng ",
    "Rong ",
    "Tang ",
    "Suo ",
    "Qiang ",
    "Ge ",
    "Shuo ",
    "Chui ",
    "Bo ",
    "Pan ",
    "Sa ",
    "Bi ",
    "Sang ",
    "Gang ",
    "Zi ",
    "Wu ",
    "Ying ",
    "Huang ",
    "Tiao ",
    "Liu ",
    "Kai ",
    "Sun ",
    "Sha ",
    "Sou ",
    "Wan ",
    "Hao ",
    "Zhen ",
    "Zhen ",
    "Luo ",
    "Yi ",
    "Yuan ",
    "Tang ",
    "Nie ",
    "Xi ",
    "Jia ",
    "Ge ",
    "Ma ",
    "Juan ",
    "Kasugai ",
    "Habaki ",
    "Suo ",
    "[?] ",
    "[?] ",
    "[?] ",
    "Na ",
    "Lu ",
    "Suo ",
    "Ou ",
    "Zu ",
    "Tuan ",
    "Xiu ",
    "Guan ",
    "Xuan ",
    "Lian ",
    "Shou ",
    "Ao ",
    "Man ",
    "Mo ",
    "Luo ",
    "Bi ",
    "Wei ",
    "Liu ",
    "Di ",
    "Qiao ",
    "Cong ",
    "Yi ",
    "Lu ",
    "Ao ",
    "Keng ",
    "Qiang ",
    "Cui ",
    "Qi ",
    "Chang ",
    "Tang ",
    "Man ",
    "Yong ",
    "Chan ",
    "Feng ",
    "Jing ",
    "Biao ",
    "Shu ",
    "Lou ",
    "Xiu ",
    "Cong ",
    "Long ",
    "Zan ",
    "Jian ",
    "Cao ",
    "Li ",
    "Xia ",
    "Xi ",
    "Kang ",
    "[?] ",
    "Beng ",
    "[?] ",
    "[?] ",
    "Zheng ",
    "Lu ",
    "Hua ",
    "Ji ",
    "Pu ",
    "Hui ",
    "Qiang ",
    "Po ",
    "Lin ",
    "Suo ",
    "Xiu ",
    "San ",
    "Cheng "
  ];
  return x93;
}
var x94;
var hasRequiredX94;
function requireX94() {
  if (hasRequiredX94) return x94;
  hasRequiredX94 = 1;
  x94 = [
    "Kui ",
    "Si ",
    "Liu ",
    "Nao ",
    "Heng ",
    "Pie ",
    "Sui ",
    "Fan ",
    "Qiao ",
    "Quan ",
    "Yang ",
    "Tang ",
    "Xiang ",
    "Jue ",
    "Jiao ",
    "Zun ",
    "Liao ",
    "Jie ",
    "Lao ",
    "Dui ",
    "Tan ",
    "Zan ",
    "Ji ",
    "Jian ",
    "Zhong ",
    "Deng ",
    "Ya ",
    "Ying ",
    "Dui ",
    "Jue ",
    "Nou ",
    "Ti ",
    "Pu ",
    "Tie ",
    "[?] ",
    "[?] ",
    "Ding ",
    "Shan ",
    "Kai ",
    "Jian ",
    "Fei ",
    "Sui ",
    "Lu ",
    "Juan ",
    "Hui ",
    "Yu ",
    "Lian ",
    "Zhuo ",
    "Qiao ",
    "Qian ",
    "Zhuo ",
    "Lei ",
    "Bi ",
    "Tie ",
    "Huan ",
    "Ye ",
    "Duo ",
    "Guo ",
    "Dang ",
    "Ju ",
    "Fen ",
    "Da ",
    "Bei ",
    "Yi ",
    "Ai ",
    "Zong ",
    "Xun ",
    "Diao ",
    "Zhu ",
    "Heng ",
    "Zhui ",
    "Ji ",
    "Nie ",
    "Ta ",
    "Huo ",
    "Qing ",
    "Bin ",
    "Ying ",
    "Kui ",
    "Ning ",
    "Xu ",
    "Jian ",
    "Jian ",
    "Yari ",
    "Cha ",
    "Zhi ",
    "Mie ",
    "Li ",
    "Lei ",
    "Ji ",
    "Zuan ",
    "Kuang ",
    "Shang ",
    "Peng ",
    "La ",
    "Du ",
    "Shuo ",
    "Chuo ",
    "Lu ",
    "Biao ",
    "Bao ",
    "Lu ",
    "[?] ",
    "[?] ",
    "Long ",
    "E ",
    "Lu ",
    "Xin ",
    "Jian ",
    "Lan ",
    "Bo ",
    "Jian ",
    "Yao ",
    "Chan ",
    "Xiang ",
    "Jian ",
    "Xi ",
    "Guan ",
    "Cang ",
    "Nie ",
    "Lei ",
    "Cuan ",
    "Qu ",
    "Pan ",
    "Luo ",
    "Zuan ",
    "Luan ",
    "Zao ",
    "Nie ",
    "Jue ",
    "Tang ",
    "Shu ",
    "Lan ",
    "Jin ",
    "Qiu ",
    "Yi ",
    "Zhen ",
    "Ding ",
    "Zhao ",
    "Po ",
    "Diao ",
    "Tu ",
    "Qian ",
    "Chuan ",
    "Shan ",
    "Ji ",
    "Fan ",
    "Diao ",
    "Men ",
    "Nu ",
    "Xi ",
    "Chai ",
    "Xing ",
    "Gai ",
    "Bu ",
    "Tai ",
    "Ju ",
    "Dun ",
    "Chao ",
    "Zhong ",
    "Na ",
    "Bei ",
    "Gang ",
    "Ban ",
    "Qian ",
    "Yao ",
    "Qin ",
    "Jun ",
    "Wu ",
    "Gou ",
    "Kang ",
    "Fang ",
    "Huo ",
    "Tou ",
    "Niu ",
    "Ba ",
    "Yu ",
    "Qian ",
    "Zheng ",
    "Qian ",
    "Gu ",
    "Bo ",
    "E ",
    "Po ",
    "Bu ",
    "Ba ",
    "Yue ",
    "Zuan ",
    "Mu ",
    "Dan ",
    "Jia ",
    "Dian ",
    "You ",
    "Tie ",
    "Bo ",
    "Ling ",
    "Shuo ",
    "Qian ",
    "Liu ",
    "Bao ",
    "Shi ",
    "Xuan ",
    "She ",
    "Bi ",
    "Ni ",
    "Pi ",
    "Duo ",
    "Xing ",
    "Kao ",
    "Lao ",
    "Er ",
    "Mang ",
    "Ya ",
    "You ",
    "Cheng ",
    "Jia ",
    "Ye ",
    "Nao ",
    "Zhi ",
    "Dang ",
    "Tong ",
    "Lu ",
    "Diao ",
    "Yin ",
    "Kai ",
    "Zha ",
    "Zhu ",
    "Xian ",
    "Ting ",
    "Diu ",
    "Xian ",
    "Hua ",
    "Quan ",
    "Sha ",
    "Jia ",
    "Yao ",
    "Ge ",
    "Ming ",
    "Zheng ",
    "Se ",
    "Jiao ",
    "Yi ",
    "Chan ",
    "Chong ",
    "Tang ",
    "An ",
    "Yin ",
    "Ru ",
    "Zhu ",
    "Lao ",
    "Pu ",
    "Wu ",
    "Lai ",
    "Te ",
    "Lian ",
    "Keng "
  ];
  return x94;
}
var x95;
var hasRequiredX95;
function requireX95() {
  if (hasRequiredX95) return x95;
  hasRequiredX95 = 1;
  x95 = [
    "Xiao ",
    "Suo ",
    "Li ",
    "Zheng ",
    "Chu ",
    "Guo ",
    "Gao ",
    "Tie ",
    "Xiu ",
    "Cuo ",
    "Lue ",
    "Feng ",
    "Xin ",
    "Liu ",
    "Kai ",
    "Jian ",
    "Rui ",
    "Ti ",
    "Lang ",
    "Qian ",
    "Ju ",
    "A ",
    "Qiang ",
    "Duo ",
    "Tian ",
    "Cuo ",
    "Mao ",
    "Ben ",
    "Qi ",
    "De ",
    "Kua ",
    "Kun ",
    "Chang ",
    "Xi ",
    "Gu ",
    "Luo ",
    "Chui ",
    "Zhui ",
    "Jin ",
    "Zhi ",
    "Xian ",
    "Juan ",
    "Huo ",
    "Pou ",
    "Tan ",
    "Ding ",
    "Jian ",
    "Ju ",
    "Meng ",
    "Zi ",
    "Qie ",
    "Ying ",
    "Kai ",
    "Qiang ",
    "Song ",
    "E ",
    "Cha ",
    "Qiao ",
    "Zhong ",
    "Duan ",
    "Sou ",
    "Huang ",
    "Huan ",
    "Ai ",
    "Du ",
    "Mei ",
    "Lou ",
    "Zi ",
    "Fei ",
    "Mei ",
    "Mo ",
    "Zhen ",
    "Bo ",
    "Ge ",
    "Nie ",
    "Tang ",
    "Juan ",
    "Nie ",
    "Na ",
    "Liu ",
    "Hao ",
    "Bang ",
    "Yi ",
    "Jia ",
    "Bin ",
    "Rong ",
    "Biao ",
    "Tang ",
    "Man ",
    "Luo ",
    "Beng ",
    "Yong ",
    "Jing ",
    "Di ",
    "Zu ",
    "Xuan ",
    "Liu ",
    "Tan ",
    "Jue ",
    "Liao ",
    "Pu ",
    "Lu ",
    "Dui ",
    "Lan ",
    "Pu ",
    "Cuan ",
    "Qiang ",
    "Deng ",
    "Huo ",
    "Lei ",
    "Huan ",
    "Zhuo ",
    "Lian ",
    "Yi ",
    "Cha ",
    "Biao ",
    "La ",
    "Chan ",
    "Xiang ",
    "Chang ",
    "Chang ",
    "Jiu ",
    "Ao ",
    "Die ",
    "Qu ",
    "Liao ",
    "Mi ",
    "Chang ",
    "Men ",
    "Ma ",
    "Shuan ",
    "Shan ",
    "Huo ",
    "Men ",
    "Yan ",
    "Bi ",
    "Han ",
    "Bi ",
    "San ",
    "Kai ",
    "Kang ",
    "Beng ",
    "Hong ",
    "Run ",
    "San ",
    "Xian ",
    "Xian ",
    "Jian ",
    "Min ",
    "Xia ",
    "Yuru ",
    "Dou ",
    "Zha ",
    "Nao ",
    "Jian ",
    "Peng ",
    "Xia ",
    "Ling ",
    "Bian ",
    "Bi ",
    "Run ",
    "He ",
    "Guan ",
    "Ge ",
    "Ge ",
    "Fa ",
    "Chu ",
    "Hong ",
    "Gui ",
    "Min ",
    "Se ",
    "Kun ",
    "Lang ",
    "Lu ",
    "Ting ",
    "Sha ",
    "Ju ",
    "Yue ",
    "Yue ",
    "Chan ",
    "Qu ",
    "Lin ",
    "Chang ",
    "Shai ",
    "Kun ",
    "Yan ",
    "Min ",
    "Yan ",
    "E ",
    "Hun ",
    "Yu ",
    "Wen ",
    "Xiang ",
    "Bao ",
    "Xiang ",
    "Qu ",
    "Yao ",
    "Wen ",
    "Ban ",
    "An ",
    "Wei ",
    "Yin ",
    "Kuo ",
    "Que ",
    "Lan ",
    "Du ",
    "[?] ",
    "Phwung ",
    "Tian ",
    "Nie ",
    "Ta ",
    "Kai ",
    "He ",
    "Que ",
    "Chuang ",
    "Guan ",
    "Dou ",
    "Qi ",
    "Kui ",
    "Tang ",
    "Guan ",
    "Piao ",
    "Kan ",
    "Xi ",
    "Hui ",
    "Chan ",
    "Pi ",
    "Dang ",
    "Huan ",
    "Ta ",
    "Wen ",
    "[?] ",
    "Men ",
    "Shuan ",
    "Shan ",
    "Yan ",
    "Han ",
    "Bi ",
    "Wen ",
    "Chuang ",
    "Run ",
    "Wei ",
    "Xian ",
    "Hong ",
    "Jian ",
    "Min ",
    "Kang ",
    "Men ",
    "Zha ",
    "Nao ",
    "Gui ",
    "Wen ",
    "Ta ",
    "Min ",
    "Lu ",
    "Kai "
  ];
  return x95;
}
var x96;
var hasRequiredX96;
function requireX96() {
  if (hasRequiredX96) return x96;
  hasRequiredX96 = 1;
  x96 = [
    "Fa ",
    "Ge ",
    "He ",
    "Kun ",
    "Jiu ",
    "Yue ",
    "Lang ",
    "Du ",
    "Yu ",
    "Yan ",
    "Chang ",
    "Xi ",
    "Wen ",
    "Hun ",
    "Yan ",
    "E ",
    "Chan ",
    "Lan ",
    "Qu ",
    "Hui ",
    "Kuo ",
    "Que ",
    "Ge ",
    "Tian ",
    "Ta ",
    "Que ",
    "Kan ",
    "Huan ",
    "Fu ",
    "Fu ",
    "Le ",
    "Dui ",
    "Xin ",
    "Qian ",
    "Wu ",
    "Yi ",
    "Tuo ",
    "Yin ",
    "Yang ",
    "Dou ",
    "E ",
    "Sheng ",
    "Ban ",
    "Pei ",
    "Keng ",
    "Yun ",
    "Ruan ",
    "Zhi ",
    "Pi ",
    "Jing ",
    "Fang ",
    "Yang ",
    "Yin ",
    "Zhen ",
    "Jie ",
    "Cheng ",
    "E ",
    "Qu ",
    "Di ",
    "Zu ",
    "Zuo ",
    "Dian ",
    "Ling ",
    "A ",
    "Tuo ",
    "Tuo ",
    "Po ",
    "Bing ",
    "Fu ",
    "Ji ",
    "Lu ",
    "Long ",
    "Chen ",
    "Xing ",
    "Duo ",
    "Lou ",
    "Mo ",
    "Jiang ",
    "Shu ",
    "Duo ",
    "Xian ",
    "Er ",
    "Gui ",
    "Yu ",
    "Gai ",
    "Shan ",
    "Xun ",
    "Qiao ",
    "Xing ",
    "Chun ",
    "Fu ",
    "Bi ",
    "Xia ",
    "Shan ",
    "Sheng ",
    "Zhi ",
    "Pu ",
    "Dou ",
    "Yuan ",
    "Zhen ",
    "Chu ",
    "Xian ",
    "Tou ",
    "Nie ",
    "Yun ",
    "Xian ",
    "Pei ",
    "Pei ",
    "Zou ",
    "Yi ",
    "Dui ",
    "Lun ",
    "Yin ",
    "Ju ",
    "Chui ",
    "Chen ",
    "Pi ",
    "Ling ",
    "Tao ",
    "Xian ",
    "Lu ",
    "Sheng ",
    "Xian ",
    "Yin ",
    "Zhu ",
    "Yang ",
    "Reng ",
    "Shan ",
    "Chong ",
    "Yan ",
    "Yin ",
    "Yu ",
    "Ti ",
    "Yu ",
    "Long ",
    "Wei ",
    "Wei ",
    "Nie ",
    "Dui ",
    "Sui ",
    "An ",
    "Huang ",
    "Jie ",
    "Sui ",
    "Yin ",
    "Gai ",
    "Yan ",
    "Hui ",
    "Ge ",
    "Yun ",
    "Wu ",
    "Wei ",
    "Ai ",
    "Xi ",
    "Tang ",
    "Ji ",
    "Zhang ",
    "Dao ",
    "Ao ",
    "Xi ",
    "Yin ",
    "[?] ",
    "Rao ",
    "Lin ",
    "Tui ",
    "Deng ",
    "Pi ",
    "Sui ",
    "Sui ",
    "Yu ",
    "Xian ",
    "Fen ",
    "Ni ",
    "Er ",
    "Ji ",
    "Dao ",
    "Xi ",
    "Yin ",
    "E ",
    "Hui ",
    "Long ",
    "Xi ",
    "Li ",
    "Li ",
    "Li ",
    "Zhui ",
    "He ",
    "Zhi ",
    "Zhun ",
    "Jun ",
    "Nan ",
    "Yi ",
    "Que ",
    "Yan ",
    "Qian ",
    "Ya ",
    "Xiong ",
    "Ya ",
    "Ji ",
    "Gu ",
    "Huan ",
    "Zhi ",
    "Gou ",
    "Jun ",
    "Ci ",
    "Yong ",
    "Ju ",
    "Chu ",
    "Hu ",
    "Za ",
    "Luo ",
    "Yu ",
    "Chou ",
    "Diao ",
    "Sui ",
    "Han ",
    "Huo ",
    "Shuang ",
    "Guan ",
    "Chu ",
    "Za ",
    "Yong ",
    "Ji ",
    "Xi ",
    "Chou ",
    "Liu ",
    "Li ",
    "Nan ",
    "Xue ",
    "Za ",
    "Ji ",
    "Ji ",
    "Yu ",
    "Yu ",
    "Xue ",
    "Na ",
    "Fou ",
    "Se ",
    "Mu ",
    "Wen ",
    "Fen ",
    "Pang ",
    "Yun ",
    "Li ",
    "Li ",
    "Ang ",
    "Ling ",
    "Lei ",
    "An ",
    "Bao ",
    "Meng ",
    "Dian ",
    "Dang ",
    "Xing ",
    "Wu ",
    "Zhao "
  ];
  return x96;
}
var x97;
var hasRequiredX97;
function requireX97() {
  if (hasRequiredX97) return x97;
  hasRequiredX97 = 1;
  x97 = [
    "Xu ",
    "Ji ",
    "Mu ",
    "Chen ",
    "Xiao ",
    "Zha ",
    "Ting ",
    "Zhen ",
    "Pei ",
    "Mei ",
    "Ling ",
    "Qi ",
    "Chou ",
    "Huo ",
    "Sha ",
    "Fei ",
    "Weng ",
    "Zhan ",
    "Yin ",
    "Ni ",
    "Chou ",
    "Tun ",
    "Lin ",
    "[?] ",
    "Dong ",
    "Ying ",
    "Wu ",
    "Ling ",
    "Shuang ",
    "Ling ",
    "Xia ",
    "Hong ",
    "Yin ",
    "Mo ",
    "Mai ",
    "Yun ",
    "Liu ",
    "Meng ",
    "Bin ",
    "Wu ",
    "Wei ",
    "Huo ",
    "Yin ",
    "Xi ",
    "Yi ",
    "Ai ",
    "Dan ",
    "Deng ",
    "Xian ",
    "Yu ",
    "Lu ",
    "Long ",
    "Dai ",
    "Ji ",
    "Pang ",
    "Yang ",
    "Ba ",
    "Pi ",
    "Wei ",
    "[?] ",
    "Xi ",
    "Ji ",
    "Mai ",
    "Meng ",
    "Meng ",
    "Lei ",
    "Li ",
    "Huo ",
    "Ai ",
    "Fei ",
    "Dai ",
    "Long ",
    "Ling ",
    "Ai ",
    "Feng ",
    "Li ",
    "Bao ",
    "[?] ",
    "He ",
    "He ",
    "Bing ",
    "Qing ",
    "Qing ",
    "Jing ",
    "Tian ",
    "Zhen ",
    "Jing ",
    "Cheng ",
    "Qing ",
    "Jing ",
    "Jing ",
    "Dian ",
    "Jing ",
    "Tian ",
    "Fei ",
    "Fei ",
    "Kao ",
    "Mi ",
    "Mian ",
    "Mian ",
    "Pao ",
    "Ye ",
    "Tian ",
    "Hui ",
    "Ye ",
    "Ge ",
    "Ding ",
    "Cha ",
    "Jian ",
    "Ren ",
    "Di ",
    "Du ",
    "Wu ",
    "Ren ",
    "Qin ",
    "Jin ",
    "Xue ",
    "Niu ",
    "Ba ",
    "Yin ",
    "Sa ",
    "Na ",
    "Mo ",
    "Zu ",
    "Da ",
    "Ban ",
    "Yi ",
    "Yao ",
    "Tao ",
    "Tuo ",
    "Jia ",
    "Hong ",
    "Pao ",
    "Yang ",
    "Tomo ",
    "Yin ",
    "Jia ",
    "Tao ",
    "Ji ",
    "Xie ",
    "An ",
    "An ",
    "Hen ",
    "Gong ",
    "Kohaze ",
    "Da ",
    "Qiao ",
    "Ting ",
    "Wan ",
    "Ying ",
    "Sui ",
    "Tiao ",
    "Qiao ",
    "Xuan ",
    "Kong ",
    "Beng ",
    "Ta ",
    "Zhang ",
    "Bing ",
    "Kuo ",
    "Ju ",
    "La ",
    "Xie ",
    "Rou ",
    "Bang ",
    "Yi ",
    "Qiu ",
    "Qiu ",
    "He ",
    "Xiao ",
    "Mu ",
    "Ju ",
    "Jian ",
    "Bian ",
    "Di ",
    "Jian ",
    "On ",
    "Tao ",
    "Gou ",
    "Ta ",
    "Bei ",
    "Xie ",
    "Pan ",
    "Ge ",
    "Bi ",
    "Kuo ",
    "Tang ",
    "Lou ",
    "Gui ",
    "Qiao ",
    "Xue ",
    "Ji ",
    "Jian ",
    "Jiang ",
    "Chan ",
    "Da ",
    "Huo ",
    "Xian ",
    "Qian ",
    "Du ",
    "Wa ",
    "Jian ",
    "Lan ",
    "Wei ",
    "Ren ",
    "Fu ",
    "Mei ",
    "Juan ",
    "Ge ",
    "Wei ",
    "Qiao ",
    "Han ",
    "Chang ",
    "[?] ",
    "Rou ",
    "Xun ",
    "She ",
    "Wei ",
    "Ge ",
    "Bei ",
    "Tao ",
    "Gou ",
    "Yun ",
    "[?] ",
    "Bi ",
    "Wei ",
    "Hui ",
    "Du ",
    "Wa ",
    "Du ",
    "Wei ",
    "Ren ",
    "Fu ",
    "Han ",
    "Wei ",
    "Yun ",
    "Tao ",
    "Jiu ",
    "Jiu ",
    "Xian ",
    "Xie ",
    "Xian ",
    "Ji ",
    "Yin ",
    "Za ",
    "Yun ",
    "Shao ",
    "Le ",
    "Peng ",
    "Heng ",
    "Ying ",
    "Yun ",
    "Peng ",
    "Yin ",
    "Yin ",
    "Xiang "
  ];
  return x97;
}
var x98;
var hasRequiredX98;
function requireX98() {
  if (hasRequiredX98) return x98;
  hasRequiredX98 = 1;
  x98 = [
    "Hu ",
    "Ye ",
    "Ding ",
    "Qing ",
    "Pan ",
    "Xiang ",
    "Shun ",
    "Han ",
    "Xu ",
    "Yi ",
    "Xu ",
    "Gu ",
    "Song ",
    "Kui ",
    "Qi ",
    "Hang ",
    "Yu ",
    "Wan ",
    "Ban ",
    "Dun ",
    "Di ",
    "Dan ",
    "Pan ",
    "Po ",
    "Ling ",
    "Ce ",
    "Jing ",
    "Lei ",
    "He ",
    "Qiao ",
    "E ",
    "E ",
    "Wei ",
    "Jie ",
    "Gua ",
    "Shen ",
    "Yi ",
    "Shen ",
    "Hai ",
    "Dui ",
    "Pian ",
    "Ping ",
    "Lei ",
    "Fu ",
    "Jia ",
    "Tou ",
    "Hui ",
    "Kui ",
    "Jia ",
    "Le ",
    "Tian ",
    "Cheng ",
    "Ying ",
    "Jun ",
    "Hu ",
    "Han ",
    "Jing ",
    "Tui ",
    "Tui ",
    "Pin ",
    "Lai ",
    "Tui ",
    "Zi ",
    "Zi ",
    "Chui ",
    "Ding ",
    "Lai ",
    "Yan ",
    "Han ",
    "Jian ",
    "Ke ",
    "Cui ",
    "Jiong ",
    "Qin ",
    "Yi ",
    "Sai ",
    "Ti ",
    "E ",
    "E ",
    "Yan ",
    "Hun ",
    "Kan ",
    "Yong ",
    "Zhuan ",
    "Yan ",
    "Xian ",
    "Xin ",
    "Yi ",
    "Yuan ",
    "Sang ",
    "Dian ",
    "Dian ",
    "Jiang ",
    "Ku ",
    "Lei ",
    "Liao ",
    "Piao ",
    "Yi ",
    "Man ",
    "Qi ",
    "Rao ",
    "Hao ",
    "Qiao ",
    "Gu ",
    "Xun ",
    "Qian ",
    "Hui ",
    "Zhan ",
    "Ru ",
    "Hong ",
    "Bin ",
    "Xian ",
    "Pin ",
    "Lu ",
    "Lan ",
    "Nie ",
    "Quan ",
    "Ye ",
    "Ding ",
    "Qing ",
    "Han ",
    "Xiang ",
    "Shun ",
    "Xu ",
    "Xu ",
    "Wan ",
    "Gu ",
    "Dun ",
    "Qi ",
    "Ban ",
    "Song ",
    "Hang ",
    "Yu ",
    "Lu ",
    "Ling ",
    "Po ",
    "Jing ",
    "Jie ",
    "Jia ",
    "Tian ",
    "Han ",
    "Ying ",
    "Jiong ",
    "Hai ",
    "Yi ",
    "Pin ",
    "Hui ",
    "Tui ",
    "Han ",
    "Ying ",
    "Ying ",
    "Ke ",
    "Ti ",
    "Yong ",
    "E ",
    "Zhuan ",
    "Yan ",
    "E ",
    "Nie ",
    "Man ",
    "Dian ",
    "Sang ",
    "Hao ",
    "Lei ",
    "Zhan ",
    "Ru ",
    "Pin ",
    "Quan ",
    "Feng ",
    "Biao ",
    "Oroshi ",
    "Fu ",
    "Xia ",
    "Zhan ",
    "Biao ",
    "Sa ",
    "Ba ",
    "Tai ",
    "Lie ",
    "Gua ",
    "Xuan ",
    "Shao ",
    "Ju ",
    "Bi ",
    "Si ",
    "Wei ",
    "Yang ",
    "Yao ",
    "Sou ",
    "Kai ",
    "Sao ",
    "Fan ",
    "Liu ",
    "Xi ",
    "Liao ",
    "Piao ",
    "Piao ",
    "Liu ",
    "Biao ",
    "Biao ",
    "Biao ",
    "Liao ",
    "[?] ",
    "Se ",
    "Feng ",
    "Biao ",
    "Feng ",
    "Yang ",
    "Zhan ",
    "Biao ",
    "Sa ",
    "Ju ",
    "Si ",
    "Sou ",
    "Yao ",
    "Liu ",
    "Piao ",
    "Biao ",
    "Biao ",
    "Fei ",
    "Fan ",
    "Fei ",
    "Fei ",
    "Shi ",
    "Shi ",
    "Can ",
    "Ji ",
    "Ding ",
    "Si ",
    "Tuo ",
    "Zhan ",
    "Sun ",
    "Xiang ",
    "Tun ",
    "Ren ",
    "Yu ",
    "Juan ",
    "Chi ",
    "Yin ",
    "Fan ",
    "Fan ",
    "Sun ",
    "Yin ",
    "Zhu ",
    "Yi ",
    "Zhai ",
    "Bi ",
    "Jie ",
    "Tao ",
    "Liu ",
    "Ci ",
    "Tie ",
    "Si ",
    "Bao ",
    "Shi ",
    "Duo "
  ];
  return x98;
}
var x99;
var hasRequiredX99;
function requireX99() {
  if (hasRequiredX99) return x99;
  hasRequiredX99 = 1;
  x99 = [
    "Hai ",
    "Ren ",
    "Tian ",
    "Jiao ",
    "Jia ",
    "Bing ",
    "Yao ",
    "Tong ",
    "Ci ",
    "Xiang ",
    "Yang ",
    "Yang ",
    "Er ",
    "Yan ",
    "Le ",
    "Yi ",
    "Can ",
    "Bo ",
    "Nei ",
    "E ",
    "Bu ",
    "Jun ",
    "Dou ",
    "Su ",
    "Yu ",
    "Shi ",
    "Yao ",
    "Hun ",
    "Guo ",
    "Shi ",
    "Jian ",
    "Zhui ",
    "Bing ",
    "Xian ",
    "Bu ",
    "Ye ",
    "Tan ",
    "Fei ",
    "Zhang ",
    "Wei ",
    "Guan ",
    "E ",
    "Nuan ",
    "Hun ",
    "Hu ",
    "Huang ",
    "Tie ",
    "Hui ",
    "Jian ",
    "Hou ",
    "He ",
    "Xing ",
    "Fen ",
    "Wei ",
    "Gu ",
    "Cha ",
    "Song ",
    "Tang ",
    "Bo ",
    "Gao ",
    "Xi ",
    "Kui ",
    "Liu ",
    "Sou ",
    "Tao ",
    "Ye ",
    "Yun ",
    "Mo ",
    "Tang ",
    "Man ",
    "Bi ",
    "Yu ",
    "Xiu ",
    "Jin ",
    "San ",
    "Kui ",
    "Zhuan ",
    "Shan ",
    "Chi ",
    "Dan ",
    "Yi ",
    "Ji ",
    "Rao ",
    "Cheng ",
    "Yong ",
    "Tao ",
    "Hui ",
    "Xiang ",
    "Zhan ",
    "Fen ",
    "Hai ",
    "Meng ",
    "Yan ",
    "Mo ",
    "Chan ",
    "Xiang ",
    "Luo ",
    "Zuan ",
    "Nang ",
    "Shi ",
    "Ding ",
    "Ji ",
    "Tuo ",
    "Xing ",
    "Tun ",
    "Xi ",
    "Ren ",
    "Yu ",
    "Chi ",
    "Fan ",
    "Yin ",
    "Jian ",
    "Shi ",
    "Bao ",
    "Si ",
    "Duo ",
    "Yi ",
    "Er ",
    "Rao ",
    "Xiang ",
    "Jia ",
    "Le ",
    "Jiao ",
    "Yi ",
    "Bing ",
    "Bo ",
    "Dou ",
    "E ",
    "Yu ",
    "Nei ",
    "Jun ",
    "Guo ",
    "Hun ",
    "Xian ",
    "Guan ",
    "Cha ",
    "Kui ",
    "Gu ",
    "Sou ",
    "Chan ",
    "Ye ",
    "Mo ",
    "Bo ",
    "Liu ",
    "Xiu ",
    "Jin ",
    "Man ",
    "San ",
    "Zhuan ",
    "Nang ",
    "Shou ",
    "Kui ",
    "Guo ",
    "Xiang ",
    "Fen ",
    "Ba ",
    "Ni ",
    "Bi ",
    "Bo ",
    "Tu ",
    "Han ",
    "Fei ",
    "Jian ",
    "An ",
    "Ai ",
    "Fu ",
    "Xian ",
    "Wen ",
    "Xin ",
    "Fen ",
    "Bin ",
    "Xing ",
    "Ma ",
    "Yu ",
    "Feng ",
    "Han ",
    "Di ",
    "Tuo ",
    "Tuo ",
    "Chi ",
    "Xun ",
    "Zhu ",
    "Zhi ",
    "Pei ",
    "Xin ",
    "Ri ",
    "Sa ",
    "Yin ",
    "Wen ",
    "Zhi ",
    "Dan ",
    "Lu ",
    "You ",
    "Bo ",
    "Bao ",
    "Kuai ",
    "Tuo ",
    "Yi ",
    "Qu ",
    "[?] ",
    "Qu ",
    "Jiong ",
    "Bo ",
    "Zhao ",
    "Yuan ",
    "Peng ",
    "Zhou ",
    "Ju ",
    "Zhu ",
    "Nu ",
    "Ju ",
    "Pi ",
    "Zang ",
    "Jia ",
    "Ling ",
    "Zhen ",
    "Tai ",
    "Fu ",
    "Yang ",
    "Shi ",
    "Bi ",
    "Tuo ",
    "Tuo ",
    "Si ",
    "Liu ",
    "Ma ",
    "Pian ",
    "Tao ",
    "Zhi ",
    "Rong ",
    "Teng ",
    "Dong ",
    "Xun ",
    "Quan ",
    "Shen ",
    "Jiong ",
    "Er ",
    "Hai ",
    "Bo ",
    "Zhu ",
    "Yin ",
    "Luo ",
    "Shuu ",
    "Dan ",
    "Xie ",
    "Liu ",
    "Ju ",
    "Song ",
    "Qin ",
    "Mang ",
    "Liang ",
    "Han ",
    "Tu ",
    "Xuan ",
    "Tui ",
    "Jun "
  ];
  return x99;
}
var x9a;
var hasRequiredX9a;
function requireX9a() {
  if (hasRequiredX9a) return x9a;
  hasRequiredX9a = 1;
  x9a = [
    "E ",
    "Cheng ",
    "Xin ",
    "Ai ",
    "Lu ",
    "Zhui ",
    "Zhou ",
    "She ",
    "Pian ",
    "Kun ",
    "Tao ",
    "Lai ",
    "Zong ",
    "Ke ",
    "Qi ",
    "Qi ",
    "Yan ",
    "Fei ",
    "Sao ",
    "Yan ",
    "Jie ",
    "Yao ",
    "Wu ",
    "Pian ",
    "Cong ",
    "Pian ",
    "Qian ",
    "Fei ",
    "Huang ",
    "Jian ",
    "Huo ",
    "Yu ",
    "Ti ",
    "Quan ",
    "Xia ",
    "Zong ",
    "Kui ",
    "Rou ",
    "Si ",
    "Gua ",
    "Tuo ",
    "Kui ",
    "Sou ",
    "Qian ",
    "Cheng ",
    "Zhi ",
    "Liu ",
    "Pang ",
    "Teng ",
    "Xi ",
    "Cao ",
    "Du ",
    "Yan ",
    "Yuan ",
    "Zou ",
    "Sao ",
    "Shan ",
    "Li ",
    "Zhi ",
    "Shuang ",
    "Lu ",
    "Xi ",
    "Luo ",
    "Zhang ",
    "Mo ",
    "Ao ",
    "Can ",
    "Piao ",
    "Cong ",
    "Qu ",
    "Bi ",
    "Zhi ",
    "Yu ",
    "Xu ",
    "Hua ",
    "Bo ",
    "Su ",
    "Xiao ",
    "Lin ",
    "Chan ",
    "Dun ",
    "Liu ",
    "Tuo ",
    "Zeng ",
    "Tan ",
    "Jiao ",
    "Tie ",
    "Yan ",
    "Luo ",
    "Zhan ",
    "Jing ",
    "Yi ",
    "Ye ",
    "Tuo ",
    "Bin ",
    "Zou ",
    "Yan ",
    "Peng ",
    "Lu ",
    "Teng ",
    "Xiang ",
    "Ji ",
    "Shuang ",
    "Ju ",
    "Xi ",
    "Huan ",
    "Li ",
    "Biao ",
    "Ma ",
    "Yu ",
    "Tuo ",
    "Xun ",
    "Chi ",
    "Qu ",
    "Ri ",
    "Bo ",
    "Lu ",
    "Zang ",
    "Shi ",
    "Si ",
    "Fu ",
    "Ju ",
    "Zou ",
    "Zhu ",
    "Tuo ",
    "Nu ",
    "Jia ",
    "Yi ",
    "Tai ",
    "Xiao ",
    "Ma ",
    "Yin ",
    "Jiao ",
    "Hua ",
    "Luo ",
    "Hai ",
    "Pian ",
    "Biao ",
    "Li ",
    "Cheng ",
    "Yan ",
    "Xin ",
    "Qin ",
    "Jun ",
    "Qi ",
    "Qi ",
    "Ke ",
    "Zhui ",
    "Zong ",
    "Su ",
    "Can ",
    "Pian ",
    "Zhi ",
    "Kui ",
    "Sao ",
    "Wu ",
    "Ao ",
    "Liu ",
    "Qian ",
    "Shan ",
    "Piao ",
    "Luo ",
    "Cong ",
    "Chan ",
    "Zou ",
    "Ji ",
    "Shuang ",
    "Xiang ",
    "Gu ",
    "Wei ",
    "Wei ",
    "Wei ",
    "Yu ",
    "Gan ",
    "Yi ",
    "Ang ",
    "Tou ",
    "Xie ",
    "Bao ",
    "Bi ",
    "Chi ",
    "Ti ",
    "Di ",
    "Ku ",
    "Hai ",
    "Qiao ",
    "Gou ",
    "Kua ",
    "Ge ",
    "Tui ",
    "Geng ",
    "Pian ",
    "Bi ",
    "Ke ",
    "Ka ",
    "Yu ",
    "Sui ",
    "Lou ",
    "Bo ",
    "Xiao ",
    "Pang ",
    "Bo ",
    "Ci ",
    "Kuan ",
    "Bin ",
    "Mo ",
    "Liao ",
    "Lou ",
    "Nao ",
    "Du ",
    "Zang ",
    "Sui ",
    "Ti ",
    "Bin ",
    "Kuan ",
    "Lu ",
    "Gao ",
    "Gao ",
    "Qiao ",
    "Kao ",
    "Qiao ",
    "Lao ",
    "Zao ",
    "Biao ",
    "Kun ",
    "Kun ",
    "Ti ",
    "Fang ",
    "Xiu ",
    "Ran ",
    "Mao ",
    "Dan ",
    "Kun ",
    "Bin ",
    "Fa ",
    "Tiao ",
    "Peng ",
    "Zi ",
    "Fa ",
    "Ran ",
    "Ti ",
    "Pao ",
    "Pi ",
    "Mao ",
    "Fu ",
    "Er ",
    "Rong ",
    "Qu ",
    "Gong ",
    "Xiu ",
    "Gua ",
    "Ji ",
    "Peng ",
    "Zhua ",
    "Shao ",
    "Sha "
  ];
  return x9a;
}
var x9b;
var hasRequiredX9b;
function requireX9b() {
  if (hasRequiredX9b) return x9b;
  hasRequiredX9b = 1;
  x9b = [
    "Ti ",
    "Li ",
    "Bin ",
    "Zong ",
    "Ti ",
    "Peng ",
    "Song ",
    "Zheng ",
    "Quan ",
    "Zong ",
    "Shun ",
    "Jian ",
    "Duo ",
    "Hu ",
    "La ",
    "Jiu ",
    "Qi ",
    "Lian ",
    "Zhen ",
    "Bin ",
    "Peng ",
    "Mo ",
    "San ",
    "Man ",
    "Man ",
    "Seng ",
    "Xu ",
    "Lie ",
    "Qian ",
    "Qian ",
    "Nong ",
    "Huan ",
    "Kuai ",
    "Ning ",
    "Bin ",
    "Lie ",
    "Rang ",
    "Dou ",
    "Dou ",
    "Nao ",
    "Hong ",
    "Xi ",
    "Dou ",
    "Han ",
    "Dou ",
    "Dou ",
    "Jiu ",
    "Chang ",
    "Yu ",
    "Yu ",
    "Li ",
    "Juan ",
    "Fu ",
    "Qian ",
    "Gui ",
    "Zong ",
    "Liu ",
    "Gui ",
    "Shang ",
    "Yu ",
    "Gui ",
    "Mei ",
    "Ji ",
    "Qi ",
    "Jie ",
    "Kui ",
    "Hun ",
    "Ba ",
    "Po ",
    "Mei ",
    "Xu ",
    "Yan ",
    "Xiao ",
    "Liang ",
    "Yu ",
    "Tui ",
    "Qi ",
    "Wang ",
    "Liang ",
    "Wei ",
    "Jian ",
    "Chi ",
    "Piao ",
    "Bi ",
    "Mo ",
    "Ji ",
    "Xu ",
    "Chou ",
    "Yan ",
    "Zhan ",
    "Yu ",
    "Dao ",
    "Ren ",
    "Ji ",
    "Eri ",
    "Gong ",
    "Tuo ",
    "Diao ",
    "Ji ",
    "Xu ",
    "E ",
    "E ",
    "Sha ",
    "Hang ",
    "Tun ",
    "Mo ",
    "Jie ",
    "Shen ",
    "Fan ",
    "Yuan ",
    "Bi ",
    "Lu ",
    "Wen ",
    "Hu ",
    "Lu ",
    "Za ",
    "Fang ",
    "Fen ",
    "Na ",
    "You ",
    "Namazu ",
    "Todo ",
    "He ",
    "Xia ",
    "Qu ",
    "Han ",
    "Pi ",
    "Ling ",
    "Tuo ",
    "Bo ",
    "Qiu ",
    "Ping ",
    "Fu ",
    "Bi ",
    "Ji ",
    "Wei ",
    "Ju ",
    "Diao ",
    "Bo ",
    "You ",
    "Gun ",
    "Pi ",
    "Nian ",
    "Xing ",
    "Tai ",
    "Bao ",
    "Fu ",
    "Zha ",
    "Ju ",
    "Gu ",
    "Kajika ",
    "Tong ",
    "[?] ",
    "Ta ",
    "Jie ",
    "Shu ",
    "Hou ",
    "Xiang ",
    "Er ",
    "An ",
    "Wei ",
    "Tiao ",
    "Zhu ",
    "Yin ",
    "Lie ",
    "Luo ",
    "Tong ",
    "Yi ",
    "Qi ",
    "Bing ",
    "Wei ",
    "Jiao ",
    "Bu ",
    "Gui ",
    "Xian ",
    "Ge ",
    "Hui ",
    "Bora ",
    "Mate ",
    "Kao ",
    "Gori ",
    "Duo ",
    "Jun ",
    "Ti ",
    "Man ",
    "Xiao ",
    "Za ",
    "Sha ",
    "Qin ",
    "Yu ",
    "Nei ",
    "Zhe ",
    "Gun ",
    "Geng ",
    "Su ",
    "Wu ",
    "Qiu ",
    "Ting ",
    "Fu ",
    "Wan ",
    "You ",
    "Li ",
    "Sha ",
    "Sha ",
    "Gao ",
    "Meng ",
    "Ugui ",
    "Asari ",
    "Subashiri ",
    "Kazunoko ",
    "Yong ",
    "Ni ",
    "Zi ",
    "Qi ",
    "Qing ",
    "Xiang ",
    "Nei ",
    "Chun ",
    "Ji ",
    "Diao ",
    "Qie ",
    "Gu ",
    "Zhou ",
    "Dong ",
    "Lai ",
    "Fei ",
    "Ni ",
    "Yi ",
    "Kun ",
    "Lu ",
    "Jiu ",
    "Chang ",
    "Jing ",
    "Lun ",
    "Ling ",
    "Zou ",
    "Li ",
    "Meng ",
    "Zong ",
    "Zhi ",
    "Nian ",
    "Shachi ",
    "Dojou ",
    "Sukesou ",
    "Shi ",
    "Shen ",
    "Hun ",
    "Shi ",
    "Hou ",
    "Xing ",
    "Zhu ",
    "La ",
    "Zong ",
    "Ji ",
    "Bian ",
    "Bian "
  ];
  return x9b;
}
var x9c;
var hasRequiredX9c;
function requireX9c() {
  if (hasRequiredX9c) return x9c;
  hasRequiredX9c = 1;
  x9c = [
    "Huan ",
    "Quan ",
    "Ze ",
    "Wei ",
    "Wei ",
    "Yu ",
    "Qun ",
    "Rou ",
    "Die ",
    "Huang ",
    "Lian ",
    "Yan ",
    "Qiu ",
    "Qiu ",
    "Jian ",
    "Bi ",
    "E ",
    "Yang ",
    "Fu ",
    "Sai ",
    "Jian ",
    "Xia ",
    "Tuo ",
    "Hu ",
    "Muroaji ",
    "Ruo ",
    "Haraka ",
    "Wen ",
    "Jian ",
    "Hao ",
    "Wu ",
    "Fang ",
    "Sao ",
    "Liu ",
    "Ma ",
    "Shi ",
    "Shi ",
    "Yin ",
    "Z ",
    "Teng ",
    "Ta ",
    "Yao ",
    "Ge ",
    "Rong ",
    "Qian ",
    "Qi ",
    "Wen ",
    "Ruo ",
    "Hatahata ",
    "Lian ",
    "Ao ",
    "Le ",
    "Hui ",
    "Min ",
    "Ji ",
    "Tiao ",
    "Qu ",
    "Jian ",
    "Sao ",
    "Man ",
    "Xi ",
    "Qiu ",
    "Biao ",
    "Ji ",
    "Ji ",
    "Zhu ",
    "Jiang ",
    "Qiu ",
    "Zhuan ",
    "Yong ",
    "Zhang ",
    "Kang ",
    "Xue ",
    "Bie ",
    "Jue ",
    "Qu ",
    "Xiang ",
    "Bo ",
    "Jiao ",
    "Xun ",
    "Su ",
    "Huang ",
    "Zun ",
    "Shan ",
    "Shan ",
    "Fan ",
    "Jue ",
    "Lin ",
    "Xun ",
    "Miao ",
    "Xi ",
    "Eso ",
    "Kyou ",
    "Fen ",
    "Guan ",
    "Hou ",
    "Kuai ",
    "Zei ",
    "Sao ",
    "Zhan ",
    "Gan ",
    "Gui ",
    "Sheng ",
    "Li ",
    "Chang ",
    "Hatahata ",
    "Shiira ",
    "Mutsu ",
    "Ru ",
    "Ji ",
    "Xu ",
    "Huo ",
    "Shiira ",
    "Li ",
    "Lie ",
    "Li ",
    "Mie ",
    "Zhen ",
    "Xiang ",
    "E ",
    "Lu ",
    "Guan ",
    "Li ",
    "Xian ",
    "Yu ",
    "Dao ",
    "Ji ",
    "You ",
    "Tun ",
    "Lu ",
    "Fang ",
    "Ba ",
    "He ",
    "Bo ",
    "Ping ",
    "Nian ",
    "Lu ",
    "You ",
    "Zha ",
    "Fu ",
    "Bo ",
    "Bao ",
    "Hou ",
    "Pi ",
    "Tai ",
    "Gui ",
    "Jie ",
    "Kao ",
    "Wei ",
    "Er ",
    "Tong ",
    "Ze ",
    "Hou ",
    "Kuai ",
    "Ji ",
    "Jiao ",
    "Xian ",
    "Za ",
    "Xiang ",
    "Xun ",
    "Geng ",
    "Li ",
    "Lian ",
    "Jian ",
    "Li ",
    "Shi ",
    "Tiao ",
    "Gun ",
    "Sha ",
    "Wan ",
    "Jun ",
    "Ji ",
    "Yong ",
    "Qing ",
    "Ling ",
    "Qi ",
    "Zou ",
    "Fei ",
    "Kun ",
    "Chang ",
    "Gu ",
    "Ni ",
    "Nian ",
    "Diao ",
    "Jing ",
    "Shen ",
    "Shi ",
    "Zi ",
    "Fen ",
    "Die ",
    "Bi ",
    "Chang ",
    "Shi ",
    "Wen ",
    "Wei ",
    "Sai ",
    "E ",
    "Qiu ",
    "Fu ",
    "Huang ",
    "Quan ",
    "Jiang ",
    "Bian ",
    "Sao ",
    "Ao ",
    "Qi ",
    "Ta ",
    "Yin ",
    "Yao ",
    "Fang ",
    "Jian ",
    "Le ",
    "Biao ",
    "Xue ",
    "Bie ",
    "Man ",
    "Min ",
    "Yong ",
    "Wei ",
    "Xi ",
    "Jue ",
    "Shan ",
    "Lin ",
    "Zun ",
    "Huo ",
    "Gan ",
    "Li ",
    "Zhan ",
    "Guan ",
    "Niao ",
    "Yi ",
    "Fu ",
    "Li ",
    "Jiu ",
    "Bu ",
    "Yan ",
    "Fu ",
    "Diao ",
    "Ji ",
    "Feng ",
    "Nio ",
    "Gan ",
    "Shi ",
    "Feng ",
    "Ming ",
    "Bao ",
    "Yuan ",
    "Zhi ",
    "Hu ",
    "Qin ",
    "Fu ",
    "Fen ",
    "Wen ",
    "Jian ",
    "Shi ",
    "Yu "
  ];
  return x9c;
}
var x9d;
var hasRequiredX9d;
function requireX9d() {
  if (hasRequiredX9d) return x9d;
  hasRequiredX9d = 1;
  x9d = [
    "Fou ",
    "Yiao ",
    "Jue ",
    "Jue ",
    "Pi ",
    "Huan ",
    "Zhen ",
    "Bao ",
    "Yan ",
    "Ya ",
    "Zheng ",
    "Fang ",
    "Feng ",
    "Wen ",
    "Ou ",
    "Te ",
    "Jia ",
    "Nu ",
    "Ling ",
    "Mie ",
    "Fu ",
    "Tuo ",
    "Wen ",
    "Li ",
    "Bian ",
    "Zhi ",
    "Ge ",
    "Yuan ",
    "Zi ",
    "Qu ",
    "Xiao ",
    "Zhi ",
    "Dan ",
    "Ju ",
    "You ",
    "Gu ",
    "Zhong ",
    "Yu ",
    "Yang ",
    "Rong ",
    "Ya ",
    "Tie ",
    "Yu ",
    "Shigi ",
    "Ying ",
    "Zhui ",
    "Wu ",
    "Er ",
    "Gua ",
    "Ai ",
    "Zhi ",
    "Yan ",
    "Heng ",
    "Jiao ",
    "Ji ",
    "Lie ",
    "Zhu ",
    "Ren ",
    "Yi ",
    "Hong ",
    "Luo ",
    "Ru ",
    "Mou ",
    "Ge ",
    "Ren ",
    "Jiao ",
    "Xiu ",
    "Zhou ",
    "Zhi ",
    "Luo ",
    "Chidori ",
    "Toki ",
    "Ten ",
    "Luan ",
    "Jia ",
    "Ji ",
    "Yu ",
    "Huan ",
    "Tuo ",
    "Bu ",
    "Wu ",
    "Juan ",
    "Yu ",
    "Bo ",
    "Xun ",
    "Xun ",
    "Bi ",
    "Xi ",
    "Jun ",
    "Ju ",
    "Tu ",
    "Jing ",
    "Ti ",
    "E ",
    "E ",
    "Kuang ",
    "Hu ",
    "Wu ",
    "Shen ",
    "Lai ",
    "Ikaruga ",
    "Kakesu ",
    "Lu ",
    "Ping ",
    "Shu ",
    "Fu ",
    "An ",
    "Zhao ",
    "Peng ",
    "Qin ",
    "Qian ",
    "Bei ",
    "Diao ",
    "Lu ",
    "Que ",
    "Jian ",
    "Ju ",
    "Tu ",
    "Ya ",
    "Yuan ",
    "Qi ",
    "Li ",
    "Ye ",
    "Zhui ",
    "Kong ",
    "Zhui ",
    "Kun ",
    "Sheng ",
    "Qi ",
    "Jing ",
    "Yi ",
    "Yi ",
    "Jing ",
    "Zi ",
    "Lai ",
    "Dong ",
    "Qi ",
    "Chun ",
    "Geng ",
    "Ju ",
    "Qu ",
    "Isuka ",
    "Kikuitadaki ",
    "Ji ",
    "Shu ",
    "[?] ",
    "Chi ",
    "Miao ",
    "Rou ",
    "An ",
    "Qiu ",
    "Ti ",
    "Hu ",
    "Ti ",
    "E ",
    "Jie ",
    "Mao ",
    "Fu ",
    "Chun ",
    "Tu ",
    "Yan ",
    "He ",
    "Yuan ",
    "Pian ",
    "Yun ",
    "Mei ",
    "Hu ",
    "Ying ",
    "Dun ",
    "Mu ",
    "Ju ",
    "Tsugumi ",
    "Cang ",
    "Fang ",
    "Gu ",
    "Ying ",
    "Yuan ",
    "Xuan ",
    "Weng ",
    "Shi ",
    "He ",
    "Chu ",
    "Tang ",
    "Xia ",
    "Ruo ",
    "Liu ",
    "Ji ",
    "Gu ",
    "Jian ",
    "Zhun ",
    "Han ",
    "Zi ",
    "Zi ",
    "Ni ",
    "Yao ",
    "Yan ",
    "Ji ",
    "Li ",
    "Tian ",
    "Kou ",
    "Ti ",
    "Ti ",
    "Ni ",
    "Tu ",
    "Ma ",
    "Jiao ",
    "Gao ",
    "Tian ",
    "Chen ",
    "Li ",
    "Zhuan ",
    "Zhe ",
    "Ao ",
    "Yao ",
    "Yi ",
    "Ou ",
    "Chi ",
    "Zhi ",
    "Liao ",
    "Rong ",
    "Lou ",
    "Bi ",
    "Shuang ",
    "Zhuo ",
    "Yu ",
    "Wu ",
    "Jue ",
    "Yin ",
    "Quan ",
    "Si ",
    "Jiao ",
    "Yi ",
    "Hua ",
    "Bi ",
    "Ying ",
    "Su ",
    "Huang ",
    "Fan ",
    "Jiao ",
    "Liao ",
    "Yan ",
    "Kao ",
    "Jiu ",
    "Xian ",
    "Xian ",
    "Tu ",
    "Mai ",
    "Zun ",
    "Yu ",
    "Ying ",
    "Lu ",
    "Tuan ",
    "Xian ",
    "Xue ",
    "Yi ",
    "Pi "
  ];
  return x9d;
}
var x9e;
var hasRequiredX9e;
function requireX9e() {
  if (hasRequiredX9e) return x9e;
  hasRequiredX9e = 1;
  x9e = [
    "Shu ",
    "Luo ",
    "Qi ",
    "Yi ",
    "Ji ",
    "Zhe ",
    "Yu ",
    "Zhan ",
    "Ye ",
    "Yang ",
    "Pi ",
    "Ning ",
    "Huo ",
    "Mi ",
    "Ying ",
    "Meng ",
    "Di ",
    "Yue ",
    "Yu ",
    "Lei ",
    "Bao ",
    "Lu ",
    "He ",
    "Long ",
    "Shuang ",
    "Yue ",
    "Ying ",
    "Guan ",
    "Qu ",
    "Li ",
    "Luan ",
    "Niao ",
    "Jiu ",
    "Ji ",
    "Yuan ",
    "Ming ",
    "Shi ",
    "Ou ",
    "Ya ",
    "Cang ",
    "Bao ",
    "Zhen ",
    "Gu ",
    "Dong ",
    "Lu ",
    "Ya ",
    "Xiao ",
    "Yang ",
    "Ling ",
    "Zhi ",
    "Qu ",
    "Yuan ",
    "Xue ",
    "Tuo ",
    "Si ",
    "Zhi ",
    "Er ",
    "Gua ",
    "Xiu ",
    "Heng ",
    "Zhou ",
    "Ge ",
    "Luan ",
    "Hong ",
    "Wu ",
    "Bo ",
    "Li ",
    "Juan ",
    "Hu ",
    "E ",
    "Yu ",
    "Xian ",
    "Ti ",
    "Wu ",
    "Que ",
    "Miao ",
    "An ",
    "Kun ",
    "Bei ",
    "Peng ",
    "Qian ",
    "Chun ",
    "Geng ",
    "Yuan ",
    "Su ",
    "Hu ",
    "He ",
    "E ",
    "Gu ",
    "Qiu ",
    "Zi ",
    "Mei ",
    "Mu ",
    "Ni ",
    "Yao ",
    "Weng ",
    "Liu ",
    "Ji ",
    "Ni ",
    "Jian ",
    "He ",
    "Yi ",
    "Ying ",
    "Zhe ",
    "Liao ",
    "Liao ",
    "Jiao ",
    "Jiu ",
    "Yu ",
    "Lu ",
    "Xuan ",
    "Zhan ",
    "Ying ",
    "Huo ",
    "Meng ",
    "Guan ",
    "Shuang ",
    "Lu ",
    "Jin ",
    "Ling ",
    "Jian ",
    "Xian ",
    "Cuo ",
    "Jian ",
    "Jian ",
    "Yan ",
    "Cuo ",
    "Lu ",
    "You ",
    "Cu ",
    "Ji ",
    "Biao ",
    "Cu ",
    "Biao ",
    "Zhu ",
    "Jun ",
    "Zhu ",
    "Jian ",
    "Mi ",
    "Mi ",
    "Wu ",
    "Liu ",
    "Chen ",
    "Jun ",
    "Lin ",
    "Ni ",
    "Qi ",
    "Lu ",
    "Jiu ",
    "Jun ",
    "Jing ",
    "Li ",
    "Xiang ",
    "Yan ",
    "Jia ",
    "Mi ",
    "Li ",
    "She ",
    "Zhang ",
    "Lin ",
    "Jing ",
    "Ji ",
    "Ling ",
    "Yan ",
    "Cu ",
    "Mai ",
    "Mai ",
    "Ge ",
    "Chao ",
    "Fu ",
    "Mian ",
    "Mian ",
    "Fu ",
    "Pao ",
    "Qu ",
    "Qu ",
    "Mou ",
    "Fu ",
    "Xian ",
    "Lai ",
    "Qu ",
    "Mian ",
    "[?] ",
    "Feng ",
    "Fu ",
    "Qu ",
    "Mian ",
    "Ma ",
    "Mo ",
    "Mo ",
    "Hui ",
    "Ma ",
    "Zou ",
    "Nen ",
    "Fen ",
    "Huang ",
    "Huang ",
    "Jin ",
    "Guang ",
    "Tian ",
    "Tou ",
    "Heng ",
    "Xi ",
    "Kuang ",
    "Heng ",
    "Shu ",
    "Li ",
    "Nian ",
    "Chi ",
    "Hei ",
    "Hei ",
    "Yi ",
    "Qian ",
    "Dan ",
    "Xi ",
    "Tuan ",
    "Mo ",
    "Mo ",
    "Qian ",
    "Dai ",
    "Chu ",
    "You ",
    "Dian ",
    "Yi ",
    "Xia ",
    "Yan ",
    "Qu ",
    "Mei ",
    "Yan ",
    "Jing ",
    "Yu ",
    "Li ",
    "Dang ",
    "Du ",
    "Can ",
    "Yin ",
    "An ",
    "Yan ",
    "Tan ",
    "An ",
    "Zhen ",
    "Dai ",
    "Can ",
    "Yi ",
    "Mei ",
    "Dan ",
    "Yan ",
    "Du ",
    "Lu ",
    "Zhi ",
    "Fen ",
    "Fu ",
    "Fu ",
    "Min ",
    "Min ",
    "Yuan "
  ];
  return x9e;
}
var x9f;
var hasRequiredX9f;
function requireX9f() {
  if (hasRequiredX9f) return x9f;
  hasRequiredX9f = 1;
  x9f = [
    "Cu ",
    "Qu ",
    "Chao ",
    "Wa ",
    "Zhu ",
    "Zhi ",
    "Mang ",
    "Ao ",
    "Bie ",
    "Tuo ",
    "Bi ",
    "Yuan ",
    "Chao ",
    "Tuo ",
    "Ding ",
    "Mi ",
    "Nai ",
    "Ding ",
    "Zi ",
    "Gu ",
    "Gu ",
    "Dong ",
    "Fen ",
    "Tao ",
    "Yuan ",
    "Pi ",
    "Chang ",
    "Gao ",
    "Qi ",
    "Yuan ",
    "Tang ",
    "Teng ",
    "Shu ",
    "Shu ",
    "Fen ",
    "Fei ",
    "Wen ",
    "Ba ",
    "Diao ",
    "Tuo ",
    "Tong ",
    "Qu ",
    "Sheng ",
    "Shi ",
    "You ",
    "Shi ",
    "Ting ",
    "Wu ",
    "Nian ",
    "Jing ",
    "Hun ",
    "Ju ",
    "Yan ",
    "Tu ",
    "Ti ",
    "Xi ",
    "Xian ",
    "Yan ",
    "Lei ",
    "Bi ",
    "Yao ",
    "Qiu ",
    "Han ",
    "Wu ",
    "Wu ",
    "Hou ",
    "Xi ",
    "Ge ",
    "Zha ",
    "Xiu ",
    "Weng ",
    "Zha ",
    "Nong ",
    "Nang ",
    "Qi ",
    "Zhai ",
    "Ji ",
    "Zi ",
    "Ji ",
    "Ji ",
    "Qi ",
    "Ji ",
    "Chi ",
    "Chen ",
    "Chen ",
    "He ",
    "Ya ",
    "Ken ",
    "Xie ",
    "Pao ",
    "Cuo ",
    "Shi ",
    "Zi ",
    "Chi ",
    "Nian ",
    "Ju ",
    "Tiao ",
    "Ling ",
    "Ling ",
    "Chu ",
    "Quan ",
    "Xie ",
    "Ken ",
    "Nie ",
    "Jiu ",
    "Yao ",
    "Chuo ",
    "Kun ",
    "Yu ",
    "Chu ",
    "Yi ",
    "Ni ",
    "Cuo ",
    "Zou ",
    "Qu ",
    "Nen ",
    "Xian ",
    "Ou ",
    "E ",
    "Wo ",
    "Yi ",
    "Chuo ",
    "Zou ",
    "Dian ",
    "Chu ",
    "Jin ",
    "Ya ",
    "Chi ",
    "Chen ",
    "He ",
    "Ken ",
    "Ju ",
    "Ling ",
    "Pao ",
    "Tiao ",
    "Zi ",
    "Ken ",
    "Yu ",
    "Chuo ",
    "Qu ",
    "Wo ",
    "Long ",
    "Pang ",
    "Gong ",
    "Pang ",
    "Yan ",
    "Long ",
    "Long ",
    "Gong ",
    "Kan ",
    "Ta ",
    "Ling ",
    "Ta ",
    "Long ",
    "Gong ",
    "Kan ",
    "Gui ",
    "Qiu ",
    "Bie ",
    "Gui ",
    "Yue ",
    "Chui ",
    "He ",
    "Jue ",
    "Xie ",
    "Yu ",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]"
  ];
  return x9f;
}
var xa0;
var hasRequiredXa0;
function requireXa0() {
  if (hasRequiredXa0) return xa0;
  hasRequiredXa0 = 1;
  xa0 = [
    "it",
    "ix",
    "i",
    "ip",
    "iet",
    "iex",
    "ie",
    "iep",
    "at",
    "ax",
    "a",
    "ap",
    "uox",
    "uo",
    "uop",
    "ot",
    "ox",
    "o",
    "op",
    "ex",
    "e",
    "wu",
    "bit",
    "bix",
    "bi",
    "bip",
    "biet",
    "biex",
    "bie",
    "biep",
    "bat",
    "bax",
    "ba",
    "bap",
    "buox",
    "buo",
    "buop",
    "bot",
    "box",
    "bo",
    "bop",
    "bex",
    "be",
    "bep",
    "but",
    "bux",
    "bu",
    "bup",
    "burx",
    "bur",
    "byt",
    "byx",
    "by",
    "byp",
    "byrx",
    "byr",
    "pit",
    "pix",
    "pi",
    "pip",
    "piex",
    "pie",
    "piep",
    "pat",
    "pax",
    "pa",
    "pap",
    "puox",
    "puo",
    "puop",
    "pot",
    "pox",
    "po",
    "pop",
    "put",
    "pux",
    "pu",
    "pup",
    "purx",
    "pur",
    "pyt",
    "pyx",
    "py",
    "pyp",
    "pyrx",
    "pyr",
    "bbit",
    "bbix",
    "bbi",
    "bbip",
    "bbiet",
    "bbiex",
    "bbie",
    "bbiep",
    "bbat",
    "bbax",
    "bba",
    "bbap",
    "bbuox",
    "bbuo",
    "bbuop",
    "bbot",
    "bbox",
    "bbo",
    "bbop",
    "bbex",
    "bbe",
    "bbep",
    "bbut",
    "bbux",
    "bbu",
    "bbup",
    "bburx",
    "bbur",
    "bbyt",
    "bbyx",
    "bby",
    "bbyp",
    "nbit",
    "nbix",
    "nbi",
    "nbip",
    "nbiex",
    "nbie",
    "nbiep",
    "nbat",
    "nbax",
    "nba",
    "nbap",
    "nbot",
    "nbox",
    "nbo",
    "nbop",
    "nbut",
    "nbux",
    "nbu",
    "nbup",
    "nburx",
    "nbur",
    "nbyt",
    "nbyx",
    "nby",
    "nbyp",
    "nbyrx",
    "nbyr",
    "hmit",
    "hmix",
    "hmi",
    "hmip",
    "hmiex",
    "hmie",
    "hmiep",
    "hmat",
    "hmax",
    "hma",
    "hmap",
    "hmuox",
    "hmuo",
    "hmuop",
    "hmot",
    "hmox",
    "hmo",
    "hmop",
    "hmut",
    "hmux",
    "hmu",
    "hmup",
    "hmurx",
    "hmur",
    "hmyx",
    "hmy",
    "hmyp",
    "hmyrx",
    "hmyr",
    "mit",
    "mix",
    "mi",
    "mip",
    "miex",
    "mie",
    "miep",
    "mat",
    "max",
    "ma",
    "map",
    "muot",
    "muox",
    "muo",
    "muop",
    "mot",
    "mox",
    "mo",
    "mop",
    "mex",
    "me",
    "mut",
    "mux",
    "mu",
    "mup",
    "murx",
    "mur",
    "myt",
    "myx",
    "my",
    "myp",
    "fit",
    "fix",
    "fi",
    "fip",
    "fat",
    "fax",
    "fa",
    "fap",
    "fox",
    "fo",
    "fop",
    "fut",
    "fux",
    "fu",
    "fup",
    "furx",
    "fur",
    "fyt",
    "fyx",
    "fy",
    "fyp",
    "vit",
    "vix",
    "vi",
    "vip",
    "viet",
    "viex",
    "vie",
    "viep",
    "vat",
    "vax",
    "va",
    "vap",
    "vot",
    "vox",
    "vo",
    "vop",
    "vex",
    "vep",
    "vut",
    "vux",
    "vu",
    "vup",
    "vurx",
    "vur",
    "vyt",
    "vyx",
    "vy",
    "vyp",
    "vyrx",
    "vyr"
  ];
  return xa0;
}
var xa1;
var hasRequiredXa1;
function requireXa1() {
  if (hasRequiredXa1) return xa1;
  hasRequiredXa1 = 1;
  xa1 = [
    "dit",
    "dix",
    "di",
    "dip",
    "diex",
    "die",
    "diep",
    "dat",
    "dax",
    "da",
    "dap",
    "duox",
    "duo",
    "dot",
    "dox",
    "do",
    "dop",
    "dex",
    "de",
    "dep",
    "dut",
    "dux",
    "du",
    "dup",
    "durx",
    "dur",
    "tit",
    "tix",
    "ti",
    "tip",
    "tiex",
    "tie",
    "tiep",
    "tat",
    "tax",
    "ta",
    "tap",
    "tuot",
    "tuox",
    "tuo",
    "tuop",
    "tot",
    "tox",
    "to",
    "top",
    "tex",
    "te",
    "tep",
    "tut",
    "tux",
    "tu",
    "tup",
    "turx",
    "tur",
    "ddit",
    "ddix",
    "ddi",
    "ddip",
    "ddiex",
    "ddie",
    "ddiep",
    "ddat",
    "ddax",
    "dda",
    "ddap",
    "dduox",
    "dduo",
    "dduop",
    "ddot",
    "ddox",
    "ddo",
    "ddop",
    "ddex",
    "dde",
    "ddep",
    "ddut",
    "ddux",
    "ddu",
    "ddup",
    "ddurx",
    "ddur",
    "ndit",
    "ndix",
    "ndi",
    "ndip",
    "ndiex",
    "ndie",
    "ndat",
    "ndax",
    "nda",
    "ndap",
    "ndot",
    "ndox",
    "ndo",
    "ndop",
    "ndex",
    "nde",
    "ndep",
    "ndut",
    "ndux",
    "ndu",
    "ndup",
    "ndurx",
    "ndur",
    "hnit",
    "hnix",
    "hni",
    "hnip",
    "hniet",
    "hniex",
    "hnie",
    "hniep",
    "hnat",
    "hnax",
    "hna",
    "hnap",
    "hnuox",
    "hnuo",
    "hnot",
    "hnox",
    "hnop",
    "hnex",
    "hne",
    "hnep",
    "hnut",
    "nit",
    "nix",
    "ni",
    "nip",
    "niex",
    "nie",
    "niep",
    "nax",
    "na",
    "nap",
    "nuox",
    "nuo",
    "nuop",
    "not",
    "nox",
    "no",
    "nop",
    "nex",
    "ne",
    "nep",
    "nut",
    "nux",
    "nu",
    "nup",
    "nurx",
    "nur",
    "hlit",
    "hlix",
    "hli",
    "hlip",
    "hliex",
    "hlie",
    "hliep",
    "hlat",
    "hlax",
    "hla",
    "hlap",
    "hluox",
    "hluo",
    "hluop",
    "hlox",
    "hlo",
    "hlop",
    "hlex",
    "hle",
    "hlep",
    "hlut",
    "hlux",
    "hlu",
    "hlup",
    "hlurx",
    "hlur",
    "hlyt",
    "hlyx",
    "hly",
    "hlyp",
    "hlyrx",
    "hlyr",
    "lit",
    "lix",
    "li",
    "lip",
    "liet",
    "liex",
    "lie",
    "liep",
    "lat",
    "lax",
    "la",
    "lap",
    "luot",
    "luox",
    "luo",
    "luop",
    "lot",
    "lox",
    "lo",
    "lop",
    "lex",
    "le",
    "lep",
    "lut",
    "lux",
    "lu",
    "lup",
    "lurx",
    "lur",
    "lyt",
    "lyx",
    "ly",
    "lyp",
    "lyrx",
    "lyr",
    "git",
    "gix",
    "gi",
    "gip",
    "giet",
    "giex",
    "gie",
    "giep",
    "gat",
    "gax",
    "ga",
    "gap",
    "guot",
    "guox",
    "guo",
    "guop",
    "got",
    "gox",
    "go",
    "gop",
    "get",
    "gex",
    "ge",
    "gep",
    "gut",
    "gux",
    "gu",
    "gup",
    "gurx",
    "gur",
    "kit",
    "kix",
    "ki",
    "kip",
    "kiex",
    "kie",
    "kiep",
    "kat"
  ];
  return xa1;
}
var xa2;
var hasRequiredXa2;
function requireXa2() {
  if (hasRequiredXa2) return xa2;
  hasRequiredXa2 = 1;
  xa2 = [
    "kax",
    "ka",
    "kap",
    "kuox",
    "kuo",
    "kuop",
    "kot",
    "kox",
    "ko",
    "kop",
    "ket",
    "kex",
    "ke",
    "kep",
    "kut",
    "kux",
    "ku",
    "kup",
    "kurx",
    "kur",
    "ggit",
    "ggix",
    "ggi",
    "ggiex",
    "ggie",
    "ggiep",
    "ggat",
    "ggax",
    "gga",
    "ggap",
    "gguot",
    "gguox",
    "gguo",
    "gguop",
    "ggot",
    "ggox",
    "ggo",
    "ggop",
    "gget",
    "ggex",
    "gge",
    "ggep",
    "ggut",
    "ggux",
    "ggu",
    "ggup",
    "ggurx",
    "ggur",
    "mgiex",
    "mgie",
    "mgat",
    "mgax",
    "mga",
    "mgap",
    "mguox",
    "mguo",
    "mguop",
    "mgot",
    "mgox",
    "mgo",
    "mgop",
    "mgex",
    "mge",
    "mgep",
    "mgut",
    "mgux",
    "mgu",
    "mgup",
    "mgurx",
    "mgur",
    "hxit",
    "hxix",
    "hxi",
    "hxip",
    "hxiet",
    "hxiex",
    "hxie",
    "hxiep",
    "hxat",
    "hxax",
    "hxa",
    "hxap",
    "hxuot",
    "hxuox",
    "hxuo",
    "hxuop",
    "hxot",
    "hxox",
    "hxo",
    "hxop",
    "hxex",
    "hxe",
    "hxep",
    "ngiex",
    "ngie",
    "ngiep",
    "ngat",
    "ngax",
    "nga",
    "ngap",
    "nguot",
    "nguox",
    "nguo",
    "ngot",
    "ngox",
    "ngo",
    "ngop",
    "ngex",
    "nge",
    "ngep",
    "hit",
    "hiex",
    "hie",
    "hat",
    "hax",
    "ha",
    "hap",
    "huot",
    "huox",
    "huo",
    "huop",
    "hot",
    "hox",
    "ho",
    "hop",
    "hex",
    "he",
    "hep",
    "wat",
    "wax",
    "wa",
    "wap",
    "wuox",
    "wuo",
    "wuop",
    "wox",
    "wo",
    "wop",
    "wex",
    "we",
    "wep",
    "zit",
    "zix",
    "zi",
    "zip",
    "ziex",
    "zie",
    "ziep",
    "zat",
    "zax",
    "za",
    "zap",
    "zuox",
    "zuo",
    "zuop",
    "zot",
    "zox",
    "zo",
    "zop",
    "zex",
    "ze",
    "zep",
    "zut",
    "zux",
    "zu",
    "zup",
    "zurx",
    "zur",
    "zyt",
    "zyx",
    "zy",
    "zyp",
    "zyrx",
    "zyr",
    "cit",
    "cix",
    "ci",
    "cip",
    "ciet",
    "ciex",
    "cie",
    "ciep",
    "cat",
    "cax",
    "ca",
    "cap",
    "cuox",
    "cuo",
    "cuop",
    "cot",
    "cox",
    "co",
    "cop",
    "cex",
    "ce",
    "cep",
    "cut",
    "cux",
    "cu",
    "cup",
    "curx",
    "cur",
    "cyt",
    "cyx",
    "cy",
    "cyp",
    "cyrx",
    "cyr",
    "zzit",
    "zzix",
    "zzi",
    "zzip",
    "zziet",
    "zziex",
    "zzie",
    "zziep",
    "zzat",
    "zzax",
    "zza",
    "zzap",
    "zzox",
    "zzo",
    "zzop",
    "zzex",
    "zze",
    "zzep",
    "zzux",
    "zzu",
    "zzup",
    "zzurx",
    "zzur",
    "zzyt",
    "zzyx",
    "zzy",
    "zzyp",
    "zzyrx",
    "zzyr",
    "nzit",
    "nzix",
    "nzi",
    "nzip",
    "nziex",
    "nzie",
    "nziep",
    "nzat",
    "nzax",
    "nza",
    "nzap",
    "nzuox",
    "nzuo",
    "nzox",
    "nzop",
    "nzex",
    "nze",
    "nzux",
    "nzu"
  ];
  return xa2;
}
var xa3;
var hasRequiredXa3;
function requireXa3() {
  if (hasRequiredXa3) return xa3;
  hasRequiredXa3 = 1;
  xa3 = [
    "nzup",
    "nzurx",
    "nzur",
    "nzyt",
    "nzyx",
    "nzy",
    "nzyp",
    "nzyrx",
    "nzyr",
    "sit",
    "six",
    "si",
    "sip",
    "siex",
    "sie",
    "siep",
    "sat",
    "sax",
    "sa",
    "sap",
    "suox",
    "suo",
    "suop",
    "sot",
    "sox",
    "so",
    "sop",
    "sex",
    "se",
    "sep",
    "sut",
    "sux",
    "su",
    "sup",
    "surx",
    "sur",
    "syt",
    "syx",
    "sy",
    "syp",
    "syrx",
    "syr",
    "ssit",
    "ssix",
    "ssi",
    "ssip",
    "ssiex",
    "ssie",
    "ssiep",
    "ssat",
    "ssax",
    "ssa",
    "ssap",
    "ssot",
    "ssox",
    "sso",
    "ssop",
    "ssex",
    "sse",
    "ssep",
    "ssut",
    "ssux",
    "ssu",
    "ssup",
    "ssyt",
    "ssyx",
    "ssy",
    "ssyp",
    "ssyrx",
    "ssyr",
    "zhat",
    "zhax",
    "zha",
    "zhap",
    "zhuox",
    "zhuo",
    "zhuop",
    "zhot",
    "zhox",
    "zho",
    "zhop",
    "zhet",
    "zhex",
    "zhe",
    "zhep",
    "zhut",
    "zhux",
    "zhu",
    "zhup",
    "zhurx",
    "zhur",
    "zhyt",
    "zhyx",
    "zhy",
    "zhyp",
    "zhyrx",
    "zhyr",
    "chat",
    "chax",
    "cha",
    "chap",
    "chuot",
    "chuox",
    "chuo",
    "chuop",
    "chot",
    "chox",
    "cho",
    "chop",
    "chet",
    "chex",
    "che",
    "chep",
    "chux",
    "chu",
    "chup",
    "churx",
    "chur",
    "chyt",
    "chyx",
    "chy",
    "chyp",
    "chyrx",
    "chyr",
    "rrax",
    "rra",
    "rruox",
    "rruo",
    "rrot",
    "rrox",
    "rro",
    "rrop",
    "rret",
    "rrex",
    "rre",
    "rrep",
    "rrut",
    "rrux",
    "rru",
    "rrup",
    "rrurx",
    "rrur",
    "rryt",
    "rryx",
    "rry",
    "rryp",
    "rryrx",
    "rryr",
    "nrat",
    "nrax",
    "nra",
    "nrap",
    "nrox",
    "nro",
    "nrop",
    "nret",
    "nrex",
    "nre",
    "nrep",
    "nrut",
    "nrux",
    "nru",
    "nrup",
    "nrurx",
    "nrur",
    "nryt",
    "nryx",
    "nry",
    "nryp",
    "nryrx",
    "nryr",
    "shat",
    "shax",
    "sha",
    "shap",
    "shuox",
    "shuo",
    "shuop",
    "shot",
    "shox",
    "sho",
    "shop",
    "shet",
    "shex",
    "she",
    "shep",
    "shut",
    "shux",
    "shu",
    "shup",
    "shurx",
    "shur",
    "shyt",
    "shyx",
    "shy",
    "shyp",
    "shyrx",
    "shyr",
    "rat",
    "rax",
    "ra",
    "rap",
    "ruox",
    "ruo",
    "ruop",
    "rot",
    "rox",
    "ro",
    "rop",
    "rex",
    "re",
    "rep",
    "rut",
    "rux",
    "ru",
    "rup",
    "rurx",
    "rur",
    "ryt",
    "ryx",
    "ry",
    "ryp",
    "ryrx",
    "ryr",
    "jit",
    "jix",
    "ji",
    "jip",
    "jiet",
    "jiex",
    "jie",
    "jiep",
    "juot",
    "juox",
    "juo",
    "juop",
    "jot",
    "jox",
    "jo",
    "jop",
    "jut",
    "jux",
    "ju",
    "jup",
    "jurx",
    "jur",
    "jyt",
    "jyx",
    "jy",
    "jyp",
    "jyrx",
    "jyr",
    "qit",
    "qix",
    "qi",
    "qip"
  ];
  return xa3;
}
var xa4;
var hasRequiredXa4;
function requireXa4() {
  if (hasRequiredXa4) return xa4;
  hasRequiredXa4 = 1;
  xa4 = [
    "qiet",
    "qiex",
    "qie",
    "qiep",
    "quot",
    "quox",
    "quo",
    "quop",
    "qot",
    "qox",
    "qo",
    "qop",
    "qut",
    "qux",
    "qu",
    "qup",
    "qurx",
    "qur",
    "qyt",
    "qyx",
    "qy",
    "qyp",
    "qyrx",
    "qyr",
    "jjit",
    "jjix",
    "jji",
    "jjip",
    "jjiet",
    "jjiex",
    "jjie",
    "jjiep",
    "jjuox",
    "jjuo",
    "jjuop",
    "jjot",
    "jjox",
    "jjo",
    "jjop",
    "jjut",
    "jjux",
    "jju",
    "jjup",
    "jjurx",
    "jjur",
    "jjyt",
    "jjyx",
    "jjy",
    "jjyp",
    "njit",
    "njix",
    "nji",
    "njip",
    "njiet",
    "njiex",
    "njie",
    "njiep",
    "njuox",
    "njuo",
    "njot",
    "njox",
    "njo",
    "njop",
    "njux",
    "nju",
    "njup",
    "njurx",
    "njur",
    "njyt",
    "njyx",
    "njy",
    "njyp",
    "njyrx",
    "njyr",
    "nyit",
    "nyix",
    "nyi",
    "nyip",
    "nyiet",
    "nyiex",
    "nyie",
    "nyiep",
    "nyuox",
    "nyuo",
    "nyuop",
    "nyot",
    "nyox",
    "nyo",
    "nyop",
    "nyut",
    "nyux",
    "nyu",
    "nyup",
    "xit",
    "xix",
    "xi",
    "xip",
    "xiet",
    "xiex",
    "xie",
    "xiep",
    "xuox",
    "xuo",
    "xot",
    "xox",
    "xo",
    "xop",
    "xyt",
    "xyx",
    "xy",
    "xyp",
    "xyrx",
    "xyr",
    "yit",
    "yix",
    "yi",
    "yip",
    "yiet",
    "yiex",
    "yie",
    "yiep",
    "yuot",
    "yuox",
    "yuo",
    "yuop",
    "yot",
    "yox",
    "yo",
    "yop",
    "yut",
    "yux",
    "yu",
    "yup",
    "yurx",
    "yur",
    "yyt",
    "yyx",
    "yy",
    "yyp",
    "yyrx",
    "yyr",
    "[?]",
    "[?]",
    "[?]",
    "Qot",
    "Li",
    "Kit",
    "Nyip",
    "Cyp",
    "Ssi",
    "Ggop",
    "Gep",
    "Mi",
    "Hxit",
    "Lyr",
    "Bbut",
    "Mop",
    "Yo",
    "Put",
    "Hxuo",
    "Tat",
    "Ga",
    "[?]",
    "[?]",
    "Ddur",
    "Bur",
    "Gguo",
    "Nyop",
    "Tu",
    "Op",
    "Jjut",
    "Zot",
    "Pyt",
    "Hmo",
    "Yit",
    "Vur",
    "Shy",
    "Vep",
    "Za",
    "Jo",
    "[?]",
    "Jjy",
    "Got",
    "Jjie",
    "Wo",
    "Du",
    "Shur",
    "Lie",
    "Cy",
    "Cuop",
    "Cip",
    "Hxop",
    "Shat",
    "[?]",
    "Shop",
    "Che",
    "Zziet",
    "[?]",
    "Ke",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]"
  ];
  return xa4;
}
var xac;
var hasRequiredXac;
function requireXac() {
  if (hasRequiredXac) return xac;
  hasRequiredXac = 1;
  xac = [
    "ga",
    "gag",
    "gagg",
    "gags",
    "gan",
    "ganj",
    "ganh",
    "gad",
    "gal",
    "galg",
    "galm",
    "galb",
    "gals",
    "galt",
    "galp",
    "galh",
    "gam",
    "gab",
    "gabs",
    "gas",
    "gass",
    "gang",
    "gaj",
    "gac",
    "gak",
    "gat",
    "gap",
    "gah",
    "gae",
    "gaeg",
    "gaegg",
    "gaegs",
    "gaen",
    "gaenj",
    "gaenh",
    "gaed",
    "gael",
    "gaelg",
    "gaelm",
    "gaelb",
    "gaels",
    "gaelt",
    "gaelp",
    "gaelh",
    "gaem",
    "gaeb",
    "gaebs",
    "gaes",
    "gaess",
    "gaeng",
    "gaej",
    "gaec",
    "gaek",
    "gaet",
    "gaep",
    "gaeh",
    "gya",
    "gyag",
    "gyagg",
    "gyags",
    "gyan",
    "gyanj",
    "gyanh",
    "gyad",
    "gyal",
    "gyalg",
    "gyalm",
    "gyalb",
    "gyals",
    "gyalt",
    "gyalp",
    "gyalh",
    "gyam",
    "gyab",
    "gyabs",
    "gyas",
    "gyass",
    "gyang",
    "gyaj",
    "gyac",
    "gyak",
    "gyat",
    "gyap",
    "gyah",
    "gyae",
    "gyaeg",
    "gyaegg",
    "gyaegs",
    "gyaen",
    "gyaenj",
    "gyaenh",
    "gyaed",
    "gyael",
    "gyaelg",
    "gyaelm",
    "gyaelb",
    "gyaels",
    "gyaelt",
    "gyaelp",
    "gyaelh",
    "gyaem",
    "gyaeb",
    "gyaebs",
    "gyaes",
    "gyaess",
    "gyaeng",
    "gyaej",
    "gyaec",
    "gyaek",
    "gyaet",
    "gyaep",
    "gyaeh",
    "geo",
    "geog",
    "geogg",
    "geogs",
    "geon",
    "geonj",
    "geonh",
    "geod",
    "geol",
    "geolg",
    "geolm",
    "geolb",
    "geols",
    "geolt",
    "geolp",
    "geolh",
    "geom",
    "geob",
    "geobs",
    "geos",
    "geoss",
    "geong",
    "geoj",
    "geoc",
    "geok",
    "geot",
    "geop",
    "geoh",
    "ge",
    "geg",
    "gegg",
    "gegs",
    "gen",
    "genj",
    "genh",
    "ged",
    "gel",
    "gelg",
    "gelm",
    "gelb",
    "gels",
    "gelt",
    "gelp",
    "gelh",
    "gem",
    "geb",
    "gebs",
    "ges",
    "gess",
    "geng",
    "gej",
    "gec",
    "gek",
    "get",
    "gep",
    "geh",
    "gyeo",
    "gyeog",
    "gyeogg",
    "gyeogs",
    "gyeon",
    "gyeonj",
    "gyeonh",
    "gyeod",
    "gyeol",
    "gyeolg",
    "gyeolm",
    "gyeolb",
    "gyeols",
    "gyeolt",
    "gyeolp",
    "gyeolh",
    "gyeom",
    "gyeob",
    "gyeobs",
    "gyeos",
    "gyeoss",
    "gyeong",
    "gyeoj",
    "gyeoc",
    "gyeok",
    "gyeot",
    "gyeop",
    "gyeoh",
    "gye",
    "gyeg",
    "gyegg",
    "gyegs",
    "gyen",
    "gyenj",
    "gyenh",
    "gyed",
    "gyel",
    "gyelg",
    "gyelm",
    "gyelb",
    "gyels",
    "gyelt",
    "gyelp",
    "gyelh",
    "gyem",
    "gyeb",
    "gyebs",
    "gyes",
    "gyess",
    "gyeng",
    "gyej",
    "gyec",
    "gyek",
    "gyet",
    "gyep",
    "gyeh",
    "go",
    "gog",
    "gogg",
    "gogs",
    "gon",
    "gonj",
    "gonh",
    "god",
    "gol",
    "golg",
    "golm",
    "golb",
    "gols",
    "golt",
    "golp",
    "golh",
    "gom",
    "gob",
    "gobs",
    "gos",
    "goss",
    "gong",
    "goj",
    "goc",
    "gok",
    "got",
    "gop",
    "goh",
    "gwa",
    "gwag",
    "gwagg",
    "gwags"
  ];
  return xac;
}
var xad;
var hasRequiredXad;
function requireXad() {
  if (hasRequiredXad) return xad;
  hasRequiredXad = 1;
  xad = [
    "gwan",
    "gwanj",
    "gwanh",
    "gwad",
    "gwal",
    "gwalg",
    "gwalm",
    "gwalb",
    "gwals",
    "gwalt",
    "gwalp",
    "gwalh",
    "gwam",
    "gwab",
    "gwabs",
    "gwas",
    "gwass",
    "gwang",
    "gwaj",
    "gwac",
    "gwak",
    "gwat",
    "gwap",
    "gwah",
    "gwae",
    "gwaeg",
    "gwaegg",
    "gwaegs",
    "gwaen",
    "gwaenj",
    "gwaenh",
    "gwaed",
    "gwael",
    "gwaelg",
    "gwaelm",
    "gwaelb",
    "gwaels",
    "gwaelt",
    "gwaelp",
    "gwaelh",
    "gwaem",
    "gwaeb",
    "gwaebs",
    "gwaes",
    "gwaess",
    "gwaeng",
    "gwaej",
    "gwaec",
    "gwaek",
    "gwaet",
    "gwaep",
    "gwaeh",
    "goe",
    "goeg",
    "goegg",
    "goegs",
    "goen",
    "goenj",
    "goenh",
    "goed",
    "goel",
    "goelg",
    "goelm",
    "goelb",
    "goels",
    "goelt",
    "goelp",
    "goelh",
    "goem",
    "goeb",
    "goebs",
    "goes",
    "goess",
    "goeng",
    "goej",
    "goec",
    "goek",
    "goet",
    "goep",
    "goeh",
    "gyo",
    "gyog",
    "gyogg",
    "gyogs",
    "gyon",
    "gyonj",
    "gyonh",
    "gyod",
    "gyol",
    "gyolg",
    "gyolm",
    "gyolb",
    "gyols",
    "gyolt",
    "gyolp",
    "gyolh",
    "gyom",
    "gyob",
    "gyobs",
    "gyos",
    "gyoss",
    "gyong",
    "gyoj",
    "gyoc",
    "gyok",
    "gyot",
    "gyop",
    "gyoh",
    "gu",
    "gug",
    "gugg",
    "gugs",
    "gun",
    "gunj",
    "gunh",
    "gud",
    "gul",
    "gulg",
    "gulm",
    "gulb",
    "guls",
    "gult",
    "gulp",
    "gulh",
    "gum",
    "gub",
    "gubs",
    "gus",
    "guss",
    "gung",
    "guj",
    "guc",
    "guk",
    "gut",
    "gup",
    "guh",
    "gweo",
    "gweog",
    "gweogg",
    "gweogs",
    "gweon",
    "gweonj",
    "gweonh",
    "gweod",
    "gweol",
    "gweolg",
    "gweolm",
    "gweolb",
    "gweols",
    "gweolt",
    "gweolp",
    "gweolh",
    "gweom",
    "gweob",
    "gweobs",
    "gweos",
    "gweoss",
    "gweong",
    "gweoj",
    "gweoc",
    "gweok",
    "gweot",
    "gweop",
    "gweoh",
    "gwe",
    "gweg",
    "gwegg",
    "gwegs",
    "gwen",
    "gwenj",
    "gwenh",
    "gwed",
    "gwel",
    "gwelg",
    "gwelm",
    "gwelb",
    "gwels",
    "gwelt",
    "gwelp",
    "gwelh",
    "gwem",
    "gweb",
    "gwebs",
    "gwes",
    "gwess",
    "gweng",
    "gwej",
    "gwec",
    "gwek",
    "gwet",
    "gwep",
    "gweh",
    "gwi",
    "gwig",
    "gwigg",
    "gwigs",
    "gwin",
    "gwinj",
    "gwinh",
    "gwid",
    "gwil",
    "gwilg",
    "gwilm",
    "gwilb",
    "gwils",
    "gwilt",
    "gwilp",
    "gwilh",
    "gwim",
    "gwib",
    "gwibs",
    "gwis",
    "gwiss",
    "gwing",
    "gwij",
    "gwic",
    "gwik",
    "gwit",
    "gwip",
    "gwih",
    "gyu",
    "gyug",
    "gyugg",
    "gyugs",
    "gyun",
    "gyunj",
    "gyunh",
    "gyud",
    "gyul",
    "gyulg",
    "gyulm",
    "gyulb",
    "gyuls",
    "gyult",
    "gyulp",
    "gyulh",
    "gyum",
    "gyub",
    "gyubs",
    "gyus",
    "gyuss",
    "gyung",
    "gyuj",
    "gyuc",
    "gyuk",
    "gyut",
    "gyup",
    "gyuh",
    "geu",
    "geug",
    "geugg",
    "geugs",
    "geun",
    "geunj",
    "geunh",
    "geud"
  ];
  return xad;
}
var xae;
var hasRequiredXae;
function requireXae() {
  if (hasRequiredXae) return xae;
  hasRequiredXae = 1;
  xae = [
    "geul",
    "geulg",
    "geulm",
    "geulb",
    "geuls",
    "geult",
    "geulp",
    "geulh",
    "geum",
    "geub",
    "geubs",
    "geus",
    "geuss",
    "geung",
    "geuj",
    "geuc",
    "geuk",
    "geut",
    "geup",
    "geuh",
    "gyi",
    "gyig",
    "gyigg",
    "gyigs",
    "gyin",
    "gyinj",
    "gyinh",
    "gyid",
    "gyil",
    "gyilg",
    "gyilm",
    "gyilb",
    "gyils",
    "gyilt",
    "gyilp",
    "gyilh",
    "gyim",
    "gyib",
    "gyibs",
    "gyis",
    "gyiss",
    "gying",
    "gyij",
    "gyic",
    "gyik",
    "gyit",
    "gyip",
    "gyih",
    "gi",
    "gig",
    "gigg",
    "gigs",
    "gin",
    "ginj",
    "ginh",
    "gid",
    "gil",
    "gilg",
    "gilm",
    "gilb",
    "gils",
    "gilt",
    "gilp",
    "gilh",
    "gim",
    "gib",
    "gibs",
    "gis",
    "giss",
    "ging",
    "gij",
    "gic",
    "gik",
    "git",
    "gip",
    "gih",
    "gga",
    "ggag",
    "ggagg",
    "ggags",
    "ggan",
    "gganj",
    "gganh",
    "ggad",
    "ggal",
    "ggalg",
    "ggalm",
    "ggalb",
    "ggals",
    "ggalt",
    "ggalp",
    "ggalh",
    "ggam",
    "ggab",
    "ggabs",
    "ggas",
    "ggass",
    "ggang",
    "ggaj",
    "ggac",
    "ggak",
    "ggat",
    "ggap",
    "ggah",
    "ggae",
    "ggaeg",
    "ggaegg",
    "ggaegs",
    "ggaen",
    "ggaenj",
    "ggaenh",
    "ggaed",
    "ggael",
    "ggaelg",
    "ggaelm",
    "ggaelb",
    "ggaels",
    "ggaelt",
    "ggaelp",
    "ggaelh",
    "ggaem",
    "ggaeb",
    "ggaebs",
    "ggaes",
    "ggaess",
    "ggaeng",
    "ggaej",
    "ggaec",
    "ggaek",
    "ggaet",
    "ggaep",
    "ggaeh",
    "ggya",
    "ggyag",
    "ggyagg",
    "ggyags",
    "ggyan",
    "ggyanj",
    "ggyanh",
    "ggyad",
    "ggyal",
    "ggyalg",
    "ggyalm",
    "ggyalb",
    "ggyals",
    "ggyalt",
    "ggyalp",
    "ggyalh",
    "ggyam",
    "ggyab",
    "ggyabs",
    "ggyas",
    "ggyass",
    "ggyang",
    "ggyaj",
    "ggyac",
    "ggyak",
    "ggyat",
    "ggyap",
    "ggyah",
    "ggyae",
    "ggyaeg",
    "ggyaegg",
    "ggyaegs",
    "ggyaen",
    "ggyaenj",
    "ggyaenh",
    "ggyaed",
    "ggyael",
    "ggyaelg",
    "ggyaelm",
    "ggyaelb",
    "ggyaels",
    "ggyaelt",
    "ggyaelp",
    "ggyaelh",
    "ggyaem",
    "ggyaeb",
    "ggyaebs",
    "ggyaes",
    "ggyaess",
    "ggyaeng",
    "ggyaej",
    "ggyaec",
    "ggyaek",
    "ggyaet",
    "ggyaep",
    "ggyaeh",
    "ggeo",
    "ggeog",
    "ggeogg",
    "ggeogs",
    "ggeon",
    "ggeonj",
    "ggeonh",
    "ggeod",
    "ggeol",
    "ggeolg",
    "ggeolm",
    "ggeolb",
    "ggeols",
    "ggeolt",
    "ggeolp",
    "ggeolh",
    "ggeom",
    "ggeob",
    "ggeobs",
    "ggeos",
    "ggeoss",
    "ggeong",
    "ggeoj",
    "ggeoc",
    "ggeok",
    "ggeot",
    "ggeop",
    "ggeoh",
    "gge",
    "ggeg",
    "ggegg",
    "ggegs",
    "ggen",
    "ggenj",
    "ggenh",
    "gged",
    "ggel",
    "ggelg",
    "ggelm",
    "ggelb",
    "ggels",
    "ggelt",
    "ggelp",
    "ggelh",
    "ggem",
    "ggeb",
    "ggebs",
    "gges",
    "ggess",
    "ggeng",
    "ggej",
    "ggec",
    "ggek",
    "gget",
    "ggep",
    "ggeh",
    "ggyeo",
    "ggyeog",
    "ggyeogg",
    "ggyeogs",
    "ggyeon",
    "ggyeonj",
    "ggyeonh",
    "ggyeod",
    "ggyeol",
    "ggyeolg",
    "ggyeolm",
    "ggyeolb"
  ];
  return xae;
}
var xaf;
var hasRequiredXaf;
function requireXaf() {
  if (hasRequiredXaf) return xaf;
  hasRequiredXaf = 1;
  xaf = [
    "ggyeols",
    "ggyeolt",
    "ggyeolp",
    "ggyeolh",
    "ggyeom",
    "ggyeob",
    "ggyeobs",
    "ggyeos",
    "ggyeoss",
    "ggyeong",
    "ggyeoj",
    "ggyeoc",
    "ggyeok",
    "ggyeot",
    "ggyeop",
    "ggyeoh",
    "ggye",
    "ggyeg",
    "ggyegg",
    "ggyegs",
    "ggyen",
    "ggyenj",
    "ggyenh",
    "ggyed",
    "ggyel",
    "ggyelg",
    "ggyelm",
    "ggyelb",
    "ggyels",
    "ggyelt",
    "ggyelp",
    "ggyelh",
    "ggyem",
    "ggyeb",
    "ggyebs",
    "ggyes",
    "ggyess",
    "ggyeng",
    "ggyej",
    "ggyec",
    "ggyek",
    "ggyet",
    "ggyep",
    "ggyeh",
    "ggo",
    "ggog",
    "ggogg",
    "ggogs",
    "ggon",
    "ggonj",
    "ggonh",
    "ggod",
    "ggol",
    "ggolg",
    "ggolm",
    "ggolb",
    "ggols",
    "ggolt",
    "ggolp",
    "ggolh",
    "ggom",
    "ggob",
    "ggobs",
    "ggos",
    "ggoss",
    "ggong",
    "ggoj",
    "ggoc",
    "ggok",
    "ggot",
    "ggop",
    "ggoh",
    "ggwa",
    "ggwag",
    "ggwagg",
    "ggwags",
    "ggwan",
    "ggwanj",
    "ggwanh",
    "ggwad",
    "ggwal",
    "ggwalg",
    "ggwalm",
    "ggwalb",
    "ggwals",
    "ggwalt",
    "ggwalp",
    "ggwalh",
    "ggwam",
    "ggwab",
    "ggwabs",
    "ggwas",
    "ggwass",
    "ggwang",
    "ggwaj",
    "ggwac",
    "ggwak",
    "ggwat",
    "ggwap",
    "ggwah",
    "ggwae",
    "ggwaeg",
    "ggwaegg",
    "ggwaegs",
    "ggwaen",
    "ggwaenj",
    "ggwaenh",
    "ggwaed",
    "ggwael",
    "ggwaelg",
    "ggwaelm",
    "ggwaelb",
    "ggwaels",
    "ggwaelt",
    "ggwaelp",
    "ggwaelh",
    "ggwaem",
    "ggwaeb",
    "ggwaebs",
    "ggwaes",
    "ggwaess",
    "ggwaeng",
    "ggwaej",
    "ggwaec",
    "ggwaek",
    "ggwaet",
    "ggwaep",
    "ggwaeh",
    "ggoe",
    "ggoeg",
    "ggoegg",
    "ggoegs",
    "ggoen",
    "ggoenj",
    "ggoenh",
    "ggoed",
    "ggoel",
    "ggoelg",
    "ggoelm",
    "ggoelb",
    "ggoels",
    "ggoelt",
    "ggoelp",
    "ggoelh",
    "ggoem",
    "ggoeb",
    "ggoebs",
    "ggoes",
    "ggoess",
    "ggoeng",
    "ggoej",
    "ggoec",
    "ggoek",
    "ggoet",
    "ggoep",
    "ggoeh",
    "ggyo",
    "ggyog",
    "ggyogg",
    "ggyogs",
    "ggyon",
    "ggyonj",
    "ggyonh",
    "ggyod",
    "ggyol",
    "ggyolg",
    "ggyolm",
    "ggyolb",
    "ggyols",
    "ggyolt",
    "ggyolp",
    "ggyolh",
    "ggyom",
    "ggyob",
    "ggyobs",
    "ggyos",
    "ggyoss",
    "ggyong",
    "ggyoj",
    "ggyoc",
    "ggyok",
    "ggyot",
    "ggyop",
    "ggyoh",
    "ggu",
    "ggug",
    "ggugg",
    "ggugs",
    "ggun",
    "ggunj",
    "ggunh",
    "ggud",
    "ggul",
    "ggulg",
    "ggulm",
    "ggulb",
    "gguls",
    "ggult",
    "ggulp",
    "ggulh",
    "ggum",
    "ggub",
    "ggubs",
    "ggus",
    "gguss",
    "ggung",
    "gguj",
    "gguc",
    "gguk",
    "ggut",
    "ggup",
    "gguh",
    "ggweo",
    "ggweog",
    "ggweogg",
    "ggweogs",
    "ggweon",
    "ggweonj",
    "ggweonh",
    "ggweod",
    "ggweol",
    "ggweolg",
    "ggweolm",
    "ggweolb",
    "ggweols",
    "ggweolt",
    "ggweolp",
    "ggweolh",
    "ggweom",
    "ggweob",
    "ggweobs",
    "ggweos",
    "ggweoss",
    "ggweong",
    "ggweoj",
    "ggweoc",
    "ggweok",
    "ggweot",
    "ggweop",
    "ggweoh",
    "ggwe",
    "ggweg",
    "ggwegg",
    "ggwegs",
    "ggwen",
    "ggwenj",
    "ggwenh",
    "ggwed",
    "ggwel",
    "ggwelg",
    "ggwelm",
    "ggwelb",
    "ggwels",
    "ggwelt",
    "ggwelp",
    "ggwelh"
  ];
  return xaf;
}
var xb0;
var hasRequiredXb0;
function requireXb0() {
  if (hasRequiredXb0) return xb0;
  hasRequiredXb0 = 1;
  xb0 = [
    "ggwem",
    "ggweb",
    "ggwebs",
    "ggwes",
    "ggwess",
    "ggweng",
    "ggwej",
    "ggwec",
    "ggwek",
    "ggwet",
    "ggwep",
    "ggweh",
    "ggwi",
    "ggwig",
    "ggwigg",
    "ggwigs",
    "ggwin",
    "ggwinj",
    "ggwinh",
    "ggwid",
    "ggwil",
    "ggwilg",
    "ggwilm",
    "ggwilb",
    "ggwils",
    "ggwilt",
    "ggwilp",
    "ggwilh",
    "ggwim",
    "ggwib",
    "ggwibs",
    "ggwis",
    "ggwiss",
    "ggwing",
    "ggwij",
    "ggwic",
    "ggwik",
    "ggwit",
    "ggwip",
    "ggwih",
    "ggyu",
    "ggyug",
    "ggyugg",
    "ggyugs",
    "ggyun",
    "ggyunj",
    "ggyunh",
    "ggyud",
    "ggyul",
    "ggyulg",
    "ggyulm",
    "ggyulb",
    "ggyuls",
    "ggyult",
    "ggyulp",
    "ggyulh",
    "ggyum",
    "ggyub",
    "ggyubs",
    "ggyus",
    "ggyuss",
    "ggyung",
    "ggyuj",
    "ggyuc",
    "ggyuk",
    "ggyut",
    "ggyup",
    "ggyuh",
    "ggeu",
    "ggeug",
    "ggeugg",
    "ggeugs",
    "ggeun",
    "ggeunj",
    "ggeunh",
    "ggeud",
    "ggeul",
    "ggeulg",
    "ggeulm",
    "ggeulb",
    "ggeuls",
    "ggeult",
    "ggeulp",
    "ggeulh",
    "ggeum",
    "ggeub",
    "ggeubs",
    "ggeus",
    "ggeuss",
    "ggeung",
    "ggeuj",
    "ggeuc",
    "ggeuk",
    "ggeut",
    "ggeup",
    "ggeuh",
    "ggyi",
    "ggyig",
    "ggyigg",
    "ggyigs",
    "ggyin",
    "ggyinj",
    "ggyinh",
    "ggyid",
    "ggyil",
    "ggyilg",
    "ggyilm",
    "ggyilb",
    "ggyils",
    "ggyilt",
    "ggyilp",
    "ggyilh",
    "ggyim",
    "ggyib",
    "ggyibs",
    "ggyis",
    "ggyiss",
    "ggying",
    "ggyij",
    "ggyic",
    "ggyik",
    "ggyit",
    "ggyip",
    "ggyih",
    "ggi",
    "ggig",
    "ggigg",
    "ggigs",
    "ggin",
    "gginj",
    "gginh",
    "ggid",
    "ggil",
    "ggilg",
    "ggilm",
    "ggilb",
    "ggils",
    "ggilt",
    "ggilp",
    "ggilh",
    "ggim",
    "ggib",
    "ggibs",
    "ggis",
    "ggiss",
    "gging",
    "ggij",
    "ggic",
    "ggik",
    "ggit",
    "ggip",
    "ggih",
    "na",
    "nag",
    "nagg",
    "nags",
    "nan",
    "nanj",
    "nanh",
    "nad",
    "nal",
    "nalg",
    "nalm",
    "nalb",
    "nals",
    "nalt",
    "nalp",
    "nalh",
    "nam",
    "nab",
    "nabs",
    "nas",
    "nass",
    "nang",
    "naj",
    "nac",
    "nak",
    "nat",
    "nap",
    "nah",
    "nae",
    "naeg",
    "naegg",
    "naegs",
    "naen",
    "naenj",
    "naenh",
    "naed",
    "nael",
    "naelg",
    "naelm",
    "naelb",
    "naels",
    "naelt",
    "naelp",
    "naelh",
    "naem",
    "naeb",
    "naebs",
    "naes",
    "naess",
    "naeng",
    "naej",
    "naec",
    "naek",
    "naet",
    "naep",
    "naeh",
    "nya",
    "nyag",
    "nyagg",
    "nyags",
    "nyan",
    "nyanj",
    "nyanh",
    "nyad",
    "nyal",
    "nyalg",
    "nyalm",
    "nyalb",
    "nyals",
    "nyalt",
    "nyalp",
    "nyalh",
    "nyam",
    "nyab",
    "nyabs",
    "nyas",
    "nyass",
    "nyang",
    "nyaj",
    "nyac",
    "nyak",
    "nyat",
    "nyap",
    "nyah",
    "nyae",
    "nyaeg",
    "nyaegg",
    "nyaegs",
    "nyaen",
    "nyaenj",
    "nyaenh",
    "nyaed",
    "nyael",
    "nyaelg",
    "nyaelm",
    "nyaelb",
    "nyaels",
    "nyaelt",
    "nyaelp",
    "nyaelh",
    "nyaem",
    "nyaeb",
    "nyaebs",
    "nyaes"
  ];
  return xb0;
}
var xb1;
var hasRequiredXb1;
function requireXb1() {
  if (hasRequiredXb1) return xb1;
  hasRequiredXb1 = 1;
  xb1 = [
    "nyaess",
    "nyaeng",
    "nyaej",
    "nyaec",
    "nyaek",
    "nyaet",
    "nyaep",
    "nyaeh",
    "neo",
    "neog",
    "neogg",
    "neogs",
    "neon",
    "neonj",
    "neonh",
    "neod",
    "neol",
    "neolg",
    "neolm",
    "neolb",
    "neols",
    "neolt",
    "neolp",
    "neolh",
    "neom",
    "neob",
    "neobs",
    "neos",
    "neoss",
    "neong",
    "neoj",
    "neoc",
    "neok",
    "neot",
    "neop",
    "neoh",
    "ne",
    "neg",
    "negg",
    "negs",
    "nen",
    "nenj",
    "nenh",
    "ned",
    "nel",
    "nelg",
    "nelm",
    "nelb",
    "nels",
    "nelt",
    "nelp",
    "nelh",
    "nem",
    "neb",
    "nebs",
    "nes",
    "ness",
    "neng",
    "nej",
    "nec",
    "nek",
    "net",
    "nep",
    "neh",
    "nyeo",
    "nyeog",
    "nyeogg",
    "nyeogs",
    "nyeon",
    "nyeonj",
    "nyeonh",
    "nyeod",
    "nyeol",
    "nyeolg",
    "nyeolm",
    "nyeolb",
    "nyeols",
    "nyeolt",
    "nyeolp",
    "nyeolh",
    "nyeom",
    "nyeob",
    "nyeobs",
    "nyeos",
    "nyeoss",
    "nyeong",
    "nyeoj",
    "nyeoc",
    "nyeok",
    "nyeot",
    "nyeop",
    "nyeoh",
    "nye",
    "nyeg",
    "nyegg",
    "nyegs",
    "nyen",
    "nyenj",
    "nyenh",
    "nyed",
    "nyel",
    "nyelg",
    "nyelm",
    "nyelb",
    "nyels",
    "nyelt",
    "nyelp",
    "nyelh",
    "nyem",
    "nyeb",
    "nyebs",
    "nyes",
    "nyess",
    "nyeng",
    "nyej",
    "nyec",
    "nyek",
    "nyet",
    "nyep",
    "nyeh",
    "no",
    "nog",
    "nogg",
    "nogs",
    "non",
    "nonj",
    "nonh",
    "nod",
    "nol",
    "nolg",
    "nolm",
    "nolb",
    "nols",
    "nolt",
    "nolp",
    "nolh",
    "nom",
    "nob",
    "nobs",
    "nos",
    "noss",
    "nong",
    "noj",
    "noc",
    "nok",
    "not",
    "nop",
    "noh",
    "nwa",
    "nwag",
    "nwagg",
    "nwags",
    "nwan",
    "nwanj",
    "nwanh",
    "nwad",
    "nwal",
    "nwalg",
    "nwalm",
    "nwalb",
    "nwals",
    "nwalt",
    "nwalp",
    "nwalh",
    "nwam",
    "nwab",
    "nwabs",
    "nwas",
    "nwass",
    "nwang",
    "nwaj",
    "nwac",
    "nwak",
    "nwat",
    "nwap",
    "nwah",
    "nwae",
    "nwaeg",
    "nwaegg",
    "nwaegs",
    "nwaen",
    "nwaenj",
    "nwaenh",
    "nwaed",
    "nwael",
    "nwaelg",
    "nwaelm",
    "nwaelb",
    "nwaels",
    "nwaelt",
    "nwaelp",
    "nwaelh",
    "nwaem",
    "nwaeb",
    "nwaebs",
    "nwaes",
    "nwaess",
    "nwaeng",
    "nwaej",
    "nwaec",
    "nwaek",
    "nwaet",
    "nwaep",
    "nwaeh",
    "noe",
    "noeg",
    "noegg",
    "noegs",
    "noen",
    "noenj",
    "noenh",
    "noed",
    "noel",
    "noelg",
    "noelm",
    "noelb",
    "noels",
    "noelt",
    "noelp",
    "noelh",
    "noem",
    "noeb",
    "noebs",
    "noes",
    "noess",
    "noeng",
    "noej",
    "noec",
    "noek",
    "noet",
    "noep",
    "noeh",
    "nyo",
    "nyog",
    "nyogg",
    "nyogs",
    "nyon",
    "nyonj",
    "nyonh",
    "nyod",
    "nyol",
    "nyolg",
    "nyolm",
    "nyolb",
    "nyols",
    "nyolt",
    "nyolp",
    "nyolh",
    "nyom",
    "nyob",
    "nyobs",
    "nyos",
    "nyoss",
    "nyong",
    "nyoj",
    "nyoc"
  ];
  return xb1;
}
var xb2;
var hasRequiredXb2;
function requireXb2() {
  if (hasRequiredXb2) return xb2;
  hasRequiredXb2 = 1;
  xb2 = [
    "nyok",
    "nyot",
    "nyop",
    "nyoh",
    "nu",
    "nug",
    "nugg",
    "nugs",
    "nun",
    "nunj",
    "nunh",
    "nud",
    "nul",
    "nulg",
    "nulm",
    "nulb",
    "nuls",
    "nult",
    "nulp",
    "nulh",
    "num",
    "nub",
    "nubs",
    "nus",
    "nuss",
    "nung",
    "nuj",
    "nuc",
    "nuk",
    "nut",
    "nup",
    "nuh",
    "nweo",
    "nweog",
    "nweogg",
    "nweogs",
    "nweon",
    "nweonj",
    "nweonh",
    "nweod",
    "nweol",
    "nweolg",
    "nweolm",
    "nweolb",
    "nweols",
    "nweolt",
    "nweolp",
    "nweolh",
    "nweom",
    "nweob",
    "nweobs",
    "nweos",
    "nweoss",
    "nweong",
    "nweoj",
    "nweoc",
    "nweok",
    "nweot",
    "nweop",
    "nweoh",
    "nwe",
    "nweg",
    "nwegg",
    "nwegs",
    "nwen",
    "nwenj",
    "nwenh",
    "nwed",
    "nwel",
    "nwelg",
    "nwelm",
    "nwelb",
    "nwels",
    "nwelt",
    "nwelp",
    "nwelh",
    "nwem",
    "nweb",
    "nwebs",
    "nwes",
    "nwess",
    "nweng",
    "nwej",
    "nwec",
    "nwek",
    "nwet",
    "nwep",
    "nweh",
    "nwi",
    "nwig",
    "nwigg",
    "nwigs",
    "nwin",
    "nwinj",
    "nwinh",
    "nwid",
    "nwil",
    "nwilg",
    "nwilm",
    "nwilb",
    "nwils",
    "nwilt",
    "nwilp",
    "nwilh",
    "nwim",
    "nwib",
    "nwibs",
    "nwis",
    "nwiss",
    "nwing",
    "nwij",
    "nwic",
    "nwik",
    "nwit",
    "nwip",
    "nwih",
    "nyu",
    "nyug",
    "nyugg",
    "nyugs",
    "nyun",
    "nyunj",
    "nyunh",
    "nyud",
    "nyul",
    "nyulg",
    "nyulm",
    "nyulb",
    "nyuls",
    "nyult",
    "nyulp",
    "nyulh",
    "nyum",
    "nyub",
    "nyubs",
    "nyus",
    "nyuss",
    "nyung",
    "nyuj",
    "nyuc",
    "nyuk",
    "nyut",
    "nyup",
    "nyuh",
    "neu",
    "neug",
    "neugg",
    "neugs",
    "neun",
    "neunj",
    "neunh",
    "neud",
    "neul",
    "neulg",
    "neulm",
    "neulb",
    "neuls",
    "neult",
    "neulp",
    "neulh",
    "neum",
    "neub",
    "neubs",
    "neus",
    "neuss",
    "neung",
    "neuj",
    "neuc",
    "neuk",
    "neut",
    "neup",
    "neuh",
    "nyi",
    "nyig",
    "nyigg",
    "nyigs",
    "nyin",
    "nyinj",
    "nyinh",
    "nyid",
    "nyil",
    "nyilg",
    "nyilm",
    "nyilb",
    "nyils",
    "nyilt",
    "nyilp",
    "nyilh",
    "nyim",
    "nyib",
    "nyibs",
    "nyis",
    "nyiss",
    "nying",
    "nyij",
    "nyic",
    "nyik",
    "nyit",
    "nyip",
    "nyih",
    "ni",
    "nig",
    "nigg",
    "nigs",
    "nin",
    "ninj",
    "ninh",
    "nid",
    "nil",
    "nilg",
    "nilm",
    "nilb",
    "nils",
    "nilt",
    "nilp",
    "nilh",
    "nim",
    "nib",
    "nibs",
    "nis",
    "niss",
    "ning",
    "nij",
    "nic",
    "nik",
    "nit",
    "nip",
    "nih",
    "da",
    "dag",
    "dagg",
    "dags",
    "dan",
    "danj",
    "danh",
    "dad",
    "dal",
    "dalg",
    "dalm",
    "dalb",
    "dals",
    "dalt",
    "dalp",
    "dalh",
    "dam",
    "dab",
    "dabs",
    "das",
    "dass",
    "dang",
    "daj",
    "dac",
    "dak",
    "dat",
    "dap",
    "dah"
  ];
  return xb2;
}
var xb3;
var hasRequiredXb3;
function requireXb3() {
  if (hasRequiredXb3) return xb3;
  hasRequiredXb3 = 1;
  xb3 = [
    "dae",
    "daeg",
    "daegg",
    "daegs",
    "daen",
    "daenj",
    "daenh",
    "daed",
    "dael",
    "daelg",
    "daelm",
    "daelb",
    "daels",
    "daelt",
    "daelp",
    "daelh",
    "daem",
    "daeb",
    "daebs",
    "daes",
    "daess",
    "daeng",
    "daej",
    "daec",
    "daek",
    "daet",
    "daep",
    "daeh",
    "dya",
    "dyag",
    "dyagg",
    "dyags",
    "dyan",
    "dyanj",
    "dyanh",
    "dyad",
    "dyal",
    "dyalg",
    "dyalm",
    "dyalb",
    "dyals",
    "dyalt",
    "dyalp",
    "dyalh",
    "dyam",
    "dyab",
    "dyabs",
    "dyas",
    "dyass",
    "dyang",
    "dyaj",
    "dyac",
    "dyak",
    "dyat",
    "dyap",
    "dyah",
    "dyae",
    "dyaeg",
    "dyaegg",
    "dyaegs",
    "dyaen",
    "dyaenj",
    "dyaenh",
    "dyaed",
    "dyael",
    "dyaelg",
    "dyaelm",
    "dyaelb",
    "dyaels",
    "dyaelt",
    "dyaelp",
    "dyaelh",
    "dyaem",
    "dyaeb",
    "dyaebs",
    "dyaes",
    "dyaess",
    "dyaeng",
    "dyaej",
    "dyaec",
    "dyaek",
    "dyaet",
    "dyaep",
    "dyaeh",
    "deo",
    "deog",
    "deogg",
    "deogs",
    "deon",
    "deonj",
    "deonh",
    "deod",
    "deol",
    "deolg",
    "deolm",
    "deolb",
    "deols",
    "deolt",
    "deolp",
    "deolh",
    "deom",
    "deob",
    "deobs",
    "deos",
    "deoss",
    "deong",
    "deoj",
    "deoc",
    "deok",
    "deot",
    "deop",
    "deoh",
    "de",
    "deg",
    "degg",
    "degs",
    "den",
    "denj",
    "denh",
    "ded",
    "del",
    "delg",
    "delm",
    "delb",
    "dels",
    "delt",
    "delp",
    "delh",
    "dem",
    "deb",
    "debs",
    "des",
    "dess",
    "deng",
    "dej",
    "dec",
    "dek",
    "det",
    "dep",
    "deh",
    "dyeo",
    "dyeog",
    "dyeogg",
    "dyeogs",
    "dyeon",
    "dyeonj",
    "dyeonh",
    "dyeod",
    "dyeol",
    "dyeolg",
    "dyeolm",
    "dyeolb",
    "dyeols",
    "dyeolt",
    "dyeolp",
    "dyeolh",
    "dyeom",
    "dyeob",
    "dyeobs",
    "dyeos",
    "dyeoss",
    "dyeong",
    "dyeoj",
    "dyeoc",
    "dyeok",
    "dyeot",
    "dyeop",
    "dyeoh",
    "dye",
    "dyeg",
    "dyegg",
    "dyegs",
    "dyen",
    "dyenj",
    "dyenh",
    "dyed",
    "dyel",
    "dyelg",
    "dyelm",
    "dyelb",
    "dyels",
    "dyelt",
    "dyelp",
    "dyelh",
    "dyem",
    "dyeb",
    "dyebs",
    "dyes",
    "dyess",
    "dyeng",
    "dyej",
    "dyec",
    "dyek",
    "dyet",
    "dyep",
    "dyeh",
    "do",
    "dog",
    "dogg",
    "dogs",
    "don",
    "donj",
    "donh",
    "dod",
    "dol",
    "dolg",
    "dolm",
    "dolb",
    "dols",
    "dolt",
    "dolp",
    "dolh",
    "dom",
    "dob",
    "dobs",
    "dos",
    "doss",
    "dong",
    "doj",
    "doc",
    "dok",
    "dot",
    "dop",
    "doh",
    "dwa",
    "dwag",
    "dwagg",
    "dwags",
    "dwan",
    "dwanj",
    "dwanh",
    "dwad",
    "dwal",
    "dwalg",
    "dwalm",
    "dwalb",
    "dwals",
    "dwalt",
    "dwalp",
    "dwalh",
    "dwam",
    "dwab",
    "dwabs",
    "dwas",
    "dwass",
    "dwang",
    "dwaj",
    "dwac",
    "dwak",
    "dwat",
    "dwap",
    "dwah",
    "dwae",
    "dwaeg",
    "dwaegg",
    "dwaegs"
  ];
  return xb3;
}
var xb4;
var hasRequiredXb4;
function requireXb4() {
  if (hasRequiredXb4) return xb4;
  hasRequiredXb4 = 1;
  xb4 = [
    "dwaen",
    "dwaenj",
    "dwaenh",
    "dwaed",
    "dwael",
    "dwaelg",
    "dwaelm",
    "dwaelb",
    "dwaels",
    "dwaelt",
    "dwaelp",
    "dwaelh",
    "dwaem",
    "dwaeb",
    "dwaebs",
    "dwaes",
    "dwaess",
    "dwaeng",
    "dwaej",
    "dwaec",
    "dwaek",
    "dwaet",
    "dwaep",
    "dwaeh",
    "doe",
    "doeg",
    "doegg",
    "doegs",
    "doen",
    "doenj",
    "doenh",
    "doed",
    "doel",
    "doelg",
    "doelm",
    "doelb",
    "doels",
    "doelt",
    "doelp",
    "doelh",
    "doem",
    "doeb",
    "doebs",
    "does",
    "doess",
    "doeng",
    "doej",
    "doec",
    "doek",
    "doet",
    "doep",
    "doeh",
    "dyo",
    "dyog",
    "dyogg",
    "dyogs",
    "dyon",
    "dyonj",
    "dyonh",
    "dyod",
    "dyol",
    "dyolg",
    "dyolm",
    "dyolb",
    "dyols",
    "dyolt",
    "dyolp",
    "dyolh",
    "dyom",
    "dyob",
    "dyobs",
    "dyos",
    "dyoss",
    "dyong",
    "dyoj",
    "dyoc",
    "dyok",
    "dyot",
    "dyop",
    "dyoh",
    "du",
    "dug",
    "dugg",
    "dugs",
    "dun",
    "dunj",
    "dunh",
    "dud",
    "dul",
    "dulg",
    "dulm",
    "dulb",
    "duls",
    "dult",
    "dulp",
    "dulh",
    "dum",
    "dub",
    "dubs",
    "dus",
    "duss",
    "dung",
    "duj",
    "duc",
    "duk",
    "dut",
    "dup",
    "duh",
    "dweo",
    "dweog",
    "dweogg",
    "dweogs",
    "dweon",
    "dweonj",
    "dweonh",
    "dweod",
    "dweol",
    "dweolg",
    "dweolm",
    "dweolb",
    "dweols",
    "dweolt",
    "dweolp",
    "dweolh",
    "dweom",
    "dweob",
    "dweobs",
    "dweos",
    "dweoss",
    "dweong",
    "dweoj",
    "dweoc",
    "dweok",
    "dweot",
    "dweop",
    "dweoh",
    "dwe",
    "dweg",
    "dwegg",
    "dwegs",
    "dwen",
    "dwenj",
    "dwenh",
    "dwed",
    "dwel",
    "dwelg",
    "dwelm",
    "dwelb",
    "dwels",
    "dwelt",
    "dwelp",
    "dwelh",
    "dwem",
    "dweb",
    "dwebs",
    "dwes",
    "dwess",
    "dweng",
    "dwej",
    "dwec",
    "dwek",
    "dwet",
    "dwep",
    "dweh",
    "dwi",
    "dwig",
    "dwigg",
    "dwigs",
    "dwin",
    "dwinj",
    "dwinh",
    "dwid",
    "dwil",
    "dwilg",
    "dwilm",
    "dwilb",
    "dwils",
    "dwilt",
    "dwilp",
    "dwilh",
    "dwim",
    "dwib",
    "dwibs",
    "dwis",
    "dwiss",
    "dwing",
    "dwij",
    "dwic",
    "dwik",
    "dwit",
    "dwip",
    "dwih",
    "dyu",
    "dyug",
    "dyugg",
    "dyugs",
    "dyun",
    "dyunj",
    "dyunh",
    "dyud",
    "dyul",
    "dyulg",
    "dyulm",
    "dyulb",
    "dyuls",
    "dyult",
    "dyulp",
    "dyulh",
    "dyum",
    "dyub",
    "dyubs",
    "dyus",
    "dyuss",
    "dyung",
    "dyuj",
    "dyuc",
    "dyuk",
    "dyut",
    "dyup",
    "dyuh",
    "deu",
    "deug",
    "deugg",
    "deugs",
    "deun",
    "deunj",
    "deunh",
    "deud",
    "deul",
    "deulg",
    "deulm",
    "deulb",
    "deuls",
    "deult",
    "deulp",
    "deulh",
    "deum",
    "deub",
    "deubs",
    "deus",
    "deuss",
    "deung",
    "deuj",
    "deuc",
    "deuk",
    "deut",
    "deup",
    "deuh",
    "dyi",
    "dyig",
    "dyigg",
    "dyigs",
    "dyin",
    "dyinj",
    "dyinh",
    "dyid"
  ];
  return xb4;
}
var xb5;
var hasRequiredXb5;
function requireXb5() {
  if (hasRequiredXb5) return xb5;
  hasRequiredXb5 = 1;
  xb5 = [
    "dyil",
    "dyilg",
    "dyilm",
    "dyilb",
    "dyils",
    "dyilt",
    "dyilp",
    "dyilh",
    "dyim",
    "dyib",
    "dyibs",
    "dyis",
    "dyiss",
    "dying",
    "dyij",
    "dyic",
    "dyik",
    "dyit",
    "dyip",
    "dyih",
    "di",
    "dig",
    "digg",
    "digs",
    "din",
    "dinj",
    "dinh",
    "did",
    "dil",
    "dilg",
    "dilm",
    "dilb",
    "dils",
    "dilt",
    "dilp",
    "dilh",
    "dim",
    "dib",
    "dibs",
    "dis",
    "diss",
    "ding",
    "dij",
    "dic",
    "dik",
    "dit",
    "dip",
    "dih",
    "dda",
    "ddag",
    "ddagg",
    "ddags",
    "ddan",
    "ddanj",
    "ddanh",
    "ddad",
    "ddal",
    "ddalg",
    "ddalm",
    "ddalb",
    "ddals",
    "ddalt",
    "ddalp",
    "ddalh",
    "ddam",
    "ddab",
    "ddabs",
    "ddas",
    "ddass",
    "ddang",
    "ddaj",
    "ddac",
    "ddak",
    "ddat",
    "ddap",
    "ddah",
    "ddae",
    "ddaeg",
    "ddaegg",
    "ddaegs",
    "ddaen",
    "ddaenj",
    "ddaenh",
    "ddaed",
    "ddael",
    "ddaelg",
    "ddaelm",
    "ddaelb",
    "ddaels",
    "ddaelt",
    "ddaelp",
    "ddaelh",
    "ddaem",
    "ddaeb",
    "ddaebs",
    "ddaes",
    "ddaess",
    "ddaeng",
    "ddaej",
    "ddaec",
    "ddaek",
    "ddaet",
    "ddaep",
    "ddaeh",
    "ddya",
    "ddyag",
    "ddyagg",
    "ddyags",
    "ddyan",
    "ddyanj",
    "ddyanh",
    "ddyad",
    "ddyal",
    "ddyalg",
    "ddyalm",
    "ddyalb",
    "ddyals",
    "ddyalt",
    "ddyalp",
    "ddyalh",
    "ddyam",
    "ddyab",
    "ddyabs",
    "ddyas",
    "ddyass",
    "ddyang",
    "ddyaj",
    "ddyac",
    "ddyak",
    "ddyat",
    "ddyap",
    "ddyah",
    "ddyae",
    "ddyaeg",
    "ddyaegg",
    "ddyaegs",
    "ddyaen",
    "ddyaenj",
    "ddyaenh",
    "ddyaed",
    "ddyael",
    "ddyaelg",
    "ddyaelm",
    "ddyaelb",
    "ddyaels",
    "ddyaelt",
    "ddyaelp",
    "ddyaelh",
    "ddyaem",
    "ddyaeb",
    "ddyaebs",
    "ddyaes",
    "ddyaess",
    "ddyaeng",
    "ddyaej",
    "ddyaec",
    "ddyaek",
    "ddyaet",
    "ddyaep",
    "ddyaeh",
    "ddeo",
    "ddeog",
    "ddeogg",
    "ddeogs",
    "ddeon",
    "ddeonj",
    "ddeonh",
    "ddeod",
    "ddeol",
    "ddeolg",
    "ddeolm",
    "ddeolb",
    "ddeols",
    "ddeolt",
    "ddeolp",
    "ddeolh",
    "ddeom",
    "ddeob",
    "ddeobs",
    "ddeos",
    "ddeoss",
    "ddeong",
    "ddeoj",
    "ddeoc",
    "ddeok",
    "ddeot",
    "ddeop",
    "ddeoh",
    "dde",
    "ddeg",
    "ddegg",
    "ddegs",
    "dden",
    "ddenj",
    "ddenh",
    "dded",
    "ddel",
    "ddelg",
    "ddelm",
    "ddelb",
    "ddels",
    "ddelt",
    "ddelp",
    "ddelh",
    "ddem",
    "ddeb",
    "ddebs",
    "ddes",
    "ddess",
    "ddeng",
    "ddej",
    "ddec",
    "ddek",
    "ddet",
    "ddep",
    "ddeh",
    "ddyeo",
    "ddyeog",
    "ddyeogg",
    "ddyeogs",
    "ddyeon",
    "ddyeonj",
    "ddyeonh",
    "ddyeod",
    "ddyeol",
    "ddyeolg",
    "ddyeolm",
    "ddyeolb",
    "ddyeols",
    "ddyeolt",
    "ddyeolp",
    "ddyeolh",
    "ddyeom",
    "ddyeob",
    "ddyeobs",
    "ddyeos",
    "ddyeoss",
    "ddyeong",
    "ddyeoj",
    "ddyeoc",
    "ddyeok",
    "ddyeot",
    "ddyeop",
    "ddyeoh",
    "ddye",
    "ddyeg",
    "ddyegg",
    "ddyegs",
    "ddyen",
    "ddyenj",
    "ddyenh",
    "ddyed",
    "ddyel",
    "ddyelg",
    "ddyelm",
    "ddyelb"
  ];
  return xb5;
}
var xb6;
var hasRequiredXb6;
function requireXb6() {
  if (hasRequiredXb6) return xb6;
  hasRequiredXb6 = 1;
  xb6 = [
    "ddyels",
    "ddyelt",
    "ddyelp",
    "ddyelh",
    "ddyem",
    "ddyeb",
    "ddyebs",
    "ddyes",
    "ddyess",
    "ddyeng",
    "ddyej",
    "ddyec",
    "ddyek",
    "ddyet",
    "ddyep",
    "ddyeh",
    "ddo",
    "ddog",
    "ddogg",
    "ddogs",
    "ddon",
    "ddonj",
    "ddonh",
    "ddod",
    "ddol",
    "ddolg",
    "ddolm",
    "ddolb",
    "ddols",
    "ddolt",
    "ddolp",
    "ddolh",
    "ddom",
    "ddob",
    "ddobs",
    "ddos",
    "ddoss",
    "ddong",
    "ddoj",
    "ddoc",
    "ddok",
    "ddot",
    "ddop",
    "ddoh",
    "ddwa",
    "ddwag",
    "ddwagg",
    "ddwags",
    "ddwan",
    "ddwanj",
    "ddwanh",
    "ddwad",
    "ddwal",
    "ddwalg",
    "ddwalm",
    "ddwalb",
    "ddwals",
    "ddwalt",
    "ddwalp",
    "ddwalh",
    "ddwam",
    "ddwab",
    "ddwabs",
    "ddwas",
    "ddwass",
    "ddwang",
    "ddwaj",
    "ddwac",
    "ddwak",
    "ddwat",
    "ddwap",
    "ddwah",
    "ddwae",
    "ddwaeg",
    "ddwaegg",
    "ddwaegs",
    "ddwaen",
    "ddwaenj",
    "ddwaenh",
    "ddwaed",
    "ddwael",
    "ddwaelg",
    "ddwaelm",
    "ddwaelb",
    "ddwaels",
    "ddwaelt",
    "ddwaelp",
    "ddwaelh",
    "ddwaem",
    "ddwaeb",
    "ddwaebs",
    "ddwaes",
    "ddwaess",
    "ddwaeng",
    "ddwaej",
    "ddwaec",
    "ddwaek",
    "ddwaet",
    "ddwaep",
    "ddwaeh",
    "ddoe",
    "ddoeg",
    "ddoegg",
    "ddoegs",
    "ddoen",
    "ddoenj",
    "ddoenh",
    "ddoed",
    "ddoel",
    "ddoelg",
    "ddoelm",
    "ddoelb",
    "ddoels",
    "ddoelt",
    "ddoelp",
    "ddoelh",
    "ddoem",
    "ddoeb",
    "ddoebs",
    "ddoes",
    "ddoess",
    "ddoeng",
    "ddoej",
    "ddoec",
    "ddoek",
    "ddoet",
    "ddoep",
    "ddoeh",
    "ddyo",
    "ddyog",
    "ddyogg",
    "ddyogs",
    "ddyon",
    "ddyonj",
    "ddyonh",
    "ddyod",
    "ddyol",
    "ddyolg",
    "ddyolm",
    "ddyolb",
    "ddyols",
    "ddyolt",
    "ddyolp",
    "ddyolh",
    "ddyom",
    "ddyob",
    "ddyobs",
    "ddyos",
    "ddyoss",
    "ddyong",
    "ddyoj",
    "ddyoc",
    "ddyok",
    "ddyot",
    "ddyop",
    "ddyoh",
    "ddu",
    "ddug",
    "ddugg",
    "ddugs",
    "ddun",
    "ddunj",
    "ddunh",
    "ddud",
    "ddul",
    "ddulg",
    "ddulm",
    "ddulb",
    "dduls",
    "ddult",
    "ddulp",
    "ddulh",
    "ddum",
    "ddub",
    "ddubs",
    "ddus",
    "dduss",
    "ddung",
    "dduj",
    "dduc",
    "dduk",
    "ddut",
    "ddup",
    "dduh",
    "ddweo",
    "ddweog",
    "ddweogg",
    "ddweogs",
    "ddweon",
    "ddweonj",
    "ddweonh",
    "ddweod",
    "ddweol",
    "ddweolg",
    "ddweolm",
    "ddweolb",
    "ddweols",
    "ddweolt",
    "ddweolp",
    "ddweolh",
    "ddweom",
    "ddweob",
    "ddweobs",
    "ddweos",
    "ddweoss",
    "ddweong",
    "ddweoj",
    "ddweoc",
    "ddweok",
    "ddweot",
    "ddweop",
    "ddweoh",
    "ddwe",
    "ddweg",
    "ddwegg",
    "ddwegs",
    "ddwen",
    "ddwenj",
    "ddwenh",
    "ddwed",
    "ddwel",
    "ddwelg",
    "ddwelm",
    "ddwelb",
    "ddwels",
    "ddwelt",
    "ddwelp",
    "ddwelh",
    "ddwem",
    "ddweb",
    "ddwebs",
    "ddwes",
    "ddwess",
    "ddweng",
    "ddwej",
    "ddwec",
    "ddwek",
    "ddwet",
    "ddwep",
    "ddweh",
    "ddwi",
    "ddwig",
    "ddwigg",
    "ddwigs",
    "ddwin",
    "ddwinj",
    "ddwinh",
    "ddwid",
    "ddwil",
    "ddwilg",
    "ddwilm",
    "ddwilb",
    "ddwils",
    "ddwilt",
    "ddwilp",
    "ddwilh"
  ];
  return xb6;
}
var xb7;
var hasRequiredXb7;
function requireXb7() {
  if (hasRequiredXb7) return xb7;
  hasRequiredXb7 = 1;
  xb7 = [
    "ddwim",
    "ddwib",
    "ddwibs",
    "ddwis",
    "ddwiss",
    "ddwing",
    "ddwij",
    "ddwic",
    "ddwik",
    "ddwit",
    "ddwip",
    "ddwih",
    "ddyu",
    "ddyug",
    "ddyugg",
    "ddyugs",
    "ddyun",
    "ddyunj",
    "ddyunh",
    "ddyud",
    "ddyul",
    "ddyulg",
    "ddyulm",
    "ddyulb",
    "ddyuls",
    "ddyult",
    "ddyulp",
    "ddyulh",
    "ddyum",
    "ddyub",
    "ddyubs",
    "ddyus",
    "ddyuss",
    "ddyung",
    "ddyuj",
    "ddyuc",
    "ddyuk",
    "ddyut",
    "ddyup",
    "ddyuh",
    "ddeu",
    "ddeug",
    "ddeugg",
    "ddeugs",
    "ddeun",
    "ddeunj",
    "ddeunh",
    "ddeud",
    "ddeul",
    "ddeulg",
    "ddeulm",
    "ddeulb",
    "ddeuls",
    "ddeult",
    "ddeulp",
    "ddeulh",
    "ddeum",
    "ddeub",
    "ddeubs",
    "ddeus",
    "ddeuss",
    "ddeung",
    "ddeuj",
    "ddeuc",
    "ddeuk",
    "ddeut",
    "ddeup",
    "ddeuh",
    "ddyi",
    "ddyig",
    "ddyigg",
    "ddyigs",
    "ddyin",
    "ddyinj",
    "ddyinh",
    "ddyid",
    "ddyil",
    "ddyilg",
    "ddyilm",
    "ddyilb",
    "ddyils",
    "ddyilt",
    "ddyilp",
    "ddyilh",
    "ddyim",
    "ddyib",
    "ddyibs",
    "ddyis",
    "ddyiss",
    "ddying",
    "ddyij",
    "ddyic",
    "ddyik",
    "ddyit",
    "ddyip",
    "ddyih",
    "ddi",
    "ddig",
    "ddigg",
    "ddigs",
    "ddin",
    "ddinj",
    "ddinh",
    "ddid",
    "ddil",
    "ddilg",
    "ddilm",
    "ddilb",
    "ddils",
    "ddilt",
    "ddilp",
    "ddilh",
    "ddim",
    "ddib",
    "ddibs",
    "ddis",
    "ddiss",
    "dding",
    "ddij",
    "ddic",
    "ddik",
    "ddit",
    "ddip",
    "ddih",
    "ra",
    "rag",
    "ragg",
    "rags",
    "ran",
    "ranj",
    "ranh",
    "rad",
    "ral",
    "ralg",
    "ralm",
    "ralb",
    "rals",
    "ralt",
    "ralp",
    "ralh",
    "ram",
    "rab",
    "rabs",
    "ras",
    "rass",
    "rang",
    "raj",
    "rac",
    "rak",
    "rat",
    "rap",
    "rah",
    "rae",
    "raeg",
    "raegg",
    "raegs",
    "raen",
    "raenj",
    "raenh",
    "raed",
    "rael",
    "raelg",
    "raelm",
    "raelb",
    "raels",
    "raelt",
    "raelp",
    "raelh",
    "raem",
    "raeb",
    "raebs",
    "raes",
    "raess",
    "raeng",
    "raej",
    "raec",
    "raek",
    "raet",
    "raep",
    "raeh",
    "rya",
    "ryag",
    "ryagg",
    "ryags",
    "ryan",
    "ryanj",
    "ryanh",
    "ryad",
    "ryal",
    "ryalg",
    "ryalm",
    "ryalb",
    "ryals",
    "ryalt",
    "ryalp",
    "ryalh",
    "ryam",
    "ryab",
    "ryabs",
    "ryas",
    "ryass",
    "ryang",
    "ryaj",
    "ryac",
    "ryak",
    "ryat",
    "ryap",
    "ryah",
    "ryae",
    "ryaeg",
    "ryaegg",
    "ryaegs",
    "ryaen",
    "ryaenj",
    "ryaenh",
    "ryaed",
    "ryael",
    "ryaelg",
    "ryaelm",
    "ryaelb",
    "ryaels",
    "ryaelt",
    "ryaelp",
    "ryaelh",
    "ryaem",
    "ryaeb",
    "ryaebs",
    "ryaes",
    "ryaess",
    "ryaeng",
    "ryaej",
    "ryaec",
    "ryaek",
    "ryaet",
    "ryaep",
    "ryaeh",
    "reo",
    "reog",
    "reogg",
    "reogs",
    "reon",
    "reonj",
    "reonh",
    "reod",
    "reol",
    "reolg",
    "reolm",
    "reolb",
    "reols",
    "reolt",
    "reolp",
    "reolh",
    "reom",
    "reob",
    "reobs",
    "reos"
  ];
  return xb7;
}
var xb8;
var hasRequiredXb8;
function requireXb8() {
  if (hasRequiredXb8) return xb8;
  hasRequiredXb8 = 1;
  xb8 = [
    "reoss",
    "reong",
    "reoj",
    "reoc",
    "reok",
    "reot",
    "reop",
    "reoh",
    "re",
    "reg",
    "regg",
    "regs",
    "ren",
    "renj",
    "renh",
    "red",
    "rel",
    "relg",
    "relm",
    "relb",
    "rels",
    "relt",
    "relp",
    "relh",
    "rem",
    "reb",
    "rebs",
    "res",
    "ress",
    "reng",
    "rej",
    "rec",
    "rek",
    "ret",
    "rep",
    "reh",
    "ryeo",
    "ryeog",
    "ryeogg",
    "ryeogs",
    "ryeon",
    "ryeonj",
    "ryeonh",
    "ryeod",
    "ryeol",
    "ryeolg",
    "ryeolm",
    "ryeolb",
    "ryeols",
    "ryeolt",
    "ryeolp",
    "ryeolh",
    "ryeom",
    "ryeob",
    "ryeobs",
    "ryeos",
    "ryeoss",
    "ryeong",
    "ryeoj",
    "ryeoc",
    "ryeok",
    "ryeot",
    "ryeop",
    "ryeoh",
    "rye",
    "ryeg",
    "ryegg",
    "ryegs",
    "ryen",
    "ryenj",
    "ryenh",
    "ryed",
    "ryel",
    "ryelg",
    "ryelm",
    "ryelb",
    "ryels",
    "ryelt",
    "ryelp",
    "ryelh",
    "ryem",
    "ryeb",
    "ryebs",
    "ryes",
    "ryess",
    "ryeng",
    "ryej",
    "ryec",
    "ryek",
    "ryet",
    "ryep",
    "ryeh",
    "ro",
    "rog",
    "rogg",
    "rogs",
    "ron",
    "ronj",
    "ronh",
    "rod",
    "rol",
    "rolg",
    "rolm",
    "rolb",
    "rols",
    "rolt",
    "rolp",
    "rolh",
    "rom",
    "rob",
    "robs",
    "ros",
    "ross",
    "rong",
    "roj",
    "roc",
    "rok",
    "rot",
    "rop",
    "roh",
    "rwa",
    "rwag",
    "rwagg",
    "rwags",
    "rwan",
    "rwanj",
    "rwanh",
    "rwad",
    "rwal",
    "rwalg",
    "rwalm",
    "rwalb",
    "rwals",
    "rwalt",
    "rwalp",
    "rwalh",
    "rwam",
    "rwab",
    "rwabs",
    "rwas",
    "rwass",
    "rwang",
    "rwaj",
    "rwac",
    "rwak",
    "rwat",
    "rwap",
    "rwah",
    "rwae",
    "rwaeg",
    "rwaegg",
    "rwaegs",
    "rwaen",
    "rwaenj",
    "rwaenh",
    "rwaed",
    "rwael",
    "rwaelg",
    "rwaelm",
    "rwaelb",
    "rwaels",
    "rwaelt",
    "rwaelp",
    "rwaelh",
    "rwaem",
    "rwaeb",
    "rwaebs",
    "rwaes",
    "rwaess",
    "rwaeng",
    "rwaej",
    "rwaec",
    "rwaek",
    "rwaet",
    "rwaep",
    "rwaeh",
    "roe",
    "roeg",
    "roegg",
    "roegs",
    "roen",
    "roenj",
    "roenh",
    "roed",
    "roel",
    "roelg",
    "roelm",
    "roelb",
    "roels",
    "roelt",
    "roelp",
    "roelh",
    "roem",
    "roeb",
    "roebs",
    "roes",
    "roess",
    "roeng",
    "roej",
    "roec",
    "roek",
    "roet",
    "roep",
    "roeh",
    "ryo",
    "ryog",
    "ryogg",
    "ryogs",
    "ryon",
    "ryonj",
    "ryonh",
    "ryod",
    "ryol",
    "ryolg",
    "ryolm",
    "ryolb",
    "ryols",
    "ryolt",
    "ryolp",
    "ryolh",
    "ryom",
    "ryob",
    "ryobs",
    "ryos",
    "ryoss",
    "ryong",
    "ryoj",
    "ryoc",
    "ryok",
    "ryot",
    "ryop",
    "ryoh",
    "ru",
    "rug",
    "rugg",
    "rugs",
    "run",
    "runj",
    "runh",
    "rud",
    "rul",
    "rulg",
    "rulm",
    "rulb",
    "ruls",
    "rult",
    "rulp",
    "rulh",
    "rum",
    "rub",
    "rubs",
    "rus",
    "russ",
    "rung",
    "ruj",
    "ruc"
  ];
  return xb8;
}
var xb9;
var hasRequiredXb9;
function requireXb9() {
  if (hasRequiredXb9) return xb9;
  hasRequiredXb9 = 1;
  xb9 = [
    "ruk",
    "rut",
    "rup",
    "ruh",
    "rweo",
    "rweog",
    "rweogg",
    "rweogs",
    "rweon",
    "rweonj",
    "rweonh",
    "rweod",
    "rweol",
    "rweolg",
    "rweolm",
    "rweolb",
    "rweols",
    "rweolt",
    "rweolp",
    "rweolh",
    "rweom",
    "rweob",
    "rweobs",
    "rweos",
    "rweoss",
    "rweong",
    "rweoj",
    "rweoc",
    "rweok",
    "rweot",
    "rweop",
    "rweoh",
    "rwe",
    "rweg",
    "rwegg",
    "rwegs",
    "rwen",
    "rwenj",
    "rwenh",
    "rwed",
    "rwel",
    "rwelg",
    "rwelm",
    "rwelb",
    "rwels",
    "rwelt",
    "rwelp",
    "rwelh",
    "rwem",
    "rweb",
    "rwebs",
    "rwes",
    "rwess",
    "rweng",
    "rwej",
    "rwec",
    "rwek",
    "rwet",
    "rwep",
    "rweh",
    "rwi",
    "rwig",
    "rwigg",
    "rwigs",
    "rwin",
    "rwinj",
    "rwinh",
    "rwid",
    "rwil",
    "rwilg",
    "rwilm",
    "rwilb",
    "rwils",
    "rwilt",
    "rwilp",
    "rwilh",
    "rwim",
    "rwib",
    "rwibs",
    "rwis",
    "rwiss",
    "rwing",
    "rwij",
    "rwic",
    "rwik",
    "rwit",
    "rwip",
    "rwih",
    "ryu",
    "ryug",
    "ryugg",
    "ryugs",
    "ryun",
    "ryunj",
    "ryunh",
    "ryud",
    "ryul",
    "ryulg",
    "ryulm",
    "ryulb",
    "ryuls",
    "ryult",
    "ryulp",
    "ryulh",
    "ryum",
    "ryub",
    "ryubs",
    "ryus",
    "ryuss",
    "ryung",
    "ryuj",
    "ryuc",
    "ryuk",
    "ryut",
    "ryup",
    "ryuh",
    "reu",
    "reug",
    "reugg",
    "reugs",
    "reun",
    "reunj",
    "reunh",
    "reud",
    "reul",
    "reulg",
    "reulm",
    "reulb",
    "reuls",
    "reult",
    "reulp",
    "reulh",
    "reum",
    "reub",
    "reubs",
    "reus",
    "reuss",
    "reung",
    "reuj",
    "reuc",
    "reuk",
    "reut",
    "reup",
    "reuh",
    "ryi",
    "ryig",
    "ryigg",
    "ryigs",
    "ryin",
    "ryinj",
    "ryinh",
    "ryid",
    "ryil",
    "ryilg",
    "ryilm",
    "ryilb",
    "ryils",
    "ryilt",
    "ryilp",
    "ryilh",
    "ryim",
    "ryib",
    "ryibs",
    "ryis",
    "ryiss",
    "rying",
    "ryij",
    "ryic",
    "ryik",
    "ryit",
    "ryip",
    "ryih",
    "ri",
    "rig",
    "rigg",
    "rigs",
    "rin",
    "rinj",
    "rinh",
    "rid",
    "ril",
    "rilg",
    "rilm",
    "rilb",
    "rils",
    "rilt",
    "rilp",
    "rilh",
    "rim",
    "rib",
    "ribs",
    "ris",
    "riss",
    "ring",
    "rij",
    "ric",
    "rik",
    "rit",
    "rip",
    "rih",
    "ma",
    "mag",
    "magg",
    "mags",
    "man",
    "manj",
    "manh",
    "mad",
    "mal",
    "malg",
    "malm",
    "malb",
    "mals",
    "malt",
    "malp",
    "malh",
    "mam",
    "mab",
    "mabs",
    "mas",
    "mass",
    "mang",
    "maj",
    "mac",
    "mak",
    "mat",
    "map",
    "mah",
    "mae",
    "maeg",
    "maegg",
    "maegs",
    "maen",
    "maenj",
    "maenh",
    "maed",
    "mael",
    "maelg",
    "maelm",
    "maelb",
    "maels",
    "maelt",
    "maelp",
    "maelh",
    "maem",
    "maeb",
    "maebs",
    "maes",
    "maess",
    "maeng",
    "maej",
    "maec",
    "maek",
    "maet",
    "maep",
    "maeh"
  ];
  return xb9;
}
var xba;
var hasRequiredXba;
function requireXba() {
  if (hasRequiredXba) return xba;
  hasRequiredXba = 1;
  xba = [
    "mya",
    "myag",
    "myagg",
    "myags",
    "myan",
    "myanj",
    "myanh",
    "myad",
    "myal",
    "myalg",
    "myalm",
    "myalb",
    "myals",
    "myalt",
    "myalp",
    "myalh",
    "myam",
    "myab",
    "myabs",
    "myas",
    "myass",
    "myang",
    "myaj",
    "myac",
    "myak",
    "myat",
    "myap",
    "myah",
    "myae",
    "myaeg",
    "myaegg",
    "myaegs",
    "myaen",
    "myaenj",
    "myaenh",
    "myaed",
    "myael",
    "myaelg",
    "myaelm",
    "myaelb",
    "myaels",
    "myaelt",
    "myaelp",
    "myaelh",
    "myaem",
    "myaeb",
    "myaebs",
    "myaes",
    "myaess",
    "myaeng",
    "myaej",
    "myaec",
    "myaek",
    "myaet",
    "myaep",
    "myaeh",
    "meo",
    "meog",
    "meogg",
    "meogs",
    "meon",
    "meonj",
    "meonh",
    "meod",
    "meol",
    "meolg",
    "meolm",
    "meolb",
    "meols",
    "meolt",
    "meolp",
    "meolh",
    "meom",
    "meob",
    "meobs",
    "meos",
    "meoss",
    "meong",
    "meoj",
    "meoc",
    "meok",
    "meot",
    "meop",
    "meoh",
    "me",
    "meg",
    "megg",
    "megs",
    "men",
    "menj",
    "menh",
    "med",
    "mel",
    "melg",
    "melm",
    "melb",
    "mels",
    "melt",
    "melp",
    "melh",
    "mem",
    "meb",
    "mebs",
    "mes",
    "mess",
    "meng",
    "mej",
    "mec",
    "mek",
    "met",
    "mep",
    "meh",
    "myeo",
    "myeog",
    "myeogg",
    "myeogs",
    "myeon",
    "myeonj",
    "myeonh",
    "myeod",
    "myeol",
    "myeolg",
    "myeolm",
    "myeolb",
    "myeols",
    "myeolt",
    "myeolp",
    "myeolh",
    "myeom",
    "myeob",
    "myeobs",
    "myeos",
    "myeoss",
    "myeong",
    "myeoj",
    "myeoc",
    "myeok",
    "myeot",
    "myeop",
    "myeoh",
    "mye",
    "myeg",
    "myegg",
    "myegs",
    "myen",
    "myenj",
    "myenh",
    "myed",
    "myel",
    "myelg",
    "myelm",
    "myelb",
    "myels",
    "myelt",
    "myelp",
    "myelh",
    "myem",
    "myeb",
    "myebs",
    "myes",
    "myess",
    "myeng",
    "myej",
    "myec",
    "myek",
    "myet",
    "myep",
    "myeh",
    "mo",
    "mog",
    "mogg",
    "mogs",
    "mon",
    "monj",
    "monh",
    "mod",
    "mol",
    "molg",
    "molm",
    "molb",
    "mols",
    "molt",
    "molp",
    "molh",
    "mom",
    "mob",
    "mobs",
    "mos",
    "moss",
    "mong",
    "moj",
    "moc",
    "mok",
    "mot",
    "mop",
    "moh",
    "mwa",
    "mwag",
    "mwagg",
    "mwags",
    "mwan",
    "mwanj",
    "mwanh",
    "mwad",
    "mwal",
    "mwalg",
    "mwalm",
    "mwalb",
    "mwals",
    "mwalt",
    "mwalp",
    "mwalh",
    "mwam",
    "mwab",
    "mwabs",
    "mwas",
    "mwass",
    "mwang",
    "mwaj",
    "mwac",
    "mwak",
    "mwat",
    "mwap",
    "mwah",
    "mwae",
    "mwaeg",
    "mwaegg",
    "mwaegs",
    "mwaen",
    "mwaenj",
    "mwaenh",
    "mwaed",
    "mwael",
    "mwaelg",
    "mwaelm",
    "mwaelb",
    "mwaels",
    "mwaelt",
    "mwaelp",
    "mwaelh",
    "mwaem",
    "mwaeb",
    "mwaebs",
    "mwaes",
    "mwaess",
    "mwaeng",
    "mwaej",
    "mwaec",
    "mwaek",
    "mwaet",
    "mwaep",
    "mwaeh",
    "moe",
    "moeg",
    "moegg",
    "moegs"
  ];
  return xba;
}
var xbb;
var hasRequiredXbb;
function requireXbb() {
  if (hasRequiredXbb) return xbb;
  hasRequiredXbb = 1;
  xbb = [
    "moen",
    "moenj",
    "moenh",
    "moed",
    "moel",
    "moelg",
    "moelm",
    "moelb",
    "moels",
    "moelt",
    "moelp",
    "moelh",
    "moem",
    "moeb",
    "moebs",
    "moes",
    "moess",
    "moeng",
    "moej",
    "moec",
    "moek",
    "moet",
    "moep",
    "moeh",
    "myo",
    "myog",
    "myogg",
    "myogs",
    "myon",
    "myonj",
    "myonh",
    "myod",
    "myol",
    "myolg",
    "myolm",
    "myolb",
    "myols",
    "myolt",
    "myolp",
    "myolh",
    "myom",
    "myob",
    "myobs",
    "myos",
    "myoss",
    "myong",
    "myoj",
    "myoc",
    "myok",
    "myot",
    "myop",
    "myoh",
    "mu",
    "mug",
    "mugg",
    "mugs",
    "mun",
    "munj",
    "munh",
    "mud",
    "mul",
    "mulg",
    "mulm",
    "mulb",
    "muls",
    "mult",
    "mulp",
    "mulh",
    "mum",
    "mub",
    "mubs",
    "mus",
    "muss",
    "mung",
    "muj",
    "muc",
    "muk",
    "mut",
    "mup",
    "muh",
    "mweo",
    "mweog",
    "mweogg",
    "mweogs",
    "mweon",
    "mweonj",
    "mweonh",
    "mweod",
    "mweol",
    "mweolg",
    "mweolm",
    "mweolb",
    "mweols",
    "mweolt",
    "mweolp",
    "mweolh",
    "mweom",
    "mweob",
    "mweobs",
    "mweos",
    "mweoss",
    "mweong",
    "mweoj",
    "mweoc",
    "mweok",
    "mweot",
    "mweop",
    "mweoh",
    "mwe",
    "mweg",
    "mwegg",
    "mwegs",
    "mwen",
    "mwenj",
    "mwenh",
    "mwed",
    "mwel",
    "mwelg",
    "mwelm",
    "mwelb",
    "mwels",
    "mwelt",
    "mwelp",
    "mwelh",
    "mwem",
    "mweb",
    "mwebs",
    "mwes",
    "mwess",
    "mweng",
    "mwej",
    "mwec",
    "mwek",
    "mwet",
    "mwep",
    "mweh",
    "mwi",
    "mwig",
    "mwigg",
    "mwigs",
    "mwin",
    "mwinj",
    "mwinh",
    "mwid",
    "mwil",
    "mwilg",
    "mwilm",
    "mwilb",
    "mwils",
    "mwilt",
    "mwilp",
    "mwilh",
    "mwim",
    "mwib",
    "mwibs",
    "mwis",
    "mwiss",
    "mwing",
    "mwij",
    "mwic",
    "mwik",
    "mwit",
    "mwip",
    "mwih",
    "myu",
    "myug",
    "myugg",
    "myugs",
    "myun",
    "myunj",
    "myunh",
    "myud",
    "myul",
    "myulg",
    "myulm",
    "myulb",
    "myuls",
    "myult",
    "myulp",
    "myulh",
    "myum",
    "myub",
    "myubs",
    "myus",
    "myuss",
    "myung",
    "myuj",
    "myuc",
    "myuk",
    "myut",
    "myup",
    "myuh",
    "meu",
    "meug",
    "meugg",
    "meugs",
    "meun",
    "meunj",
    "meunh",
    "meud",
    "meul",
    "meulg",
    "meulm",
    "meulb",
    "meuls",
    "meult",
    "meulp",
    "meulh",
    "meum",
    "meub",
    "meubs",
    "meus",
    "meuss",
    "meung",
    "meuj",
    "meuc",
    "meuk",
    "meut",
    "meup",
    "meuh",
    "myi",
    "myig",
    "myigg",
    "myigs",
    "myin",
    "myinj",
    "myinh",
    "myid",
    "myil",
    "myilg",
    "myilm",
    "myilb",
    "myils",
    "myilt",
    "myilp",
    "myilh",
    "myim",
    "myib",
    "myibs",
    "myis",
    "myiss",
    "mying",
    "myij",
    "myic",
    "myik",
    "myit",
    "myip",
    "myih",
    "mi",
    "mig",
    "migg",
    "migs",
    "min",
    "minj",
    "minh",
    "mid"
  ];
  return xbb;
}
var xbc;
var hasRequiredXbc;
function requireXbc() {
  if (hasRequiredXbc) return xbc;
  hasRequiredXbc = 1;
  xbc = [
    "mil",
    "milg",
    "milm",
    "milb",
    "mils",
    "milt",
    "milp",
    "milh",
    "mim",
    "mib",
    "mibs",
    "mis",
    "miss",
    "ming",
    "mij",
    "mic",
    "mik",
    "mit",
    "mip",
    "mih",
    "ba",
    "bag",
    "bagg",
    "bags",
    "ban",
    "banj",
    "banh",
    "bad",
    "bal",
    "balg",
    "balm",
    "balb",
    "bals",
    "balt",
    "balp",
    "balh",
    "bam",
    "bab",
    "babs",
    "bas",
    "bass",
    "bang",
    "baj",
    "bac",
    "bak",
    "bat",
    "bap",
    "bah",
    "bae",
    "baeg",
    "baegg",
    "baegs",
    "baen",
    "baenj",
    "baenh",
    "baed",
    "bael",
    "baelg",
    "baelm",
    "baelb",
    "baels",
    "baelt",
    "baelp",
    "baelh",
    "baem",
    "baeb",
    "baebs",
    "baes",
    "baess",
    "baeng",
    "baej",
    "baec",
    "baek",
    "baet",
    "baep",
    "baeh",
    "bya",
    "byag",
    "byagg",
    "byags",
    "byan",
    "byanj",
    "byanh",
    "byad",
    "byal",
    "byalg",
    "byalm",
    "byalb",
    "byals",
    "byalt",
    "byalp",
    "byalh",
    "byam",
    "byab",
    "byabs",
    "byas",
    "byass",
    "byang",
    "byaj",
    "byac",
    "byak",
    "byat",
    "byap",
    "byah",
    "byae",
    "byaeg",
    "byaegg",
    "byaegs",
    "byaen",
    "byaenj",
    "byaenh",
    "byaed",
    "byael",
    "byaelg",
    "byaelm",
    "byaelb",
    "byaels",
    "byaelt",
    "byaelp",
    "byaelh",
    "byaem",
    "byaeb",
    "byaebs",
    "byaes",
    "byaess",
    "byaeng",
    "byaej",
    "byaec",
    "byaek",
    "byaet",
    "byaep",
    "byaeh",
    "beo",
    "beog",
    "beogg",
    "beogs",
    "beon",
    "beonj",
    "beonh",
    "beod",
    "beol",
    "beolg",
    "beolm",
    "beolb",
    "beols",
    "beolt",
    "beolp",
    "beolh",
    "beom",
    "beob",
    "beobs",
    "beos",
    "beoss",
    "beong",
    "beoj",
    "beoc",
    "beok",
    "beot",
    "beop",
    "beoh",
    "be",
    "beg",
    "begg",
    "begs",
    "ben",
    "benj",
    "benh",
    "bed",
    "bel",
    "belg",
    "belm",
    "belb",
    "bels",
    "belt",
    "belp",
    "belh",
    "bem",
    "beb",
    "bebs",
    "bes",
    "bess",
    "beng",
    "bej",
    "bec",
    "bek",
    "bet",
    "bep",
    "beh",
    "byeo",
    "byeog",
    "byeogg",
    "byeogs",
    "byeon",
    "byeonj",
    "byeonh",
    "byeod",
    "byeol",
    "byeolg",
    "byeolm",
    "byeolb",
    "byeols",
    "byeolt",
    "byeolp",
    "byeolh",
    "byeom",
    "byeob",
    "byeobs",
    "byeos",
    "byeoss",
    "byeong",
    "byeoj",
    "byeoc",
    "byeok",
    "byeot",
    "byeop",
    "byeoh",
    "bye",
    "byeg",
    "byegg",
    "byegs",
    "byen",
    "byenj",
    "byenh",
    "byed",
    "byel",
    "byelg",
    "byelm",
    "byelb",
    "byels",
    "byelt",
    "byelp",
    "byelh",
    "byem",
    "byeb",
    "byebs",
    "byes",
    "byess",
    "byeng",
    "byej",
    "byec",
    "byek",
    "byet",
    "byep",
    "byeh",
    "bo",
    "bog",
    "bogg",
    "bogs",
    "bon",
    "bonj",
    "bonh",
    "bod",
    "bol",
    "bolg",
    "bolm",
    "bolb"
  ];
  return xbc;
}
var xbd;
var hasRequiredXbd;
function requireXbd() {
  if (hasRequiredXbd) return xbd;
  hasRequiredXbd = 1;
  xbd = [
    "bols",
    "bolt",
    "bolp",
    "bolh",
    "bom",
    "bob",
    "bobs",
    "bos",
    "boss",
    "bong",
    "boj",
    "boc",
    "bok",
    "bot",
    "bop",
    "boh",
    "bwa",
    "bwag",
    "bwagg",
    "bwags",
    "bwan",
    "bwanj",
    "bwanh",
    "bwad",
    "bwal",
    "bwalg",
    "bwalm",
    "bwalb",
    "bwals",
    "bwalt",
    "bwalp",
    "bwalh",
    "bwam",
    "bwab",
    "bwabs",
    "bwas",
    "bwass",
    "bwang",
    "bwaj",
    "bwac",
    "bwak",
    "bwat",
    "bwap",
    "bwah",
    "bwae",
    "bwaeg",
    "bwaegg",
    "bwaegs",
    "bwaen",
    "bwaenj",
    "bwaenh",
    "bwaed",
    "bwael",
    "bwaelg",
    "bwaelm",
    "bwaelb",
    "bwaels",
    "bwaelt",
    "bwaelp",
    "bwaelh",
    "bwaem",
    "bwaeb",
    "bwaebs",
    "bwaes",
    "bwaess",
    "bwaeng",
    "bwaej",
    "bwaec",
    "bwaek",
    "bwaet",
    "bwaep",
    "bwaeh",
    "boe",
    "boeg",
    "boegg",
    "boegs",
    "boen",
    "boenj",
    "boenh",
    "boed",
    "boel",
    "boelg",
    "boelm",
    "boelb",
    "boels",
    "boelt",
    "boelp",
    "boelh",
    "boem",
    "boeb",
    "boebs",
    "boes",
    "boess",
    "boeng",
    "boej",
    "boec",
    "boek",
    "boet",
    "boep",
    "boeh",
    "byo",
    "byog",
    "byogg",
    "byogs",
    "byon",
    "byonj",
    "byonh",
    "byod",
    "byol",
    "byolg",
    "byolm",
    "byolb",
    "byols",
    "byolt",
    "byolp",
    "byolh",
    "byom",
    "byob",
    "byobs",
    "byos",
    "byoss",
    "byong",
    "byoj",
    "byoc",
    "byok",
    "byot",
    "byop",
    "byoh",
    "bu",
    "bug",
    "bugg",
    "bugs",
    "bun",
    "bunj",
    "bunh",
    "bud",
    "bul",
    "bulg",
    "bulm",
    "bulb",
    "buls",
    "bult",
    "bulp",
    "bulh",
    "bum",
    "bub",
    "bubs",
    "bus",
    "buss",
    "bung",
    "buj",
    "buc",
    "buk",
    "but",
    "bup",
    "buh",
    "bweo",
    "bweog",
    "bweogg",
    "bweogs",
    "bweon",
    "bweonj",
    "bweonh",
    "bweod",
    "bweol",
    "bweolg",
    "bweolm",
    "bweolb",
    "bweols",
    "bweolt",
    "bweolp",
    "bweolh",
    "bweom",
    "bweob",
    "bweobs",
    "bweos",
    "bweoss",
    "bweong",
    "bweoj",
    "bweoc",
    "bweok",
    "bweot",
    "bweop",
    "bweoh",
    "bwe",
    "bweg",
    "bwegg",
    "bwegs",
    "bwen",
    "bwenj",
    "bwenh",
    "bwed",
    "bwel",
    "bwelg",
    "bwelm",
    "bwelb",
    "bwels",
    "bwelt",
    "bwelp",
    "bwelh",
    "bwem",
    "bweb",
    "bwebs",
    "bwes",
    "bwess",
    "bweng",
    "bwej",
    "bwec",
    "bwek",
    "bwet",
    "bwep",
    "bweh",
    "bwi",
    "bwig",
    "bwigg",
    "bwigs",
    "bwin",
    "bwinj",
    "bwinh",
    "bwid",
    "bwil",
    "bwilg",
    "bwilm",
    "bwilb",
    "bwils",
    "bwilt",
    "bwilp",
    "bwilh",
    "bwim",
    "bwib",
    "bwibs",
    "bwis",
    "bwiss",
    "bwing",
    "bwij",
    "bwic",
    "bwik",
    "bwit",
    "bwip",
    "bwih",
    "byu",
    "byug",
    "byugg",
    "byugs",
    "byun",
    "byunj",
    "byunh",
    "byud",
    "byul",
    "byulg",
    "byulm",
    "byulb",
    "byuls",
    "byult",
    "byulp",
    "byulh"
  ];
  return xbd;
}
var xbe;
var hasRequiredXbe;
function requireXbe() {
  if (hasRequiredXbe) return xbe;
  hasRequiredXbe = 1;
  xbe = [
    "byum",
    "byub",
    "byubs",
    "byus",
    "byuss",
    "byung",
    "byuj",
    "byuc",
    "byuk",
    "byut",
    "byup",
    "byuh",
    "beu",
    "beug",
    "beugg",
    "beugs",
    "beun",
    "beunj",
    "beunh",
    "beud",
    "beul",
    "beulg",
    "beulm",
    "beulb",
    "beuls",
    "beult",
    "beulp",
    "beulh",
    "beum",
    "beub",
    "beubs",
    "beus",
    "beuss",
    "beung",
    "beuj",
    "beuc",
    "beuk",
    "beut",
    "beup",
    "beuh",
    "byi",
    "byig",
    "byigg",
    "byigs",
    "byin",
    "byinj",
    "byinh",
    "byid",
    "byil",
    "byilg",
    "byilm",
    "byilb",
    "byils",
    "byilt",
    "byilp",
    "byilh",
    "byim",
    "byib",
    "byibs",
    "byis",
    "byiss",
    "bying",
    "byij",
    "byic",
    "byik",
    "byit",
    "byip",
    "byih",
    "bi",
    "big",
    "bigg",
    "bigs",
    "bin",
    "binj",
    "binh",
    "bid",
    "bil",
    "bilg",
    "bilm",
    "bilb",
    "bils",
    "bilt",
    "bilp",
    "bilh",
    "bim",
    "bib",
    "bibs",
    "bis",
    "biss",
    "bing",
    "bij",
    "bic",
    "bik",
    "bit",
    "bip",
    "bih",
    "bba",
    "bbag",
    "bbagg",
    "bbags",
    "bban",
    "bbanj",
    "bbanh",
    "bbad",
    "bbal",
    "bbalg",
    "bbalm",
    "bbalb",
    "bbals",
    "bbalt",
    "bbalp",
    "bbalh",
    "bbam",
    "bbab",
    "bbabs",
    "bbas",
    "bbass",
    "bbang",
    "bbaj",
    "bbac",
    "bbak",
    "bbat",
    "bbap",
    "bbah",
    "bbae",
    "bbaeg",
    "bbaegg",
    "bbaegs",
    "bbaen",
    "bbaenj",
    "bbaenh",
    "bbaed",
    "bbael",
    "bbaelg",
    "bbaelm",
    "bbaelb",
    "bbaels",
    "bbaelt",
    "bbaelp",
    "bbaelh",
    "bbaem",
    "bbaeb",
    "bbaebs",
    "bbaes",
    "bbaess",
    "bbaeng",
    "bbaej",
    "bbaec",
    "bbaek",
    "bbaet",
    "bbaep",
    "bbaeh",
    "bbya",
    "bbyag",
    "bbyagg",
    "bbyags",
    "bbyan",
    "bbyanj",
    "bbyanh",
    "bbyad",
    "bbyal",
    "bbyalg",
    "bbyalm",
    "bbyalb",
    "bbyals",
    "bbyalt",
    "bbyalp",
    "bbyalh",
    "bbyam",
    "bbyab",
    "bbyabs",
    "bbyas",
    "bbyass",
    "bbyang",
    "bbyaj",
    "bbyac",
    "bbyak",
    "bbyat",
    "bbyap",
    "bbyah",
    "bbyae",
    "bbyaeg",
    "bbyaegg",
    "bbyaegs",
    "bbyaen",
    "bbyaenj",
    "bbyaenh",
    "bbyaed",
    "bbyael",
    "bbyaelg",
    "bbyaelm",
    "bbyaelb",
    "bbyaels",
    "bbyaelt",
    "bbyaelp",
    "bbyaelh",
    "bbyaem",
    "bbyaeb",
    "bbyaebs",
    "bbyaes",
    "bbyaess",
    "bbyaeng",
    "bbyaej",
    "bbyaec",
    "bbyaek",
    "bbyaet",
    "bbyaep",
    "bbyaeh",
    "bbeo",
    "bbeog",
    "bbeogg",
    "bbeogs",
    "bbeon",
    "bbeonj",
    "bbeonh",
    "bbeod",
    "bbeol",
    "bbeolg",
    "bbeolm",
    "bbeolb",
    "bbeols",
    "bbeolt",
    "bbeolp",
    "bbeolh",
    "bbeom",
    "bbeob",
    "bbeobs",
    "bbeos",
    "bbeoss",
    "bbeong",
    "bbeoj",
    "bbeoc",
    "bbeok",
    "bbeot",
    "bbeop",
    "bbeoh",
    "bbe",
    "bbeg",
    "bbegg",
    "bbegs",
    "bben",
    "bbenj",
    "bbenh",
    "bbed",
    "bbel",
    "bbelg",
    "bbelm",
    "bbelb",
    "bbels",
    "bbelt",
    "bbelp",
    "bbelh",
    "bbem",
    "bbeb",
    "bbebs",
    "bbes"
  ];
  return xbe;
}
var xbf;
var hasRequiredXbf;
function requireXbf() {
  if (hasRequiredXbf) return xbf;
  hasRequiredXbf = 1;
  xbf = [
    "bbess",
    "bbeng",
    "bbej",
    "bbec",
    "bbek",
    "bbet",
    "bbep",
    "bbeh",
    "bbyeo",
    "bbyeog",
    "bbyeogg",
    "bbyeogs",
    "bbyeon",
    "bbyeonj",
    "bbyeonh",
    "bbyeod",
    "bbyeol",
    "bbyeolg",
    "bbyeolm",
    "bbyeolb",
    "bbyeols",
    "bbyeolt",
    "bbyeolp",
    "bbyeolh",
    "bbyeom",
    "bbyeob",
    "bbyeobs",
    "bbyeos",
    "bbyeoss",
    "bbyeong",
    "bbyeoj",
    "bbyeoc",
    "bbyeok",
    "bbyeot",
    "bbyeop",
    "bbyeoh",
    "bbye",
    "bbyeg",
    "bbyegg",
    "bbyegs",
    "bbyen",
    "bbyenj",
    "bbyenh",
    "bbyed",
    "bbyel",
    "bbyelg",
    "bbyelm",
    "bbyelb",
    "bbyels",
    "bbyelt",
    "bbyelp",
    "bbyelh",
    "bbyem",
    "bbyeb",
    "bbyebs",
    "bbyes",
    "bbyess",
    "bbyeng",
    "bbyej",
    "bbyec",
    "bbyek",
    "bbyet",
    "bbyep",
    "bbyeh",
    "bbo",
    "bbog",
    "bbogg",
    "bbogs",
    "bbon",
    "bbonj",
    "bbonh",
    "bbod",
    "bbol",
    "bbolg",
    "bbolm",
    "bbolb",
    "bbols",
    "bbolt",
    "bbolp",
    "bbolh",
    "bbom",
    "bbob",
    "bbobs",
    "bbos",
    "bboss",
    "bbong",
    "bboj",
    "bboc",
    "bbok",
    "bbot",
    "bbop",
    "bboh",
    "bbwa",
    "bbwag",
    "bbwagg",
    "bbwags",
    "bbwan",
    "bbwanj",
    "bbwanh",
    "bbwad",
    "bbwal",
    "bbwalg",
    "bbwalm",
    "bbwalb",
    "bbwals",
    "bbwalt",
    "bbwalp",
    "bbwalh",
    "bbwam",
    "bbwab",
    "bbwabs",
    "bbwas",
    "bbwass",
    "bbwang",
    "bbwaj",
    "bbwac",
    "bbwak",
    "bbwat",
    "bbwap",
    "bbwah",
    "bbwae",
    "bbwaeg",
    "bbwaegg",
    "bbwaegs",
    "bbwaen",
    "bbwaenj",
    "bbwaenh",
    "bbwaed",
    "bbwael",
    "bbwaelg",
    "bbwaelm",
    "bbwaelb",
    "bbwaels",
    "bbwaelt",
    "bbwaelp",
    "bbwaelh",
    "bbwaem",
    "bbwaeb",
    "bbwaebs",
    "bbwaes",
    "bbwaess",
    "bbwaeng",
    "bbwaej",
    "bbwaec",
    "bbwaek",
    "bbwaet",
    "bbwaep",
    "bbwaeh",
    "bboe",
    "bboeg",
    "bboegg",
    "bboegs",
    "bboen",
    "bboenj",
    "bboenh",
    "bboed",
    "bboel",
    "bboelg",
    "bboelm",
    "bboelb",
    "bboels",
    "bboelt",
    "bboelp",
    "bboelh",
    "bboem",
    "bboeb",
    "bboebs",
    "bboes",
    "bboess",
    "bboeng",
    "bboej",
    "bboec",
    "bboek",
    "bboet",
    "bboep",
    "bboeh",
    "bbyo",
    "bbyog",
    "bbyogg",
    "bbyogs",
    "bbyon",
    "bbyonj",
    "bbyonh",
    "bbyod",
    "bbyol",
    "bbyolg",
    "bbyolm",
    "bbyolb",
    "bbyols",
    "bbyolt",
    "bbyolp",
    "bbyolh",
    "bbyom",
    "bbyob",
    "bbyobs",
    "bbyos",
    "bbyoss",
    "bbyong",
    "bbyoj",
    "bbyoc",
    "bbyok",
    "bbyot",
    "bbyop",
    "bbyoh",
    "bbu",
    "bbug",
    "bbugg",
    "bbugs",
    "bbun",
    "bbunj",
    "bbunh",
    "bbud",
    "bbul",
    "bbulg",
    "bbulm",
    "bbulb",
    "bbuls",
    "bbult",
    "bbulp",
    "bbulh",
    "bbum",
    "bbub",
    "bbubs",
    "bbus",
    "bbuss",
    "bbung",
    "bbuj",
    "bbuc",
    "bbuk",
    "bbut",
    "bbup",
    "bbuh",
    "bbweo",
    "bbweog",
    "bbweogg",
    "bbweogs",
    "bbweon",
    "bbweonj",
    "bbweonh",
    "bbweod",
    "bbweol",
    "bbweolg",
    "bbweolm",
    "bbweolb",
    "bbweols",
    "bbweolt",
    "bbweolp",
    "bbweolh",
    "bbweom",
    "bbweob",
    "bbweobs",
    "bbweos",
    "bbweoss",
    "bbweong",
    "bbweoj",
    "bbweoc"
  ];
  return xbf;
}
var xc0;
var hasRequiredXc0;
function requireXc0() {
  if (hasRequiredXc0) return xc0;
  hasRequiredXc0 = 1;
  xc0 = [
    "bbweok",
    "bbweot",
    "bbweop",
    "bbweoh",
    "bbwe",
    "bbweg",
    "bbwegg",
    "bbwegs",
    "bbwen",
    "bbwenj",
    "bbwenh",
    "bbwed",
    "bbwel",
    "bbwelg",
    "bbwelm",
    "bbwelb",
    "bbwels",
    "bbwelt",
    "bbwelp",
    "bbwelh",
    "bbwem",
    "bbweb",
    "bbwebs",
    "bbwes",
    "bbwess",
    "bbweng",
    "bbwej",
    "bbwec",
    "bbwek",
    "bbwet",
    "bbwep",
    "bbweh",
    "bbwi",
    "bbwig",
    "bbwigg",
    "bbwigs",
    "bbwin",
    "bbwinj",
    "bbwinh",
    "bbwid",
    "bbwil",
    "bbwilg",
    "bbwilm",
    "bbwilb",
    "bbwils",
    "bbwilt",
    "bbwilp",
    "bbwilh",
    "bbwim",
    "bbwib",
    "bbwibs",
    "bbwis",
    "bbwiss",
    "bbwing",
    "bbwij",
    "bbwic",
    "bbwik",
    "bbwit",
    "bbwip",
    "bbwih",
    "bbyu",
    "bbyug",
    "bbyugg",
    "bbyugs",
    "bbyun",
    "bbyunj",
    "bbyunh",
    "bbyud",
    "bbyul",
    "bbyulg",
    "bbyulm",
    "bbyulb",
    "bbyuls",
    "bbyult",
    "bbyulp",
    "bbyulh",
    "bbyum",
    "bbyub",
    "bbyubs",
    "bbyus",
    "bbyuss",
    "bbyung",
    "bbyuj",
    "bbyuc",
    "bbyuk",
    "bbyut",
    "bbyup",
    "bbyuh",
    "bbeu",
    "bbeug",
    "bbeugg",
    "bbeugs",
    "bbeun",
    "bbeunj",
    "bbeunh",
    "bbeud",
    "bbeul",
    "bbeulg",
    "bbeulm",
    "bbeulb",
    "bbeuls",
    "bbeult",
    "bbeulp",
    "bbeulh",
    "bbeum",
    "bbeub",
    "bbeubs",
    "bbeus",
    "bbeuss",
    "bbeung",
    "bbeuj",
    "bbeuc",
    "bbeuk",
    "bbeut",
    "bbeup",
    "bbeuh",
    "bbyi",
    "bbyig",
    "bbyigg",
    "bbyigs",
    "bbyin",
    "bbyinj",
    "bbyinh",
    "bbyid",
    "bbyil",
    "bbyilg",
    "bbyilm",
    "bbyilb",
    "bbyils",
    "bbyilt",
    "bbyilp",
    "bbyilh",
    "bbyim",
    "bbyib",
    "bbyibs",
    "bbyis",
    "bbyiss",
    "bbying",
    "bbyij",
    "bbyic",
    "bbyik",
    "bbyit",
    "bbyip",
    "bbyih",
    "bbi",
    "bbig",
    "bbigg",
    "bbigs",
    "bbin",
    "bbinj",
    "bbinh",
    "bbid",
    "bbil",
    "bbilg",
    "bbilm",
    "bbilb",
    "bbils",
    "bbilt",
    "bbilp",
    "bbilh",
    "bbim",
    "bbib",
    "bbibs",
    "bbis",
    "bbiss",
    "bbing",
    "bbij",
    "bbic",
    "bbik",
    "bbit",
    "bbip",
    "bbih",
    "sa",
    "sag",
    "sagg",
    "sags",
    "san",
    "sanj",
    "sanh",
    "sad",
    "sal",
    "salg",
    "salm",
    "salb",
    "sals",
    "salt",
    "salp",
    "salh",
    "sam",
    "sab",
    "sabs",
    "sas",
    "sass",
    "sang",
    "saj",
    "sac",
    "sak",
    "sat",
    "sap",
    "sah",
    "sae",
    "saeg",
    "saegg",
    "saegs",
    "saen",
    "saenj",
    "saenh",
    "saed",
    "sael",
    "saelg",
    "saelm",
    "saelb",
    "saels",
    "saelt",
    "saelp",
    "saelh",
    "saem",
    "saeb",
    "saebs",
    "saes",
    "saess",
    "saeng",
    "saej",
    "saec",
    "saek",
    "saet",
    "saep",
    "saeh",
    "sya",
    "syag",
    "syagg",
    "syags",
    "syan",
    "syanj",
    "syanh",
    "syad",
    "syal",
    "syalg",
    "syalm",
    "syalb",
    "syals",
    "syalt",
    "syalp",
    "syalh",
    "syam",
    "syab",
    "syabs",
    "syas",
    "syass",
    "syang",
    "syaj",
    "syac",
    "syak",
    "syat",
    "syap",
    "syah"
  ];
  return xc0;
}
var xc1;
var hasRequiredXc1;
function requireXc1() {
  if (hasRequiredXc1) return xc1;
  hasRequiredXc1 = 1;
  xc1 = [
    "syae",
    "syaeg",
    "syaegg",
    "syaegs",
    "syaen",
    "syaenj",
    "syaenh",
    "syaed",
    "syael",
    "syaelg",
    "syaelm",
    "syaelb",
    "syaels",
    "syaelt",
    "syaelp",
    "syaelh",
    "syaem",
    "syaeb",
    "syaebs",
    "syaes",
    "syaess",
    "syaeng",
    "syaej",
    "syaec",
    "syaek",
    "syaet",
    "syaep",
    "syaeh",
    "seo",
    "seog",
    "seogg",
    "seogs",
    "seon",
    "seonj",
    "seonh",
    "seod",
    "seol",
    "seolg",
    "seolm",
    "seolb",
    "seols",
    "seolt",
    "seolp",
    "seolh",
    "seom",
    "seob",
    "seobs",
    "seos",
    "seoss",
    "seong",
    "seoj",
    "seoc",
    "seok",
    "seot",
    "seop",
    "seoh",
    "se",
    "seg",
    "segg",
    "segs",
    "sen",
    "senj",
    "senh",
    "sed",
    "sel",
    "selg",
    "selm",
    "selb",
    "sels",
    "selt",
    "selp",
    "selh",
    "sem",
    "seb",
    "sebs",
    "ses",
    "sess",
    "seng",
    "sej",
    "sec",
    "sek",
    "set",
    "sep",
    "seh",
    "syeo",
    "syeog",
    "syeogg",
    "syeogs",
    "syeon",
    "syeonj",
    "syeonh",
    "syeod",
    "syeol",
    "syeolg",
    "syeolm",
    "syeolb",
    "syeols",
    "syeolt",
    "syeolp",
    "syeolh",
    "syeom",
    "syeob",
    "syeobs",
    "syeos",
    "syeoss",
    "syeong",
    "syeoj",
    "syeoc",
    "syeok",
    "syeot",
    "syeop",
    "syeoh",
    "sye",
    "syeg",
    "syegg",
    "syegs",
    "syen",
    "syenj",
    "syenh",
    "syed",
    "syel",
    "syelg",
    "syelm",
    "syelb",
    "syels",
    "syelt",
    "syelp",
    "syelh",
    "syem",
    "syeb",
    "syebs",
    "syes",
    "syess",
    "syeng",
    "syej",
    "syec",
    "syek",
    "syet",
    "syep",
    "syeh",
    "so",
    "sog",
    "sogg",
    "sogs",
    "son",
    "sonj",
    "sonh",
    "sod",
    "sol",
    "solg",
    "solm",
    "solb",
    "sols",
    "solt",
    "solp",
    "solh",
    "som",
    "sob",
    "sobs",
    "sos",
    "soss",
    "song",
    "soj",
    "soc",
    "sok",
    "sot",
    "sop",
    "soh",
    "swa",
    "swag",
    "swagg",
    "swags",
    "swan",
    "swanj",
    "swanh",
    "swad",
    "swal",
    "swalg",
    "swalm",
    "swalb",
    "swals",
    "swalt",
    "swalp",
    "swalh",
    "swam",
    "swab",
    "swabs",
    "swas",
    "swass",
    "swang",
    "swaj",
    "swac",
    "swak",
    "swat",
    "swap",
    "swah",
    "swae",
    "swaeg",
    "swaegg",
    "swaegs",
    "swaen",
    "swaenj",
    "swaenh",
    "swaed",
    "swael",
    "swaelg",
    "swaelm",
    "swaelb",
    "swaels",
    "swaelt",
    "swaelp",
    "swaelh",
    "swaem",
    "swaeb",
    "swaebs",
    "swaes",
    "swaess",
    "swaeng",
    "swaej",
    "swaec",
    "swaek",
    "swaet",
    "swaep",
    "swaeh",
    "soe",
    "soeg",
    "soegg",
    "soegs",
    "soen",
    "soenj",
    "soenh",
    "soed",
    "soel",
    "soelg",
    "soelm",
    "soelb",
    "soels",
    "soelt",
    "soelp",
    "soelh",
    "soem",
    "soeb",
    "soebs",
    "soes",
    "soess",
    "soeng",
    "soej",
    "soec",
    "soek",
    "soet",
    "soep",
    "soeh",
    "syo",
    "syog",
    "syogg",
    "syogs"
  ];
  return xc1;
}
var xc2;
var hasRequiredXc2;
function requireXc2() {
  if (hasRequiredXc2) return xc2;
  hasRequiredXc2 = 1;
  xc2 = [
    "syon",
    "syonj",
    "syonh",
    "syod",
    "syol",
    "syolg",
    "syolm",
    "syolb",
    "syols",
    "syolt",
    "syolp",
    "syolh",
    "syom",
    "syob",
    "syobs",
    "syos",
    "syoss",
    "syong",
    "syoj",
    "syoc",
    "syok",
    "syot",
    "syop",
    "syoh",
    "su",
    "sug",
    "sugg",
    "sugs",
    "sun",
    "sunj",
    "sunh",
    "sud",
    "sul",
    "sulg",
    "sulm",
    "sulb",
    "suls",
    "sult",
    "sulp",
    "sulh",
    "sum",
    "sub",
    "subs",
    "sus",
    "suss",
    "sung",
    "suj",
    "suc",
    "suk",
    "sut",
    "sup",
    "suh",
    "sweo",
    "sweog",
    "sweogg",
    "sweogs",
    "sweon",
    "sweonj",
    "sweonh",
    "sweod",
    "sweol",
    "sweolg",
    "sweolm",
    "sweolb",
    "sweols",
    "sweolt",
    "sweolp",
    "sweolh",
    "sweom",
    "sweob",
    "sweobs",
    "sweos",
    "sweoss",
    "sweong",
    "sweoj",
    "sweoc",
    "sweok",
    "sweot",
    "sweop",
    "sweoh",
    "swe",
    "sweg",
    "swegg",
    "swegs",
    "swen",
    "swenj",
    "swenh",
    "swed",
    "swel",
    "swelg",
    "swelm",
    "swelb",
    "swels",
    "swelt",
    "swelp",
    "swelh",
    "swem",
    "sweb",
    "swebs",
    "swes",
    "swess",
    "sweng",
    "swej",
    "swec",
    "swek",
    "swet",
    "swep",
    "sweh",
    "swi",
    "swig",
    "swigg",
    "swigs",
    "swin",
    "swinj",
    "swinh",
    "swid",
    "swil",
    "swilg",
    "swilm",
    "swilb",
    "swils",
    "swilt",
    "swilp",
    "swilh",
    "swim",
    "swib",
    "swibs",
    "swis",
    "swiss",
    "swing",
    "swij",
    "swic",
    "swik",
    "swit",
    "swip",
    "swih",
    "syu",
    "syug",
    "syugg",
    "syugs",
    "syun",
    "syunj",
    "syunh",
    "syud",
    "syul",
    "syulg",
    "syulm",
    "syulb",
    "syuls",
    "syult",
    "syulp",
    "syulh",
    "syum",
    "syub",
    "syubs",
    "syus",
    "syuss",
    "syung",
    "syuj",
    "syuc",
    "syuk",
    "syut",
    "syup",
    "syuh",
    "seu",
    "seug",
    "seugg",
    "seugs",
    "seun",
    "seunj",
    "seunh",
    "seud",
    "seul",
    "seulg",
    "seulm",
    "seulb",
    "seuls",
    "seult",
    "seulp",
    "seulh",
    "seum",
    "seub",
    "seubs",
    "seus",
    "seuss",
    "seung",
    "seuj",
    "seuc",
    "seuk",
    "seut",
    "seup",
    "seuh",
    "syi",
    "syig",
    "syigg",
    "syigs",
    "syin",
    "syinj",
    "syinh",
    "syid",
    "syil",
    "syilg",
    "syilm",
    "syilb",
    "syils",
    "syilt",
    "syilp",
    "syilh",
    "syim",
    "syib",
    "syibs",
    "syis",
    "syiss",
    "sying",
    "syij",
    "syic",
    "syik",
    "syit",
    "syip",
    "syih",
    "si",
    "sig",
    "sigg",
    "sigs",
    "sin",
    "sinj",
    "sinh",
    "sid",
    "sil",
    "silg",
    "silm",
    "silb",
    "sils",
    "silt",
    "silp",
    "silh",
    "sim",
    "sib",
    "sibs",
    "sis",
    "siss",
    "sing",
    "sij",
    "sic",
    "sik",
    "sit",
    "sip",
    "sih",
    "ssa",
    "ssag",
    "ssagg",
    "ssags",
    "ssan",
    "ssanj",
    "ssanh",
    "ssad"
  ];
  return xc2;
}
var xc3;
var hasRequiredXc3;
function requireXc3() {
  if (hasRequiredXc3) return xc3;
  hasRequiredXc3 = 1;
  xc3 = [
    "ssal",
    "ssalg",
    "ssalm",
    "ssalb",
    "ssals",
    "ssalt",
    "ssalp",
    "ssalh",
    "ssam",
    "ssab",
    "ssabs",
    "ssas",
    "ssass",
    "ssang",
    "ssaj",
    "ssac",
    "ssak",
    "ssat",
    "ssap",
    "ssah",
    "ssae",
    "ssaeg",
    "ssaegg",
    "ssaegs",
    "ssaen",
    "ssaenj",
    "ssaenh",
    "ssaed",
    "ssael",
    "ssaelg",
    "ssaelm",
    "ssaelb",
    "ssaels",
    "ssaelt",
    "ssaelp",
    "ssaelh",
    "ssaem",
    "ssaeb",
    "ssaebs",
    "ssaes",
    "ssaess",
    "ssaeng",
    "ssaej",
    "ssaec",
    "ssaek",
    "ssaet",
    "ssaep",
    "ssaeh",
    "ssya",
    "ssyag",
    "ssyagg",
    "ssyags",
    "ssyan",
    "ssyanj",
    "ssyanh",
    "ssyad",
    "ssyal",
    "ssyalg",
    "ssyalm",
    "ssyalb",
    "ssyals",
    "ssyalt",
    "ssyalp",
    "ssyalh",
    "ssyam",
    "ssyab",
    "ssyabs",
    "ssyas",
    "ssyass",
    "ssyang",
    "ssyaj",
    "ssyac",
    "ssyak",
    "ssyat",
    "ssyap",
    "ssyah",
    "ssyae",
    "ssyaeg",
    "ssyaegg",
    "ssyaegs",
    "ssyaen",
    "ssyaenj",
    "ssyaenh",
    "ssyaed",
    "ssyael",
    "ssyaelg",
    "ssyaelm",
    "ssyaelb",
    "ssyaels",
    "ssyaelt",
    "ssyaelp",
    "ssyaelh",
    "ssyaem",
    "ssyaeb",
    "ssyaebs",
    "ssyaes",
    "ssyaess",
    "ssyaeng",
    "ssyaej",
    "ssyaec",
    "ssyaek",
    "ssyaet",
    "ssyaep",
    "ssyaeh",
    "sseo",
    "sseog",
    "sseogg",
    "sseogs",
    "sseon",
    "sseonj",
    "sseonh",
    "sseod",
    "sseol",
    "sseolg",
    "sseolm",
    "sseolb",
    "sseols",
    "sseolt",
    "sseolp",
    "sseolh",
    "sseom",
    "sseob",
    "sseobs",
    "sseos",
    "sseoss",
    "sseong",
    "sseoj",
    "sseoc",
    "sseok",
    "sseot",
    "sseop",
    "sseoh",
    "sse",
    "sseg",
    "ssegg",
    "ssegs",
    "ssen",
    "ssenj",
    "ssenh",
    "ssed",
    "ssel",
    "sselg",
    "sselm",
    "sselb",
    "ssels",
    "sselt",
    "sselp",
    "sselh",
    "ssem",
    "sseb",
    "ssebs",
    "sses",
    "ssess",
    "sseng",
    "ssej",
    "ssec",
    "ssek",
    "sset",
    "ssep",
    "sseh",
    "ssyeo",
    "ssyeog",
    "ssyeogg",
    "ssyeogs",
    "ssyeon",
    "ssyeonj",
    "ssyeonh",
    "ssyeod",
    "ssyeol",
    "ssyeolg",
    "ssyeolm",
    "ssyeolb",
    "ssyeols",
    "ssyeolt",
    "ssyeolp",
    "ssyeolh",
    "ssyeom",
    "ssyeob",
    "ssyeobs",
    "ssyeos",
    "ssyeoss",
    "ssyeong",
    "ssyeoj",
    "ssyeoc",
    "ssyeok",
    "ssyeot",
    "ssyeop",
    "ssyeoh",
    "ssye",
    "ssyeg",
    "ssyegg",
    "ssyegs",
    "ssyen",
    "ssyenj",
    "ssyenh",
    "ssyed",
    "ssyel",
    "ssyelg",
    "ssyelm",
    "ssyelb",
    "ssyels",
    "ssyelt",
    "ssyelp",
    "ssyelh",
    "ssyem",
    "ssyeb",
    "ssyebs",
    "ssyes",
    "ssyess",
    "ssyeng",
    "ssyej",
    "ssyec",
    "ssyek",
    "ssyet",
    "ssyep",
    "ssyeh",
    "sso",
    "ssog",
    "ssogg",
    "ssogs",
    "sson",
    "ssonj",
    "ssonh",
    "ssod",
    "ssol",
    "ssolg",
    "ssolm",
    "ssolb",
    "ssols",
    "ssolt",
    "ssolp",
    "ssolh",
    "ssom",
    "ssob",
    "ssobs",
    "ssos",
    "ssoss",
    "ssong",
    "ssoj",
    "ssoc",
    "ssok",
    "ssot",
    "ssop",
    "ssoh",
    "sswa",
    "sswag",
    "sswagg",
    "sswags",
    "sswan",
    "sswanj",
    "sswanh",
    "sswad",
    "sswal",
    "sswalg",
    "sswalm",
    "sswalb"
  ];
  return xc3;
}
var xc4;
var hasRequiredXc4;
function requireXc4() {
  if (hasRequiredXc4) return xc4;
  hasRequiredXc4 = 1;
  xc4 = [
    "sswals",
    "sswalt",
    "sswalp",
    "sswalh",
    "sswam",
    "sswab",
    "sswabs",
    "sswas",
    "sswass",
    "sswang",
    "sswaj",
    "sswac",
    "sswak",
    "sswat",
    "sswap",
    "sswah",
    "sswae",
    "sswaeg",
    "sswaegg",
    "sswaegs",
    "sswaen",
    "sswaenj",
    "sswaenh",
    "sswaed",
    "sswael",
    "sswaelg",
    "sswaelm",
    "sswaelb",
    "sswaels",
    "sswaelt",
    "sswaelp",
    "sswaelh",
    "sswaem",
    "sswaeb",
    "sswaebs",
    "sswaes",
    "sswaess",
    "sswaeng",
    "sswaej",
    "sswaec",
    "sswaek",
    "sswaet",
    "sswaep",
    "sswaeh",
    "ssoe",
    "ssoeg",
    "ssoegg",
    "ssoegs",
    "ssoen",
    "ssoenj",
    "ssoenh",
    "ssoed",
    "ssoel",
    "ssoelg",
    "ssoelm",
    "ssoelb",
    "ssoels",
    "ssoelt",
    "ssoelp",
    "ssoelh",
    "ssoem",
    "ssoeb",
    "ssoebs",
    "ssoes",
    "ssoess",
    "ssoeng",
    "ssoej",
    "ssoec",
    "ssoek",
    "ssoet",
    "ssoep",
    "ssoeh",
    "ssyo",
    "ssyog",
    "ssyogg",
    "ssyogs",
    "ssyon",
    "ssyonj",
    "ssyonh",
    "ssyod",
    "ssyol",
    "ssyolg",
    "ssyolm",
    "ssyolb",
    "ssyols",
    "ssyolt",
    "ssyolp",
    "ssyolh",
    "ssyom",
    "ssyob",
    "ssyobs",
    "ssyos",
    "ssyoss",
    "ssyong",
    "ssyoj",
    "ssyoc",
    "ssyok",
    "ssyot",
    "ssyop",
    "ssyoh",
    "ssu",
    "ssug",
    "ssugg",
    "ssugs",
    "ssun",
    "ssunj",
    "ssunh",
    "ssud",
    "ssul",
    "ssulg",
    "ssulm",
    "ssulb",
    "ssuls",
    "ssult",
    "ssulp",
    "ssulh",
    "ssum",
    "ssub",
    "ssubs",
    "ssus",
    "ssuss",
    "ssung",
    "ssuj",
    "ssuc",
    "ssuk",
    "ssut",
    "ssup",
    "ssuh",
    "ssweo",
    "ssweog",
    "ssweogg",
    "ssweogs",
    "ssweon",
    "ssweonj",
    "ssweonh",
    "ssweod",
    "ssweol",
    "ssweolg",
    "ssweolm",
    "ssweolb",
    "ssweols",
    "ssweolt",
    "ssweolp",
    "ssweolh",
    "ssweom",
    "ssweob",
    "ssweobs",
    "ssweos",
    "ssweoss",
    "ssweong",
    "ssweoj",
    "ssweoc",
    "ssweok",
    "ssweot",
    "ssweop",
    "ssweoh",
    "sswe",
    "ssweg",
    "sswegg",
    "sswegs",
    "sswen",
    "sswenj",
    "sswenh",
    "sswed",
    "sswel",
    "sswelg",
    "sswelm",
    "sswelb",
    "sswels",
    "sswelt",
    "sswelp",
    "sswelh",
    "sswem",
    "ssweb",
    "sswebs",
    "sswes",
    "sswess",
    "ssweng",
    "sswej",
    "sswec",
    "sswek",
    "sswet",
    "sswep",
    "ssweh",
    "sswi",
    "sswig",
    "sswigg",
    "sswigs",
    "sswin",
    "sswinj",
    "sswinh",
    "sswid",
    "sswil",
    "sswilg",
    "sswilm",
    "sswilb",
    "sswils",
    "sswilt",
    "sswilp",
    "sswilh",
    "sswim",
    "sswib",
    "sswibs",
    "sswis",
    "sswiss",
    "sswing",
    "sswij",
    "sswic",
    "sswik",
    "sswit",
    "sswip",
    "sswih",
    "ssyu",
    "ssyug",
    "ssyugg",
    "ssyugs",
    "ssyun",
    "ssyunj",
    "ssyunh",
    "ssyud",
    "ssyul",
    "ssyulg",
    "ssyulm",
    "ssyulb",
    "ssyuls",
    "ssyult",
    "ssyulp",
    "ssyulh",
    "ssyum",
    "ssyub",
    "ssyubs",
    "ssyus",
    "ssyuss",
    "ssyung",
    "ssyuj",
    "ssyuc",
    "ssyuk",
    "ssyut",
    "ssyup",
    "ssyuh",
    "sseu",
    "sseug",
    "sseugg",
    "sseugs",
    "sseun",
    "sseunj",
    "sseunh",
    "sseud",
    "sseul",
    "sseulg",
    "sseulm",
    "sseulb",
    "sseuls",
    "sseult",
    "sseulp",
    "sseulh"
  ];
  return xc4;
}
var xc5;
var hasRequiredXc5;
function requireXc5() {
  if (hasRequiredXc5) return xc5;
  hasRequiredXc5 = 1;
  xc5 = [
    "sseum",
    "sseub",
    "sseubs",
    "sseus",
    "sseuss",
    "sseung",
    "sseuj",
    "sseuc",
    "sseuk",
    "sseut",
    "sseup",
    "sseuh",
    "ssyi",
    "ssyig",
    "ssyigg",
    "ssyigs",
    "ssyin",
    "ssyinj",
    "ssyinh",
    "ssyid",
    "ssyil",
    "ssyilg",
    "ssyilm",
    "ssyilb",
    "ssyils",
    "ssyilt",
    "ssyilp",
    "ssyilh",
    "ssyim",
    "ssyib",
    "ssyibs",
    "ssyis",
    "ssyiss",
    "ssying",
    "ssyij",
    "ssyic",
    "ssyik",
    "ssyit",
    "ssyip",
    "ssyih",
    "ssi",
    "ssig",
    "ssigg",
    "ssigs",
    "ssin",
    "ssinj",
    "ssinh",
    "ssid",
    "ssil",
    "ssilg",
    "ssilm",
    "ssilb",
    "ssils",
    "ssilt",
    "ssilp",
    "ssilh",
    "ssim",
    "ssib",
    "ssibs",
    "ssis",
    "ssiss",
    "ssing",
    "ssij",
    "ssic",
    "ssik",
    "ssit",
    "ssip",
    "ssih",
    "a",
    "ag",
    "agg",
    "ags",
    "an",
    "anj",
    "anh",
    "ad",
    "al",
    "alg",
    "alm",
    "alb",
    "als",
    "alt",
    "alp",
    "alh",
    "am",
    "ab",
    "abs",
    "as",
    "ass",
    "ang",
    "aj",
    "ac",
    "ak",
    "at",
    "ap",
    "ah",
    "ae",
    "aeg",
    "aegg",
    "aegs",
    "aen",
    "aenj",
    "aenh",
    "aed",
    "ael",
    "aelg",
    "aelm",
    "aelb",
    "aels",
    "aelt",
    "aelp",
    "aelh",
    "aem",
    "aeb",
    "aebs",
    "aes",
    "aess",
    "aeng",
    "aej",
    "aec",
    "aek",
    "aet",
    "aep",
    "aeh",
    "ya",
    "yag",
    "yagg",
    "yags",
    "yan",
    "yanj",
    "yanh",
    "yad",
    "yal",
    "yalg",
    "yalm",
    "yalb",
    "yals",
    "yalt",
    "yalp",
    "yalh",
    "yam",
    "yab",
    "yabs",
    "yas",
    "yass",
    "yang",
    "yaj",
    "yac",
    "yak",
    "yat",
    "yap",
    "yah",
    "yae",
    "yaeg",
    "yaegg",
    "yaegs",
    "yaen",
    "yaenj",
    "yaenh",
    "yaed",
    "yael",
    "yaelg",
    "yaelm",
    "yaelb",
    "yaels",
    "yaelt",
    "yaelp",
    "yaelh",
    "yaem",
    "yaeb",
    "yaebs",
    "yaes",
    "yaess",
    "yaeng",
    "yaej",
    "yaec",
    "yaek",
    "yaet",
    "yaep",
    "yaeh",
    "eo",
    "eog",
    "eogg",
    "eogs",
    "eon",
    "eonj",
    "eonh",
    "eod",
    "eol",
    "eolg",
    "eolm",
    "eolb",
    "eols",
    "eolt",
    "eolp",
    "eolh",
    "eom",
    "eob",
    "eobs",
    "eos",
    "eoss",
    "eong",
    "eoj",
    "eoc",
    "eok",
    "eot",
    "eop",
    "eoh",
    "e",
    "eg",
    "egg",
    "egs",
    "en",
    "enj",
    "enh",
    "ed",
    "el",
    "elg",
    "elm",
    "elb",
    "els",
    "elt",
    "elp",
    "elh",
    "em",
    "eb",
    "ebs",
    "es",
    "ess",
    "eng",
    "ej",
    "ec",
    "ek",
    "et",
    "ep",
    "eh",
    "yeo",
    "yeog",
    "yeogg",
    "yeogs",
    "yeon",
    "yeonj",
    "yeonh",
    "yeod",
    "yeol",
    "yeolg",
    "yeolm",
    "yeolb",
    "yeols",
    "yeolt",
    "yeolp",
    "yeolh",
    "yeom",
    "yeob",
    "yeobs",
    "yeos"
  ];
  return xc5;
}
var xc6;
var hasRequiredXc6;
function requireXc6() {
  if (hasRequiredXc6) return xc6;
  hasRequiredXc6 = 1;
  xc6 = [
    "yeoss",
    "yeong",
    "yeoj",
    "yeoc",
    "yeok",
    "yeot",
    "yeop",
    "yeoh",
    "ye",
    "yeg",
    "yegg",
    "yegs",
    "yen",
    "yenj",
    "yenh",
    "yed",
    "yel",
    "yelg",
    "yelm",
    "yelb",
    "yels",
    "yelt",
    "yelp",
    "yelh",
    "yem",
    "yeb",
    "yebs",
    "yes",
    "yess",
    "yeng",
    "yej",
    "yec",
    "yek",
    "yet",
    "yep",
    "yeh",
    "o",
    "og",
    "ogg",
    "ogs",
    "on",
    "onj",
    "onh",
    "od",
    "ol",
    "olg",
    "olm",
    "olb",
    "ols",
    "olt",
    "olp",
    "olh",
    "om",
    "ob",
    "obs",
    "os",
    "oss",
    "ong",
    "oj",
    "oc",
    "ok",
    "ot",
    "op",
    "oh",
    "wa",
    "wag",
    "wagg",
    "wags",
    "wan",
    "wanj",
    "wanh",
    "wad",
    "wal",
    "walg",
    "walm",
    "walb",
    "wals",
    "walt",
    "walp",
    "walh",
    "wam",
    "wab",
    "wabs",
    "was",
    "wass",
    "wang",
    "waj",
    "wac",
    "wak",
    "wat",
    "wap",
    "wah",
    "wae",
    "waeg",
    "waegg",
    "waegs",
    "waen",
    "waenj",
    "waenh",
    "waed",
    "wael",
    "waelg",
    "waelm",
    "waelb",
    "waels",
    "waelt",
    "waelp",
    "waelh",
    "waem",
    "waeb",
    "waebs",
    "waes",
    "waess",
    "waeng",
    "waej",
    "waec",
    "waek",
    "waet",
    "waep",
    "waeh",
    "oe",
    "oeg",
    "oegg",
    "oegs",
    "oen",
    "oenj",
    "oenh",
    "oed",
    "oel",
    "oelg",
    "oelm",
    "oelb",
    "oels",
    "oelt",
    "oelp",
    "oelh",
    "oem",
    "oeb",
    "oebs",
    "oes",
    "oess",
    "oeng",
    "oej",
    "oec",
    "oek",
    "oet",
    "oep",
    "oeh",
    "yo",
    "yog",
    "yogg",
    "yogs",
    "yon",
    "yonj",
    "yonh",
    "yod",
    "yol",
    "yolg",
    "yolm",
    "yolb",
    "yols",
    "yolt",
    "yolp",
    "yolh",
    "yom",
    "yob",
    "yobs",
    "yos",
    "yoss",
    "yong",
    "yoj",
    "yoc",
    "yok",
    "yot",
    "yop",
    "yoh",
    "u",
    "ug",
    "ugg",
    "ugs",
    "un",
    "unj",
    "unh",
    "ud",
    "ul",
    "ulg",
    "ulm",
    "ulb",
    "uls",
    "ult",
    "ulp",
    "ulh",
    "um",
    "ub",
    "ubs",
    "us",
    "uss",
    "ung",
    "uj",
    "uc",
    "uk",
    "ut",
    "up",
    "uh",
    "weo",
    "weog",
    "weogg",
    "weogs",
    "weon",
    "weonj",
    "weonh",
    "weod",
    "weol",
    "weolg",
    "weolm",
    "weolb",
    "weols",
    "weolt",
    "weolp",
    "weolh",
    "weom",
    "weob",
    "weobs",
    "weos",
    "weoss",
    "weong",
    "weoj",
    "weoc",
    "weok",
    "weot",
    "weop",
    "weoh",
    "we",
    "weg",
    "wegg",
    "wegs",
    "wen",
    "wenj",
    "wenh",
    "wed",
    "wel",
    "welg",
    "welm",
    "welb",
    "wels",
    "welt",
    "welp",
    "welh",
    "wem",
    "web",
    "webs",
    "wes",
    "wess",
    "weng",
    "wej",
    "wec"
  ];
  return xc6;
}
var xc7;
var hasRequiredXc7;
function requireXc7() {
  if (hasRequiredXc7) return xc7;
  hasRequiredXc7 = 1;
  xc7 = [
    "wek",
    "wet",
    "wep",
    "weh",
    "wi",
    "wig",
    "wigg",
    "wigs",
    "win",
    "winj",
    "winh",
    "wid",
    "wil",
    "wilg",
    "wilm",
    "wilb",
    "wils",
    "wilt",
    "wilp",
    "wilh",
    "wim",
    "wib",
    "wibs",
    "wis",
    "wiss",
    "wing",
    "wij",
    "wic",
    "wik",
    "wit",
    "wip",
    "wih",
    "yu",
    "yug",
    "yugg",
    "yugs",
    "yun",
    "yunj",
    "yunh",
    "yud",
    "yul",
    "yulg",
    "yulm",
    "yulb",
    "yuls",
    "yult",
    "yulp",
    "yulh",
    "yum",
    "yub",
    "yubs",
    "yus",
    "yuss",
    "yung",
    "yuj",
    "yuc",
    "yuk",
    "yut",
    "yup",
    "yuh",
    "eu",
    "eug",
    "eugg",
    "eugs",
    "eun",
    "eunj",
    "eunh",
    "eud",
    "eul",
    "eulg",
    "eulm",
    "eulb",
    "euls",
    "eult",
    "eulp",
    "eulh",
    "eum",
    "eub",
    "eubs",
    "eus",
    "euss",
    "eung",
    "euj",
    "euc",
    "euk",
    "eut",
    "eup",
    "euh",
    "yi",
    "yig",
    "yigg",
    "yigs",
    "yin",
    "yinj",
    "yinh",
    "yid",
    "yil",
    "yilg",
    "yilm",
    "yilb",
    "yils",
    "yilt",
    "yilp",
    "yilh",
    "yim",
    "yib",
    "yibs",
    "yis",
    "yiss",
    "ying",
    "yij",
    "yic",
    "yik",
    "yit",
    "yip",
    "yih",
    "i",
    "ig",
    "igg",
    "igs",
    "in",
    "inj",
    "inh",
    "id",
    "il",
    "ilg",
    "ilm",
    "ilb",
    "ils",
    "ilt",
    "ilp",
    "ilh",
    "im",
    "ib",
    "ibs",
    "is",
    "iss",
    "ing",
    "ij",
    "ic",
    "ik",
    "it",
    "ip",
    "ih",
    "ja",
    "jag",
    "jagg",
    "jags",
    "jan",
    "janj",
    "janh",
    "jad",
    "jal",
    "jalg",
    "jalm",
    "jalb",
    "jals",
    "jalt",
    "jalp",
    "jalh",
    "jam",
    "jab",
    "jabs",
    "jas",
    "jass",
    "jang",
    "jaj",
    "jac",
    "jak",
    "jat",
    "jap",
    "jah",
    "jae",
    "jaeg",
    "jaegg",
    "jaegs",
    "jaen",
    "jaenj",
    "jaenh",
    "jaed",
    "jael",
    "jaelg",
    "jaelm",
    "jaelb",
    "jaels",
    "jaelt",
    "jaelp",
    "jaelh",
    "jaem",
    "jaeb",
    "jaebs",
    "jaes",
    "jaess",
    "jaeng",
    "jaej",
    "jaec",
    "jaek",
    "jaet",
    "jaep",
    "jaeh",
    "jya",
    "jyag",
    "jyagg",
    "jyags",
    "jyan",
    "jyanj",
    "jyanh",
    "jyad",
    "jyal",
    "jyalg",
    "jyalm",
    "jyalb",
    "jyals",
    "jyalt",
    "jyalp",
    "jyalh",
    "jyam",
    "jyab",
    "jyabs",
    "jyas",
    "jyass",
    "jyang",
    "jyaj",
    "jyac",
    "jyak",
    "jyat",
    "jyap",
    "jyah",
    "jyae",
    "jyaeg",
    "jyaegg",
    "jyaegs",
    "jyaen",
    "jyaenj",
    "jyaenh",
    "jyaed",
    "jyael",
    "jyaelg",
    "jyaelm",
    "jyaelb",
    "jyaels",
    "jyaelt",
    "jyaelp",
    "jyaelh",
    "jyaem",
    "jyaeb",
    "jyaebs",
    "jyaes",
    "jyaess",
    "jyaeng",
    "jyaej",
    "jyaec",
    "jyaek",
    "jyaet",
    "jyaep",
    "jyaeh"
  ];
  return xc7;
}
var xc8;
var hasRequiredXc8;
function requireXc8() {
  if (hasRequiredXc8) return xc8;
  hasRequiredXc8 = 1;
  xc8 = [
    "jeo",
    "jeog",
    "jeogg",
    "jeogs",
    "jeon",
    "jeonj",
    "jeonh",
    "jeod",
    "jeol",
    "jeolg",
    "jeolm",
    "jeolb",
    "jeols",
    "jeolt",
    "jeolp",
    "jeolh",
    "jeom",
    "jeob",
    "jeobs",
    "jeos",
    "jeoss",
    "jeong",
    "jeoj",
    "jeoc",
    "jeok",
    "jeot",
    "jeop",
    "jeoh",
    "je",
    "jeg",
    "jegg",
    "jegs",
    "jen",
    "jenj",
    "jenh",
    "jed",
    "jel",
    "jelg",
    "jelm",
    "jelb",
    "jels",
    "jelt",
    "jelp",
    "jelh",
    "jem",
    "jeb",
    "jebs",
    "jes",
    "jess",
    "jeng",
    "jej",
    "jec",
    "jek",
    "jet",
    "jep",
    "jeh",
    "jyeo",
    "jyeog",
    "jyeogg",
    "jyeogs",
    "jyeon",
    "jyeonj",
    "jyeonh",
    "jyeod",
    "jyeol",
    "jyeolg",
    "jyeolm",
    "jyeolb",
    "jyeols",
    "jyeolt",
    "jyeolp",
    "jyeolh",
    "jyeom",
    "jyeob",
    "jyeobs",
    "jyeos",
    "jyeoss",
    "jyeong",
    "jyeoj",
    "jyeoc",
    "jyeok",
    "jyeot",
    "jyeop",
    "jyeoh",
    "jye",
    "jyeg",
    "jyegg",
    "jyegs",
    "jyen",
    "jyenj",
    "jyenh",
    "jyed",
    "jyel",
    "jyelg",
    "jyelm",
    "jyelb",
    "jyels",
    "jyelt",
    "jyelp",
    "jyelh",
    "jyem",
    "jyeb",
    "jyebs",
    "jyes",
    "jyess",
    "jyeng",
    "jyej",
    "jyec",
    "jyek",
    "jyet",
    "jyep",
    "jyeh",
    "jo",
    "jog",
    "jogg",
    "jogs",
    "jon",
    "jonj",
    "jonh",
    "jod",
    "jol",
    "jolg",
    "jolm",
    "jolb",
    "jols",
    "jolt",
    "jolp",
    "jolh",
    "jom",
    "job",
    "jobs",
    "jos",
    "joss",
    "jong",
    "joj",
    "joc",
    "jok",
    "jot",
    "jop",
    "joh",
    "jwa",
    "jwag",
    "jwagg",
    "jwags",
    "jwan",
    "jwanj",
    "jwanh",
    "jwad",
    "jwal",
    "jwalg",
    "jwalm",
    "jwalb",
    "jwals",
    "jwalt",
    "jwalp",
    "jwalh",
    "jwam",
    "jwab",
    "jwabs",
    "jwas",
    "jwass",
    "jwang",
    "jwaj",
    "jwac",
    "jwak",
    "jwat",
    "jwap",
    "jwah",
    "jwae",
    "jwaeg",
    "jwaegg",
    "jwaegs",
    "jwaen",
    "jwaenj",
    "jwaenh",
    "jwaed",
    "jwael",
    "jwaelg",
    "jwaelm",
    "jwaelb",
    "jwaels",
    "jwaelt",
    "jwaelp",
    "jwaelh",
    "jwaem",
    "jwaeb",
    "jwaebs",
    "jwaes",
    "jwaess",
    "jwaeng",
    "jwaej",
    "jwaec",
    "jwaek",
    "jwaet",
    "jwaep",
    "jwaeh",
    "joe",
    "joeg",
    "joegg",
    "joegs",
    "joen",
    "joenj",
    "joenh",
    "joed",
    "joel",
    "joelg",
    "joelm",
    "joelb",
    "joels",
    "joelt",
    "joelp",
    "joelh",
    "joem",
    "joeb",
    "joebs",
    "joes",
    "joess",
    "joeng",
    "joej",
    "joec",
    "joek",
    "joet",
    "joep",
    "joeh",
    "jyo",
    "jyog",
    "jyogg",
    "jyogs",
    "jyon",
    "jyonj",
    "jyonh",
    "jyod",
    "jyol",
    "jyolg",
    "jyolm",
    "jyolb",
    "jyols",
    "jyolt",
    "jyolp",
    "jyolh",
    "jyom",
    "jyob",
    "jyobs",
    "jyos",
    "jyoss",
    "jyong",
    "jyoj",
    "jyoc",
    "jyok",
    "jyot",
    "jyop",
    "jyoh",
    "ju",
    "jug",
    "jugg",
    "jugs"
  ];
  return xc8;
}
var xc9;
var hasRequiredXc9;
function requireXc9() {
  if (hasRequiredXc9) return xc9;
  hasRequiredXc9 = 1;
  xc9 = [
    "jun",
    "junj",
    "junh",
    "jud",
    "jul",
    "julg",
    "julm",
    "julb",
    "juls",
    "jult",
    "julp",
    "julh",
    "jum",
    "jub",
    "jubs",
    "jus",
    "juss",
    "jung",
    "juj",
    "juc",
    "juk",
    "jut",
    "jup",
    "juh",
    "jweo",
    "jweog",
    "jweogg",
    "jweogs",
    "jweon",
    "jweonj",
    "jweonh",
    "jweod",
    "jweol",
    "jweolg",
    "jweolm",
    "jweolb",
    "jweols",
    "jweolt",
    "jweolp",
    "jweolh",
    "jweom",
    "jweob",
    "jweobs",
    "jweos",
    "jweoss",
    "jweong",
    "jweoj",
    "jweoc",
    "jweok",
    "jweot",
    "jweop",
    "jweoh",
    "jwe",
    "jweg",
    "jwegg",
    "jwegs",
    "jwen",
    "jwenj",
    "jwenh",
    "jwed",
    "jwel",
    "jwelg",
    "jwelm",
    "jwelb",
    "jwels",
    "jwelt",
    "jwelp",
    "jwelh",
    "jwem",
    "jweb",
    "jwebs",
    "jwes",
    "jwess",
    "jweng",
    "jwej",
    "jwec",
    "jwek",
    "jwet",
    "jwep",
    "jweh",
    "jwi",
    "jwig",
    "jwigg",
    "jwigs",
    "jwin",
    "jwinj",
    "jwinh",
    "jwid",
    "jwil",
    "jwilg",
    "jwilm",
    "jwilb",
    "jwils",
    "jwilt",
    "jwilp",
    "jwilh",
    "jwim",
    "jwib",
    "jwibs",
    "jwis",
    "jwiss",
    "jwing",
    "jwij",
    "jwic",
    "jwik",
    "jwit",
    "jwip",
    "jwih",
    "jyu",
    "jyug",
    "jyugg",
    "jyugs",
    "jyun",
    "jyunj",
    "jyunh",
    "jyud",
    "jyul",
    "jyulg",
    "jyulm",
    "jyulb",
    "jyuls",
    "jyult",
    "jyulp",
    "jyulh",
    "jyum",
    "jyub",
    "jyubs",
    "jyus",
    "jyuss",
    "jyung",
    "jyuj",
    "jyuc",
    "jyuk",
    "jyut",
    "jyup",
    "jyuh",
    "jeu",
    "jeug",
    "jeugg",
    "jeugs",
    "jeun",
    "jeunj",
    "jeunh",
    "jeud",
    "jeul",
    "jeulg",
    "jeulm",
    "jeulb",
    "jeuls",
    "jeult",
    "jeulp",
    "jeulh",
    "jeum",
    "jeub",
    "jeubs",
    "jeus",
    "jeuss",
    "jeung",
    "jeuj",
    "jeuc",
    "jeuk",
    "jeut",
    "jeup",
    "jeuh",
    "jyi",
    "jyig",
    "jyigg",
    "jyigs",
    "jyin",
    "jyinj",
    "jyinh",
    "jyid",
    "jyil",
    "jyilg",
    "jyilm",
    "jyilb",
    "jyils",
    "jyilt",
    "jyilp",
    "jyilh",
    "jyim",
    "jyib",
    "jyibs",
    "jyis",
    "jyiss",
    "jying",
    "jyij",
    "jyic",
    "jyik",
    "jyit",
    "jyip",
    "jyih",
    "ji",
    "jig",
    "jigg",
    "jigs",
    "jin",
    "jinj",
    "jinh",
    "jid",
    "jil",
    "jilg",
    "jilm",
    "jilb",
    "jils",
    "jilt",
    "jilp",
    "jilh",
    "jim",
    "jib",
    "jibs",
    "jis",
    "jiss",
    "jing",
    "jij",
    "jic",
    "jik",
    "jit",
    "jip",
    "jih",
    "jja",
    "jjag",
    "jjagg",
    "jjags",
    "jjan",
    "jjanj",
    "jjanh",
    "jjad",
    "jjal",
    "jjalg",
    "jjalm",
    "jjalb",
    "jjals",
    "jjalt",
    "jjalp",
    "jjalh",
    "jjam",
    "jjab",
    "jjabs",
    "jjas",
    "jjass",
    "jjang",
    "jjaj",
    "jjac",
    "jjak",
    "jjat",
    "jjap",
    "jjah",
    "jjae",
    "jjaeg",
    "jjaegg",
    "jjaegs",
    "jjaen",
    "jjaenj",
    "jjaenh",
    "jjaed"
  ];
  return xc9;
}
var xca;
var hasRequiredXca;
function requireXca() {
  if (hasRequiredXca) return xca;
  hasRequiredXca = 1;
  xca = [
    "jjael",
    "jjaelg",
    "jjaelm",
    "jjaelb",
    "jjaels",
    "jjaelt",
    "jjaelp",
    "jjaelh",
    "jjaem",
    "jjaeb",
    "jjaebs",
    "jjaes",
    "jjaess",
    "jjaeng",
    "jjaej",
    "jjaec",
    "jjaek",
    "jjaet",
    "jjaep",
    "jjaeh",
    "jjya",
    "jjyag",
    "jjyagg",
    "jjyags",
    "jjyan",
    "jjyanj",
    "jjyanh",
    "jjyad",
    "jjyal",
    "jjyalg",
    "jjyalm",
    "jjyalb",
    "jjyals",
    "jjyalt",
    "jjyalp",
    "jjyalh",
    "jjyam",
    "jjyab",
    "jjyabs",
    "jjyas",
    "jjyass",
    "jjyang",
    "jjyaj",
    "jjyac",
    "jjyak",
    "jjyat",
    "jjyap",
    "jjyah",
    "jjyae",
    "jjyaeg",
    "jjyaegg",
    "jjyaegs",
    "jjyaen",
    "jjyaenj",
    "jjyaenh",
    "jjyaed",
    "jjyael",
    "jjyaelg",
    "jjyaelm",
    "jjyaelb",
    "jjyaels",
    "jjyaelt",
    "jjyaelp",
    "jjyaelh",
    "jjyaem",
    "jjyaeb",
    "jjyaebs",
    "jjyaes",
    "jjyaess",
    "jjyaeng",
    "jjyaej",
    "jjyaec",
    "jjyaek",
    "jjyaet",
    "jjyaep",
    "jjyaeh",
    "jjeo",
    "jjeog",
    "jjeogg",
    "jjeogs",
    "jjeon",
    "jjeonj",
    "jjeonh",
    "jjeod",
    "jjeol",
    "jjeolg",
    "jjeolm",
    "jjeolb",
    "jjeols",
    "jjeolt",
    "jjeolp",
    "jjeolh",
    "jjeom",
    "jjeob",
    "jjeobs",
    "jjeos",
    "jjeoss",
    "jjeong",
    "jjeoj",
    "jjeoc",
    "jjeok",
    "jjeot",
    "jjeop",
    "jjeoh",
    "jje",
    "jjeg",
    "jjegg",
    "jjegs",
    "jjen",
    "jjenj",
    "jjenh",
    "jjed",
    "jjel",
    "jjelg",
    "jjelm",
    "jjelb",
    "jjels",
    "jjelt",
    "jjelp",
    "jjelh",
    "jjem",
    "jjeb",
    "jjebs",
    "jjes",
    "jjess",
    "jjeng",
    "jjej",
    "jjec",
    "jjek",
    "jjet",
    "jjep",
    "jjeh",
    "jjyeo",
    "jjyeog",
    "jjyeogg",
    "jjyeogs",
    "jjyeon",
    "jjyeonj",
    "jjyeonh",
    "jjyeod",
    "jjyeol",
    "jjyeolg",
    "jjyeolm",
    "jjyeolb",
    "jjyeols",
    "jjyeolt",
    "jjyeolp",
    "jjyeolh",
    "jjyeom",
    "jjyeob",
    "jjyeobs",
    "jjyeos",
    "jjyeoss",
    "jjyeong",
    "jjyeoj",
    "jjyeoc",
    "jjyeok",
    "jjyeot",
    "jjyeop",
    "jjyeoh",
    "jjye",
    "jjyeg",
    "jjyegg",
    "jjyegs",
    "jjyen",
    "jjyenj",
    "jjyenh",
    "jjyed",
    "jjyel",
    "jjyelg",
    "jjyelm",
    "jjyelb",
    "jjyels",
    "jjyelt",
    "jjyelp",
    "jjyelh",
    "jjyem",
    "jjyeb",
    "jjyebs",
    "jjyes",
    "jjyess",
    "jjyeng",
    "jjyej",
    "jjyec",
    "jjyek",
    "jjyet",
    "jjyep",
    "jjyeh",
    "jjo",
    "jjog",
    "jjogg",
    "jjogs",
    "jjon",
    "jjonj",
    "jjonh",
    "jjod",
    "jjol",
    "jjolg",
    "jjolm",
    "jjolb",
    "jjols",
    "jjolt",
    "jjolp",
    "jjolh",
    "jjom",
    "jjob",
    "jjobs",
    "jjos",
    "jjoss",
    "jjong",
    "jjoj",
    "jjoc",
    "jjok",
    "jjot",
    "jjop",
    "jjoh",
    "jjwa",
    "jjwag",
    "jjwagg",
    "jjwags",
    "jjwan",
    "jjwanj",
    "jjwanh",
    "jjwad",
    "jjwal",
    "jjwalg",
    "jjwalm",
    "jjwalb",
    "jjwals",
    "jjwalt",
    "jjwalp",
    "jjwalh",
    "jjwam",
    "jjwab",
    "jjwabs",
    "jjwas",
    "jjwass",
    "jjwang",
    "jjwaj",
    "jjwac",
    "jjwak",
    "jjwat",
    "jjwap",
    "jjwah",
    "jjwae",
    "jjwaeg",
    "jjwaegg",
    "jjwaegs",
    "jjwaen",
    "jjwaenj",
    "jjwaenh",
    "jjwaed",
    "jjwael",
    "jjwaelg",
    "jjwaelm",
    "jjwaelb"
  ];
  return xca;
}
var xcb;
var hasRequiredXcb;
function requireXcb() {
  if (hasRequiredXcb) return xcb;
  hasRequiredXcb = 1;
  xcb = [
    "jjwaels",
    "jjwaelt",
    "jjwaelp",
    "jjwaelh",
    "jjwaem",
    "jjwaeb",
    "jjwaebs",
    "jjwaes",
    "jjwaess",
    "jjwaeng",
    "jjwaej",
    "jjwaec",
    "jjwaek",
    "jjwaet",
    "jjwaep",
    "jjwaeh",
    "jjoe",
    "jjoeg",
    "jjoegg",
    "jjoegs",
    "jjoen",
    "jjoenj",
    "jjoenh",
    "jjoed",
    "jjoel",
    "jjoelg",
    "jjoelm",
    "jjoelb",
    "jjoels",
    "jjoelt",
    "jjoelp",
    "jjoelh",
    "jjoem",
    "jjoeb",
    "jjoebs",
    "jjoes",
    "jjoess",
    "jjoeng",
    "jjoej",
    "jjoec",
    "jjoek",
    "jjoet",
    "jjoep",
    "jjoeh",
    "jjyo",
    "jjyog",
    "jjyogg",
    "jjyogs",
    "jjyon",
    "jjyonj",
    "jjyonh",
    "jjyod",
    "jjyol",
    "jjyolg",
    "jjyolm",
    "jjyolb",
    "jjyols",
    "jjyolt",
    "jjyolp",
    "jjyolh",
    "jjyom",
    "jjyob",
    "jjyobs",
    "jjyos",
    "jjyoss",
    "jjyong",
    "jjyoj",
    "jjyoc",
    "jjyok",
    "jjyot",
    "jjyop",
    "jjyoh",
    "jju",
    "jjug",
    "jjugg",
    "jjugs",
    "jjun",
    "jjunj",
    "jjunh",
    "jjud",
    "jjul",
    "jjulg",
    "jjulm",
    "jjulb",
    "jjuls",
    "jjult",
    "jjulp",
    "jjulh",
    "jjum",
    "jjub",
    "jjubs",
    "jjus",
    "jjuss",
    "jjung",
    "jjuj",
    "jjuc",
    "jjuk",
    "jjut",
    "jjup",
    "jjuh",
    "jjweo",
    "jjweog",
    "jjweogg",
    "jjweogs",
    "jjweon",
    "jjweonj",
    "jjweonh",
    "jjweod",
    "jjweol",
    "jjweolg",
    "jjweolm",
    "jjweolb",
    "jjweols",
    "jjweolt",
    "jjweolp",
    "jjweolh",
    "jjweom",
    "jjweob",
    "jjweobs",
    "jjweos",
    "jjweoss",
    "jjweong",
    "jjweoj",
    "jjweoc",
    "jjweok",
    "jjweot",
    "jjweop",
    "jjweoh",
    "jjwe",
    "jjweg",
    "jjwegg",
    "jjwegs",
    "jjwen",
    "jjwenj",
    "jjwenh",
    "jjwed",
    "jjwel",
    "jjwelg",
    "jjwelm",
    "jjwelb",
    "jjwels",
    "jjwelt",
    "jjwelp",
    "jjwelh",
    "jjwem",
    "jjweb",
    "jjwebs",
    "jjwes",
    "jjwess",
    "jjweng",
    "jjwej",
    "jjwec",
    "jjwek",
    "jjwet",
    "jjwep",
    "jjweh",
    "jjwi",
    "jjwig",
    "jjwigg",
    "jjwigs",
    "jjwin",
    "jjwinj",
    "jjwinh",
    "jjwid",
    "jjwil",
    "jjwilg",
    "jjwilm",
    "jjwilb",
    "jjwils",
    "jjwilt",
    "jjwilp",
    "jjwilh",
    "jjwim",
    "jjwib",
    "jjwibs",
    "jjwis",
    "jjwiss",
    "jjwing",
    "jjwij",
    "jjwic",
    "jjwik",
    "jjwit",
    "jjwip",
    "jjwih",
    "jjyu",
    "jjyug",
    "jjyugg",
    "jjyugs",
    "jjyun",
    "jjyunj",
    "jjyunh",
    "jjyud",
    "jjyul",
    "jjyulg",
    "jjyulm",
    "jjyulb",
    "jjyuls",
    "jjyult",
    "jjyulp",
    "jjyulh",
    "jjyum",
    "jjyub",
    "jjyubs",
    "jjyus",
    "jjyuss",
    "jjyung",
    "jjyuj",
    "jjyuc",
    "jjyuk",
    "jjyut",
    "jjyup",
    "jjyuh",
    "jjeu",
    "jjeug",
    "jjeugg",
    "jjeugs",
    "jjeun",
    "jjeunj",
    "jjeunh",
    "jjeud",
    "jjeul",
    "jjeulg",
    "jjeulm",
    "jjeulb",
    "jjeuls",
    "jjeult",
    "jjeulp",
    "jjeulh",
    "jjeum",
    "jjeub",
    "jjeubs",
    "jjeus",
    "jjeuss",
    "jjeung",
    "jjeuj",
    "jjeuc",
    "jjeuk",
    "jjeut",
    "jjeup",
    "jjeuh",
    "jjyi",
    "jjyig",
    "jjyigg",
    "jjyigs",
    "jjyin",
    "jjyinj",
    "jjyinh",
    "jjyid",
    "jjyil",
    "jjyilg",
    "jjyilm",
    "jjyilb",
    "jjyils",
    "jjyilt",
    "jjyilp",
    "jjyilh"
  ];
  return xcb;
}
var xcc;
var hasRequiredXcc;
function requireXcc() {
  if (hasRequiredXcc) return xcc;
  hasRequiredXcc = 1;
  xcc = [
    "jjyim",
    "jjyib",
    "jjyibs",
    "jjyis",
    "jjyiss",
    "jjying",
    "jjyij",
    "jjyic",
    "jjyik",
    "jjyit",
    "jjyip",
    "jjyih",
    "jji",
    "jjig",
    "jjigg",
    "jjigs",
    "jjin",
    "jjinj",
    "jjinh",
    "jjid",
    "jjil",
    "jjilg",
    "jjilm",
    "jjilb",
    "jjils",
    "jjilt",
    "jjilp",
    "jjilh",
    "jjim",
    "jjib",
    "jjibs",
    "jjis",
    "jjiss",
    "jjing",
    "jjij",
    "jjic",
    "jjik",
    "jjit",
    "jjip",
    "jjih",
    "ca",
    "cag",
    "cagg",
    "cags",
    "can",
    "canj",
    "canh",
    "cad",
    "cal",
    "calg",
    "calm",
    "calb",
    "cals",
    "calt",
    "calp",
    "calh",
    "cam",
    "cab",
    "cabs",
    "cas",
    "cass",
    "cang",
    "caj",
    "cac",
    "cak",
    "cat",
    "cap",
    "cah",
    "cae",
    "caeg",
    "caegg",
    "caegs",
    "caen",
    "caenj",
    "caenh",
    "caed",
    "cael",
    "caelg",
    "caelm",
    "caelb",
    "caels",
    "caelt",
    "caelp",
    "caelh",
    "caem",
    "caeb",
    "caebs",
    "caes",
    "caess",
    "caeng",
    "caej",
    "caec",
    "caek",
    "caet",
    "caep",
    "caeh",
    "cya",
    "cyag",
    "cyagg",
    "cyags",
    "cyan",
    "cyanj",
    "cyanh",
    "cyad",
    "cyal",
    "cyalg",
    "cyalm",
    "cyalb",
    "cyals",
    "cyalt",
    "cyalp",
    "cyalh",
    "cyam",
    "cyab",
    "cyabs",
    "cyas",
    "cyass",
    "cyang",
    "cyaj",
    "cyac",
    "cyak",
    "cyat",
    "cyap",
    "cyah",
    "cyae",
    "cyaeg",
    "cyaegg",
    "cyaegs",
    "cyaen",
    "cyaenj",
    "cyaenh",
    "cyaed",
    "cyael",
    "cyaelg",
    "cyaelm",
    "cyaelb",
    "cyaels",
    "cyaelt",
    "cyaelp",
    "cyaelh",
    "cyaem",
    "cyaeb",
    "cyaebs",
    "cyaes",
    "cyaess",
    "cyaeng",
    "cyaej",
    "cyaec",
    "cyaek",
    "cyaet",
    "cyaep",
    "cyaeh",
    "ceo",
    "ceog",
    "ceogg",
    "ceogs",
    "ceon",
    "ceonj",
    "ceonh",
    "ceod",
    "ceol",
    "ceolg",
    "ceolm",
    "ceolb",
    "ceols",
    "ceolt",
    "ceolp",
    "ceolh",
    "ceom",
    "ceob",
    "ceobs",
    "ceos",
    "ceoss",
    "ceong",
    "ceoj",
    "ceoc",
    "ceok",
    "ceot",
    "ceop",
    "ceoh",
    "ce",
    "ceg",
    "cegg",
    "cegs",
    "cen",
    "cenj",
    "cenh",
    "ced",
    "cel",
    "celg",
    "celm",
    "celb",
    "cels",
    "celt",
    "celp",
    "celh",
    "cem",
    "ceb",
    "cebs",
    "ces",
    "cess",
    "ceng",
    "cej",
    "cec",
    "cek",
    "cet",
    "cep",
    "ceh",
    "cyeo",
    "cyeog",
    "cyeogg",
    "cyeogs",
    "cyeon",
    "cyeonj",
    "cyeonh",
    "cyeod",
    "cyeol",
    "cyeolg",
    "cyeolm",
    "cyeolb",
    "cyeols",
    "cyeolt",
    "cyeolp",
    "cyeolh",
    "cyeom",
    "cyeob",
    "cyeobs",
    "cyeos",
    "cyeoss",
    "cyeong",
    "cyeoj",
    "cyeoc",
    "cyeok",
    "cyeot",
    "cyeop",
    "cyeoh",
    "cye",
    "cyeg",
    "cyegg",
    "cyegs",
    "cyen",
    "cyenj",
    "cyenh",
    "cyed",
    "cyel",
    "cyelg",
    "cyelm",
    "cyelb",
    "cyels",
    "cyelt",
    "cyelp",
    "cyelh",
    "cyem",
    "cyeb",
    "cyebs",
    "cyes"
  ];
  return xcc;
}
var xcd;
var hasRequiredXcd;
function requireXcd() {
  if (hasRequiredXcd) return xcd;
  hasRequiredXcd = 1;
  xcd = [
    "cyess",
    "cyeng",
    "cyej",
    "cyec",
    "cyek",
    "cyet",
    "cyep",
    "cyeh",
    "co",
    "cog",
    "cogg",
    "cogs",
    "con",
    "conj",
    "conh",
    "cod",
    "col",
    "colg",
    "colm",
    "colb",
    "cols",
    "colt",
    "colp",
    "colh",
    "com",
    "cob",
    "cobs",
    "cos",
    "coss",
    "cong",
    "coj",
    "coc",
    "cok",
    "cot",
    "cop",
    "coh",
    "cwa",
    "cwag",
    "cwagg",
    "cwags",
    "cwan",
    "cwanj",
    "cwanh",
    "cwad",
    "cwal",
    "cwalg",
    "cwalm",
    "cwalb",
    "cwals",
    "cwalt",
    "cwalp",
    "cwalh",
    "cwam",
    "cwab",
    "cwabs",
    "cwas",
    "cwass",
    "cwang",
    "cwaj",
    "cwac",
    "cwak",
    "cwat",
    "cwap",
    "cwah",
    "cwae",
    "cwaeg",
    "cwaegg",
    "cwaegs",
    "cwaen",
    "cwaenj",
    "cwaenh",
    "cwaed",
    "cwael",
    "cwaelg",
    "cwaelm",
    "cwaelb",
    "cwaels",
    "cwaelt",
    "cwaelp",
    "cwaelh",
    "cwaem",
    "cwaeb",
    "cwaebs",
    "cwaes",
    "cwaess",
    "cwaeng",
    "cwaej",
    "cwaec",
    "cwaek",
    "cwaet",
    "cwaep",
    "cwaeh",
    "coe",
    "coeg",
    "coegg",
    "coegs",
    "coen",
    "coenj",
    "coenh",
    "coed",
    "coel",
    "coelg",
    "coelm",
    "coelb",
    "coels",
    "coelt",
    "coelp",
    "coelh",
    "coem",
    "coeb",
    "coebs",
    "coes",
    "coess",
    "coeng",
    "coej",
    "coec",
    "coek",
    "coet",
    "coep",
    "coeh",
    "cyo",
    "cyog",
    "cyogg",
    "cyogs",
    "cyon",
    "cyonj",
    "cyonh",
    "cyod",
    "cyol",
    "cyolg",
    "cyolm",
    "cyolb",
    "cyols",
    "cyolt",
    "cyolp",
    "cyolh",
    "cyom",
    "cyob",
    "cyobs",
    "cyos",
    "cyoss",
    "cyong",
    "cyoj",
    "cyoc",
    "cyok",
    "cyot",
    "cyop",
    "cyoh",
    "cu",
    "cug",
    "cugg",
    "cugs",
    "cun",
    "cunj",
    "cunh",
    "cud",
    "cul",
    "culg",
    "culm",
    "culb",
    "culs",
    "cult",
    "culp",
    "culh",
    "cum",
    "cub",
    "cubs",
    "cus",
    "cuss",
    "cung",
    "cuj",
    "cuc",
    "cuk",
    "cut",
    "cup",
    "cuh",
    "cweo",
    "cweog",
    "cweogg",
    "cweogs",
    "cweon",
    "cweonj",
    "cweonh",
    "cweod",
    "cweol",
    "cweolg",
    "cweolm",
    "cweolb",
    "cweols",
    "cweolt",
    "cweolp",
    "cweolh",
    "cweom",
    "cweob",
    "cweobs",
    "cweos",
    "cweoss",
    "cweong",
    "cweoj",
    "cweoc",
    "cweok",
    "cweot",
    "cweop",
    "cweoh",
    "cwe",
    "cweg",
    "cwegg",
    "cwegs",
    "cwen",
    "cwenj",
    "cwenh",
    "cwed",
    "cwel",
    "cwelg",
    "cwelm",
    "cwelb",
    "cwels",
    "cwelt",
    "cwelp",
    "cwelh",
    "cwem",
    "cweb",
    "cwebs",
    "cwes",
    "cwess",
    "cweng",
    "cwej",
    "cwec",
    "cwek",
    "cwet",
    "cwep",
    "cweh",
    "cwi",
    "cwig",
    "cwigg",
    "cwigs",
    "cwin",
    "cwinj",
    "cwinh",
    "cwid",
    "cwil",
    "cwilg",
    "cwilm",
    "cwilb",
    "cwils",
    "cwilt",
    "cwilp",
    "cwilh",
    "cwim",
    "cwib",
    "cwibs",
    "cwis",
    "cwiss",
    "cwing",
    "cwij",
    "cwic"
  ];
  return xcd;
}
var xce;
var hasRequiredXce;
function requireXce() {
  if (hasRequiredXce) return xce;
  hasRequiredXce = 1;
  xce = [
    "cwik",
    "cwit",
    "cwip",
    "cwih",
    "cyu",
    "cyug",
    "cyugg",
    "cyugs",
    "cyun",
    "cyunj",
    "cyunh",
    "cyud",
    "cyul",
    "cyulg",
    "cyulm",
    "cyulb",
    "cyuls",
    "cyult",
    "cyulp",
    "cyulh",
    "cyum",
    "cyub",
    "cyubs",
    "cyus",
    "cyuss",
    "cyung",
    "cyuj",
    "cyuc",
    "cyuk",
    "cyut",
    "cyup",
    "cyuh",
    "ceu",
    "ceug",
    "ceugg",
    "ceugs",
    "ceun",
    "ceunj",
    "ceunh",
    "ceud",
    "ceul",
    "ceulg",
    "ceulm",
    "ceulb",
    "ceuls",
    "ceult",
    "ceulp",
    "ceulh",
    "ceum",
    "ceub",
    "ceubs",
    "ceus",
    "ceuss",
    "ceung",
    "ceuj",
    "ceuc",
    "ceuk",
    "ceut",
    "ceup",
    "ceuh",
    "cyi",
    "cyig",
    "cyigg",
    "cyigs",
    "cyin",
    "cyinj",
    "cyinh",
    "cyid",
    "cyil",
    "cyilg",
    "cyilm",
    "cyilb",
    "cyils",
    "cyilt",
    "cyilp",
    "cyilh",
    "cyim",
    "cyib",
    "cyibs",
    "cyis",
    "cyiss",
    "cying",
    "cyij",
    "cyic",
    "cyik",
    "cyit",
    "cyip",
    "cyih",
    "ci",
    "cig",
    "cigg",
    "cigs",
    "cin",
    "cinj",
    "cinh",
    "cid",
    "cil",
    "cilg",
    "cilm",
    "cilb",
    "cils",
    "cilt",
    "cilp",
    "cilh",
    "cim",
    "cib",
    "cibs",
    "cis",
    "ciss",
    "cing",
    "cij",
    "cic",
    "cik",
    "cit",
    "cip",
    "cih",
    "ka",
    "kag",
    "kagg",
    "kags",
    "kan",
    "kanj",
    "kanh",
    "kad",
    "kal",
    "kalg",
    "kalm",
    "kalb",
    "kals",
    "kalt",
    "kalp",
    "kalh",
    "kam",
    "kab",
    "kabs",
    "kas",
    "kass",
    "kang",
    "kaj",
    "kac",
    "kak",
    "kat",
    "kap",
    "kah",
    "kae",
    "kaeg",
    "kaegg",
    "kaegs",
    "kaen",
    "kaenj",
    "kaenh",
    "kaed",
    "kael",
    "kaelg",
    "kaelm",
    "kaelb",
    "kaels",
    "kaelt",
    "kaelp",
    "kaelh",
    "kaem",
    "kaeb",
    "kaebs",
    "kaes",
    "kaess",
    "kaeng",
    "kaej",
    "kaec",
    "kaek",
    "kaet",
    "kaep",
    "kaeh",
    "kya",
    "kyag",
    "kyagg",
    "kyags",
    "kyan",
    "kyanj",
    "kyanh",
    "kyad",
    "kyal",
    "kyalg",
    "kyalm",
    "kyalb",
    "kyals",
    "kyalt",
    "kyalp",
    "kyalh",
    "kyam",
    "kyab",
    "kyabs",
    "kyas",
    "kyass",
    "kyang",
    "kyaj",
    "kyac",
    "kyak",
    "kyat",
    "kyap",
    "kyah",
    "kyae",
    "kyaeg",
    "kyaegg",
    "kyaegs",
    "kyaen",
    "kyaenj",
    "kyaenh",
    "kyaed",
    "kyael",
    "kyaelg",
    "kyaelm",
    "kyaelb",
    "kyaels",
    "kyaelt",
    "kyaelp",
    "kyaelh",
    "kyaem",
    "kyaeb",
    "kyaebs",
    "kyaes",
    "kyaess",
    "kyaeng",
    "kyaej",
    "kyaec",
    "kyaek",
    "kyaet",
    "kyaep",
    "kyaeh",
    "keo",
    "keog",
    "keogg",
    "keogs",
    "keon",
    "keonj",
    "keonh",
    "keod",
    "keol",
    "keolg",
    "keolm",
    "keolb",
    "keols",
    "keolt",
    "keolp",
    "keolh",
    "keom",
    "keob",
    "keobs",
    "keos",
    "keoss",
    "keong",
    "keoj",
    "keoc",
    "keok",
    "keot",
    "keop",
    "keoh"
  ];
  return xce;
}
var xcf;
var hasRequiredXcf;
function requireXcf() {
  if (hasRequiredXcf) return xcf;
  hasRequiredXcf = 1;
  xcf = [
    "ke",
    "keg",
    "kegg",
    "kegs",
    "ken",
    "kenj",
    "kenh",
    "ked",
    "kel",
    "kelg",
    "kelm",
    "kelb",
    "kels",
    "kelt",
    "kelp",
    "kelh",
    "kem",
    "keb",
    "kebs",
    "kes",
    "kess",
    "keng",
    "kej",
    "kec",
    "kek",
    "ket",
    "kep",
    "keh",
    "kyeo",
    "kyeog",
    "kyeogg",
    "kyeogs",
    "kyeon",
    "kyeonj",
    "kyeonh",
    "kyeod",
    "kyeol",
    "kyeolg",
    "kyeolm",
    "kyeolb",
    "kyeols",
    "kyeolt",
    "kyeolp",
    "kyeolh",
    "kyeom",
    "kyeob",
    "kyeobs",
    "kyeos",
    "kyeoss",
    "kyeong",
    "kyeoj",
    "kyeoc",
    "kyeok",
    "kyeot",
    "kyeop",
    "kyeoh",
    "kye",
    "kyeg",
    "kyegg",
    "kyegs",
    "kyen",
    "kyenj",
    "kyenh",
    "kyed",
    "kyel",
    "kyelg",
    "kyelm",
    "kyelb",
    "kyels",
    "kyelt",
    "kyelp",
    "kyelh",
    "kyem",
    "kyeb",
    "kyebs",
    "kyes",
    "kyess",
    "kyeng",
    "kyej",
    "kyec",
    "kyek",
    "kyet",
    "kyep",
    "kyeh",
    "ko",
    "kog",
    "kogg",
    "kogs",
    "kon",
    "konj",
    "konh",
    "kod",
    "kol",
    "kolg",
    "kolm",
    "kolb",
    "kols",
    "kolt",
    "kolp",
    "kolh",
    "kom",
    "kob",
    "kobs",
    "kos",
    "koss",
    "kong",
    "koj",
    "koc",
    "kok",
    "kot",
    "kop",
    "koh",
    "kwa",
    "kwag",
    "kwagg",
    "kwags",
    "kwan",
    "kwanj",
    "kwanh",
    "kwad",
    "kwal",
    "kwalg",
    "kwalm",
    "kwalb",
    "kwals",
    "kwalt",
    "kwalp",
    "kwalh",
    "kwam",
    "kwab",
    "kwabs",
    "kwas",
    "kwass",
    "kwang",
    "kwaj",
    "kwac",
    "kwak",
    "kwat",
    "kwap",
    "kwah",
    "kwae",
    "kwaeg",
    "kwaegg",
    "kwaegs",
    "kwaen",
    "kwaenj",
    "kwaenh",
    "kwaed",
    "kwael",
    "kwaelg",
    "kwaelm",
    "kwaelb",
    "kwaels",
    "kwaelt",
    "kwaelp",
    "kwaelh",
    "kwaem",
    "kwaeb",
    "kwaebs",
    "kwaes",
    "kwaess",
    "kwaeng",
    "kwaej",
    "kwaec",
    "kwaek",
    "kwaet",
    "kwaep",
    "kwaeh",
    "koe",
    "koeg",
    "koegg",
    "koegs",
    "koen",
    "koenj",
    "koenh",
    "koed",
    "koel",
    "koelg",
    "koelm",
    "koelb",
    "koels",
    "koelt",
    "koelp",
    "koelh",
    "koem",
    "koeb",
    "koebs",
    "koes",
    "koess",
    "koeng",
    "koej",
    "koec",
    "koek",
    "koet",
    "koep",
    "koeh",
    "kyo",
    "kyog",
    "kyogg",
    "kyogs",
    "kyon",
    "kyonj",
    "kyonh",
    "kyod",
    "kyol",
    "kyolg",
    "kyolm",
    "kyolb",
    "kyols",
    "kyolt",
    "kyolp",
    "kyolh",
    "kyom",
    "kyob",
    "kyobs",
    "kyos",
    "kyoss",
    "kyong",
    "kyoj",
    "kyoc",
    "kyok",
    "kyot",
    "kyop",
    "kyoh",
    "ku",
    "kug",
    "kugg",
    "kugs",
    "kun",
    "kunj",
    "kunh",
    "kud",
    "kul",
    "kulg",
    "kulm",
    "kulb",
    "kuls",
    "kult",
    "kulp",
    "kulh",
    "kum",
    "kub",
    "kubs",
    "kus",
    "kuss",
    "kung",
    "kuj",
    "kuc",
    "kuk",
    "kut",
    "kup",
    "kuh",
    "kweo",
    "kweog",
    "kweogg",
    "kweogs"
  ];
  return xcf;
}
var xd0;
var hasRequiredXd0;
function requireXd0() {
  if (hasRequiredXd0) return xd0;
  hasRequiredXd0 = 1;
  xd0 = [
    "kweon",
    "kweonj",
    "kweonh",
    "kweod",
    "kweol",
    "kweolg",
    "kweolm",
    "kweolb",
    "kweols",
    "kweolt",
    "kweolp",
    "kweolh",
    "kweom",
    "kweob",
    "kweobs",
    "kweos",
    "kweoss",
    "kweong",
    "kweoj",
    "kweoc",
    "kweok",
    "kweot",
    "kweop",
    "kweoh",
    "kwe",
    "kweg",
    "kwegg",
    "kwegs",
    "kwen",
    "kwenj",
    "kwenh",
    "kwed",
    "kwel",
    "kwelg",
    "kwelm",
    "kwelb",
    "kwels",
    "kwelt",
    "kwelp",
    "kwelh",
    "kwem",
    "kweb",
    "kwebs",
    "kwes",
    "kwess",
    "kweng",
    "kwej",
    "kwec",
    "kwek",
    "kwet",
    "kwep",
    "kweh",
    "kwi",
    "kwig",
    "kwigg",
    "kwigs",
    "kwin",
    "kwinj",
    "kwinh",
    "kwid",
    "kwil",
    "kwilg",
    "kwilm",
    "kwilb",
    "kwils",
    "kwilt",
    "kwilp",
    "kwilh",
    "kwim",
    "kwib",
    "kwibs",
    "kwis",
    "kwiss",
    "kwing",
    "kwij",
    "kwic",
    "kwik",
    "kwit",
    "kwip",
    "kwih",
    "kyu",
    "kyug",
    "kyugg",
    "kyugs",
    "kyun",
    "kyunj",
    "kyunh",
    "kyud",
    "kyul",
    "kyulg",
    "kyulm",
    "kyulb",
    "kyuls",
    "kyult",
    "kyulp",
    "kyulh",
    "kyum",
    "kyub",
    "kyubs",
    "kyus",
    "kyuss",
    "kyung",
    "kyuj",
    "kyuc",
    "kyuk",
    "kyut",
    "kyup",
    "kyuh",
    "keu",
    "keug",
    "keugg",
    "keugs",
    "keun",
    "keunj",
    "keunh",
    "keud",
    "keul",
    "keulg",
    "keulm",
    "keulb",
    "keuls",
    "keult",
    "keulp",
    "keulh",
    "keum",
    "keub",
    "keubs",
    "keus",
    "keuss",
    "keung",
    "keuj",
    "keuc",
    "keuk",
    "keut",
    "keup",
    "keuh",
    "kyi",
    "kyig",
    "kyigg",
    "kyigs",
    "kyin",
    "kyinj",
    "kyinh",
    "kyid",
    "kyil",
    "kyilg",
    "kyilm",
    "kyilb",
    "kyils",
    "kyilt",
    "kyilp",
    "kyilh",
    "kyim",
    "kyib",
    "kyibs",
    "kyis",
    "kyiss",
    "kying",
    "kyij",
    "kyic",
    "kyik",
    "kyit",
    "kyip",
    "kyih",
    "ki",
    "kig",
    "kigg",
    "kigs",
    "kin",
    "kinj",
    "kinh",
    "kid",
    "kil",
    "kilg",
    "kilm",
    "kilb",
    "kils",
    "kilt",
    "kilp",
    "kilh",
    "kim",
    "kib",
    "kibs",
    "kis",
    "kiss",
    "king",
    "kij",
    "kic",
    "kik",
    "kit",
    "kip",
    "kih",
    "ta",
    "tag",
    "tagg",
    "tags",
    "tan",
    "tanj",
    "tanh",
    "tad",
    "tal",
    "talg",
    "talm",
    "talb",
    "tals",
    "talt",
    "talp",
    "talh",
    "tam",
    "tab",
    "tabs",
    "tas",
    "tass",
    "tang",
    "taj",
    "tac",
    "tak",
    "tat",
    "tap",
    "tah",
    "tae",
    "taeg",
    "taegg",
    "taegs",
    "taen",
    "taenj",
    "taenh",
    "taed",
    "tael",
    "taelg",
    "taelm",
    "taelb",
    "taels",
    "taelt",
    "taelp",
    "taelh",
    "taem",
    "taeb",
    "taebs",
    "taes",
    "taess",
    "taeng",
    "taej",
    "taec",
    "taek",
    "taet",
    "taep",
    "taeh",
    "tya",
    "tyag",
    "tyagg",
    "tyags",
    "tyan",
    "tyanj",
    "tyanh",
    "tyad"
  ];
  return xd0;
}
var xd1;
var hasRequiredXd1;
function requireXd1() {
  if (hasRequiredXd1) return xd1;
  hasRequiredXd1 = 1;
  xd1 = [
    "tyal",
    "tyalg",
    "tyalm",
    "tyalb",
    "tyals",
    "tyalt",
    "tyalp",
    "tyalh",
    "tyam",
    "tyab",
    "tyabs",
    "tyas",
    "tyass",
    "tyang",
    "tyaj",
    "tyac",
    "tyak",
    "tyat",
    "tyap",
    "tyah",
    "tyae",
    "tyaeg",
    "tyaegg",
    "tyaegs",
    "tyaen",
    "tyaenj",
    "tyaenh",
    "tyaed",
    "tyael",
    "tyaelg",
    "tyaelm",
    "tyaelb",
    "tyaels",
    "tyaelt",
    "tyaelp",
    "tyaelh",
    "tyaem",
    "tyaeb",
    "tyaebs",
    "tyaes",
    "tyaess",
    "tyaeng",
    "tyaej",
    "tyaec",
    "tyaek",
    "tyaet",
    "tyaep",
    "tyaeh",
    "teo",
    "teog",
    "teogg",
    "teogs",
    "teon",
    "teonj",
    "teonh",
    "teod",
    "teol",
    "teolg",
    "teolm",
    "teolb",
    "teols",
    "teolt",
    "teolp",
    "teolh",
    "teom",
    "teob",
    "teobs",
    "teos",
    "teoss",
    "teong",
    "teoj",
    "teoc",
    "teok",
    "teot",
    "teop",
    "teoh",
    "te",
    "teg",
    "tegg",
    "tegs",
    "ten",
    "tenj",
    "tenh",
    "ted",
    "tel",
    "telg",
    "telm",
    "telb",
    "tels",
    "telt",
    "telp",
    "telh",
    "tem",
    "teb",
    "tebs",
    "tes",
    "tess",
    "teng",
    "tej",
    "tec",
    "tek",
    "tet",
    "tep",
    "teh",
    "tyeo",
    "tyeog",
    "tyeogg",
    "tyeogs",
    "tyeon",
    "tyeonj",
    "tyeonh",
    "tyeod",
    "tyeol",
    "tyeolg",
    "tyeolm",
    "tyeolb",
    "tyeols",
    "tyeolt",
    "tyeolp",
    "tyeolh",
    "tyeom",
    "tyeob",
    "tyeobs",
    "tyeos",
    "tyeoss",
    "tyeong",
    "tyeoj",
    "tyeoc",
    "tyeok",
    "tyeot",
    "tyeop",
    "tyeoh",
    "tye",
    "tyeg",
    "tyegg",
    "tyegs",
    "tyen",
    "tyenj",
    "tyenh",
    "tyed",
    "tyel",
    "tyelg",
    "tyelm",
    "tyelb",
    "tyels",
    "tyelt",
    "tyelp",
    "tyelh",
    "tyem",
    "tyeb",
    "tyebs",
    "tyes",
    "tyess",
    "tyeng",
    "tyej",
    "tyec",
    "tyek",
    "tyet",
    "tyep",
    "tyeh",
    "to",
    "tog",
    "togg",
    "togs",
    "ton",
    "tonj",
    "tonh",
    "tod",
    "tol",
    "tolg",
    "tolm",
    "tolb",
    "tols",
    "tolt",
    "tolp",
    "tolh",
    "tom",
    "tob",
    "tobs",
    "tos",
    "toss",
    "tong",
    "toj",
    "toc",
    "tok",
    "tot",
    "top",
    "toh",
    "twa",
    "twag",
    "twagg",
    "twags",
    "twan",
    "twanj",
    "twanh",
    "twad",
    "twal",
    "twalg",
    "twalm",
    "twalb",
    "twals",
    "twalt",
    "twalp",
    "twalh",
    "twam",
    "twab",
    "twabs",
    "twas",
    "twass",
    "twang",
    "twaj",
    "twac",
    "twak",
    "twat",
    "twap",
    "twah",
    "twae",
    "twaeg",
    "twaegg",
    "twaegs",
    "twaen",
    "twaenj",
    "twaenh",
    "twaed",
    "twael",
    "twaelg",
    "twaelm",
    "twaelb",
    "twaels",
    "twaelt",
    "twaelp",
    "twaelh",
    "twaem",
    "twaeb",
    "twaebs",
    "twaes",
    "twaess",
    "twaeng",
    "twaej",
    "twaec",
    "twaek",
    "twaet",
    "twaep",
    "twaeh",
    "toe",
    "toeg",
    "toegg",
    "toegs",
    "toen",
    "toenj",
    "toenh",
    "toed",
    "toel",
    "toelg",
    "toelm",
    "toelb"
  ];
  return xd1;
}
var xd2;
var hasRequiredXd2;
function requireXd2() {
  if (hasRequiredXd2) return xd2;
  hasRequiredXd2 = 1;
  xd2 = [
    "toels",
    "toelt",
    "toelp",
    "toelh",
    "toem",
    "toeb",
    "toebs",
    "toes",
    "toess",
    "toeng",
    "toej",
    "toec",
    "toek",
    "toet",
    "toep",
    "toeh",
    "tyo",
    "tyog",
    "tyogg",
    "tyogs",
    "tyon",
    "tyonj",
    "tyonh",
    "tyod",
    "tyol",
    "tyolg",
    "tyolm",
    "tyolb",
    "tyols",
    "tyolt",
    "tyolp",
    "tyolh",
    "tyom",
    "tyob",
    "tyobs",
    "tyos",
    "tyoss",
    "tyong",
    "tyoj",
    "tyoc",
    "tyok",
    "tyot",
    "tyop",
    "tyoh",
    "tu",
    "tug",
    "tugg",
    "tugs",
    "tun",
    "tunj",
    "tunh",
    "tud",
    "tul",
    "tulg",
    "tulm",
    "tulb",
    "tuls",
    "tult",
    "tulp",
    "tulh",
    "tum",
    "tub",
    "tubs",
    "tus",
    "tuss",
    "tung",
    "tuj",
    "tuc",
    "tuk",
    "tut",
    "tup",
    "tuh",
    "tweo",
    "tweog",
    "tweogg",
    "tweogs",
    "tweon",
    "tweonj",
    "tweonh",
    "tweod",
    "tweol",
    "tweolg",
    "tweolm",
    "tweolb",
    "tweols",
    "tweolt",
    "tweolp",
    "tweolh",
    "tweom",
    "tweob",
    "tweobs",
    "tweos",
    "tweoss",
    "tweong",
    "tweoj",
    "tweoc",
    "tweok",
    "tweot",
    "tweop",
    "tweoh",
    "twe",
    "tweg",
    "twegg",
    "twegs",
    "twen",
    "twenj",
    "twenh",
    "twed",
    "twel",
    "twelg",
    "twelm",
    "twelb",
    "twels",
    "twelt",
    "twelp",
    "twelh",
    "twem",
    "tweb",
    "twebs",
    "twes",
    "twess",
    "tweng",
    "twej",
    "twec",
    "twek",
    "twet",
    "twep",
    "tweh",
    "twi",
    "twig",
    "twigg",
    "twigs",
    "twin",
    "twinj",
    "twinh",
    "twid",
    "twil",
    "twilg",
    "twilm",
    "twilb",
    "twils",
    "twilt",
    "twilp",
    "twilh",
    "twim",
    "twib",
    "twibs",
    "twis",
    "twiss",
    "twing",
    "twij",
    "twic",
    "twik",
    "twit",
    "twip",
    "twih",
    "tyu",
    "tyug",
    "tyugg",
    "tyugs",
    "tyun",
    "tyunj",
    "tyunh",
    "tyud",
    "tyul",
    "tyulg",
    "tyulm",
    "tyulb",
    "tyuls",
    "tyult",
    "tyulp",
    "tyulh",
    "tyum",
    "tyub",
    "tyubs",
    "tyus",
    "tyuss",
    "tyung",
    "tyuj",
    "tyuc",
    "tyuk",
    "tyut",
    "tyup",
    "tyuh",
    "teu",
    "teug",
    "teugg",
    "teugs",
    "teun",
    "teunj",
    "teunh",
    "teud",
    "teul",
    "teulg",
    "teulm",
    "teulb",
    "teuls",
    "teult",
    "teulp",
    "teulh",
    "teum",
    "teub",
    "teubs",
    "teus",
    "teuss",
    "teung",
    "teuj",
    "teuc",
    "teuk",
    "teut",
    "teup",
    "teuh",
    "tyi",
    "tyig",
    "tyigg",
    "tyigs",
    "tyin",
    "tyinj",
    "tyinh",
    "tyid",
    "tyil",
    "tyilg",
    "tyilm",
    "tyilb",
    "tyils",
    "tyilt",
    "tyilp",
    "tyilh",
    "tyim",
    "tyib",
    "tyibs",
    "tyis",
    "tyiss",
    "tying",
    "tyij",
    "tyic",
    "tyik",
    "tyit",
    "tyip",
    "tyih",
    "ti",
    "tig",
    "tigg",
    "tigs",
    "tin",
    "tinj",
    "tinh",
    "tid",
    "til",
    "tilg",
    "tilm",
    "tilb",
    "tils",
    "tilt",
    "tilp",
    "tilh"
  ];
  return xd2;
}
var xd3;
var hasRequiredXd3;
function requireXd3() {
  if (hasRequiredXd3) return xd3;
  hasRequiredXd3 = 1;
  xd3 = [
    "tim",
    "tib",
    "tibs",
    "tis",
    "tiss",
    "ting",
    "tij",
    "tic",
    "tik",
    "tit",
    "tip",
    "tih",
    "pa",
    "pag",
    "pagg",
    "pags",
    "pan",
    "panj",
    "panh",
    "pad",
    "pal",
    "palg",
    "palm",
    "palb",
    "pals",
    "palt",
    "palp",
    "palh",
    "pam",
    "pab",
    "pabs",
    "pas",
    "pass",
    "pang",
    "paj",
    "pac",
    "pak",
    "pat",
    "pap",
    "pah",
    "pae",
    "paeg",
    "paegg",
    "paegs",
    "paen",
    "paenj",
    "paenh",
    "paed",
    "pael",
    "paelg",
    "paelm",
    "paelb",
    "paels",
    "paelt",
    "paelp",
    "paelh",
    "paem",
    "paeb",
    "paebs",
    "paes",
    "paess",
    "paeng",
    "paej",
    "paec",
    "paek",
    "paet",
    "paep",
    "paeh",
    "pya",
    "pyag",
    "pyagg",
    "pyags",
    "pyan",
    "pyanj",
    "pyanh",
    "pyad",
    "pyal",
    "pyalg",
    "pyalm",
    "pyalb",
    "pyals",
    "pyalt",
    "pyalp",
    "pyalh",
    "pyam",
    "pyab",
    "pyabs",
    "pyas",
    "pyass",
    "pyang",
    "pyaj",
    "pyac",
    "pyak",
    "pyat",
    "pyap",
    "pyah",
    "pyae",
    "pyaeg",
    "pyaegg",
    "pyaegs",
    "pyaen",
    "pyaenj",
    "pyaenh",
    "pyaed",
    "pyael",
    "pyaelg",
    "pyaelm",
    "pyaelb",
    "pyaels",
    "pyaelt",
    "pyaelp",
    "pyaelh",
    "pyaem",
    "pyaeb",
    "pyaebs",
    "pyaes",
    "pyaess",
    "pyaeng",
    "pyaej",
    "pyaec",
    "pyaek",
    "pyaet",
    "pyaep",
    "pyaeh",
    "peo",
    "peog",
    "peogg",
    "peogs",
    "peon",
    "peonj",
    "peonh",
    "peod",
    "peol",
    "peolg",
    "peolm",
    "peolb",
    "peols",
    "peolt",
    "peolp",
    "peolh",
    "peom",
    "peob",
    "peobs",
    "peos",
    "peoss",
    "peong",
    "peoj",
    "peoc",
    "peok",
    "peot",
    "peop",
    "peoh",
    "pe",
    "peg",
    "pegg",
    "pegs",
    "pen",
    "penj",
    "penh",
    "ped",
    "pel",
    "pelg",
    "pelm",
    "pelb",
    "pels",
    "pelt",
    "pelp",
    "pelh",
    "pem",
    "peb",
    "pebs",
    "pes",
    "pess",
    "peng",
    "pej",
    "pec",
    "pek",
    "pet",
    "pep",
    "peh",
    "pyeo",
    "pyeog",
    "pyeogg",
    "pyeogs",
    "pyeon",
    "pyeonj",
    "pyeonh",
    "pyeod",
    "pyeol",
    "pyeolg",
    "pyeolm",
    "pyeolb",
    "pyeols",
    "pyeolt",
    "pyeolp",
    "pyeolh",
    "pyeom",
    "pyeob",
    "pyeobs",
    "pyeos",
    "pyeoss",
    "pyeong",
    "pyeoj",
    "pyeoc",
    "pyeok",
    "pyeot",
    "pyeop",
    "pyeoh",
    "pye",
    "pyeg",
    "pyegg",
    "pyegs",
    "pyen",
    "pyenj",
    "pyenh",
    "pyed",
    "pyel",
    "pyelg",
    "pyelm",
    "pyelb",
    "pyels",
    "pyelt",
    "pyelp",
    "pyelh",
    "pyem",
    "pyeb",
    "pyebs",
    "pyes",
    "pyess",
    "pyeng",
    "pyej",
    "pyec",
    "pyek",
    "pyet",
    "pyep",
    "pyeh",
    "po",
    "pog",
    "pogg",
    "pogs",
    "pon",
    "ponj",
    "ponh",
    "pod",
    "pol",
    "polg",
    "polm",
    "polb",
    "pols",
    "polt",
    "polp",
    "polh",
    "pom",
    "pob",
    "pobs",
    "pos"
  ];
  return xd3;
}
var xd4;
var hasRequiredXd4;
function requireXd4() {
  if (hasRequiredXd4) return xd4;
  hasRequiredXd4 = 1;
  xd4 = [
    "poss",
    "pong",
    "poj",
    "poc",
    "pok",
    "pot",
    "pop",
    "poh",
    "pwa",
    "pwag",
    "pwagg",
    "pwags",
    "pwan",
    "pwanj",
    "pwanh",
    "pwad",
    "pwal",
    "pwalg",
    "pwalm",
    "pwalb",
    "pwals",
    "pwalt",
    "pwalp",
    "pwalh",
    "pwam",
    "pwab",
    "pwabs",
    "pwas",
    "pwass",
    "pwang",
    "pwaj",
    "pwac",
    "pwak",
    "pwat",
    "pwap",
    "pwah",
    "pwae",
    "pwaeg",
    "pwaegg",
    "pwaegs",
    "pwaen",
    "pwaenj",
    "pwaenh",
    "pwaed",
    "pwael",
    "pwaelg",
    "pwaelm",
    "pwaelb",
    "pwaels",
    "pwaelt",
    "pwaelp",
    "pwaelh",
    "pwaem",
    "pwaeb",
    "pwaebs",
    "pwaes",
    "pwaess",
    "pwaeng",
    "pwaej",
    "pwaec",
    "pwaek",
    "pwaet",
    "pwaep",
    "pwaeh",
    "poe",
    "poeg",
    "poegg",
    "poegs",
    "poen",
    "poenj",
    "poenh",
    "poed",
    "poel",
    "poelg",
    "poelm",
    "poelb",
    "poels",
    "poelt",
    "poelp",
    "poelh",
    "poem",
    "poeb",
    "poebs",
    "poes",
    "poess",
    "poeng",
    "poej",
    "poec",
    "poek",
    "poet",
    "poep",
    "poeh",
    "pyo",
    "pyog",
    "pyogg",
    "pyogs",
    "pyon",
    "pyonj",
    "pyonh",
    "pyod",
    "pyol",
    "pyolg",
    "pyolm",
    "pyolb",
    "pyols",
    "pyolt",
    "pyolp",
    "pyolh",
    "pyom",
    "pyob",
    "pyobs",
    "pyos",
    "pyoss",
    "pyong",
    "pyoj",
    "pyoc",
    "pyok",
    "pyot",
    "pyop",
    "pyoh",
    "pu",
    "pug",
    "pugg",
    "pugs",
    "pun",
    "punj",
    "punh",
    "pud",
    "pul",
    "pulg",
    "pulm",
    "pulb",
    "puls",
    "pult",
    "pulp",
    "pulh",
    "pum",
    "pub",
    "pubs",
    "pus",
    "puss",
    "pung",
    "puj",
    "puc",
    "puk",
    "put",
    "pup",
    "puh",
    "pweo",
    "pweog",
    "pweogg",
    "pweogs",
    "pweon",
    "pweonj",
    "pweonh",
    "pweod",
    "pweol",
    "pweolg",
    "pweolm",
    "pweolb",
    "pweols",
    "pweolt",
    "pweolp",
    "pweolh",
    "pweom",
    "pweob",
    "pweobs",
    "pweos",
    "pweoss",
    "pweong",
    "pweoj",
    "pweoc",
    "pweok",
    "pweot",
    "pweop",
    "pweoh",
    "pwe",
    "pweg",
    "pwegg",
    "pwegs",
    "pwen",
    "pwenj",
    "pwenh",
    "pwed",
    "pwel",
    "pwelg",
    "pwelm",
    "pwelb",
    "pwels",
    "pwelt",
    "pwelp",
    "pwelh",
    "pwem",
    "pweb",
    "pwebs",
    "pwes",
    "pwess",
    "pweng",
    "pwej",
    "pwec",
    "pwek",
    "pwet",
    "pwep",
    "pweh",
    "pwi",
    "pwig",
    "pwigg",
    "pwigs",
    "pwin",
    "pwinj",
    "pwinh",
    "pwid",
    "pwil",
    "pwilg",
    "pwilm",
    "pwilb",
    "pwils",
    "pwilt",
    "pwilp",
    "pwilh",
    "pwim",
    "pwib",
    "pwibs",
    "pwis",
    "pwiss",
    "pwing",
    "pwij",
    "pwic",
    "pwik",
    "pwit",
    "pwip",
    "pwih",
    "pyu",
    "pyug",
    "pyugg",
    "pyugs",
    "pyun",
    "pyunj",
    "pyunh",
    "pyud",
    "pyul",
    "pyulg",
    "pyulm",
    "pyulb",
    "pyuls",
    "pyult",
    "pyulp",
    "pyulh",
    "pyum",
    "pyub",
    "pyubs",
    "pyus",
    "pyuss",
    "pyung",
    "pyuj",
    "pyuc"
  ];
  return xd4;
}
var xd5;
var hasRequiredXd5;
function requireXd5() {
  if (hasRequiredXd5) return xd5;
  hasRequiredXd5 = 1;
  xd5 = [
    "pyuk",
    "pyut",
    "pyup",
    "pyuh",
    "peu",
    "peug",
    "peugg",
    "peugs",
    "peun",
    "peunj",
    "peunh",
    "peud",
    "peul",
    "peulg",
    "peulm",
    "peulb",
    "peuls",
    "peult",
    "peulp",
    "peulh",
    "peum",
    "peub",
    "peubs",
    "peus",
    "peuss",
    "peung",
    "peuj",
    "peuc",
    "peuk",
    "peut",
    "peup",
    "peuh",
    "pyi",
    "pyig",
    "pyigg",
    "pyigs",
    "pyin",
    "pyinj",
    "pyinh",
    "pyid",
    "pyil",
    "pyilg",
    "pyilm",
    "pyilb",
    "pyils",
    "pyilt",
    "pyilp",
    "pyilh",
    "pyim",
    "pyib",
    "pyibs",
    "pyis",
    "pyiss",
    "pying",
    "pyij",
    "pyic",
    "pyik",
    "pyit",
    "pyip",
    "pyih",
    "pi",
    "pig",
    "pigg",
    "pigs",
    "pin",
    "pinj",
    "pinh",
    "pid",
    "pil",
    "pilg",
    "pilm",
    "pilb",
    "pils",
    "pilt",
    "pilp",
    "pilh",
    "pim",
    "pib",
    "pibs",
    "pis",
    "piss",
    "ping",
    "pij",
    "pic",
    "pik",
    "pit",
    "pip",
    "pih",
    "ha",
    "hag",
    "hagg",
    "hags",
    "han",
    "hanj",
    "hanh",
    "had",
    "hal",
    "halg",
    "halm",
    "halb",
    "hals",
    "halt",
    "halp",
    "halh",
    "ham",
    "hab",
    "habs",
    "has",
    "hass",
    "hang",
    "haj",
    "hac",
    "hak",
    "hat",
    "hap",
    "hah",
    "hae",
    "haeg",
    "haegg",
    "haegs",
    "haen",
    "haenj",
    "haenh",
    "haed",
    "hael",
    "haelg",
    "haelm",
    "haelb",
    "haels",
    "haelt",
    "haelp",
    "haelh",
    "haem",
    "haeb",
    "haebs",
    "haes",
    "haess",
    "haeng",
    "haej",
    "haec",
    "haek",
    "haet",
    "haep",
    "haeh",
    "hya",
    "hyag",
    "hyagg",
    "hyags",
    "hyan",
    "hyanj",
    "hyanh",
    "hyad",
    "hyal",
    "hyalg",
    "hyalm",
    "hyalb",
    "hyals",
    "hyalt",
    "hyalp",
    "hyalh",
    "hyam",
    "hyab",
    "hyabs",
    "hyas",
    "hyass",
    "hyang",
    "hyaj",
    "hyac",
    "hyak",
    "hyat",
    "hyap",
    "hyah",
    "hyae",
    "hyaeg",
    "hyaegg",
    "hyaegs",
    "hyaen",
    "hyaenj",
    "hyaenh",
    "hyaed",
    "hyael",
    "hyaelg",
    "hyaelm",
    "hyaelb",
    "hyaels",
    "hyaelt",
    "hyaelp",
    "hyaelh",
    "hyaem",
    "hyaeb",
    "hyaebs",
    "hyaes",
    "hyaess",
    "hyaeng",
    "hyaej",
    "hyaec",
    "hyaek",
    "hyaet",
    "hyaep",
    "hyaeh",
    "heo",
    "heog",
    "heogg",
    "heogs",
    "heon",
    "heonj",
    "heonh",
    "heod",
    "heol",
    "heolg",
    "heolm",
    "heolb",
    "heols",
    "heolt",
    "heolp",
    "heolh",
    "heom",
    "heob",
    "heobs",
    "heos",
    "heoss",
    "heong",
    "heoj",
    "heoc",
    "heok",
    "heot",
    "heop",
    "heoh",
    "he",
    "heg",
    "hegg",
    "hegs",
    "hen",
    "henj",
    "henh",
    "hed",
    "hel",
    "helg",
    "helm",
    "helb",
    "hels",
    "helt",
    "help",
    "helh",
    "hem",
    "heb",
    "hebs",
    "hes",
    "hess",
    "heng",
    "hej",
    "hec",
    "hek",
    "het",
    "hep",
    "heh"
  ];
  return xd5;
}
var xd6;
var hasRequiredXd6;
function requireXd6() {
  if (hasRequiredXd6) return xd6;
  hasRequiredXd6 = 1;
  xd6 = [
    "hyeo",
    "hyeog",
    "hyeogg",
    "hyeogs",
    "hyeon",
    "hyeonj",
    "hyeonh",
    "hyeod",
    "hyeol",
    "hyeolg",
    "hyeolm",
    "hyeolb",
    "hyeols",
    "hyeolt",
    "hyeolp",
    "hyeolh",
    "hyeom",
    "hyeob",
    "hyeobs",
    "hyeos",
    "hyeoss",
    "hyeong",
    "hyeoj",
    "hyeoc",
    "hyeok",
    "hyeot",
    "hyeop",
    "hyeoh",
    "hye",
    "hyeg",
    "hyegg",
    "hyegs",
    "hyen",
    "hyenj",
    "hyenh",
    "hyed",
    "hyel",
    "hyelg",
    "hyelm",
    "hyelb",
    "hyels",
    "hyelt",
    "hyelp",
    "hyelh",
    "hyem",
    "hyeb",
    "hyebs",
    "hyes",
    "hyess",
    "hyeng",
    "hyej",
    "hyec",
    "hyek",
    "hyet",
    "hyep",
    "hyeh",
    "ho",
    "hog",
    "hogg",
    "hogs",
    "hon",
    "honj",
    "honh",
    "hod",
    "hol",
    "holg",
    "holm",
    "holb",
    "hols",
    "holt",
    "holp",
    "holh",
    "hom",
    "hob",
    "hobs",
    "hos",
    "hoss",
    "hong",
    "hoj",
    "hoc",
    "hok",
    "hot",
    "hop",
    "hoh",
    "hwa",
    "hwag",
    "hwagg",
    "hwags",
    "hwan",
    "hwanj",
    "hwanh",
    "hwad",
    "hwal",
    "hwalg",
    "hwalm",
    "hwalb",
    "hwals",
    "hwalt",
    "hwalp",
    "hwalh",
    "hwam",
    "hwab",
    "hwabs",
    "hwas",
    "hwass",
    "hwang",
    "hwaj",
    "hwac",
    "hwak",
    "hwat",
    "hwap",
    "hwah",
    "hwae",
    "hwaeg",
    "hwaegg",
    "hwaegs",
    "hwaen",
    "hwaenj",
    "hwaenh",
    "hwaed",
    "hwael",
    "hwaelg",
    "hwaelm",
    "hwaelb",
    "hwaels",
    "hwaelt",
    "hwaelp",
    "hwaelh",
    "hwaem",
    "hwaeb",
    "hwaebs",
    "hwaes",
    "hwaess",
    "hwaeng",
    "hwaej",
    "hwaec",
    "hwaek",
    "hwaet",
    "hwaep",
    "hwaeh",
    "hoe",
    "hoeg",
    "hoegg",
    "hoegs",
    "hoen",
    "hoenj",
    "hoenh",
    "hoed",
    "hoel",
    "hoelg",
    "hoelm",
    "hoelb",
    "hoels",
    "hoelt",
    "hoelp",
    "hoelh",
    "hoem",
    "hoeb",
    "hoebs",
    "hoes",
    "hoess",
    "hoeng",
    "hoej",
    "hoec",
    "hoek",
    "hoet",
    "hoep",
    "hoeh",
    "hyo",
    "hyog",
    "hyogg",
    "hyogs",
    "hyon",
    "hyonj",
    "hyonh",
    "hyod",
    "hyol",
    "hyolg",
    "hyolm",
    "hyolb",
    "hyols",
    "hyolt",
    "hyolp",
    "hyolh",
    "hyom",
    "hyob",
    "hyobs",
    "hyos",
    "hyoss",
    "hyong",
    "hyoj",
    "hyoc",
    "hyok",
    "hyot",
    "hyop",
    "hyoh",
    "hu",
    "hug",
    "hugg",
    "hugs",
    "hun",
    "hunj",
    "hunh",
    "hud",
    "hul",
    "hulg",
    "hulm",
    "hulb",
    "huls",
    "hult",
    "hulp",
    "hulh",
    "hum",
    "hub",
    "hubs",
    "hus",
    "huss",
    "hung",
    "huj",
    "huc",
    "huk",
    "hut",
    "hup",
    "huh",
    "hweo",
    "hweog",
    "hweogg",
    "hweogs",
    "hweon",
    "hweonj",
    "hweonh",
    "hweod",
    "hweol",
    "hweolg",
    "hweolm",
    "hweolb",
    "hweols",
    "hweolt",
    "hweolp",
    "hweolh",
    "hweom",
    "hweob",
    "hweobs",
    "hweos",
    "hweoss",
    "hweong",
    "hweoj",
    "hweoc",
    "hweok",
    "hweot",
    "hweop",
    "hweoh",
    "hwe",
    "hweg",
    "hwegg",
    "hwegs"
  ];
  return xd6;
}
var xd7;
var hasRequiredXd7;
function requireXd7() {
  if (hasRequiredXd7) return xd7;
  hasRequiredXd7 = 1;
  xd7 = [
    "hwen",
    "hwenj",
    "hwenh",
    "hwed",
    "hwel",
    "hwelg",
    "hwelm",
    "hwelb",
    "hwels",
    "hwelt",
    "hwelp",
    "hwelh",
    "hwem",
    "hweb",
    "hwebs",
    "hwes",
    "hwess",
    "hweng",
    "hwej",
    "hwec",
    "hwek",
    "hwet",
    "hwep",
    "hweh",
    "hwi",
    "hwig",
    "hwigg",
    "hwigs",
    "hwin",
    "hwinj",
    "hwinh",
    "hwid",
    "hwil",
    "hwilg",
    "hwilm",
    "hwilb",
    "hwils",
    "hwilt",
    "hwilp",
    "hwilh",
    "hwim",
    "hwib",
    "hwibs",
    "hwis",
    "hwiss",
    "hwing",
    "hwij",
    "hwic",
    "hwik",
    "hwit",
    "hwip",
    "hwih",
    "hyu",
    "hyug",
    "hyugg",
    "hyugs",
    "hyun",
    "hyunj",
    "hyunh",
    "hyud",
    "hyul",
    "hyulg",
    "hyulm",
    "hyulb",
    "hyuls",
    "hyult",
    "hyulp",
    "hyulh",
    "hyum",
    "hyub",
    "hyubs",
    "hyus",
    "hyuss",
    "hyung",
    "hyuj",
    "hyuc",
    "hyuk",
    "hyut",
    "hyup",
    "hyuh",
    "heu",
    "heug",
    "heugg",
    "heugs",
    "heun",
    "heunj",
    "heunh",
    "heud",
    "heul",
    "heulg",
    "heulm",
    "heulb",
    "heuls",
    "heult",
    "heulp",
    "heulh",
    "heum",
    "heub",
    "heubs",
    "heus",
    "heuss",
    "heung",
    "heuj",
    "heuc",
    "heuk",
    "heut",
    "heup",
    "heuh",
    "hyi",
    "hyig",
    "hyigg",
    "hyigs",
    "hyin",
    "hyinj",
    "hyinh",
    "hyid",
    "hyil",
    "hyilg",
    "hyilm",
    "hyilb",
    "hyils",
    "hyilt",
    "hyilp",
    "hyilh",
    "hyim",
    "hyib",
    "hyibs",
    "hyis",
    "hyiss",
    "hying",
    "hyij",
    "hyic",
    "hyik",
    "hyit",
    "hyip",
    "hyih",
    "hi",
    "hig",
    "higg",
    "higs",
    "hin",
    "hinj",
    "hinh",
    "hid",
    "hil",
    "hilg",
    "hilm",
    "hilb",
    "hils",
    "hilt",
    "hilp",
    "hilh",
    "him",
    "hib",
    "hibs",
    "his",
    "hiss",
    "hing",
    "hij",
    "hic",
    "hik",
    "hit",
    "hip",
    "hih",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]"
  ];
  return xd7;
}
var xf9;
var hasRequiredXf9;
function requireXf9() {
  if (hasRequiredXf9) return xf9;
  hasRequiredXf9 = 1;
  xf9 = [
    "Kay ",
    "Kayng ",
    "Ke ",
    "Ko ",
    "Kol ",
    "Koc ",
    "Kwi ",
    "Kwi ",
    "Kyun ",
    "Kul ",
    "Kum ",
    "Na ",
    "Na ",
    "Na ",
    "La ",
    "Na ",
    "Na ",
    "Na ",
    "Na ",
    "Na ",
    "Nak ",
    "Nak ",
    "Nak ",
    "Nak ",
    "Nak ",
    "Nak ",
    "Nak ",
    "Nan ",
    "Nan ",
    "Nan ",
    "Nan ",
    "Nan ",
    "Nan ",
    "Nam ",
    "Nam ",
    "Nam ",
    "Nam ",
    "Nap ",
    "Nap ",
    "Nap ",
    "Nang ",
    "Nang ",
    "Nang ",
    "Nang ",
    "Nang ",
    "Nay ",
    "Nayng ",
    "No ",
    "No ",
    "No ",
    "No ",
    "No ",
    "No ",
    "No ",
    "No ",
    "No ",
    "No ",
    "No ",
    "No ",
    "Nok ",
    "Nok ",
    "Nok ",
    "Nok ",
    "Nok ",
    "Nok ",
    "Non ",
    "Nong ",
    "Nong ",
    "Nong ",
    "Nong ",
    "Noy ",
    "Noy ",
    "Noy ",
    "Noy ",
    "Nwu ",
    "Nwu ",
    "Nwu ",
    "Nwu ",
    "Nwu ",
    "Nwu ",
    "Nwu ",
    "Nwu ",
    "Nuk ",
    "Nuk ",
    "Num ",
    "Nung ",
    "Nung ",
    "Nung ",
    "Nung ",
    "Nung ",
    "Twu ",
    "La ",
    "Lak ",
    "Lak ",
    "Lan ",
    "Lyeng ",
    "Lo ",
    "Lyul ",
    "Li ",
    "Pey ",
    "Pen ",
    "Pyen ",
    "Pwu ",
    "Pwul ",
    "Pi ",
    "Sak ",
    "Sak ",
    "Sam ",
    "Sayk ",
    "Sayng ",
    "Sep ",
    "Sey ",
    "Sway ",
    "Sin ",
    "Sim ",
    "Sip ",
    "Ya ",
    "Yak ",
    "Yak ",
    "Yang ",
    "Yang ",
    "Yang ",
    "Yang ",
    "Yang ",
    "Yang ",
    "Yang ",
    "Yang ",
    "Ye ",
    "Ye ",
    "Ye ",
    "Ye ",
    "Ye ",
    "Ye ",
    "Ye ",
    "Ye ",
    "Ye ",
    "Ye ",
    "Ye ",
    "Yek ",
    "Yek ",
    "Yek ",
    "Yek ",
    "Yen ",
    "Yen ",
    "Yen ",
    "Yen ",
    "Yen ",
    "Yen ",
    "Yen ",
    "Yen ",
    "Yen ",
    "Yen ",
    "Yen ",
    "Yen ",
    "Yen ",
    "Yen ",
    "Yel ",
    "Yel ",
    "Yel ",
    "Yel ",
    "Yel ",
    "Yel ",
    "Yem ",
    "Yem ",
    "Yem ",
    "Yem ",
    "Yem ",
    "Yep ",
    "Yeng ",
    "Yeng ",
    "Yeng ",
    "Yeng ",
    "Yeng ",
    "Yeng ",
    "Yeng ",
    "Yeng ",
    "Yeng ",
    "Yeng ",
    "Yeng ",
    "Yeng ",
    "Yeng ",
    "Yey ",
    "Yey ",
    "Yey ",
    "Yey ",
    "O ",
    "Yo ",
    "Yo ",
    "Yo ",
    "Yo ",
    "Yo ",
    "Yo ",
    "Yo ",
    "Yo ",
    "Yo ",
    "Yo ",
    "Yong ",
    "Wun ",
    "Wen ",
    "Yu ",
    "Yu ",
    "Yu ",
    "Yu ",
    "Yu ",
    "Yu ",
    "Yu ",
    "Yu ",
    "Yu ",
    "Yu ",
    "Yuk ",
    "Yuk ",
    "Yuk ",
    "Yun ",
    "Yun ",
    "Yun ",
    "Yun ",
    "Yul ",
    "Yul ",
    "Yul ",
    "Yul ",
    "Yung ",
    "I ",
    "I ",
    "I ",
    "I ",
    "I ",
    "I ",
    "I ",
    "I ",
    "I ",
    "I ",
    "I ",
    "I ",
    "I ",
    "I ",
    "Ik ",
    "Ik ",
    "In ",
    "In ",
    "In ",
    "In ",
    "In ",
    "In ",
    "In ",
    "Im ",
    "Im ",
    "Im ",
    "Ip ",
    "Ip ",
    "Ip ",
    "Cang ",
    "Cek ",
    "Ci ",
    "Cip ",
    "Cha ",
    "Chek "
  ];
  return xf9;
}
var xfa;
var hasRequiredXfa;
function requireXfa() {
  if (hasRequiredXfa) return xfa;
  hasRequiredXfa = 1;
  xfa = [
    "Chey ",
    "Thak ",
    "Thak ",
    "Thang ",
    "Thayk ",
    "Thong ",
    "Pho ",
    "Phok ",
    "Hang ",
    "Hang ",
    "Hyen ",
    "Hwak ",
    "Wu ",
    "Huo ",
    "[?] ",
    "[?] ",
    "Zhong ",
    "[?] ",
    "Qing ",
    "[?] ",
    "[?] ",
    "Xi ",
    "Zhu ",
    "Yi ",
    "Li ",
    "Shen ",
    "Xiang ",
    "Fu ",
    "Jing ",
    "Jing ",
    "Yu ",
    "[?] ",
    "Hagi ",
    "[?] ",
    "Zhu ",
    "[?] ",
    "[?] ",
    "Yi ",
    "Du ",
    "[?] ",
    "[?] ",
    "[?] ",
    "Fan ",
    "Si ",
    "Guan ",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]"
  ];
  return xfa;
}
var xfb;
var hasRequiredXfb;
function requireXfb() {
  if (hasRequiredXfb) return xfb;
  hasRequiredXfb = 1;
  xfb = [
    "ff",
    "fi",
    "fl",
    "ffi",
    "ffl",
    "st",
    "st",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "mn",
    "me",
    "mi",
    "vn",
    "mkh",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "yi",
    "",
    "ay",
    "`",
    "",
    "d",
    "h",
    "k",
    "l",
    "m",
    "m",
    "t",
    "+",
    "sh",
    "s",
    "sh",
    "s",
    "a",
    "a",
    "",
    "b",
    "g",
    "d",
    "h",
    "v",
    "z",
    "[?]",
    "t",
    "y",
    "k",
    "k",
    "l",
    "[?]",
    "l",
    "[?]",
    "n",
    "n",
    "[?]",
    "p",
    "p",
    "[?]",
    "ts",
    "ts",
    "r",
    "sh",
    "t",
    "vo",
    "b",
    "k",
    "p",
    "l",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    ""
  ];
  return xfb;
}
var xfc;
var hasRequiredXfc;
function requireXfc() {
  if (hasRequiredXfc) return xfc;
  hasRequiredXfc = 1;
  xfc = [
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    ""
  ];
  return xfc;
}
var xfd;
var hasRequiredXfd;
function requireXfd() {
  if (hasRequiredXfd) return xfd;
  hasRequiredXfd = 1;
  xfd = [
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "[?]",
    "[?]",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    // ======================================================================
    //  FFD0 to FFEF = "Not A Character..."
    // FDD0
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    // FDE0
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    // ======================================================================
    // ======================================================================
    // perl -CO -e 'for( 0xFDF0 .. 0xFDFD) { printf "\"\",//  %04X p%cq\n", $_, $_; }'
    "{Salla}",
    //  FDF0 pﷰq
    //   FDF0	ARABIC LIGATURE SALLA USED AS KORANIC STOP SIGN ISOLATED FORM
    "{Qala}",
    //  FDF1 pﷱq
    //   FDF1	ARABIC LIGATURE QALA USED AS KORANIC STOP SIGN ISOLATED FORM
    "Allah",
    //  FDF2 pﷲq
    //   FDF2	ARABIC LIGATURE ALLAH ISOLATED FORM
    "Akbar",
    //  FDF3 pﷳq
    //   FDF3	ARABIC LIGATURE AKBAR ISOLATED FORM
    "Mohammed",
    //  FDF4 pﷴq
    //   FDF4	ARABIC LIGATURE MOHAMMAD ISOLATED FORM
    "SL`M",
    //  FDF5 pﷵq
    //   FDF5	ARABIC LIGATURE SALAM ISOLATED FORM
    "Rasul",
    //  FDF6 pﷶq
    //   FDF6	ARABIC LIGATURE RASOUL ISOLATED FORM
    "{Alayhi}",
    //  FDF7 pﷷq
    //   FDF7	ARABIC LIGATURE ALAYHE ISOLATED FORM
    "{WaSallam}",
    //  FDF8 pﷸq
    //   FDF8	ARABIC LIGATURE WASALLAM ISOLATED FORM
    "{Salla}",
    //  FDF9 pﷹq
    //   FDF9	ARABIC LIGATURE SALLA ISOLATED FORM
    "{Salla Llahu Alayhi WaSallam}",
    //  FDFA pﷺq
    //   FDFA	ARABIC LIGATURE SALLALLAHOU ALAYHE WASALLAM
    "{Jalla Jalalahu}",
    //  FDFB pﷻq
    //   FDFB	ARABIC LIGATURE JALLAJALALOUHOU
    "Rial ",
    //  FDFC p﷼q
    //   FDFC	RIAL SIGN
    "{Bismillah Ar-Rahman Ar-Rahimi}",
    //  FDFD p﷽q
    //   FDFD	ARABIC LIGATURE BISMILLAH AR-RAHMAN AR-RAHEEM
    //  And unassigned:
    "[?]",
    // FDFE
    "[?]"
    // FDFF
  ];
  return xfd;
}
var xfe;
var hasRequiredXfe;
function requireXfe() {
  if (hasRequiredXfe) return xfe;
  hasRequiredXfe = 1;
  xfe = [
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "",
    "",
    "",
    "~",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "..",
    "--",
    "-",
    "_",
    "_",
    "(",
    ") ",
    "\\{",
    "\\} ",
    "[",
    "] ",
    "[(",
    ")] ",
    "<<",
    ">> ",
    "<",
    "> ",
    "[",
    "] ",
    "\\{",
    "\\}",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    ",",
    ",",
    ".",
    "",
    ";",
    ":",
    "?",
    "!",
    "-",
    "(",
    ")",
    "\\{",
    "\\}",
    "\\{",
    "\\}",
    "#",
    "&",
    "*",
    "+",
    "-",
    "<",
    ">",
    "=",
    "",
    "\\\\",
    "\\$",
    "%",
    "\\@",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "",
    "",
    "",
    "[?]",
    "",
    "[?]",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "[?]",
    "[?]",
    ""
  ];
  return xfe;
}
var xff;
var hasRequiredXff;
function requireXff() {
  if (hasRequiredXff) return xff;
  hasRequiredXff = 1;
  xff = [
    "[?]",
    "!",
    '"',
    "#",
    "\\$",
    "%",
    "&",
    "'",
    "(",
    ")",
    "*",
    "+",
    ",",
    "-",
    ".",
    "/",
    "0",
    "1",
    "2",
    "3",
    "4",
    "5",
    "6",
    "7",
    "8",
    "9",
    ":",
    ";",
    "<",
    "=",
    ">",
    "?",
    "\\@",
    "A",
    "B",
    "C",
    "D",
    "E",
    "F",
    "G",
    "H",
    "I",
    "J",
    "K",
    "L",
    "M",
    "N",
    "O",
    "P",
    "Q",
    "R",
    "S",
    "T",
    "U",
    "V",
    "W",
    "X",
    "Y",
    "Z",
    "[",
    "\\\\",
    "]",
    "^",
    "_",
    "`",
    "a",
    "b",
    "c",
    "d",
    "e",
    "f",
    "g",
    "h",
    "i",
    "j",
    "k",
    "l",
    "m",
    "n",
    "o",
    "p",
    "q",
    "r",
    "s",
    "t",
    "u",
    "v",
    "w",
    "x",
    "y",
    "z",
    "\\{",
    "|",
    "\\}",
    "~",
    "[?]",
    "[?]",
    ".",
    "[",
    "]",
    ",",
    "*",
    "wo",
    "a",
    "i",
    "u",
    "e",
    "o",
    "ya",
    "yu",
    "yo",
    "tu",
    "+",
    "a",
    "i",
    "u",
    "e",
    "o",
    "ka",
    "ki",
    "ku",
    "ke",
    "ko",
    "sa",
    "si",
    "su",
    "se",
    "so",
    "ta",
    "ti",
    "tu",
    "te",
    "to",
    "na",
    "ni",
    "nu",
    "ne",
    "no",
    "ha",
    "hi",
    "hu",
    "he",
    "ho",
    "ma",
    "mi",
    "mu",
    "me",
    "mo",
    "ya",
    "yu",
    "yo",
    "ra",
    "ri",
    "ru",
    "re",
    "ro",
    "wa",
    "n",
    ":",
    ";",
    "",
    "g",
    "gg",
    "gs",
    "n",
    "nj",
    "nh",
    "d",
    "dd",
    "r",
    "lg",
    "lm",
    "lb",
    "ls",
    "lt",
    "lp",
    "rh",
    "m",
    "b",
    "bb",
    "bs",
    "s",
    "ss",
    "",
    "j",
    "jj",
    "c",
    "k",
    "t",
    "p",
    "h",
    "[?]",
    "[?]",
    "[?]",
    "a",
    "ae",
    "ya",
    "yae",
    "eo",
    "e",
    "[?]",
    "[?]",
    "yeo",
    "ye",
    "o",
    "wa",
    "wae",
    "oe",
    "[?]",
    "[?]",
    "yo",
    "u",
    "weo",
    "we",
    "wi",
    "yu",
    "[?]",
    "[?]",
    "eu",
    "yi",
    "i",
    "[?]",
    "[?]",
    "[?]",
    "/C",
    "PS",
    "!",
    "-",
    "|",
    "Y=",
    "W=",
    "[?]",
    "|",
    "-",
    "|",
    "-",
    "|",
    "#",
    "O",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "[?]",
    "\\{",
    "|",
    "\\}",
    "",
    "",
    "",
    ""
  ];
  return xff;
}
var tr = {};
var utf8_rx = /(?![\x00-\x7F]|[\xC0-\xDF][\x80-\xBF]|[\xE0-\xEF][\x80-\xBF]{2}|[\xF0-\xF7][\x80-\xBF]{3})./g;
var unidecode = function(str2, sub) {
  return str2.replace(utf8_rx, function(match) {
    return unidecode_internal_replace(match, sub);
  });
};
function unidecode_internal_replace(match, sub) {
  if (sub === null || sub === void 0) {
    sub = "";
  }
  var utf16 = utf8_to_utf16(match);
  if (utf16 > 65535) {
    return sub;
  } else {
    var h = utf16 >> 8;
    var l2 = utf16 & 255;
    if (h > 24 && h < 30) return sub;
    if (h > 215 && h < 249) return sub;
    if (!tr[h]) {
      switch (dec2hex(h)) {
        case "00":
          tr[h] = requireX00();
          break;
        case "01":
          tr[h] = requireX01();
          break;
        case "02":
          tr[h] = requireX02();
          break;
        case "03":
          tr[h] = requireX03();
          break;
        case "04":
          tr[h] = requireX04();
          break;
        case "05":
          tr[h] = requireX05();
          break;
        case "06":
          tr[h] = requireX06();
          break;
        case "07":
          tr[h] = requireX07();
          break;
        case "09":
          tr[h] = requireX09();
          break;
        case "0a":
          tr[h] = requireX0a();
          break;
        case "0b":
          tr[h] = requireX0b();
          break;
        case "0c":
          tr[h] = requireX0c();
          break;
        case "0d":
          tr[h] = requireX0d();
          break;
        case "0e":
          tr[h] = requireX0e();
          break;
        case "0f":
          tr[h] = requireX0f();
          break;
        case "10":
          tr[h] = requireX10();
          break;
        case "11":
          tr[h] = requireX11();
          break;
        case "12":
          tr[h] = requireX12();
          break;
        case "13":
          tr[h] = requireX13();
          break;
        case "14":
          tr[h] = requireX14();
          break;
        case "15":
          tr[h] = requireX15();
          break;
        case "16":
          tr[h] = requireX16();
          break;
        case "17":
          tr[h] = requireX17();
          break;
        case "18":
          tr[h] = requireX18();
          break;
        case "19":
          tr[h] = requireX19();
          break;
        case "1a":
          tr[h] = requireX1a();
          break;
        case "1b":
          tr[h] = requireX1b();
          break;
        case "1c":
          tr[h] = requireX1c();
          break;
        case "1d":
          tr[h] = requireX1d();
          break;
        case "1e":
          tr[h] = requireX1e();
          break;
        case "1f":
          tr[h] = requireX1f();
          break;
        case "20":
          tr[h] = requireX20();
          break;
        case "21":
          tr[h] = requireX21();
          break;
        case "22":
          tr[h] = requireX22();
          break;
        case "23":
          tr[h] = requireX23();
          break;
        case "24":
          tr[h] = requireX24();
          break;
        case "25":
          tr[h] = requireX25();
          break;
        case "26":
          tr[h] = requireX26();
          break;
        case "27":
          tr[h] = requireX27();
          break;
        case "28":
          tr[h] = requireX28();
          break;
        case "2e":
          tr[h] = requireX2e();
          break;
        case "2f":
          tr[h] = requireX2f();
          break;
        case "30":
          tr[h] = requireX30();
          break;
        case "31":
          tr[h] = requireX31();
          break;
        case "32":
          tr[h] = requireX32();
          break;
        case "33":
          tr[h] = requireX33();
          break;
        case "4d":
          tr[h] = requireX4d();
          break;
        case "4e":
          tr[h] = requireX4e();
          break;
        case "4f":
          tr[h] = requireX4f();
          break;
        case "50":
          tr[h] = requireX50();
          break;
        case "51":
          tr[h] = requireX51();
          break;
        case "52":
          tr[h] = requireX52();
          break;
        case "53":
          tr[h] = requireX53();
          break;
        case "54":
          tr[h] = requireX54();
          break;
        case "55":
          tr[h] = requireX55();
          break;
        case "56":
          tr[h] = requireX56();
          break;
        case "57":
          tr[h] = requireX57();
          break;
        case "58":
          tr[h] = requireX58();
          break;
        case "59":
          tr[h] = requireX59();
          break;
        case "5a":
          tr[h] = requireX5a();
          break;
        case "5b":
          tr[h] = requireX5b();
          break;
        case "5c":
          tr[h] = requireX5c();
          break;
        case "5d":
          tr[h] = requireX5d();
          break;
        case "5e":
          tr[h] = requireX5e();
          break;
        case "5f":
          tr[h] = requireX5f();
          break;
        case "60":
          tr[h] = requireX60();
          break;
        case "61":
          tr[h] = requireX61();
          break;
        case "62":
          tr[h] = requireX62();
          break;
        case "63":
          tr[h] = requireX63();
          break;
        case "64":
          tr[h] = requireX64();
          break;
        case "65":
          tr[h] = requireX65();
          break;
        case "66":
          tr[h] = requireX66();
          break;
        case "67":
          tr[h] = requireX67();
          break;
        case "68":
          tr[h] = requireX68();
          break;
        case "69":
          tr[h] = requireX69();
          break;
        case "6a":
          tr[h] = requireX6a();
          break;
        case "6b":
          tr[h] = requireX6b();
          break;
        case "6c":
          tr[h] = requireX6c();
          break;
        case "6d":
          tr[h] = requireX6d();
          break;
        case "6e":
          tr[h] = requireX6e();
          break;
        case "6f":
          tr[h] = requireX6f();
          break;
        case "70":
          tr[h] = requireX70();
          break;
        case "71":
          tr[h] = requireX71();
          break;
        case "72":
          tr[h] = requireX72();
          break;
        case "73":
          tr[h] = requireX73();
          break;
        case "74":
          tr[h] = requireX74();
          break;
        case "75":
          tr[h] = requireX75();
          break;
        case "76":
          tr[h] = requireX76();
          break;
        case "77":
          tr[h] = requireX77();
          break;
        case "78":
          tr[h] = requireX78();
          break;
        case "79":
          tr[h] = requireX79();
          break;
        case "7a":
          tr[h] = requireX7a();
          break;
        case "7b":
          tr[h] = requireX7b();
          break;
        case "7c":
          tr[h] = requireX7c();
          break;
        case "7d":
          tr[h] = requireX7d();
          break;
        case "7e":
          tr[h] = requireX7e();
          break;
        case "7f":
          tr[h] = requireX7f();
          break;
        case "80":
          tr[h] = requireX80();
          break;
        case "81":
          tr[h] = requireX81();
          break;
        case "82":
          tr[h] = requireX82();
          break;
        case "83":
          tr[h] = requireX83();
          break;
        case "84":
          tr[h] = requireX84();
          break;
        case "85":
          tr[h] = requireX85();
          break;
        case "86":
          tr[h] = requireX86();
          break;
        case "87":
          tr[h] = requireX87();
          break;
        case "88":
          tr[h] = requireX88();
          break;
        case "89":
          tr[h] = requireX89();
          break;
        case "8a":
          tr[h] = requireX8a();
          break;
        case "8b":
          tr[h] = requireX8b();
          break;
        case "8c":
          tr[h] = requireX8c();
          break;
        case "8d":
          tr[h] = requireX8d();
          break;
        case "8e":
          tr[h] = requireX8e();
          break;
        case "8f":
          tr[h] = requireX8f();
          break;
        case "90":
          tr[h] = requireX90();
          break;
        case "91":
          tr[h] = requireX91();
          break;
        case "92":
          tr[h] = requireX92();
          break;
        case "93":
          tr[h] = requireX93();
          break;
        case "94":
          tr[h] = requireX94();
          break;
        case "95":
          tr[h] = requireX95();
          break;
        case "96":
          tr[h] = requireX96();
          break;
        case "97":
          tr[h] = requireX97();
          break;
        case "98":
          tr[h] = requireX98();
          break;
        case "99":
          tr[h] = requireX99();
          break;
        case "9a":
          tr[h] = requireX9a();
          break;
        case "9b":
          tr[h] = requireX9b();
          break;
        case "9c":
          tr[h] = requireX9c();
          break;
        case "9d":
          tr[h] = requireX9d();
          break;
        case "9e":
          tr[h] = requireX9e();
          break;
        case "9f":
          tr[h] = requireX9f();
          break;
        case "a0":
          tr[h] = requireXa0();
          break;
        case "a1":
          tr[h] = requireXa1();
          break;
        case "a2":
          tr[h] = requireXa2();
          break;
        case "a3":
          tr[h] = requireXa3();
          break;
        case "a4":
          tr[h] = requireXa4();
          break;
        case "ac":
          tr[h] = requireXac();
          break;
        case "ad":
          tr[h] = requireXad();
          break;
        case "ae":
          tr[h] = requireXae();
          break;
        case "af":
          tr[h] = requireXaf();
          break;
        case "b0":
          tr[h] = requireXb0();
          break;
        case "b1":
          tr[h] = requireXb1();
          break;
        case "b2":
          tr[h] = requireXb2();
          break;
        case "b3":
          tr[h] = requireXb3();
          break;
        case "b4":
          tr[h] = requireXb4();
          break;
        case "b5":
          tr[h] = requireXb5();
          break;
        case "b6":
          tr[h] = requireXb6();
          break;
        case "b7":
          tr[h] = requireXb7();
          break;
        case "b8":
          tr[h] = requireXb8();
          break;
        case "b9":
          tr[h] = requireXb9();
          break;
        case "ba":
          tr[h] = requireXba();
          break;
        case "bb":
          tr[h] = requireXbb();
          break;
        case "bc":
          tr[h] = requireXbc();
          break;
        case "bd":
          tr[h] = requireXbd();
          break;
        case "be":
          tr[h] = requireXbe();
          break;
        case "bf":
          tr[h] = requireXbf();
          break;
        case "c0":
          tr[h] = requireXc0();
          break;
        case "c1":
          tr[h] = requireXc1();
          break;
        case "c2":
          tr[h] = requireXc2();
          break;
        case "c3":
          tr[h] = requireXc3();
          break;
        case "c4":
          tr[h] = requireXc4();
          break;
        case "c5":
          tr[h] = requireXc5();
          break;
        case "c6":
          tr[h] = requireXc6();
          break;
        case "c7":
          tr[h] = requireXc7();
          break;
        case "c8":
          tr[h] = requireXc8();
          break;
        case "c9":
          tr[h] = requireXc9();
          break;
        case "ca":
          tr[h] = requireXca();
          break;
        case "cb":
          tr[h] = requireXcb();
          break;
        case "cc":
          tr[h] = requireXcc();
          break;
        case "cd":
          tr[h] = requireXcd();
          break;
        case "ce":
          tr[h] = requireXce();
          break;
        case "cf":
          tr[h] = requireXcf();
          break;
        case "d0":
          tr[h] = requireXd0();
          break;
        case "d1":
          tr[h] = requireXd1();
          break;
        case "d2":
          tr[h] = requireXd2();
          break;
        case "d3":
          tr[h] = requireXd3();
          break;
        case "d4":
          tr[h] = requireXd4();
          break;
        case "d5":
          tr[h] = requireXd5();
          break;
        case "d6":
          tr[h] = requireXd6();
          break;
        case "d7":
          tr[h] = requireXd7();
          break;
        case "f9":
          tr[h] = requireXf9();
          break;
        case "fa":
          tr[h] = requireXfa();
          break;
        case "fb":
          tr[h] = requireXfb();
          break;
        case "fc":
          tr[h] = requireXfc();
          break;
        case "fd":
          tr[h] = requireXfd();
          break;
        case "fe":
          tr[h] = requireXfe();
          break;
        case "ff":
          tr[h] = requireXff();
          break;
        default:
          return sub;
      }
    }
    if (tr[h][l2]) {
      return tr[h][l2];
    } else {
      return sub;
    }
  }
}
function dec2hex(i) {
  return (i + 256).toString(16).substr(-2);
}
function utf8_to_utf16(raw) {
  var b1, b2, b3, b4, x2, y2, z2;
  while (Array.isArray(raw)) raw = raw[0];
  switch (raw.length) {
    case 1:
      return ord(raw);
    case 2:
      b1 = ord(raw.substr(0, 1));
      b2 = ord(raw.substr(1, 1));
      x2 = (b1 & 3) << 6 | b2 & 63;
      y2 = (b1 & 28) >> 2;
      return y2 << 8 | x2;
    case 3:
      b1 = ord(raw.substr(0, 1));
      b2 = ord(raw.substr(1, 1));
      b3 = ord(raw.substr(2, 1));
      x2 = (b2 & 3) << 6 | b3 & 63;
      y2 = (b1 & 15) << 4 | (b2 & 60) >> 2;
      return y2 << 8 | x2;
    default:
      b1 = ord(raw.substr(0, 1));
      b2 = ord(raw.substr(1, 1));
      b3 = ord(raw.substr(2, 1));
      b4 = ord(raw.substr(3, 1));
      x2 = (b3 & 3) << 6 | b4 & 63;
      y2 = (b2 & 15) << 4 | (b3 & 60) >> 2;
      z2 = (b1 & 7) << 5 | (b2 & 48) >> 4;
      return z2 << 16 | y2 << 8 | x2;
  }
}
function ord(string) {
  var str2 = string + "", code = str2.charCodeAt(0);
  if (55296 <= code && code <= 56319) {
    var hi2 = code;
    if (str2.length === 1) {
      return code;
    }
    var low = str2.charCodeAt(1);
    return (hi2 - 55296) * 1024 + (low - 56320) + 65536;
  }
  if (56320 <= code && code <= 57343) {
    return code;
  }
  return code;
}
const unidecode$1 = /* @__PURE__ */ getDefaultExportFromCjs(unidecode);
const _SongRange = class _SongRange {
  constructor(song_range_str) {
    __publicField(this, "min");
    __publicField(this, "max");
    __publicField(this, "semitones");
    if (!song_range_str || !song_range_str.includes("-")) {
      this.min = null;
      this.max = null;
      this.semitones = null;
      return;
    }
    let [minRange, maxRange] = song_range_str.split("-");
    minRange = minRange.split("/")[0];
    maxRange = maxRange.split("/")[0];
    const lowestTone = minRange.slice(0, -1).toLowerCase();
    const highestTone = maxRange.slice(0, -1).toLowerCase();
    const octaves = parseInt(maxRange.slice(-1)) - parseInt(minRange.slice(-1));
    const withinOctave = (12 + _SongRange.chromaticScale[highestTone] - _SongRange.chromaticScale[lowestTone]) % 12;
    this.min = minRange;
    this.max = maxRange;
    this.semitones = 12 * octaves + withinOctave;
  }
  static fromJSON(json2) {
    const instance = Object.create(SongData.prototype);
    instance.min = json2.min;
    instance.max = json2.max;
    instance.semitones = json2.semitones;
    return instance;
  }
};
// TODO: tohle by se taky asi melo predelat na anglickou variantu, ne?
__publicField(_SongRange, "chromaticScale", {
  "c": 0,
  "c#": 1,
  "db": 1,
  "d": 2,
  "d#": 3,
  "eb": 3,
  "e": 4,
  "f": 5,
  "f#": 6,
  "gb": 6,
  "g": 7,
  "g#": 8,
  "ab": 8,
  "a": 9,
  "a#": 10,
  "bb": 10,
  "b": 11,
  "h": 11
});
let SongRange = _SongRange;
class SongData {
  constructor(song) {
    __publicField(this, "id");
    __publicField(this, "title");
    __publicField(this, "artist");
    __publicField(this, "key");
    __publicField(this, "dateAdded");
    __publicField(this, "startMelody");
    __publicField(this, "language");
    __publicField(this, "tempo");
    __publicField(this, "capo");
    __publicField(this, "range");
    __publicField(this, "illustration_author");
    __publicField(this, "chordproFile");
    __publicField(this, "pdfFilenames");
    __publicField(this, "content");
    __publicField(this, "contentHash");
    this.title = song.title || "Unknown title";
    this.artist = song.artist || "Unknown artist";
    this.id = unidecode$1(`${this.artist}-${this.title}`.replace(/ /g, "_")).replace("?", "");
    this.key = song.key || null;
    const [month, year] = song.date_added.split("-");
    this.dateAdded = { month: parseInt(month), year: parseInt(year) };
    this.startMelody = song.startMelody;
    this.language = song.language || "other";
    this.tempo = parseInt(song.tempo);
    this.capo = parseInt(song.capo) || 0;
    this.range = new SongRange(song.range || "");
    this.illustration_author = song.illustration_author || "FLUX.1-dev";
    this.pdfFilenames = song.pdf_filenames ? JSON.parse(song.pdf_filenames.replace(/'/g, '"')).map((f2) => "/domcikuv-zpevnik-v2/songs/pdfs/" + f2) : [];
    this.chordproFile = song.chordpro_file || "";
    this.contentHash = song.content_hash || "";
  }
  // Static method to restore an instance from a plain object (after JSON.parse)
  static fromJSON(json2) {
    const instance = Object.create(SongData.prototype);
    instance.title = json2.title;
    instance.artist = json2.artist;
    instance.id = json2.id;
    instance.key = json2.key;
    instance.dateAdded = json2.dateAdded;
    instance.startMelody = json2.startMelody;
    instance.language = json2.language;
    instance.tempo = json2.tempo;
    instance.capo = json2.capo;
    instance.range = SongRange.fromJSON(json2.range);
    instance.illustration_author = json2.illustration_author;
    instance.chordproFile = json2.chordproFile;
    instance.pdfFilenames = json2.pdfFilenames;
    instance.content = json2.content;
    instance.contentHash = json2.contentHash;
    return instance;
  }
  lyricsLength() {
    if (!this.content) {
      return 0;
    }
    let lyricsOnly = this.content.replace(/\{.*?\}/g, "");
    lyricsOnly = lyricsOnly.replace(/\[.*?\]/g, "");
    lyricsOnly = lyricsOnly.replace(/\s+/g, " ").trim();
    return lyricsOnly.length;
  }
}
/*! js-yaml 4.1.0 https://github.com/nodeca/js-yaml @license MIT */
function isNothing(subject) {
  return typeof subject === "undefined" || subject === null;
}
function isObject(subject) {
  return typeof subject === "object" && subject !== null;
}
function toArray(sequence) {
  if (Array.isArray(sequence)) return sequence;
  else if (isNothing(sequence)) return [];
  return [sequence];
}
function extend(target, source) {
  var index, length, key, sourceKeys;
  if (source) {
    sourceKeys = Object.keys(source);
    for (index = 0, length = sourceKeys.length; index < length; index += 1) {
      key = sourceKeys[index];
      target[key] = source[key];
    }
  }
  return target;
}
function repeat(string, count) {
  var result = "", cycle;
  for (cycle = 0; cycle < count; cycle += 1) {
    result += string;
  }
  return result;
}
function isNegativeZero(number2) {
  return number2 === 0 && Number.NEGATIVE_INFINITY === 1 / number2;
}
var isNothing_1 = isNothing;
var isObject_1 = isObject;
var toArray_1 = toArray;
var repeat_1 = repeat;
var isNegativeZero_1 = isNegativeZero;
var extend_1 = extend;
var common = {
  isNothing: isNothing_1,
  isObject: isObject_1,
  toArray: toArray_1,
  repeat: repeat_1,
  isNegativeZero: isNegativeZero_1,
  extend: extend_1
};
function formatError(exception2, compact) {
  var where = "", message = exception2.reason || "(unknown reason)";
  if (!exception2.mark) return message;
  if (exception2.mark.name) {
    where += 'in "' + exception2.mark.name + '" ';
  }
  where += "(" + (exception2.mark.line + 1) + ":" + (exception2.mark.column + 1) + ")";
  if (!compact && exception2.mark.snippet) {
    where += "\n\n" + exception2.mark.snippet;
  }
  return message + " " + where;
}
function YAMLException$1(reason, mark) {
  Error.call(this);
  this.name = "YAMLException";
  this.reason = reason;
  this.mark = mark;
  this.message = formatError(this, false);
  if (Error.captureStackTrace) {
    Error.captureStackTrace(this, this.constructor);
  } else {
    this.stack = new Error().stack || "";
  }
}
YAMLException$1.prototype = Object.create(Error.prototype);
YAMLException$1.prototype.constructor = YAMLException$1;
YAMLException$1.prototype.toString = function toString2(compact) {
  return this.name + ": " + formatError(this, compact);
};
var exception = YAMLException$1;
function getLine(buffer, lineStart, lineEnd, position, maxLineLength) {
  var head = "";
  var tail = "";
  var maxHalfLength = Math.floor(maxLineLength / 2) - 1;
  if (position - lineStart > maxHalfLength) {
    head = " ... ";
    lineStart = position - maxHalfLength + head.length;
  }
  if (lineEnd - position > maxHalfLength) {
    tail = " ...";
    lineEnd = position + maxHalfLength - tail.length;
  }
  return {
    str: head + buffer.slice(lineStart, lineEnd).replace(/\t/g, "→") + tail,
    pos: position - lineStart + head.length
    // relative position
  };
}
function padStart(string, max) {
  return common.repeat(" ", max - string.length) + string;
}
function makeSnippet(mark, options) {
  options = Object.create(options || null);
  if (!mark.buffer) return null;
  if (!options.maxLength) options.maxLength = 79;
  if (typeof options.indent !== "number") options.indent = 1;
  if (typeof options.linesBefore !== "number") options.linesBefore = 3;
  if (typeof options.linesAfter !== "number") options.linesAfter = 2;
  var re2 = /\r?\n|\r|\0/g;
  var lineStarts = [0];
  var lineEnds = [];
  var match;
  var foundLineNo = -1;
  while (match = re2.exec(mark.buffer)) {
    lineEnds.push(match.index);
    lineStarts.push(match.index + match[0].length);
    if (mark.position <= match.index && foundLineNo < 0) {
      foundLineNo = lineStarts.length - 2;
    }
  }
  if (foundLineNo < 0) foundLineNo = lineStarts.length - 1;
  var result = "", i, line;
  var lineNoLength = Math.min(mark.line + options.linesAfter, lineEnds.length).toString().length;
  var maxLineLength = options.maxLength - (options.indent + lineNoLength + 3);
  for (i = 1; i <= options.linesBefore; i++) {
    if (foundLineNo - i < 0) break;
    line = getLine(
      mark.buffer,
      lineStarts[foundLineNo - i],
      lineEnds[foundLineNo - i],
      mark.position - (lineStarts[foundLineNo] - lineStarts[foundLineNo - i]),
      maxLineLength
    );
    result = common.repeat(" ", options.indent) + padStart((mark.line - i + 1).toString(), lineNoLength) + " | " + line.str + "\n" + result;
  }
  line = getLine(mark.buffer, lineStarts[foundLineNo], lineEnds[foundLineNo], mark.position, maxLineLength);
  result += common.repeat(" ", options.indent) + padStart((mark.line + 1).toString(), lineNoLength) + " | " + line.str + "\n";
  result += common.repeat("-", options.indent + lineNoLength + 3 + line.pos) + "^\n";
  for (i = 1; i <= options.linesAfter; i++) {
    if (foundLineNo + i >= lineEnds.length) break;
    line = getLine(
      mark.buffer,
      lineStarts[foundLineNo + i],
      lineEnds[foundLineNo + i],
      mark.position - (lineStarts[foundLineNo] - lineStarts[foundLineNo + i]),
      maxLineLength
    );
    result += common.repeat(" ", options.indent) + padStart((mark.line + i + 1).toString(), lineNoLength) + " | " + line.str + "\n";
  }
  return result.replace(/\n$/, "");
}
var snippet = makeSnippet;
var TYPE_CONSTRUCTOR_OPTIONS = [
  "kind",
  "multi",
  "resolve",
  "construct",
  "instanceOf",
  "predicate",
  "represent",
  "representName",
  "defaultStyle",
  "styleAliases"
];
var YAML_NODE_KINDS = [
  "scalar",
  "sequence",
  "mapping"
];
function compileStyleAliases(map2) {
  var result = {};
  if (map2 !== null) {
    Object.keys(map2).forEach(function(style) {
      map2[style].forEach(function(alias) {
        result[String(alias)] = style;
      });
    });
  }
  return result;
}
function Type$1(tag, options) {
  options = options || {};
  Object.keys(options).forEach(function(name) {
    if (TYPE_CONSTRUCTOR_OPTIONS.indexOf(name) === -1) {
      throw new exception('Unknown option "' + name + '" is met in definition of "' + tag + '" YAML type.');
    }
  });
  this.options = options;
  this.tag = tag;
  this.kind = options["kind"] || null;
  this.resolve = options["resolve"] || function() {
    return true;
  };
  this.construct = options["construct"] || function(data) {
    return data;
  };
  this.instanceOf = options["instanceOf"] || null;
  this.predicate = options["predicate"] || null;
  this.represent = options["represent"] || null;
  this.representName = options["representName"] || null;
  this.defaultStyle = options["defaultStyle"] || null;
  this.multi = options["multi"] || false;
  this.styleAliases = compileStyleAliases(options["styleAliases"] || null);
  if (YAML_NODE_KINDS.indexOf(this.kind) === -1) {
    throw new exception('Unknown kind "' + this.kind + '" is specified for "' + tag + '" YAML type.');
  }
}
var type = Type$1;
function compileList(schema2, name) {
  var result = [];
  schema2[name].forEach(function(currentType) {
    var newIndex = result.length;
    result.forEach(function(previousType, previousIndex) {
      if (previousType.tag === currentType.tag && previousType.kind === currentType.kind && previousType.multi === currentType.multi) {
        newIndex = previousIndex;
      }
    });
    result[newIndex] = currentType;
  });
  return result;
}
function compileMap() {
  var result = {
    scalar: {},
    sequence: {},
    mapping: {},
    fallback: {},
    multi: {
      scalar: [],
      sequence: [],
      mapping: [],
      fallback: []
    }
  }, index, length;
  function collectType(type2) {
    if (type2.multi) {
      result.multi[type2.kind].push(type2);
      result.multi["fallback"].push(type2);
    } else {
      result[type2.kind][type2.tag] = result["fallback"][type2.tag] = type2;
    }
  }
  for (index = 0, length = arguments.length; index < length; index += 1) {
    arguments[index].forEach(collectType);
  }
  return result;
}
function Schema$1(definition) {
  return this.extend(definition);
}
Schema$1.prototype.extend = function extend2(definition) {
  var implicit = [];
  var explicit = [];
  if (definition instanceof type) {
    explicit.push(definition);
  } else if (Array.isArray(definition)) {
    explicit = explicit.concat(definition);
  } else if (definition && (Array.isArray(definition.implicit) || Array.isArray(definition.explicit))) {
    if (definition.implicit) implicit = implicit.concat(definition.implicit);
    if (definition.explicit) explicit = explicit.concat(definition.explicit);
  } else {
    throw new exception("Schema.extend argument should be a Type, [ Type ], or a schema definition ({ implicit: [...], explicit: [...] })");
  }
  implicit.forEach(function(type$1) {
    if (!(type$1 instanceof type)) {
      throw new exception("Specified list of YAML types (or a single Type object) contains a non-Type object.");
    }
    if (type$1.loadKind && type$1.loadKind !== "scalar") {
      throw new exception("There is a non-scalar type in the implicit list of a schema. Implicit resolving of such types is not supported.");
    }
    if (type$1.multi) {
      throw new exception("There is a multi type in the implicit list of a schema. Multi tags can only be listed as explicit.");
    }
  });
  explicit.forEach(function(type$1) {
    if (!(type$1 instanceof type)) {
      throw new exception("Specified list of YAML types (or a single Type object) contains a non-Type object.");
    }
  });
  var result = Object.create(Schema$1.prototype);
  result.implicit = (this.implicit || []).concat(implicit);
  result.explicit = (this.explicit || []).concat(explicit);
  result.compiledImplicit = compileList(result, "implicit");
  result.compiledExplicit = compileList(result, "explicit");
  result.compiledTypeMap = compileMap(result.compiledImplicit, result.compiledExplicit);
  return result;
};
var schema = Schema$1;
var str = new type("tag:yaml.org,2002:str", {
  kind: "scalar",
  construct: function(data) {
    return data !== null ? data : "";
  }
});
var seq = new type("tag:yaml.org,2002:seq", {
  kind: "sequence",
  construct: function(data) {
    return data !== null ? data : [];
  }
});
var map = new type("tag:yaml.org,2002:map", {
  kind: "mapping",
  construct: function(data) {
    return data !== null ? data : {};
  }
});
var failsafe = new schema({
  explicit: [
    str,
    seq,
    map
  ]
});
function resolveYamlNull(data) {
  if (data === null) return true;
  var max = data.length;
  return max === 1 && data === "~" || max === 4 && (data === "null" || data === "Null" || data === "NULL");
}
function constructYamlNull() {
  return null;
}
function isNull(object) {
  return object === null;
}
var _null = new type("tag:yaml.org,2002:null", {
  kind: "scalar",
  resolve: resolveYamlNull,
  construct: constructYamlNull,
  predicate: isNull,
  represent: {
    canonical: function() {
      return "~";
    },
    lowercase: function() {
      return "null";
    },
    uppercase: function() {
      return "NULL";
    },
    camelcase: function() {
      return "Null";
    },
    empty: function() {
      return "";
    }
  },
  defaultStyle: "lowercase"
});
function resolveYamlBoolean(data) {
  if (data === null) return false;
  var max = data.length;
  return max === 4 && (data === "true" || data === "True" || data === "TRUE") || max === 5 && (data === "false" || data === "False" || data === "FALSE");
}
function constructYamlBoolean(data) {
  return data === "true" || data === "True" || data === "TRUE";
}
function isBoolean(object) {
  return Object.prototype.toString.call(object) === "[object Boolean]";
}
var bool = new type("tag:yaml.org,2002:bool", {
  kind: "scalar",
  resolve: resolveYamlBoolean,
  construct: constructYamlBoolean,
  predicate: isBoolean,
  represent: {
    lowercase: function(object) {
      return object ? "true" : "false";
    },
    uppercase: function(object) {
      return object ? "TRUE" : "FALSE";
    },
    camelcase: function(object) {
      return object ? "True" : "False";
    }
  },
  defaultStyle: "lowercase"
});
function isHexCode(c) {
  return 48 <= c && c <= 57 || 65 <= c && c <= 70 || 97 <= c && c <= 102;
}
function isOctCode(c) {
  return 48 <= c && c <= 55;
}
function isDecCode(c) {
  return 48 <= c && c <= 57;
}
function resolveYamlInteger(data) {
  if (data === null) return false;
  var max = data.length, index = 0, hasDigits = false, ch2;
  if (!max) return false;
  ch2 = data[index];
  if (ch2 === "-" || ch2 === "+") {
    ch2 = data[++index];
  }
  if (ch2 === "0") {
    if (index + 1 === max) return true;
    ch2 = data[++index];
    if (ch2 === "b") {
      index++;
      for (; index < max; index++) {
        ch2 = data[index];
        if (ch2 === "_") continue;
        if (ch2 !== "0" && ch2 !== "1") return false;
        hasDigits = true;
      }
      return hasDigits && ch2 !== "_";
    }
    if (ch2 === "x") {
      index++;
      for (; index < max; index++) {
        ch2 = data[index];
        if (ch2 === "_") continue;
        if (!isHexCode(data.charCodeAt(index))) return false;
        hasDigits = true;
      }
      return hasDigits && ch2 !== "_";
    }
    if (ch2 === "o") {
      index++;
      for (; index < max; index++) {
        ch2 = data[index];
        if (ch2 === "_") continue;
        if (!isOctCode(data.charCodeAt(index))) return false;
        hasDigits = true;
      }
      return hasDigits && ch2 !== "_";
    }
  }
  if (ch2 === "_") return false;
  for (; index < max; index++) {
    ch2 = data[index];
    if (ch2 === "_") continue;
    if (!isDecCode(data.charCodeAt(index))) {
      return false;
    }
    hasDigits = true;
  }
  if (!hasDigits || ch2 === "_") return false;
  return true;
}
function constructYamlInteger(data) {
  var value = data, sign = 1, ch2;
  if (value.indexOf("_") !== -1) {
    value = value.replace(/_/g, "");
  }
  ch2 = value[0];
  if (ch2 === "-" || ch2 === "+") {
    if (ch2 === "-") sign = -1;
    value = value.slice(1);
    ch2 = value[0];
  }
  if (value === "0") return 0;
  if (ch2 === "0") {
    if (value[1] === "b") return sign * parseInt(value.slice(2), 2);
    if (value[1] === "x") return sign * parseInt(value.slice(2), 16);
    if (value[1] === "o") return sign * parseInt(value.slice(2), 8);
  }
  return sign * parseInt(value, 10);
}
function isInteger(object) {
  return Object.prototype.toString.call(object) === "[object Number]" && (object % 1 === 0 && !common.isNegativeZero(object));
}
var int = new type("tag:yaml.org,2002:int", {
  kind: "scalar",
  resolve: resolveYamlInteger,
  construct: constructYamlInteger,
  predicate: isInteger,
  represent: {
    binary: function(obj) {
      return obj >= 0 ? "0b" + obj.toString(2) : "-0b" + obj.toString(2).slice(1);
    },
    octal: function(obj) {
      return obj >= 0 ? "0o" + obj.toString(8) : "-0o" + obj.toString(8).slice(1);
    },
    decimal: function(obj) {
      return obj.toString(10);
    },
    /* eslint-disable max-len */
    hexadecimal: function(obj) {
      return obj >= 0 ? "0x" + obj.toString(16).toUpperCase() : "-0x" + obj.toString(16).toUpperCase().slice(1);
    }
  },
  defaultStyle: "decimal",
  styleAliases: {
    binary: [2, "bin"],
    octal: [8, "oct"],
    decimal: [10, "dec"],
    hexadecimal: [16, "hex"]
  }
});
var YAML_FLOAT_PATTERN = new RegExp(
  // 2.5e4, 2.5 and integers
  "^(?:[-+]?(?:[0-9][0-9_]*)(?:\\.[0-9_]*)?(?:[eE][-+]?[0-9]+)?|\\.[0-9_]+(?:[eE][-+]?[0-9]+)?|[-+]?\\.(?:inf|Inf|INF)|\\.(?:nan|NaN|NAN))$"
);
function resolveYamlFloat(data) {
  if (data === null) return false;
  if (!YAML_FLOAT_PATTERN.test(data) || // Quick hack to not allow integers end with `_`
  // Probably should update regexp & check speed
  data[data.length - 1] === "_") {
    return false;
  }
  return true;
}
function constructYamlFloat(data) {
  var value, sign;
  value = data.replace(/_/g, "").toLowerCase();
  sign = value[0] === "-" ? -1 : 1;
  if ("+-".indexOf(value[0]) >= 0) {
    value = value.slice(1);
  }
  if (value === ".inf") {
    return sign === 1 ? Number.POSITIVE_INFINITY : Number.NEGATIVE_INFINITY;
  } else if (value === ".nan") {
    return NaN;
  }
  return sign * parseFloat(value, 10);
}
var SCIENTIFIC_WITHOUT_DOT = /^[-+]?[0-9]+e/;
function representYamlFloat(object, style) {
  var res;
  if (isNaN(object)) {
    switch (style) {
      case "lowercase":
        return ".nan";
      case "uppercase":
        return ".NAN";
      case "camelcase":
        return ".NaN";
    }
  } else if (Number.POSITIVE_INFINITY === object) {
    switch (style) {
      case "lowercase":
        return ".inf";
      case "uppercase":
        return ".INF";
      case "camelcase":
        return ".Inf";
    }
  } else if (Number.NEGATIVE_INFINITY === object) {
    switch (style) {
      case "lowercase":
        return "-.inf";
      case "uppercase":
        return "-.INF";
      case "camelcase":
        return "-.Inf";
    }
  } else if (common.isNegativeZero(object)) {
    return "-0.0";
  }
  res = object.toString(10);
  return SCIENTIFIC_WITHOUT_DOT.test(res) ? res.replace("e", ".e") : res;
}
function isFloat(object) {
  return Object.prototype.toString.call(object) === "[object Number]" && (object % 1 !== 0 || common.isNegativeZero(object));
}
var float = new type("tag:yaml.org,2002:float", {
  kind: "scalar",
  resolve: resolveYamlFloat,
  construct: constructYamlFloat,
  predicate: isFloat,
  represent: representYamlFloat,
  defaultStyle: "lowercase"
});
var json = failsafe.extend({
  implicit: [
    _null,
    bool,
    int,
    float
  ]
});
var core = json;
var YAML_DATE_REGEXP = new RegExp(
  "^([0-9][0-9][0-9][0-9])-([0-9][0-9])-([0-9][0-9])$"
);
var YAML_TIMESTAMP_REGEXP = new RegExp(
  "^([0-9][0-9][0-9][0-9])-([0-9][0-9]?)-([0-9][0-9]?)(?:[Tt]|[ \\t]+)([0-9][0-9]?):([0-9][0-9]):([0-9][0-9])(?:\\.([0-9]*))?(?:[ \\t]*(Z|([-+])([0-9][0-9]?)(?::([0-9][0-9]))?))?$"
);
function resolveYamlTimestamp(data) {
  if (data === null) return false;
  if (YAML_DATE_REGEXP.exec(data) !== null) return true;
  if (YAML_TIMESTAMP_REGEXP.exec(data) !== null) return true;
  return false;
}
function constructYamlTimestamp(data) {
  var match, year, month, day, hour, minute, second, fraction = 0, delta = null, tz_hour, tz_minute, date;
  match = YAML_DATE_REGEXP.exec(data);
  if (match === null) match = YAML_TIMESTAMP_REGEXP.exec(data);
  if (match === null) throw new Error("Date resolve error");
  year = +match[1];
  month = +match[2] - 1;
  day = +match[3];
  if (!match[4]) {
    return new Date(Date.UTC(year, month, day));
  }
  hour = +match[4];
  minute = +match[5];
  second = +match[6];
  if (match[7]) {
    fraction = match[7].slice(0, 3);
    while (fraction.length < 3) {
      fraction += "0";
    }
    fraction = +fraction;
  }
  if (match[9]) {
    tz_hour = +match[10];
    tz_minute = +(match[11] || 0);
    delta = (tz_hour * 60 + tz_minute) * 6e4;
    if (match[9] === "-") delta = -delta;
  }
  date = new Date(Date.UTC(year, month, day, hour, minute, second, fraction));
  if (delta) date.setTime(date.getTime() - delta);
  return date;
}
function representYamlTimestamp(object) {
  return object.toISOString();
}
var timestamp = new type("tag:yaml.org,2002:timestamp", {
  kind: "scalar",
  resolve: resolveYamlTimestamp,
  construct: constructYamlTimestamp,
  instanceOf: Date,
  represent: representYamlTimestamp
});
function resolveYamlMerge(data) {
  return data === "<<" || data === null;
}
var merge = new type("tag:yaml.org,2002:merge", {
  kind: "scalar",
  resolve: resolveYamlMerge
});
var BASE64_MAP = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=\n\r";
function resolveYamlBinary(data) {
  if (data === null) return false;
  var code, idx, bitlen = 0, max = data.length, map2 = BASE64_MAP;
  for (idx = 0; idx < max; idx++) {
    code = map2.indexOf(data.charAt(idx));
    if (code > 64) continue;
    if (code < 0) return false;
    bitlen += 6;
  }
  return bitlen % 8 === 0;
}
function constructYamlBinary(data) {
  var idx, tailbits, input2 = data.replace(/[\r\n=]/g, ""), max = input2.length, map2 = BASE64_MAP, bits = 0, result = [];
  for (idx = 0; idx < max; idx++) {
    if (idx % 4 === 0 && idx) {
      result.push(bits >> 16 & 255);
      result.push(bits >> 8 & 255);
      result.push(bits & 255);
    }
    bits = bits << 6 | map2.indexOf(input2.charAt(idx));
  }
  tailbits = max % 4 * 6;
  if (tailbits === 0) {
    result.push(bits >> 16 & 255);
    result.push(bits >> 8 & 255);
    result.push(bits & 255);
  } else if (tailbits === 18) {
    result.push(bits >> 10 & 255);
    result.push(bits >> 2 & 255);
  } else if (tailbits === 12) {
    result.push(bits >> 4 & 255);
  }
  return new Uint8Array(result);
}
function representYamlBinary(object) {
  var result = "", bits = 0, idx, tail, max = object.length, map2 = BASE64_MAP;
  for (idx = 0; idx < max; idx++) {
    if (idx % 3 === 0 && idx) {
      result += map2[bits >> 18 & 63];
      result += map2[bits >> 12 & 63];
      result += map2[bits >> 6 & 63];
      result += map2[bits & 63];
    }
    bits = (bits << 8) + object[idx];
  }
  tail = max % 3;
  if (tail === 0) {
    result += map2[bits >> 18 & 63];
    result += map2[bits >> 12 & 63];
    result += map2[bits >> 6 & 63];
    result += map2[bits & 63];
  } else if (tail === 2) {
    result += map2[bits >> 10 & 63];
    result += map2[bits >> 4 & 63];
    result += map2[bits << 2 & 63];
    result += map2[64];
  } else if (tail === 1) {
    result += map2[bits >> 2 & 63];
    result += map2[bits << 4 & 63];
    result += map2[64];
    result += map2[64];
  }
  return result;
}
function isBinary(obj) {
  return Object.prototype.toString.call(obj) === "[object Uint8Array]";
}
var binary = new type("tag:yaml.org,2002:binary", {
  kind: "scalar",
  resolve: resolveYamlBinary,
  construct: constructYamlBinary,
  predicate: isBinary,
  represent: representYamlBinary
});
var _hasOwnProperty$3 = Object.prototype.hasOwnProperty;
var _toString$2 = Object.prototype.toString;
function resolveYamlOmap(data) {
  if (data === null) return true;
  var objectKeys = [], index, length, pair, pairKey, pairHasKey, object = data;
  for (index = 0, length = object.length; index < length; index += 1) {
    pair = object[index];
    pairHasKey = false;
    if (_toString$2.call(pair) !== "[object Object]") return false;
    for (pairKey in pair) {
      if (_hasOwnProperty$3.call(pair, pairKey)) {
        if (!pairHasKey) pairHasKey = true;
        else return false;
      }
    }
    if (!pairHasKey) return false;
    if (objectKeys.indexOf(pairKey) === -1) objectKeys.push(pairKey);
    else return false;
  }
  return true;
}
function constructYamlOmap(data) {
  return data !== null ? data : [];
}
var omap = new type("tag:yaml.org,2002:omap", {
  kind: "sequence",
  resolve: resolveYamlOmap,
  construct: constructYamlOmap
});
var _toString$1 = Object.prototype.toString;
function resolveYamlPairs(data) {
  if (data === null) return true;
  var index, length, pair, keys2, result, object = data;
  result = new Array(object.length);
  for (index = 0, length = object.length; index < length; index += 1) {
    pair = object[index];
    if (_toString$1.call(pair) !== "[object Object]") return false;
    keys2 = Object.keys(pair);
    if (keys2.length !== 1) return false;
    result[index] = [keys2[0], pair[keys2[0]]];
  }
  return true;
}
function constructYamlPairs(data) {
  if (data === null) return [];
  var index, length, pair, keys2, result, object = data;
  result = new Array(object.length);
  for (index = 0, length = object.length; index < length; index += 1) {
    pair = object[index];
    keys2 = Object.keys(pair);
    result[index] = [keys2[0], pair[keys2[0]]];
  }
  return result;
}
var pairs = new type("tag:yaml.org,2002:pairs", {
  kind: "sequence",
  resolve: resolveYamlPairs,
  construct: constructYamlPairs
});
var _hasOwnProperty$2 = Object.prototype.hasOwnProperty;
function resolveYamlSet(data) {
  if (data === null) return true;
  var key, object = data;
  for (key in object) {
    if (_hasOwnProperty$2.call(object, key)) {
      if (object[key] !== null) return false;
    }
  }
  return true;
}
function constructYamlSet(data) {
  return data !== null ? data : {};
}
var set = new type("tag:yaml.org,2002:set", {
  kind: "mapping",
  resolve: resolveYamlSet,
  construct: constructYamlSet
});
var _default = core.extend({
  implicit: [
    timestamp,
    merge
  ],
  explicit: [
    binary,
    omap,
    pairs,
    set
  ]
});
var _hasOwnProperty$1 = Object.prototype.hasOwnProperty;
var CONTEXT_FLOW_IN = 1;
var CONTEXT_FLOW_OUT = 2;
var CONTEXT_BLOCK_IN = 3;
var CONTEXT_BLOCK_OUT = 4;
var CHOMPING_CLIP = 1;
var CHOMPING_STRIP = 2;
var CHOMPING_KEEP = 3;
var PATTERN_NON_PRINTABLE = /[\x00-\x08\x0B\x0C\x0E-\x1F\x7F-\x84\x86-\x9F\uFFFE\uFFFF]|[\uD800-\uDBFF](?![\uDC00-\uDFFF])|(?:[^\uD800-\uDBFF]|^)[\uDC00-\uDFFF]/;
var PATTERN_NON_ASCII_LINE_BREAKS = /[\x85\u2028\u2029]/;
var PATTERN_FLOW_INDICATORS = /[,\[\]\{\}]/;
var PATTERN_TAG_HANDLE = /^(?:!|!!|![a-z\-]+!)$/i;
var PATTERN_TAG_URI = /^(?:!|[^,\[\]\{\}])(?:%[0-9a-f]{2}|[0-9a-z\-#;\/\?:@&=\+\$,_\.!~\*'\(\)\[\]])*$/i;
function _class(obj) {
  return Object.prototype.toString.call(obj);
}
function is_EOL(c) {
  return c === 10 || c === 13;
}
function is_WHITE_SPACE(c) {
  return c === 9 || c === 32;
}
function is_WS_OR_EOL(c) {
  return c === 9 || c === 32 || c === 10 || c === 13;
}
function is_FLOW_INDICATOR(c) {
  return c === 44 || c === 91 || c === 93 || c === 123 || c === 125;
}
function fromHexCode(c) {
  var lc2;
  if (48 <= c && c <= 57) {
    return c - 48;
  }
  lc2 = c | 32;
  if (97 <= lc2 && lc2 <= 102) {
    return lc2 - 97 + 10;
  }
  return -1;
}
function escapedHexLen(c) {
  if (c === 120) {
    return 2;
  }
  if (c === 117) {
    return 4;
  }
  if (c === 85) {
    return 8;
  }
  return 0;
}
function fromDecimalCode(c) {
  if (48 <= c && c <= 57) {
    return c - 48;
  }
  return -1;
}
function simpleEscapeSequence(c) {
  return c === 48 ? "\0" : c === 97 ? "\x07" : c === 98 ? "\b" : c === 116 ? "	" : c === 9 ? "	" : c === 110 ? "\n" : c === 118 ? "\v" : c === 102 ? "\f" : c === 114 ? "\r" : c === 101 ? "\x1B" : c === 32 ? " " : c === 34 ? '"' : c === 47 ? "/" : c === 92 ? "\\" : c === 78 ? "" : c === 95 ? " " : c === 76 ? "\u2028" : c === 80 ? "\u2029" : "";
}
function charFromCodepoint(c) {
  if (c <= 65535) {
    return String.fromCharCode(c);
  }
  return String.fromCharCode(
    (c - 65536 >> 10) + 55296,
    (c - 65536 & 1023) + 56320
  );
}
var simpleEscapeCheck = new Array(256);
var simpleEscapeMap = new Array(256);
for (var i = 0; i < 256; i++) {
  simpleEscapeCheck[i] = simpleEscapeSequence(i) ? 1 : 0;
  simpleEscapeMap[i] = simpleEscapeSequence(i);
}
function State$1(input2, options) {
  this.input = input2;
  this.filename = options["filename"] || null;
  this.schema = options["schema"] || _default;
  this.onWarning = options["onWarning"] || null;
  this.legacy = options["legacy"] || false;
  this.json = options["json"] || false;
  this.listener = options["listener"] || null;
  this.implicitTypes = this.schema.compiledImplicit;
  this.typeMap = this.schema.compiledTypeMap;
  this.length = input2.length;
  this.position = 0;
  this.line = 0;
  this.lineStart = 0;
  this.lineIndent = 0;
  this.firstTabInLine = -1;
  this.documents = [];
}
function generateError(state, message) {
  var mark = {
    name: state.filename,
    buffer: state.input.slice(0, -1),
    // omit trailing \0
    position: state.position,
    line: state.line,
    column: state.position - state.lineStart
  };
  mark.snippet = snippet(mark);
  return new exception(message, mark);
}
function throwError(state, message) {
  throw generateError(state, message);
}
function throwWarning(state, message) {
  if (state.onWarning) {
    state.onWarning.call(null, generateError(state, message));
  }
}
var directiveHandlers = {
  YAML: function handleYamlDirective(state, name, args) {
    var match, major, minor;
    if (state.version !== null) {
      throwError(state, "duplication of %YAML directive");
    }
    if (args.length !== 1) {
      throwError(state, "YAML directive accepts exactly one argument");
    }
    match = /^([0-9]+)\.([0-9]+)$/.exec(args[0]);
    if (match === null) {
      throwError(state, "ill-formed argument of the YAML directive");
    }
    major = parseInt(match[1], 10);
    minor = parseInt(match[2], 10);
    if (major !== 1) {
      throwError(state, "unacceptable YAML version of the document");
    }
    state.version = args[0];
    state.checkLineBreaks = minor < 2;
    if (minor !== 1 && minor !== 2) {
      throwWarning(state, "unsupported YAML version of the document");
    }
  },
  TAG: function handleTagDirective(state, name, args) {
    var handle, prefix;
    if (args.length !== 2) {
      throwError(state, "TAG directive accepts exactly two arguments");
    }
    handle = args[0];
    prefix = args[1];
    if (!PATTERN_TAG_HANDLE.test(handle)) {
      throwError(state, "ill-formed tag handle (first argument) of the TAG directive");
    }
    if (_hasOwnProperty$1.call(state.tagMap, handle)) {
      throwError(state, 'there is a previously declared suffix for "' + handle + '" tag handle');
    }
    if (!PATTERN_TAG_URI.test(prefix)) {
      throwError(state, "ill-formed tag prefix (second argument) of the TAG directive");
    }
    try {
      prefix = decodeURIComponent(prefix);
    } catch (err) {
      throwError(state, "tag prefix is malformed: " + prefix);
    }
    state.tagMap[handle] = prefix;
  }
};
function captureSegment(state, start, end, checkJson) {
  var _position, _length, _character, _result;
  if (start < end) {
    _result = state.input.slice(start, end);
    if (checkJson) {
      for (_position = 0, _length = _result.length; _position < _length; _position += 1) {
        _character = _result.charCodeAt(_position);
        if (!(_character === 9 || 32 <= _character && _character <= 1114111)) {
          throwError(state, "expected valid JSON character");
        }
      }
    } else if (PATTERN_NON_PRINTABLE.test(_result)) {
      throwError(state, "the stream contains non-printable characters");
    }
    state.result += _result;
  }
}
function mergeMappings(state, destination, source, overridableKeys) {
  var sourceKeys, key, index, quantity;
  if (!common.isObject(source)) {
    throwError(state, "cannot merge mappings; the provided source object is unacceptable");
  }
  sourceKeys = Object.keys(source);
  for (index = 0, quantity = sourceKeys.length; index < quantity; index += 1) {
    key = sourceKeys[index];
    if (!_hasOwnProperty$1.call(destination, key)) {
      destination[key] = source[key];
      overridableKeys[key] = true;
    }
  }
}
function storeMappingPair(state, _result, overridableKeys, keyTag, keyNode, valueNode, startLine, startLineStart, startPos) {
  var index, quantity;
  if (Array.isArray(keyNode)) {
    keyNode = Array.prototype.slice.call(keyNode);
    for (index = 0, quantity = keyNode.length; index < quantity; index += 1) {
      if (Array.isArray(keyNode[index])) {
        throwError(state, "nested arrays are not supported inside keys");
      }
      if (typeof keyNode === "object" && _class(keyNode[index]) === "[object Object]") {
        keyNode[index] = "[object Object]";
      }
    }
  }
  if (typeof keyNode === "object" && _class(keyNode) === "[object Object]") {
    keyNode = "[object Object]";
  }
  keyNode = String(keyNode);
  if (_result === null) {
    _result = {};
  }
  if (keyTag === "tag:yaml.org,2002:merge") {
    if (Array.isArray(valueNode)) {
      for (index = 0, quantity = valueNode.length; index < quantity; index += 1) {
        mergeMappings(state, _result, valueNode[index], overridableKeys);
      }
    } else {
      mergeMappings(state, _result, valueNode, overridableKeys);
    }
  } else {
    if (!state.json && !_hasOwnProperty$1.call(overridableKeys, keyNode) && _hasOwnProperty$1.call(_result, keyNode)) {
      state.line = startLine || state.line;
      state.lineStart = startLineStart || state.lineStart;
      state.position = startPos || state.position;
      throwError(state, "duplicated mapping key");
    }
    if (keyNode === "__proto__") {
      Object.defineProperty(_result, keyNode, {
        configurable: true,
        enumerable: true,
        writable: true,
        value: valueNode
      });
    } else {
      _result[keyNode] = valueNode;
    }
    delete overridableKeys[keyNode];
  }
  return _result;
}
function readLineBreak(state) {
  var ch2;
  ch2 = state.input.charCodeAt(state.position);
  if (ch2 === 10) {
    state.position++;
  } else if (ch2 === 13) {
    state.position++;
    if (state.input.charCodeAt(state.position) === 10) {
      state.position++;
    }
  } else {
    throwError(state, "a line break is expected");
  }
  state.line += 1;
  state.lineStart = state.position;
  state.firstTabInLine = -1;
}
function skipSeparationSpace(state, allowComments, checkIndent) {
  var lineBreaks = 0, ch2 = state.input.charCodeAt(state.position);
  while (ch2 !== 0) {
    while (is_WHITE_SPACE(ch2)) {
      if (ch2 === 9 && state.firstTabInLine === -1) {
        state.firstTabInLine = state.position;
      }
      ch2 = state.input.charCodeAt(++state.position);
    }
    if (allowComments && ch2 === 35) {
      do {
        ch2 = state.input.charCodeAt(++state.position);
      } while (ch2 !== 10 && ch2 !== 13 && ch2 !== 0);
    }
    if (is_EOL(ch2)) {
      readLineBreak(state);
      ch2 = state.input.charCodeAt(state.position);
      lineBreaks++;
      state.lineIndent = 0;
      while (ch2 === 32) {
        state.lineIndent++;
        ch2 = state.input.charCodeAt(++state.position);
      }
    } else {
      break;
    }
  }
  if (checkIndent !== -1 && lineBreaks !== 0 && state.lineIndent < checkIndent) {
    throwWarning(state, "deficient indentation");
  }
  return lineBreaks;
}
function testDocumentSeparator(state) {
  var _position = state.position, ch2;
  ch2 = state.input.charCodeAt(_position);
  if ((ch2 === 45 || ch2 === 46) && ch2 === state.input.charCodeAt(_position + 1) && ch2 === state.input.charCodeAt(_position + 2)) {
    _position += 3;
    ch2 = state.input.charCodeAt(_position);
    if (ch2 === 0 || is_WS_OR_EOL(ch2)) {
      return true;
    }
  }
  return false;
}
function writeFoldedLines(state, count) {
  if (count === 1) {
    state.result += " ";
  } else if (count > 1) {
    state.result += common.repeat("\n", count - 1);
  }
}
function readPlainScalar(state, nodeIndent, withinFlowCollection) {
  var preceding, following, captureStart, captureEnd, hasPendingContent, _line, _lineStart, _lineIndent, _kind = state.kind, _result = state.result, ch2;
  ch2 = state.input.charCodeAt(state.position);
  if (is_WS_OR_EOL(ch2) || is_FLOW_INDICATOR(ch2) || ch2 === 35 || ch2 === 38 || ch2 === 42 || ch2 === 33 || ch2 === 124 || ch2 === 62 || ch2 === 39 || ch2 === 34 || ch2 === 37 || ch2 === 64 || ch2 === 96) {
    return false;
  }
  if (ch2 === 63 || ch2 === 45) {
    following = state.input.charCodeAt(state.position + 1);
    if (is_WS_OR_EOL(following) || withinFlowCollection && is_FLOW_INDICATOR(following)) {
      return false;
    }
  }
  state.kind = "scalar";
  state.result = "";
  captureStart = captureEnd = state.position;
  hasPendingContent = false;
  while (ch2 !== 0) {
    if (ch2 === 58) {
      following = state.input.charCodeAt(state.position + 1);
      if (is_WS_OR_EOL(following) || withinFlowCollection && is_FLOW_INDICATOR(following)) {
        break;
      }
    } else if (ch2 === 35) {
      preceding = state.input.charCodeAt(state.position - 1);
      if (is_WS_OR_EOL(preceding)) {
        break;
      }
    } else if (state.position === state.lineStart && testDocumentSeparator(state) || withinFlowCollection && is_FLOW_INDICATOR(ch2)) {
      break;
    } else if (is_EOL(ch2)) {
      _line = state.line;
      _lineStart = state.lineStart;
      _lineIndent = state.lineIndent;
      skipSeparationSpace(state, false, -1);
      if (state.lineIndent >= nodeIndent) {
        hasPendingContent = true;
        ch2 = state.input.charCodeAt(state.position);
        continue;
      } else {
        state.position = captureEnd;
        state.line = _line;
        state.lineStart = _lineStart;
        state.lineIndent = _lineIndent;
        break;
      }
    }
    if (hasPendingContent) {
      captureSegment(state, captureStart, captureEnd, false);
      writeFoldedLines(state, state.line - _line);
      captureStart = captureEnd = state.position;
      hasPendingContent = false;
    }
    if (!is_WHITE_SPACE(ch2)) {
      captureEnd = state.position + 1;
    }
    ch2 = state.input.charCodeAt(++state.position);
  }
  captureSegment(state, captureStart, captureEnd, false);
  if (state.result) {
    return true;
  }
  state.kind = _kind;
  state.result = _result;
  return false;
}
function readSingleQuotedScalar(state, nodeIndent) {
  var ch2, captureStart, captureEnd;
  ch2 = state.input.charCodeAt(state.position);
  if (ch2 !== 39) {
    return false;
  }
  state.kind = "scalar";
  state.result = "";
  state.position++;
  captureStart = captureEnd = state.position;
  while ((ch2 = state.input.charCodeAt(state.position)) !== 0) {
    if (ch2 === 39) {
      captureSegment(state, captureStart, state.position, true);
      ch2 = state.input.charCodeAt(++state.position);
      if (ch2 === 39) {
        captureStart = state.position;
        state.position++;
        captureEnd = state.position;
      } else {
        return true;
      }
    } else if (is_EOL(ch2)) {
      captureSegment(state, captureStart, captureEnd, true);
      writeFoldedLines(state, skipSeparationSpace(state, false, nodeIndent));
      captureStart = captureEnd = state.position;
    } else if (state.position === state.lineStart && testDocumentSeparator(state)) {
      throwError(state, "unexpected end of the document within a single quoted scalar");
    } else {
      state.position++;
      captureEnd = state.position;
    }
  }
  throwError(state, "unexpected end of the stream within a single quoted scalar");
}
function readDoubleQuotedScalar(state, nodeIndent) {
  var captureStart, captureEnd, hexLength, hexResult, tmp, ch2;
  ch2 = state.input.charCodeAt(state.position);
  if (ch2 !== 34) {
    return false;
  }
  state.kind = "scalar";
  state.result = "";
  state.position++;
  captureStart = captureEnd = state.position;
  while ((ch2 = state.input.charCodeAt(state.position)) !== 0) {
    if (ch2 === 34) {
      captureSegment(state, captureStart, state.position, true);
      state.position++;
      return true;
    } else if (ch2 === 92) {
      captureSegment(state, captureStart, state.position, true);
      ch2 = state.input.charCodeAt(++state.position);
      if (is_EOL(ch2)) {
        skipSeparationSpace(state, false, nodeIndent);
      } else if (ch2 < 256 && simpleEscapeCheck[ch2]) {
        state.result += simpleEscapeMap[ch2];
        state.position++;
      } else if ((tmp = escapedHexLen(ch2)) > 0) {
        hexLength = tmp;
        hexResult = 0;
        for (; hexLength > 0; hexLength--) {
          ch2 = state.input.charCodeAt(++state.position);
          if ((tmp = fromHexCode(ch2)) >= 0) {
            hexResult = (hexResult << 4) + tmp;
          } else {
            throwError(state, "expected hexadecimal character");
          }
        }
        state.result += charFromCodepoint(hexResult);
        state.position++;
      } else {
        throwError(state, "unknown escape sequence");
      }
      captureStart = captureEnd = state.position;
    } else if (is_EOL(ch2)) {
      captureSegment(state, captureStart, captureEnd, true);
      writeFoldedLines(state, skipSeparationSpace(state, false, nodeIndent));
      captureStart = captureEnd = state.position;
    } else if (state.position === state.lineStart && testDocumentSeparator(state)) {
      throwError(state, "unexpected end of the document within a double quoted scalar");
    } else {
      state.position++;
      captureEnd = state.position;
    }
  }
  throwError(state, "unexpected end of the stream within a double quoted scalar");
}
function readFlowCollection(state, nodeIndent) {
  var readNext = true, _line, _lineStart, _pos, _tag = state.tag, _result, _anchor = state.anchor, following, terminator, isPair, isExplicitPair, isMapping, overridableKeys = /* @__PURE__ */ Object.create(null), keyNode, keyTag, valueNode, ch2;
  ch2 = state.input.charCodeAt(state.position);
  if (ch2 === 91) {
    terminator = 93;
    isMapping = false;
    _result = [];
  } else if (ch2 === 123) {
    terminator = 125;
    isMapping = true;
    _result = {};
  } else {
    return false;
  }
  if (state.anchor !== null) {
    state.anchorMap[state.anchor] = _result;
  }
  ch2 = state.input.charCodeAt(++state.position);
  while (ch2 !== 0) {
    skipSeparationSpace(state, true, nodeIndent);
    ch2 = state.input.charCodeAt(state.position);
    if (ch2 === terminator) {
      state.position++;
      state.tag = _tag;
      state.anchor = _anchor;
      state.kind = isMapping ? "mapping" : "sequence";
      state.result = _result;
      return true;
    } else if (!readNext) {
      throwError(state, "missed comma between flow collection entries");
    } else if (ch2 === 44) {
      throwError(state, "expected the node content, but found ','");
    }
    keyTag = keyNode = valueNode = null;
    isPair = isExplicitPair = false;
    if (ch2 === 63) {
      following = state.input.charCodeAt(state.position + 1);
      if (is_WS_OR_EOL(following)) {
        isPair = isExplicitPair = true;
        state.position++;
        skipSeparationSpace(state, true, nodeIndent);
      }
    }
    _line = state.line;
    _lineStart = state.lineStart;
    _pos = state.position;
    composeNode(state, nodeIndent, CONTEXT_FLOW_IN, false, true);
    keyTag = state.tag;
    keyNode = state.result;
    skipSeparationSpace(state, true, nodeIndent);
    ch2 = state.input.charCodeAt(state.position);
    if ((isExplicitPair || state.line === _line) && ch2 === 58) {
      isPair = true;
      ch2 = state.input.charCodeAt(++state.position);
      skipSeparationSpace(state, true, nodeIndent);
      composeNode(state, nodeIndent, CONTEXT_FLOW_IN, false, true);
      valueNode = state.result;
    }
    if (isMapping) {
      storeMappingPair(state, _result, overridableKeys, keyTag, keyNode, valueNode, _line, _lineStart, _pos);
    } else if (isPair) {
      _result.push(storeMappingPair(state, null, overridableKeys, keyTag, keyNode, valueNode, _line, _lineStart, _pos));
    } else {
      _result.push(keyNode);
    }
    skipSeparationSpace(state, true, nodeIndent);
    ch2 = state.input.charCodeAt(state.position);
    if (ch2 === 44) {
      readNext = true;
      ch2 = state.input.charCodeAt(++state.position);
    } else {
      readNext = false;
    }
  }
  throwError(state, "unexpected end of the stream within a flow collection");
}
function readBlockScalar(state, nodeIndent) {
  var captureStart, folding, chomping = CHOMPING_CLIP, didReadContent = false, detectedIndent = false, textIndent = nodeIndent, emptyLines = 0, atMoreIndented = false, tmp, ch2;
  ch2 = state.input.charCodeAt(state.position);
  if (ch2 === 124) {
    folding = false;
  } else if (ch2 === 62) {
    folding = true;
  } else {
    return false;
  }
  state.kind = "scalar";
  state.result = "";
  while (ch2 !== 0) {
    ch2 = state.input.charCodeAt(++state.position);
    if (ch2 === 43 || ch2 === 45) {
      if (CHOMPING_CLIP === chomping) {
        chomping = ch2 === 43 ? CHOMPING_KEEP : CHOMPING_STRIP;
      } else {
        throwError(state, "repeat of a chomping mode identifier");
      }
    } else if ((tmp = fromDecimalCode(ch2)) >= 0) {
      if (tmp === 0) {
        throwError(state, "bad explicit indentation width of a block scalar; it cannot be less than one");
      } else if (!detectedIndent) {
        textIndent = nodeIndent + tmp - 1;
        detectedIndent = true;
      } else {
        throwError(state, "repeat of an indentation width identifier");
      }
    } else {
      break;
    }
  }
  if (is_WHITE_SPACE(ch2)) {
    do {
      ch2 = state.input.charCodeAt(++state.position);
    } while (is_WHITE_SPACE(ch2));
    if (ch2 === 35) {
      do {
        ch2 = state.input.charCodeAt(++state.position);
      } while (!is_EOL(ch2) && ch2 !== 0);
    }
  }
  while (ch2 !== 0) {
    readLineBreak(state);
    state.lineIndent = 0;
    ch2 = state.input.charCodeAt(state.position);
    while ((!detectedIndent || state.lineIndent < textIndent) && ch2 === 32) {
      state.lineIndent++;
      ch2 = state.input.charCodeAt(++state.position);
    }
    if (!detectedIndent && state.lineIndent > textIndent) {
      textIndent = state.lineIndent;
    }
    if (is_EOL(ch2)) {
      emptyLines++;
      continue;
    }
    if (state.lineIndent < textIndent) {
      if (chomping === CHOMPING_KEEP) {
        state.result += common.repeat("\n", didReadContent ? 1 + emptyLines : emptyLines);
      } else if (chomping === CHOMPING_CLIP) {
        if (didReadContent) {
          state.result += "\n";
        }
      }
      break;
    }
    if (folding) {
      if (is_WHITE_SPACE(ch2)) {
        atMoreIndented = true;
        state.result += common.repeat("\n", didReadContent ? 1 + emptyLines : emptyLines);
      } else if (atMoreIndented) {
        atMoreIndented = false;
        state.result += common.repeat("\n", emptyLines + 1);
      } else if (emptyLines === 0) {
        if (didReadContent) {
          state.result += " ";
        }
      } else {
        state.result += common.repeat("\n", emptyLines);
      }
    } else {
      state.result += common.repeat("\n", didReadContent ? 1 + emptyLines : emptyLines);
    }
    didReadContent = true;
    detectedIndent = true;
    emptyLines = 0;
    captureStart = state.position;
    while (!is_EOL(ch2) && ch2 !== 0) {
      ch2 = state.input.charCodeAt(++state.position);
    }
    captureSegment(state, captureStart, state.position, false);
  }
  return true;
}
function readBlockSequence(state, nodeIndent) {
  var _line, _tag = state.tag, _anchor = state.anchor, _result = [], following, detected = false, ch2;
  if (state.firstTabInLine !== -1) return false;
  if (state.anchor !== null) {
    state.anchorMap[state.anchor] = _result;
  }
  ch2 = state.input.charCodeAt(state.position);
  while (ch2 !== 0) {
    if (state.firstTabInLine !== -1) {
      state.position = state.firstTabInLine;
      throwError(state, "tab characters must not be used in indentation");
    }
    if (ch2 !== 45) {
      break;
    }
    following = state.input.charCodeAt(state.position + 1);
    if (!is_WS_OR_EOL(following)) {
      break;
    }
    detected = true;
    state.position++;
    if (skipSeparationSpace(state, true, -1)) {
      if (state.lineIndent <= nodeIndent) {
        _result.push(null);
        ch2 = state.input.charCodeAt(state.position);
        continue;
      }
    }
    _line = state.line;
    composeNode(state, nodeIndent, CONTEXT_BLOCK_IN, false, true);
    _result.push(state.result);
    skipSeparationSpace(state, true, -1);
    ch2 = state.input.charCodeAt(state.position);
    if ((state.line === _line || state.lineIndent > nodeIndent) && ch2 !== 0) {
      throwError(state, "bad indentation of a sequence entry");
    } else if (state.lineIndent < nodeIndent) {
      break;
    }
  }
  if (detected) {
    state.tag = _tag;
    state.anchor = _anchor;
    state.kind = "sequence";
    state.result = _result;
    return true;
  }
  return false;
}
function readBlockMapping(state, nodeIndent, flowIndent) {
  var following, allowCompact, _line, _keyLine, _keyLineStart, _keyPos, _tag = state.tag, _anchor = state.anchor, _result = {}, overridableKeys = /* @__PURE__ */ Object.create(null), keyTag = null, keyNode = null, valueNode = null, atExplicitKey = false, detected = false, ch2;
  if (state.firstTabInLine !== -1) return false;
  if (state.anchor !== null) {
    state.anchorMap[state.anchor] = _result;
  }
  ch2 = state.input.charCodeAt(state.position);
  while (ch2 !== 0) {
    if (!atExplicitKey && state.firstTabInLine !== -1) {
      state.position = state.firstTabInLine;
      throwError(state, "tab characters must not be used in indentation");
    }
    following = state.input.charCodeAt(state.position + 1);
    _line = state.line;
    if ((ch2 === 63 || ch2 === 58) && is_WS_OR_EOL(following)) {
      if (ch2 === 63) {
        if (atExplicitKey) {
          storeMappingPair(state, _result, overridableKeys, keyTag, keyNode, null, _keyLine, _keyLineStart, _keyPos);
          keyTag = keyNode = valueNode = null;
        }
        detected = true;
        atExplicitKey = true;
        allowCompact = true;
      } else if (atExplicitKey) {
        atExplicitKey = false;
        allowCompact = true;
      } else {
        throwError(state, "incomplete explicit mapping pair; a key node is missed; or followed by a non-tabulated empty line");
      }
      state.position += 1;
      ch2 = following;
    } else {
      _keyLine = state.line;
      _keyLineStart = state.lineStart;
      _keyPos = state.position;
      if (!composeNode(state, flowIndent, CONTEXT_FLOW_OUT, false, true)) {
        break;
      }
      if (state.line === _line) {
        ch2 = state.input.charCodeAt(state.position);
        while (is_WHITE_SPACE(ch2)) {
          ch2 = state.input.charCodeAt(++state.position);
        }
        if (ch2 === 58) {
          ch2 = state.input.charCodeAt(++state.position);
          if (!is_WS_OR_EOL(ch2)) {
            throwError(state, "a whitespace character is expected after the key-value separator within a block mapping");
          }
          if (atExplicitKey) {
            storeMappingPair(state, _result, overridableKeys, keyTag, keyNode, null, _keyLine, _keyLineStart, _keyPos);
            keyTag = keyNode = valueNode = null;
          }
          detected = true;
          atExplicitKey = false;
          allowCompact = false;
          keyTag = state.tag;
          keyNode = state.result;
        } else if (detected) {
          throwError(state, "can not read an implicit mapping pair; a colon is missed");
        } else {
          state.tag = _tag;
          state.anchor = _anchor;
          return true;
        }
      } else if (detected) {
        throwError(state, "can not read a block mapping entry; a multiline key may not be an implicit key");
      } else {
        state.tag = _tag;
        state.anchor = _anchor;
        return true;
      }
    }
    if (state.line === _line || state.lineIndent > nodeIndent) {
      if (atExplicitKey) {
        _keyLine = state.line;
        _keyLineStart = state.lineStart;
        _keyPos = state.position;
      }
      if (composeNode(state, nodeIndent, CONTEXT_BLOCK_OUT, true, allowCompact)) {
        if (atExplicitKey) {
          keyNode = state.result;
        } else {
          valueNode = state.result;
        }
      }
      if (!atExplicitKey) {
        storeMappingPair(state, _result, overridableKeys, keyTag, keyNode, valueNode, _keyLine, _keyLineStart, _keyPos);
        keyTag = keyNode = valueNode = null;
      }
      skipSeparationSpace(state, true, -1);
      ch2 = state.input.charCodeAt(state.position);
    }
    if ((state.line === _line || state.lineIndent > nodeIndent) && ch2 !== 0) {
      throwError(state, "bad indentation of a mapping entry");
    } else if (state.lineIndent < nodeIndent) {
      break;
    }
  }
  if (atExplicitKey) {
    storeMappingPair(state, _result, overridableKeys, keyTag, keyNode, null, _keyLine, _keyLineStart, _keyPos);
  }
  if (detected) {
    state.tag = _tag;
    state.anchor = _anchor;
    state.kind = "mapping";
    state.result = _result;
  }
  return detected;
}
function readTagProperty(state) {
  var _position, isVerbatim = false, isNamed = false, tagHandle, tagName, ch2;
  ch2 = state.input.charCodeAt(state.position);
  if (ch2 !== 33) return false;
  if (state.tag !== null) {
    throwError(state, "duplication of a tag property");
  }
  ch2 = state.input.charCodeAt(++state.position);
  if (ch2 === 60) {
    isVerbatim = true;
    ch2 = state.input.charCodeAt(++state.position);
  } else if (ch2 === 33) {
    isNamed = true;
    tagHandle = "!!";
    ch2 = state.input.charCodeAt(++state.position);
  } else {
    tagHandle = "!";
  }
  _position = state.position;
  if (isVerbatim) {
    do {
      ch2 = state.input.charCodeAt(++state.position);
    } while (ch2 !== 0 && ch2 !== 62);
    if (state.position < state.length) {
      tagName = state.input.slice(_position, state.position);
      ch2 = state.input.charCodeAt(++state.position);
    } else {
      throwError(state, "unexpected end of the stream within a verbatim tag");
    }
  } else {
    while (ch2 !== 0 && !is_WS_OR_EOL(ch2)) {
      if (ch2 === 33) {
        if (!isNamed) {
          tagHandle = state.input.slice(_position - 1, state.position + 1);
          if (!PATTERN_TAG_HANDLE.test(tagHandle)) {
            throwError(state, "named tag handle cannot contain such characters");
          }
          isNamed = true;
          _position = state.position + 1;
        } else {
          throwError(state, "tag suffix cannot contain exclamation marks");
        }
      }
      ch2 = state.input.charCodeAt(++state.position);
    }
    tagName = state.input.slice(_position, state.position);
    if (PATTERN_FLOW_INDICATORS.test(tagName)) {
      throwError(state, "tag suffix cannot contain flow indicator characters");
    }
  }
  if (tagName && !PATTERN_TAG_URI.test(tagName)) {
    throwError(state, "tag name cannot contain such characters: " + tagName);
  }
  try {
    tagName = decodeURIComponent(tagName);
  } catch (err) {
    throwError(state, "tag name is malformed: " + tagName);
  }
  if (isVerbatim) {
    state.tag = tagName;
  } else if (_hasOwnProperty$1.call(state.tagMap, tagHandle)) {
    state.tag = state.tagMap[tagHandle] + tagName;
  } else if (tagHandle === "!") {
    state.tag = "!" + tagName;
  } else if (tagHandle === "!!") {
    state.tag = "tag:yaml.org,2002:" + tagName;
  } else {
    throwError(state, 'undeclared tag handle "' + tagHandle + '"');
  }
  return true;
}
function readAnchorProperty(state) {
  var _position, ch2;
  ch2 = state.input.charCodeAt(state.position);
  if (ch2 !== 38) return false;
  if (state.anchor !== null) {
    throwError(state, "duplication of an anchor property");
  }
  ch2 = state.input.charCodeAt(++state.position);
  _position = state.position;
  while (ch2 !== 0 && !is_WS_OR_EOL(ch2) && !is_FLOW_INDICATOR(ch2)) {
    ch2 = state.input.charCodeAt(++state.position);
  }
  if (state.position === _position) {
    throwError(state, "name of an anchor node must contain at least one character");
  }
  state.anchor = state.input.slice(_position, state.position);
  return true;
}
function readAlias(state) {
  var _position, alias, ch2;
  ch2 = state.input.charCodeAt(state.position);
  if (ch2 !== 42) return false;
  ch2 = state.input.charCodeAt(++state.position);
  _position = state.position;
  while (ch2 !== 0 && !is_WS_OR_EOL(ch2) && !is_FLOW_INDICATOR(ch2)) {
    ch2 = state.input.charCodeAt(++state.position);
  }
  if (state.position === _position) {
    throwError(state, "name of an alias node must contain at least one character");
  }
  alias = state.input.slice(_position, state.position);
  if (!_hasOwnProperty$1.call(state.anchorMap, alias)) {
    throwError(state, 'unidentified alias "' + alias + '"');
  }
  state.result = state.anchorMap[alias];
  skipSeparationSpace(state, true, -1);
  return true;
}
function composeNode(state, parentIndent, nodeContext, allowToSeek, allowCompact) {
  var allowBlockStyles, allowBlockScalars, allowBlockCollections, indentStatus = 1, atNewLine = false, hasContent = false, typeIndex, typeQuantity, typeList, type2, flowIndent, blockIndent;
  if (state.listener !== null) {
    state.listener("open", state);
  }
  state.tag = null;
  state.anchor = null;
  state.kind = null;
  state.result = null;
  allowBlockStyles = allowBlockScalars = allowBlockCollections = CONTEXT_BLOCK_OUT === nodeContext || CONTEXT_BLOCK_IN === nodeContext;
  if (allowToSeek) {
    if (skipSeparationSpace(state, true, -1)) {
      atNewLine = true;
      if (state.lineIndent > parentIndent) {
        indentStatus = 1;
      } else if (state.lineIndent === parentIndent) {
        indentStatus = 0;
      } else if (state.lineIndent < parentIndent) {
        indentStatus = -1;
      }
    }
  }
  if (indentStatus === 1) {
    while (readTagProperty(state) || readAnchorProperty(state)) {
      if (skipSeparationSpace(state, true, -1)) {
        atNewLine = true;
        allowBlockCollections = allowBlockStyles;
        if (state.lineIndent > parentIndent) {
          indentStatus = 1;
        } else if (state.lineIndent === parentIndent) {
          indentStatus = 0;
        } else if (state.lineIndent < parentIndent) {
          indentStatus = -1;
        }
      } else {
        allowBlockCollections = false;
      }
    }
  }
  if (allowBlockCollections) {
    allowBlockCollections = atNewLine || allowCompact;
  }
  if (indentStatus === 1 || CONTEXT_BLOCK_OUT === nodeContext) {
    if (CONTEXT_FLOW_IN === nodeContext || CONTEXT_FLOW_OUT === nodeContext) {
      flowIndent = parentIndent;
    } else {
      flowIndent = parentIndent + 1;
    }
    blockIndent = state.position - state.lineStart;
    if (indentStatus === 1) {
      if (allowBlockCollections && (readBlockSequence(state, blockIndent) || readBlockMapping(state, blockIndent, flowIndent)) || readFlowCollection(state, flowIndent)) {
        hasContent = true;
      } else {
        if (allowBlockScalars && readBlockScalar(state, flowIndent) || readSingleQuotedScalar(state, flowIndent) || readDoubleQuotedScalar(state, flowIndent)) {
          hasContent = true;
        } else if (readAlias(state)) {
          hasContent = true;
          if (state.tag !== null || state.anchor !== null) {
            throwError(state, "alias node should not have any properties");
          }
        } else if (readPlainScalar(state, flowIndent, CONTEXT_FLOW_IN === nodeContext)) {
          hasContent = true;
          if (state.tag === null) {
            state.tag = "?";
          }
        }
        if (state.anchor !== null) {
          state.anchorMap[state.anchor] = state.result;
        }
      }
    } else if (indentStatus === 0) {
      hasContent = allowBlockCollections && readBlockSequence(state, blockIndent);
    }
  }
  if (state.tag === null) {
    if (state.anchor !== null) {
      state.anchorMap[state.anchor] = state.result;
    }
  } else if (state.tag === "?") {
    if (state.result !== null && state.kind !== "scalar") {
      throwError(state, 'unacceptable node kind for !<?> tag; it should be "scalar", not "' + state.kind + '"');
    }
    for (typeIndex = 0, typeQuantity = state.implicitTypes.length; typeIndex < typeQuantity; typeIndex += 1) {
      type2 = state.implicitTypes[typeIndex];
      if (type2.resolve(state.result)) {
        state.result = type2.construct(state.result);
        state.tag = type2.tag;
        if (state.anchor !== null) {
          state.anchorMap[state.anchor] = state.result;
        }
        break;
      }
    }
  } else if (state.tag !== "!") {
    if (_hasOwnProperty$1.call(state.typeMap[state.kind || "fallback"], state.tag)) {
      type2 = state.typeMap[state.kind || "fallback"][state.tag];
    } else {
      type2 = null;
      typeList = state.typeMap.multi[state.kind || "fallback"];
      for (typeIndex = 0, typeQuantity = typeList.length; typeIndex < typeQuantity; typeIndex += 1) {
        if (state.tag.slice(0, typeList[typeIndex].tag.length) === typeList[typeIndex].tag) {
          type2 = typeList[typeIndex];
          break;
        }
      }
    }
    if (!type2) {
      throwError(state, "unknown tag !<" + state.tag + ">");
    }
    if (state.result !== null && type2.kind !== state.kind) {
      throwError(state, "unacceptable node kind for !<" + state.tag + '> tag; it should be "' + type2.kind + '", not "' + state.kind + '"');
    }
    if (!type2.resolve(state.result, state.tag)) {
      throwError(state, "cannot resolve a node with !<" + state.tag + "> explicit tag");
    } else {
      state.result = type2.construct(state.result, state.tag);
      if (state.anchor !== null) {
        state.anchorMap[state.anchor] = state.result;
      }
    }
  }
  if (state.listener !== null) {
    state.listener("close", state);
  }
  return state.tag !== null || state.anchor !== null || hasContent;
}
function readDocument(state) {
  var documentStart = state.position, _position, directiveName, directiveArgs, hasDirectives = false, ch2;
  state.version = null;
  state.checkLineBreaks = state.legacy;
  state.tagMap = /* @__PURE__ */ Object.create(null);
  state.anchorMap = /* @__PURE__ */ Object.create(null);
  while ((ch2 = state.input.charCodeAt(state.position)) !== 0) {
    skipSeparationSpace(state, true, -1);
    ch2 = state.input.charCodeAt(state.position);
    if (state.lineIndent > 0 || ch2 !== 37) {
      break;
    }
    hasDirectives = true;
    ch2 = state.input.charCodeAt(++state.position);
    _position = state.position;
    while (ch2 !== 0 && !is_WS_OR_EOL(ch2)) {
      ch2 = state.input.charCodeAt(++state.position);
    }
    directiveName = state.input.slice(_position, state.position);
    directiveArgs = [];
    if (directiveName.length < 1) {
      throwError(state, "directive name must not be less than one character in length");
    }
    while (ch2 !== 0) {
      while (is_WHITE_SPACE(ch2)) {
        ch2 = state.input.charCodeAt(++state.position);
      }
      if (ch2 === 35) {
        do {
          ch2 = state.input.charCodeAt(++state.position);
        } while (ch2 !== 0 && !is_EOL(ch2));
        break;
      }
      if (is_EOL(ch2)) break;
      _position = state.position;
      while (ch2 !== 0 && !is_WS_OR_EOL(ch2)) {
        ch2 = state.input.charCodeAt(++state.position);
      }
      directiveArgs.push(state.input.slice(_position, state.position));
    }
    if (ch2 !== 0) readLineBreak(state);
    if (_hasOwnProperty$1.call(directiveHandlers, directiveName)) {
      directiveHandlers[directiveName](state, directiveName, directiveArgs);
    } else {
      throwWarning(state, 'unknown document directive "' + directiveName + '"');
    }
  }
  skipSeparationSpace(state, true, -1);
  if (state.lineIndent === 0 && state.input.charCodeAt(state.position) === 45 && state.input.charCodeAt(state.position + 1) === 45 && state.input.charCodeAt(state.position + 2) === 45) {
    state.position += 3;
    skipSeparationSpace(state, true, -1);
  } else if (hasDirectives) {
    throwError(state, "directives end mark is expected");
  }
  composeNode(state, state.lineIndent - 1, CONTEXT_BLOCK_OUT, false, true);
  skipSeparationSpace(state, true, -1);
  if (state.checkLineBreaks && PATTERN_NON_ASCII_LINE_BREAKS.test(state.input.slice(documentStart, state.position))) {
    throwWarning(state, "non-ASCII line breaks are interpreted as content");
  }
  state.documents.push(state.result);
  if (state.position === state.lineStart && testDocumentSeparator(state)) {
    if (state.input.charCodeAt(state.position) === 46) {
      state.position += 3;
      skipSeparationSpace(state, true, -1);
    }
    return;
  }
  if (state.position < state.length - 1) {
    throwError(state, "end of the stream or a document separator is expected");
  } else {
    return;
  }
}
function loadDocuments(input2, options) {
  input2 = String(input2);
  options = options || {};
  if (input2.length !== 0) {
    if (input2.charCodeAt(input2.length - 1) !== 10 && input2.charCodeAt(input2.length - 1) !== 13) {
      input2 += "\n";
    }
    if (input2.charCodeAt(0) === 65279) {
      input2 = input2.slice(1);
    }
  }
  var state = new State$1(input2, options);
  var nullpos = input2.indexOf("\0");
  if (nullpos !== -1) {
    state.position = nullpos;
    throwError(state, "null byte is not allowed in input");
  }
  state.input += "\0";
  while (state.input.charCodeAt(state.position) === 32) {
    state.lineIndent += 1;
    state.position += 1;
  }
  while (state.position < state.length - 1) {
    readDocument(state);
  }
  return state.documents;
}
function loadAll$1(input2, iterator, options) {
  if (iterator !== null && typeof iterator === "object" && typeof options === "undefined") {
    options = iterator;
    iterator = null;
  }
  var documents = loadDocuments(input2, options);
  if (typeof iterator !== "function") {
    return documents;
  }
  for (var index = 0, length = documents.length; index < length; index += 1) {
    iterator(documents[index]);
  }
}
function load$1(input2, options) {
  var documents = loadDocuments(input2, options);
  if (documents.length === 0) {
    return void 0;
  } else if (documents.length === 1) {
    return documents[0];
  }
  throw new exception("expected a single document in the stream, but found more");
}
var loadAll_1 = loadAll$1;
var load_1 = load$1;
var loader = {
  loadAll: loadAll_1,
  load: load_1
};
var load = loader.load;
function loadFromLocalStorage(key) {
  const item = localStorage.getItem(key);
  return item ? JSON.parse(item) : null;
}
function saveToLocalStorage(key, value) {
  localStorage.setItem(key, JSON.stringify(value));
}
function clearSongDBFromLocalStorage() {
  Object.keys(localStorage).filter((key) => key.startsWith("songDB")).forEach((key) => localStorage.removeItem(key));
}
async function fetchSongs() {
  let savedSongDB = loadFromLocalStorage("songDB");
  const savedHash = localStorage.getItem("songDB.hash");
  const timeOut = savedSongDB ? 1e3 : 3e3;
  let newHash;
  try {
    const response2 = await fetch(`${"/domcikuv-zpevnik-v2"}/songDB.hash`, { signal: AbortSignal.timeout(timeOut) });
    newHash = await response2.text();
  } catch {
    if (savedSongDB) {
      console.log("Failed to load hash but found SongDB in LocalStorage!");
      savedSongDB.songs = savedSongDB.songs.map((s) => SongData.fromJSON(s));
      return savedSongDB;
    }
    throw new Error("Failed to fetch song hash and no data in LocalStorage!");
  }
  if (savedHash === newHash) {
    savedSongDB.songs = savedSongDB.songs.map((s) => SongData.fromJSON(s));
    return savedSongDB;
  }
  console.log("New DB detected -> Clearing LocalStorage!");
  clearSongDBFromLocalStorage();
  const response = await fetch(`${"/domcikuv-zpevnik-v2"}/songDB.json`);
  if (!response.ok) {
    throw new Error("Failed to fetch songs");
  }
  try {
    const data = await response.json();
    const songs = data.map((d) => new SongData(d));
    let languages = {};
    songs.forEach((song) => {
      languages[song.language] = (languages[song.language] || 0) + 1;
    });
    const songRanges = songs.map((s) => {
      var _a;
      return (_a = s.range) == null ? void 0 : _a.semitones;
    }).filter(Boolean);
    const songDB = {
      maxRange: Math.max(...songRanges),
      languages,
      songs
    };
    saveToLocalStorage("songDB", songDB);
    localStorage.setItem("songDB.hash", newHash);
    return songDB;
  } catch (error) {
    console.error("Error parsing song data:", error);
    throw error;
  }
}
async function fetchSongContent({ params }) {
  const songDB = await fetchSongs();
  const songData = songDB.songs.find((song) => song.id === params.id);
  if (!songData) {
    console.log(`Could not find song ${params.id}`);
    throw new Response("Song not Found", { status: 404 });
  }
  const contentKey = `songDB/${songData.chordproFile}`;
  let songContent = localStorage.getItem(contentKey);
  if (!songContent) {
    const response = await fetch(`${"/domcikuv-zpevnik-v2"}/songs/chordpro/${songData.chordproFile}`);
    songContent = await response.text();
    localStorage.setItem(contentKey, songContent);
  }
  songData.content = songContent;
  return songData;
}
async function fetchIllustrationPrompt(id2) {
  const songDB = await fetchSongs();
  const songData = songDB.songs.find((song) => song.id === id2);
  if (!songData) {
    console.log(`Could not find song ${id2}`);
    throw new Response("Song not Found", { status: 404 });
  }
  const promptFilename = songData.chordproFile.split(".").slice(0, -1) + ".yaml";
  const promptKey = `songDB/${promptFilename}`;
  let promptContent = localStorage.getItem(promptKey);
  if (!promptContent) {
    const response = await fetch(`${"/domcikuv-zpevnik-v2"}/songs/image_prompts/${promptFilename}`);
    promptContent = await response.text();
    localStorage.setItem(promptKey, promptContent);
  }
  return load(promptContent);
}
function _extends() {
  _extends = Object.assign || function(target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i];
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }
    return target;
  };
  return _extends.apply(this, arguments);
}
function _inheritsLoose(subClass, superClass) {
  subClass.prototype = Object.create(superClass.prototype);
  subClass.prototype.constructor = subClass;
  _setPrototypeOf(subClass, superClass);
}
function _setPrototypeOf(o, p2) {
  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf2(o2, p22) {
    o2.__proto__ = p22;
    return o2;
  };
  return _setPrototypeOf(o, p2);
}
var Masonry = /* @__PURE__ */ function(_React$Component) {
  _inheritsLoose(Masonry2, _React$Component);
  function Masonry2() {
    return _React$Component.apply(this, arguments) || this;
  }
  var _proto = Masonry2.prototype;
  _proto.componentDidUpdate = function componentDidUpdate() {
    if (!this.state.hasDistributed && !this.props.sequential) this.distributeChildren();
  };
  Masonry2.getDerivedStateFromProps = function getDerivedStateFromProps(props, state) {
    var children = props.children, columnsCount = props.columnsCount;
    if (state && children === state.children) return null;
    return _extends({}, Masonry2.getEqualCountColumns(children, columnsCount), {
      children,
      hasDistributed: false
    });
  };
  _proto.distributeChildren = function distributeChildren() {
    var _this = this;
    var _this$props = this.props, children = _this$props.children, columnsCount = _this$props.columnsCount;
    var columnHeights = Array(columnsCount).fill(0);
    var isReady = this.state.childRefs.every(function(ref) {
      return ref.current.getBoundingClientRect().height;
    });
    if (!isReady) return;
    var columns = Array.from({
      length: columnsCount
    }, function() {
      return [];
    });
    var validIndex = 0;
    React$1.Children.forEach(children, function(child) {
      if (child && React$1.isValidElement(child)) {
        var childHeight = _this.state.childRefs[validIndex].current.getBoundingClientRect().height;
        var minHeightColumnIndex = columnHeights.indexOf(Math.min.apply(Math, columnHeights));
        columnHeights[minHeightColumnIndex] += childHeight;
        columns[minHeightColumnIndex].push(child);
        validIndex++;
      }
    });
    this.setState(function(p2) {
      return _extends({}, p2, {
        columns,
        hasDistributed: true
      });
    });
  };
  Masonry2.getEqualCountColumns = function getEqualCountColumns(children, columnsCount) {
    var columns = Array.from({
      length: columnsCount
    }, function() {
      return [];
    });
    var validIndex = 0;
    var childRefs = [];
    React$1.Children.forEach(children, function(child) {
      if (child && React$1.isValidElement(child)) {
        var ref = React$1.createRef();
        childRefs.push(ref);
        columns[validIndex % columnsCount].push(
          /* @__PURE__ */ React$1.createElement("div", {
            style: {
              display: "flex",
              justifyContent: "stretch"
            },
            key: validIndex,
            ref
          }, child)
          // React.cloneElement(child, {ref}) // cannot attach refs to functional components without forwardRef
        );
        validIndex++;
      }
    });
    return {
      columns,
      childRefs
    };
  };
  _proto.renderColumns = function renderColumns() {
    var _this$props2 = this.props, gutter = _this$props2.gutter, itemTag = _this$props2.itemTag, itemStyle = _this$props2.itemStyle;
    return this.state.columns.map(function(column, i) {
      return React$1.createElement(itemTag, {
        key: i,
        style: _extends({
          display: "flex",
          flexDirection: "column",
          justifyContent: "flex-start",
          alignContent: "stretch",
          flex: 1,
          width: 0,
          gap: gutter
        }, itemStyle)
      }, column.map(function(item) {
        return item;
      }));
    });
  };
  _proto.render = function render() {
    var _this$props3 = this.props, gutter = _this$props3.gutter, className = _this$props3.className, style = _this$props3.style, containerTag = _this$props3.containerTag;
    return React$1.createElement(containerTag, {
      style: _extends({
        display: "flex",
        flexDirection: "row",
        justifyContent: "center",
        alignContent: "stretch",
        boxSizing: "border-box",
        width: "100%",
        gap: gutter
      }, style),
      className
    }, this.renderColumns());
  };
  return Masonry2;
}(React$1.Component);
Masonry.propTypes = {};
Masonry.defaultProps = {
  columnsCount: 3,
  gutter: "0",
  className: null,
  style: {},
  containerTag: "div",
  itemTag: "div",
  itemStyle: {},
  sequential: false
};
var DEFAULT_COLUMNS_COUNT = 1;
var useIsomorphicLayoutEffect = typeof window !== "undefined" ? reactExports.useLayoutEffect : reactExports.useEffect;
var useHasMounted = function useHasMounted2() {
  var _useState = reactExports.useState(false), hasMounted = _useState[0], setHasMounted = _useState[1];
  useIsomorphicLayoutEffect(function() {
    setHasMounted(true);
  }, []);
  return hasMounted;
};
var useWindowWidth = function useWindowWidth2() {
  var hasMounted = useHasMounted();
  var _useState2 = reactExports.useState(typeof window !== "undefined" ? window.innerWidth : 0), width = _useState2[0], setWidth = _useState2[1];
  var handleResize = reactExports.useCallback(function() {
    if (!hasMounted) return;
    setWidth(window.innerWidth);
  }, [hasMounted]);
  useIsomorphicLayoutEffect(function() {
    if (hasMounted) {
      window.addEventListener("resize", handleResize);
      handleResize();
      return function() {
        return window.removeEventListener("resize", handleResize);
      };
    }
  }, [hasMounted, handleResize]);
  return width;
};
var MasonryResponsive = function MasonryResponsive2(_ref) {
  var _ref$columnsCountBrea = _ref.columnsCountBreakPoints, columnsCountBreakPoints = _ref$columnsCountBrea === void 0 ? {
    350: 1,
    750: 2,
    900: 3
  } : _ref$columnsCountBrea, children = _ref.children, _ref$className = _ref.className, className = _ref$className === void 0 ? null : _ref$className, _ref$style = _ref.style, style = _ref$style === void 0 ? null : _ref$style;
  var windowWidth = useWindowWidth();
  var columnsCount = reactExports.useMemo(function() {
    var breakPoints = Object.keys(columnsCountBreakPoints).sort(function(a2, b) {
      return a2 - b;
    });
    var count = breakPoints.length > 0 ? columnsCountBreakPoints[breakPoints[0]] : DEFAULT_COLUMNS_COUNT;
    breakPoints.forEach(function(breakPoint) {
      if (breakPoint < windowWidth) {
        count = columnsCountBreakPoints[breakPoint];
      }
    });
    return count;
  }, [windowWidth, columnsCountBreakPoints]);
  return /* @__PURE__ */ React$1.createElement("div", {
    className,
    style
  }, React$1.Children.map(children, function(child, index) {
    return React$1.cloneElement(child, {
      key: index,
      columnsCount
    });
  }));
};
MasonryResponsive.propTypes = {};
const getShuffledArr = (arr) => {
  const newArr = arr.slice();
  for (let i = newArr.length - 1; i > 0; i--) {
    const rand = Math.floor(Math.random() * (i + 1));
    [newArr[i], newArr[rand]] = [newArr[rand], newArr[i]];
  }
  return newArr;
};
const imageHeight = (normalHeight, variability) => {
  return normalHeight * (1 - variability + variability * Math.random());
};
function CardThatHides({ song }) {
  const [hidden, setHidden] = reactExports.useState(false);
  const [showingContent, setShowingContent] = reactExports.useState(false);
  const onError = () => {
    console.log("Error showing image in gallery!");
    setHidden(true);
  };
  const [promptContent, setPromptContent] = reactExports.useState(null);
  const [imageHeightGen, setImageHeightGen] = reactExports.useState(null);
  const [overlayOpacity, setOverlayOpacity] = reactExports.useState(0);
  reactExports.useEffect(() => {
    setImageHeightGen(imageHeight(512, 0.3));
  }, []);
  reactExports.useEffect(() => {
    const fetchPrompt = async () => {
      const promptContent2 = await fetchIllustrationPrompt(song.id);
      setPromptContent(promptContent2[0].response);
    };
    if (showingContent && !promptContent) {
      fetchPrompt();
    }
  }, [showingContent]);
  return /* @__PURE__ */ jsxRuntimeExports.jsxs(
    card_default,
    {
      className: "w-full show-overlay-hover " + (hidden ? "hidden" : "flex"),
      style: { height: imageHeightGen },
      isHoverable: true,
      isFooterBlurred: true,
      onMouseEnter: () => setShowingContent(true),
      onClick: () => setShowingContent(true),
      children: [
        /* @__PURE__ */ jsxRuntimeExports.jsxs("div", { className: "image-overlay absolute flex flex-col items-center before:bg-white/10 border-white/20 border-1 overflow-hidden before:rounded-xl rounded-large shadow-small z-10 backdrop-blur-lg pt-4 justify-start " + ("opacity-" + overlayOpacity), onMouseOver: () => setOverlayOpacity(100), onMouseOut: () => setOverlayOpacity(0), children: [
          /* @__PURE__ */ jsxRuntimeExports.jsx(CircleX, { className: "absolute top-4 right-4 w-8 h-8 text-white/60 hover:text-white", onClick: () => setOverlayOpacity(0) }),
          /* @__PURE__ */ jsxRuntimeExports.jsx("div", {}),
          /* @__PURE__ */ jsxRuntimeExports.jsx("p", { className: "text-tiny text-white/80 uppercase font-bold", children: song.artist }),
          /* @__PURE__ */ jsxRuntimeExports.jsx("h4", { className: "text-white font-medium text-large", children: song.title }),
          /* @__PURE__ */ jsxRuntimeExports.jsx("div", { className: "mx-4 flex flex-grow", children: /* @__PURE__ */ jsxRuntimeExports.jsx("p", { className: "text-xs text-white mt-4", children: promptContent }) }),
          /* @__PURE__ */ jsxRuntimeExports.jsx(button_default, { as: link_default, href: "/song/" + song.id, className: "w-full rounded-t-none bg-white/60 text-white text-md backdrop-blur-sm hover:bg-white", children: "View" })
        ] }),
        /* @__PURE__ */ jsxRuntimeExports.jsx(
          image_default,
          {
            onError,
            removeWrapper: true,
            alt: "Card background",
            className: "z-0 w-full h-full object-cover",
            src: "/domcikuv-zpevnik-v2/songs/illustrations/" + song.chordproFile.split(".")[0] + `/${song.illustration_author}.webp`
          }
        )
      ]
    }
  );
}
const SongGallery = () => {
  const songDB = useLoaderData();
  const songs = getShuffledArr(songDB.songs);
  return /* @__PURE__ */ jsxRuntimeExports.jsx("div", { className: "max-w-full m-[10px]", children: /* @__PURE__ */ jsxRuntimeExports.jsx(
    MasonryResponsive,
    {
      columnsCountBreakPoints: { 350: 1, 700: 2, 1200: 3, 1800: 4 },
      children: /* @__PURE__ */ jsxRuntimeExports.jsx(Masonry, { className: "image-masonry", gutter: "10px", children: songs.map(
        (song) => /* @__PURE__ */ jsxRuntimeExports.jsx(CardThatHides, { song }, song.id)
      ) })
    }
  ) });
};
const router = createHashRouter([
  {
    path: "/",
    // element: <SongsList />,
    element: /* @__PURE__ */ jsxRuntimeExports.jsx(SongList, {}),
    errorElement: /* @__PURE__ */ jsxRuntimeExports.jsx(ErrorPage, {}),
    loader: fetchSongs
  },
  {
    // path: "/song",
    path: "/song/:id",
    element: /* @__PURE__ */ jsxRuntimeExports.jsx(SongView, {}),
    errorElement: /* @__PURE__ */ jsxRuntimeExports.jsx(ErrorPage, {}),
    loader: fetchSongContent
  },
  {
    // path: "/gallery",
    path: "/gallery",
    element: /* @__PURE__ */ jsxRuntimeExports.jsx(SongGallery, {}),
    errorElement: /* @__PURE__ */ jsxRuntimeExports.jsx(ErrorPage, {}),
    loader: fetchSongs
  }
]);
createRoot(document.getElementById("root")).render(
  /* @__PURE__ */ jsxRuntimeExports.jsx(reactExports.StrictMode, { children: /* @__PURE__ */ jsxRuntimeExports.jsx(NextUIProvider, { navigate: router.navigate, children: /* @__PURE__ */ jsxRuntimeExports.jsx(RouterProvider, { router }) }) })
);
