{"version":3,"file":"SongGallery-Dl5zRJ9n.js","sources":["../../node_modules/lucide-react/dist/esm/icons/circle-x.js","../../node_modules/masonic/dist/module/interval-tree.js","../../node_modules/@react-hook/latest/dist/module/index.js","../../node_modules/@react-hook/debounce/dist/module/index.js","../../node_modules/@react-hook/event/dist/module/index.js","../../node_modules/@react-hook/window-size/dist/module/index.js","../../node_modules/@essentials/memoize-one/dist/module/index.js","../../node_modules/@essentials/one-key-map/dist/module/index.js","../../node_modules/trie-memoize/dist/module/index.js","../../node_modules/masonic/dist/module/elements-cache.js","../../node_modules/masonic/dist/module/use-force-update.js","../../node_modules/masonic/dist/module/use-masonry.js","../../node_modules/@essentials/raf/dist/module/index.js","../../node_modules/@essentials/request-timeout/dist/module/index.js","../../node_modules/@react-hook/throttle/dist/module/index.js","../../node_modules/@react-hook/window-scroll/dist/module/index.js","../../node_modules/masonic/dist/module/use-scroller.js","../../node_modules/masonic/dist/module/masonry-scroller.js","../../node_modules/@react-hook/passive-layout-effect/dist/module/index.js","../../node_modules/masonic/dist/module/use-container-position.js","../../node_modules/masonic/dist/module/use-positioner.js","../../node_modules/raf-schd/dist/raf-schd.esm.js","../../node_modules/masonic/dist/module/use-resize-observer.js","../../node_modules/masonic/dist/module/use-scroll-to-index.js","../../node_modules/masonic/dist/module/masonry.js","../../src/routes/gallery/SongGallery.tsx"],"sourcesContent":["/**\n * @license lucide-react v0.454.0 - ISC\n *\n * This source code is licensed under the ISC license.\n * See the LICENSE file in the root directory of this source tree.\n */\n\nimport createLucideIcon from '../createLucideIcon.js';\n\nconst CircleX = createLucideIcon(\"CircleX\", [\n  [\"circle\", { cx: \"12\", cy: \"12\", r: \"10\", key: \"1mglay\" }],\n  [\"path\", { d: \"m15 9-6 6\", key: \"1uzhvr\" }],\n  [\"path\", { d: \"m9 9 6 6\", key: \"z0biqf\" }]\n]);\n\nexport { CircleX as default };\n//# sourceMappingURL=circle-x.js.map\n","const RED = 0;\nconst BLACK = 1;\nconst NIL = 2;\nconst DELETE = 0;\nconst KEEP = 1;\n\nfunction addInterval(treeNode, high, index) {\n  let node = treeNode.list;\n  let prevNode;\n\n  while (node) {\n    if (node.index === index) return false;\n    if (high > node.high) break;\n    prevNode = node;\n    node = node.next;\n  }\n\n  if (!prevNode) treeNode.list = {\n    index,\n    high,\n    next: node\n  };\n  if (prevNode) prevNode.next = {\n    index,\n    high,\n    next: prevNode.next\n  };\n  return true;\n}\n\nfunction removeInterval(treeNode, index) {\n  let node = treeNode.list;\n\n  if (node.index === index) {\n    if (node.next === null) return DELETE;\n    treeNode.list = node.next;\n    return KEEP;\n  }\n\n  let prevNode = node;\n  node = node.next;\n\n  while (node !== null) {\n    if (node.index === index) {\n      prevNode.next = node.next;\n      return KEEP;\n    }\n\n    prevNode = node;\n    node = node.next;\n  }\n}\n\nconst NULL_NODE = {\n  low: 0,\n  max: 0,\n  high: 0,\n  C: NIL,\n  // @ts-expect-error\n  P: undefined,\n  // @ts-expect-error\n  R: undefined,\n  // @ts-expect-error\n  L: undefined,\n  // @ts-expect-error\n  list: undefined\n};\nNULL_NODE.P = NULL_NODE;\nNULL_NODE.L = NULL_NODE;\nNULL_NODE.R = NULL_NODE;\n\nfunction updateMax(node) {\n  const max = node.high;\n  if (node.L === NULL_NODE && node.R === NULL_NODE) node.max = max;else if (node.L === NULL_NODE) node.max = Math.max(node.R.max, max);else if (node.R === NULL_NODE) node.max = Math.max(node.L.max, max);else node.max = Math.max(Math.max(node.L.max, node.R.max), max);\n}\n\nfunction updateMaxUp(node) {\n  let x = node;\n\n  while (x.P !== NULL_NODE) {\n    updateMax(x.P);\n    x = x.P;\n  }\n}\n\nfunction rotateLeft(tree, x) {\n  if (x.R === NULL_NODE) return;\n  const y = x.R;\n  x.R = y.L;\n  if (y.L !== NULL_NODE) y.L.P = x;\n  y.P = x.P;\n  if (x.P === NULL_NODE) tree.root = y;else if (x === x.P.L) x.P.L = y;else x.P.R = y;\n  y.L = x;\n  x.P = y;\n  updateMax(x);\n  updateMax(y);\n}\n\nfunction rotateRight(tree, x) {\n  if (x.L === NULL_NODE) return;\n  const y = x.L;\n  x.L = y.R;\n  if (y.R !== NULL_NODE) y.R.P = x;\n  y.P = x.P;\n  if (x.P === NULL_NODE) tree.root = y;else if (x === x.P.R) x.P.R = y;else x.P.L = y;\n  y.R = x;\n  x.P = y;\n  updateMax(x);\n  updateMax(y);\n}\n\nfunction replaceNode(tree, x, y) {\n  if (x.P === NULL_NODE) tree.root = y;else if (x === x.P.L) x.P.L = y;else x.P.R = y;\n  y.P = x.P;\n}\n\nfunction fixRemove(tree, x) {\n  let w;\n\n  while (x !== NULL_NODE && x.C === BLACK) {\n    if (x === x.P.L) {\n      w = x.P.R;\n\n      if (w.C === RED) {\n        w.C = BLACK;\n        x.P.C = RED;\n        rotateLeft(tree, x.P);\n        w = x.P.R;\n      }\n\n      if (w.L.C === BLACK && w.R.C === BLACK) {\n        w.C = RED;\n        x = x.P;\n      } else {\n        if (w.R.C === BLACK) {\n          w.L.C = BLACK;\n          w.C = RED;\n          rotateRight(tree, w);\n          w = x.P.R;\n        }\n\n        w.C = x.P.C;\n        x.P.C = BLACK;\n        w.R.C = BLACK;\n        rotateLeft(tree, x.P);\n        x = tree.root;\n      }\n    } else {\n      w = x.P.L;\n\n      if (w.C === RED) {\n        w.C = BLACK;\n        x.P.C = RED;\n        rotateRight(tree, x.P);\n        w = x.P.L;\n      }\n\n      if (w.R.C === BLACK && w.L.C === BLACK) {\n        w.C = RED;\n        x = x.P;\n      } else {\n        if (w.L.C === BLACK) {\n          w.R.C = BLACK;\n          w.C = RED;\n          rotateLeft(tree, w);\n          w = x.P.L;\n        }\n\n        w.C = x.P.C;\n        x.P.C = BLACK;\n        w.L.C = BLACK;\n        rotateRight(tree, x.P);\n        x = tree.root;\n      }\n    }\n  }\n\n  x.C = BLACK;\n}\n\nfunction minimumTree(x) {\n  while (x.L !== NULL_NODE) x = x.L;\n\n  return x;\n}\n\nfunction fixInsert(tree, z) {\n  let y;\n\n  while (z.P.C === RED) {\n    if (z.P === z.P.P.L) {\n      y = z.P.P.R;\n\n      if (y.C === RED) {\n        z.P.C = BLACK;\n        y.C = BLACK;\n        z.P.P.C = RED;\n        z = z.P.P;\n      } else {\n        if (z === z.P.R) {\n          z = z.P;\n          rotateLeft(tree, z);\n        }\n\n        z.P.C = BLACK;\n        z.P.P.C = RED;\n        rotateRight(tree, z.P.P);\n      }\n    } else {\n      y = z.P.P.L;\n\n      if (y.C === RED) {\n        z.P.C = BLACK;\n        y.C = BLACK;\n        z.P.P.C = RED;\n        z = z.P.P;\n      } else {\n        if (z === z.P.L) {\n          z = z.P;\n          rotateRight(tree, z);\n        }\n\n        z.P.C = BLACK;\n        z.P.P.C = RED;\n        rotateLeft(tree, z.P.P);\n      }\n    }\n  }\n\n  tree.root.C = BLACK;\n}\n\nexport function createIntervalTree() {\n  const tree = {\n    root: NULL_NODE,\n    size: 0\n  }; // we know these indexes are a consistent, safe way to make look ups\n  // for our case so it's a solid O(1) alternative to\n  // the O(log n) searchNode() in typical interval trees\n\n  const indexMap = {};\n  return {\n    insert(low, high, index) {\n      let x = tree.root;\n      let y = NULL_NODE;\n\n      while (x !== NULL_NODE) {\n        y = x;\n        if (low === y.low) break;\n        if (low < x.low) x = x.L;else x = x.R;\n      }\n\n      if (low === y.low && y !== NULL_NODE) {\n        if (!addInterval(y, high, index)) return;\n        y.high = Math.max(y.high, high);\n        updateMax(y);\n        updateMaxUp(y);\n        indexMap[index] = y;\n        tree.size++;\n        return;\n      }\n\n      const z = {\n        low,\n        high,\n        max: high,\n        C: RED,\n        P: y,\n        L: NULL_NODE,\n        R: NULL_NODE,\n        list: {\n          index,\n          high,\n          next: null\n        }\n      };\n\n      if (y === NULL_NODE) {\n        tree.root = z;\n      } else {\n        if (z.low < y.low) y.L = z;else y.R = z;\n        updateMaxUp(z);\n      }\n\n      fixInsert(tree, z);\n      indexMap[index] = z;\n      tree.size++;\n    },\n\n    remove(index) {\n      const z = indexMap[index];\n      if (z === void 0) return;\n      delete indexMap[index];\n      const intervalResult = removeInterval(z, index);\n      if (intervalResult === void 0) return;\n\n      if (intervalResult === KEEP) {\n        z.high = z.list.high;\n        updateMax(z);\n        updateMaxUp(z);\n        tree.size--;\n        return;\n      }\n\n      let y = z;\n      let originalYColor = y.C;\n      let x;\n\n      if (z.L === NULL_NODE) {\n        x = z.R;\n        replaceNode(tree, z, z.R);\n      } else if (z.R === NULL_NODE) {\n        x = z.L;\n        replaceNode(tree, z, z.L);\n      } else {\n        y = minimumTree(z.R);\n        originalYColor = y.C;\n        x = y.R;\n\n        if (y.P === z) {\n          x.P = y;\n        } else {\n          replaceNode(tree, y, y.R);\n          y.R = z.R;\n          y.R.P = y;\n        }\n\n        replaceNode(tree, z, y);\n        y.L = z.L;\n        y.L.P = y;\n        y.C = z.C;\n      }\n\n      updateMax(x);\n      updateMaxUp(x);\n      if (originalYColor === BLACK) fixRemove(tree, x);\n      tree.size--;\n    },\n\n    search(low, high, callback) {\n      const stack = [tree.root];\n\n      while (stack.length !== 0) {\n        const node = stack.pop();\n        if (node === NULL_NODE || low > node.max) continue;\n        if (node.L !== NULL_NODE) stack.push(node.L);\n        if (node.R !== NULL_NODE) stack.push(node.R);\n\n        if (node.low <= high && node.high >= low) {\n          let curr = node.list;\n\n          while (curr !== null) {\n            if (curr.high >= low) callback(curr.index, node.low);\n            curr = curr.next;\n          }\n        }\n      }\n    },\n\n    get size() {\n      return tree.size;\n    }\n\n  };\n}","import * as React from 'react';\n\nconst useLatest = current => {\n  const storedValue = React.useRef(current);\n  React.useEffect(() => {\n    storedValue.current = current;\n  });\n  return storedValue;\n};\n\nexport default useLatest;","import * as React from 'react';\nimport useLatest from '@react-hook/latest';\nexport const useDebounceCallback = (callback, wait = 100, leading = false) => {\n  const storedCallback = useLatest(callback);\n  const timeout = React.useRef();\n  const deps = [wait, leading, storedCallback]; // Cleans up pending timeouts when the deps change\n\n  function _ref() {\n    timeout.current && clearTimeout(timeout.current);\n    timeout.current = void 0;\n  }\n\n  React.useEffect(() => _ref, deps);\n\n  function _ref2() {\n    timeout.current = void 0;\n  }\n\n  return React.useCallback(function () {\n    // eslint-disable-next-line prefer-rest-params\n    const args = arguments;\n    const {\n      current\n    } = timeout; // Calls on leading edge\n\n    if (current === void 0 && leading) {\n      timeout.current = setTimeout(_ref2, wait); // eslint-disable-next-line prefer-spread\n\n      return storedCallback.current.apply(null, args);\n    } // Clear the timeout every call and start waiting again\n\n\n    current && clearTimeout(current); // Waits for `wait` before invoking the callback\n\n    timeout.current = setTimeout(() => {\n      timeout.current = void 0;\n      storedCallback.current.apply(null, args);\n    }, wait);\n  }, deps);\n};\nexport const useDebounce = (initialState, wait, leading) => {\n  const state = React.useState(initialState);\n  return [state[0], useDebounceCallback(state[1], wait, leading)];\n};","import * as React from 'react';\n\nfunction useEvent(target, type, listener, cleanup) {\n  const storedListener = React.useRef(listener);\n  const storedCleanup = React.useRef(cleanup);\n  React.useEffect(() => {\n    storedListener.current = listener;\n    storedCleanup.current = cleanup;\n  });\n  React.useEffect(() => {\n    const targetEl = target && 'current' in target ? target.current : target;\n    if (!targetEl) return;\n    let didUnsubscribe = 0;\n\n    function listener(...args) {\n      if (didUnsubscribe) return;\n      storedListener.current.apply(this, args);\n    }\n\n    targetEl.addEventListener(type, listener);\n    const cleanup = storedCleanup.current;\n    return () => {\n      didUnsubscribe = 1;\n      targetEl.removeEventListener(type, listener);\n      cleanup && cleanup();\n    }; // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [target, type]);\n}\n\nexport default useEvent;","import { useDebounce } from '@react-hook/debounce';\nimport useEvent from '@react-hook/event';\nconst emptyObj = {};\nconst win = typeof window === 'undefined' ? null : window;\nconst wv = win && typeof win.visualViewport !== 'undefined' ? win.visualViewport : null;\n\nconst getSize = () => [document.documentElement.clientWidth, document.documentElement.clientHeight];\n\nexport const useWindowSize = function (options) {\n  if (options === void 0) {\n    options = emptyObj;\n  }\n\n  const {\n    wait,\n    leading,\n    initialWidth = 0,\n    initialHeight = 0\n  } = options;\n  const [size, setDebouncedSize] = useDebounce(\n  /* istanbul ignore next */\n  typeof document === 'undefined' ? [initialWidth, initialHeight] : getSize, wait, leading);\n\n  const setSize = () => setDebouncedSize(getSize);\n\n  useEvent(win, 'resize', setSize); // @ts-expect-error\n\n  useEvent(wv, 'resize', setSize);\n  useEvent(win, 'orientationchange', setSize);\n  return size;\n};\nexport const useWindowHeight = options => useWindowSize(options)[1];\nexport const useWindowWidth = options => useWindowSize(options)[0];","const memoOne = (fn, areEqual) => {\n  const equal = areEqual || defaultAreEqual;\n  let args, value;\n  return function () {\n    return !!args && equal(arguments, args) ? value : value = fn.apply(null, args = arguments);\n  };\n};\n\nexport default memoOne;\n\nconst defaultAreEqual = (current, prev) => current[0] === prev[0] && current[1] === prev[1] && current[2] === prev[2] && current[3] === prev[3];","class OneKeyMap {\n  constructor() {\n    this.set = void 0;\n    this.get = void 0;\n    let key, val;\n\n    this.get = k => k === key ? val : void 0;\n\n    this.set = (k, v) => {\n      key = k;\n      val = v;\n    };\n  }\n\n}\n\nexport default OneKeyMap;","const createCache = obj => {\n  try {\n    // @ts-ignore\n    return new obj();\n  } catch (e) {\n    const cache = {};\n    return {\n      set(k, v) {\n        cache[k] = v;\n      },\n\n      get(k) {\n        return cache[k];\n      }\n\n    };\n  }\n};\n\nconst memo = constructors => {\n  const depth = constructors.length,\n        baseCache = createCache(constructors[0]);\n  let base;\n  let map;\n  let i;\n  let node;\n  const one = depth === 1; // quicker access for one and two-argument functions\n\n  const g1 = args => (base = baseCache.get(args[0])) === void 0 || one ? base : base.get(args[1]);\n\n  const s1 = (args, value) => {\n    if (one) baseCache.set(args[0], value);else {\n      if ((base = baseCache.get(args[0])) === void 0) {\n        map = createCache(constructors[1]);\n        map.set(args[1], value);\n        baseCache.set(args[0], map);\n      } else {\n        base.set(args[1], value);\n      }\n    }\n    return value;\n  };\n\n  const g2 = args => {\n    node = baseCache;\n\n    for (i = 0; i < depth; i++) if ((node = node.get(args[i])) === void 0) return;\n\n    return node;\n  };\n\n  const s2 = (args, value) => {\n    node = baseCache;\n\n    for (i = 0; i < depth - 1; i++) {\n      if ((map = node.get(args[i])) === void 0) {\n        map = createCache(constructors[i + 1]);\n        node.set(args[i], map);\n        node = map;\n      } else {\n        node = map;\n      }\n    }\n\n    node.set(args[depth - 1], value);\n    return value;\n  };\n\n  return depth < 3 ? {\n    g: g1,\n    s: s1\n  } : {\n    g: g2,\n    s: s2\n  };\n};\n\nconst memoize = (mapConstructors, fn) => {\n  let item;\n  const {\n    g,\n    s\n  } = memo(mapConstructors);\n  return function () {\n    return (item = g(arguments)) === void 0 ? s(arguments, fn.apply(null, arguments)) : item;\n  };\n};\n\nexport default memoize;","export const elementsCache = /*#__PURE__*/new WeakMap();","import * as React from \"react\";\nexport function useForceUpdate() {\n  const setState = React.useState(emptyObj)[1];\n  return React.useRef(() => setState({})).current;\n}\nconst emptyObj = {};","import memoizeOne from \"@essentials/memoize-one\";\nimport OneKeyMap from \"@essentials/one-key-map\";\nimport useLatest from \"@react-hook/latest\";\nimport * as React from \"react\";\nconst __reactCreateElement__ = React.createElement;\nimport trieMemoize from \"trie-memoize\";\nimport { elementsCache } from \"./elements-cache\";\nimport { useForceUpdate } from \"./use-force-update\";\n\n/**\n * This hook handles the render phases of the masonry layout and returns the grid as a React element.\n *\n * @param options - Options for configuring the masonry layout renderer. See `UseMasonryOptions`.\n * @param options.positioner\n * @param options.resizeObserver\n * @param options.items\n * @param options.as\n * @param options.id\n * @param options.className\n * @param options.style\n * @param options.role\n * @param options.tabIndex\n * @param options.containerRef\n * @param options.itemAs\n * @param options.itemStyle\n * @param options.itemHeightEstimate\n * @param options.itemKey\n * @param options.overscanBy\n * @param options.scrollTop\n * @param options.isScrolling\n * @param options.height\n * @param options.render\n * @param options.onRender\n */\nexport function useMasonry(_ref) {\n  let {\n    // Measurement and layout\n    positioner,\n    resizeObserver,\n    // Grid items\n    items,\n    // Container props\n    as: ContainerComponent = \"div\",\n    id,\n    className,\n    style,\n    role = \"grid\",\n    tabIndex = 0,\n    containerRef,\n    // Item props\n    itemAs: ItemComponent = \"div\",\n    itemStyle,\n    itemHeightEstimate = 300,\n    itemKey = defaultGetItemKey,\n    // Rendering props\n    overscanBy = 2,\n    scrollTop,\n    isScrolling,\n    height,\n    render: RenderComponent,\n    onRender\n  } = _ref;\n  let startIndex = 0;\n  let stopIndex;\n  const forceUpdate = useForceUpdate();\n  const setItemRef = getRefSetter(positioner, resizeObserver);\n  const itemCount = items.length;\n  const {\n    columnWidth,\n    columnCount,\n    range,\n    estimateHeight,\n    size,\n    shortestColumn\n  } = positioner;\n  const measuredCount = size();\n  const shortestColumnSize = shortestColumn();\n  const children = [];\n  const itemRole = role === \"list\" ? \"listitem\" : role === \"grid\" ? \"gridcell\" : undefined;\n  const storedOnRender = useLatest(onRender);\n  overscanBy = height * overscanBy;\n  const rangeEnd = scrollTop + overscanBy;\n  const needsFreshBatch = shortestColumnSize < rangeEnd && measuredCount < itemCount;\n  range( // We overscan in both directions because users scroll both ways,\n  // though one must admit scrolling down is more common and thus\n  // we only overscan by half the downward overscan amount\n  Math.max(0, scrollTop - overscanBy / 2), rangeEnd, (index, left, top) => {\n    const data = items[index];\n    const key = itemKey(data, index);\n    const phaseTwoStyle = {\n      top,\n      left,\n      width: columnWidth,\n      writingMode: \"horizontal-tb\",\n      position: \"absolute\"\n    };\n    /* istanbul ignore next */\n\n    if (typeof process !== \"undefined\" && process.env.NODE_ENV !== \"production\") {\n      throwWithoutData(data, index);\n    }\n\n    children.push( /*#__PURE__*/__reactCreateElement__(ItemComponent, {\n      key: key,\n      ref: setItemRef(index),\n      role: itemRole,\n      style: typeof itemStyle === \"object\" && itemStyle !== null ? Object.assign({}, phaseTwoStyle, itemStyle) : phaseTwoStyle\n    }, createRenderElement(RenderComponent, index, data, columnWidth)));\n\n    if (stopIndex === void 0) {\n      startIndex = index;\n      stopIndex = index;\n    } else {\n      startIndex = Math.min(startIndex, index);\n      stopIndex = Math.max(stopIndex, index);\n    }\n  });\n\n  if (needsFreshBatch) {\n    const batchSize = Math.min(itemCount - measuredCount, Math.ceil((scrollTop + overscanBy - shortestColumnSize) / itemHeightEstimate * columnCount));\n    let index = measuredCount;\n    const phaseOneStyle = getCachedSize(columnWidth);\n\n    for (; index < measuredCount + batchSize; index++) {\n      const data = items[index];\n      const key = itemKey(data, index);\n      /* istanbul ignore next */\n\n      if (typeof process !== \"undefined\" && process.env.NODE_ENV !== \"production\") {\n        throwWithoutData(data, index);\n      }\n\n      children.push( /*#__PURE__*/__reactCreateElement__(ItemComponent, {\n        key: key,\n        ref: setItemRef(index),\n        role: itemRole,\n        style: typeof itemStyle === \"object\" ? Object.assign({}, phaseOneStyle, itemStyle) : phaseOneStyle\n      }, createRenderElement(RenderComponent, index, data, columnWidth)));\n    }\n  } // Calls the onRender callback if the rendered indices changed\n\n\n  React.useEffect(() => {\n    if (typeof storedOnRender.current === \"function\" && stopIndex !== void 0) storedOnRender.current(startIndex, stopIndex, items);\n    didEverMount = \"1\";\n  }, [startIndex, stopIndex, items, storedOnRender]); // If we needed a fresh batch we should reload our components with the measured\n  // sizes\n\n  React.useEffect(() => {\n    if (needsFreshBatch) forceUpdate(); // eslint-disable-next-line\n  }, [needsFreshBatch, positioner]); // gets the container style object based upon the estimated height and whether or not\n  // the page is being scrolled\n\n  const containerStyle = getContainerStyle(isScrolling, estimateHeight(itemCount, itemHeightEstimate));\n  return /*#__PURE__*/__reactCreateElement__(ContainerComponent, {\n    ref: containerRef,\n    key: didEverMount,\n    id: id,\n    role: role,\n    className: className,\n    tabIndex: tabIndex,\n    style: typeof style === \"object\" ? assignUserStyle(containerStyle, style) : containerStyle,\n    children: children\n  });\n}\n/* istanbul ignore next */\n\nfunction throwWithoutData(data, index) {\n  if (!data) {\n    throw new Error(`No data was found at index: ${index}\\n\\n` + `This usually happens when you've mutated or changed the \"items\" array in a ` + `way that makes it shorter than the previous \"items\" array. Masonic knows nothing ` + `about your underlying data and when it caches cell positions, it assumes you aren't ` + `mutating the underlying \"items\".\\n\\n` + `See https://codesandbox.io/s/masonic-w-react-router-example-2b5f9?file=/src/index.js for ` + `an example that gets around this limitations. For advanced implementations, see ` + `https://codesandbox.io/s/masonic-w-react-router-and-advanced-config-example-8em42?file=/src/index.js\\n\\n` + `If this was the result of your removing an item from your \"items\", see this issue: ` + `https://github.com/jaredLunde/masonic/issues/12`);\n  }\n} // This is for triggering a remount after SSR has loaded in the client w/ hydrate()\n\n\nlet didEverMount = \"0\";\n//\n// Render-phase utilities\n// ~5.5x faster than createElement without the memo\nconst createRenderElement = /*#__PURE__*/trieMemoize([OneKeyMap, {}, WeakMap, OneKeyMap], (RenderComponent, index, data, columnWidth) => /*#__PURE__*/__reactCreateElement__(RenderComponent, {\n  index: index,\n  data: data,\n  width: columnWidth\n}));\nconst getContainerStyle = /*#__PURE__*/memoizeOne((isScrolling, estimateHeight) => ({\n  position: \"relative\",\n  width: \"100%\",\n  maxWidth: \"100%\",\n  height: Math.ceil(estimateHeight),\n  maxHeight: Math.ceil(estimateHeight),\n  willChange: isScrolling ? \"contents\" : void 0,\n  pointerEvents: isScrolling ? \"none\" : void 0\n}));\n\nconst cmp2 = (args, pargs) => args[0] === pargs[0] && args[1] === pargs[1];\n\nconst assignUserStyle = /*#__PURE__*/memoizeOne((containerStyle, userStyle) => Object.assign({}, containerStyle, userStyle), // @ts-expect-error\ncmp2);\n\nfunction defaultGetItemKey(_, i) {\n  return i;\n} // the below memoizations for for ensuring shallow equal is reliable for pure\n// component children\n\n\nconst getCachedSize = /*#__PURE__*/memoizeOne(width => ({\n  width,\n  zIndex: -1000,\n  visibility: \"hidden\",\n  position: \"absolute\",\n  writingMode: \"horizontal-tb\"\n}), (args, pargs) => args[0] === pargs[0]);\nconst getRefSetter = /*#__PURE__*/memoizeOne((positioner, resizeObserver) => index => el => {\n  if (el === null) return;\n\n  if (resizeObserver) {\n    resizeObserver.observe(el);\n    elementsCache.set(el, index);\n  }\n\n  if (positioner.get(index) === void 0) positioner.set(index, el.offsetHeight);\n}, // @ts-expect-error\ncmp2);","let u = 'undefined',\n    win = typeof window !== u ? window : {},\n    p = typeof performance !== u ? performance : Date,\n    now = () => p.now(),\n    af = 'AnimationFrame',\n    Caf = 'cancel' + af,\n    Raf = 'request' + af,\n    raf = win[Raf] && /*#__PURE__*/win[Raf].bind(win),\n    caf = win[Caf] && /*#__PURE__*/win[Caf].bind(win);\n\nfunction _ref(h) {\n  return clearTimeout(h);\n}\n\nif (!raf || !caf) {\n  let lastTime = 0;\n\n  raf = callback => {\n    let curr = now(),\n        next = Math.max(lastTime + 1000 / 60, curr);\n    return setTimeout(() => {\n      callback(lastTime = next);\n    }, next - curr);\n  };\n\n  caf = _ref;\n}\n\nexport { raf, caf, now };","/**\n * Copyright 2011, Joe Lambert.\n * Free to use under the MIT license.\n * http://www.opensource.org/licenses/mit-license.php\n **/\nimport { raf, caf, now } from '@essentials/raf';\nexport const clearRequestTimeout = handle => {\n  caf(handle.v || -1);\n};\nexport const requestTimeout = (fn, ms) => {\n  const start = now(),\n        handle = {};\n\n  const loop = () => {\n    now() - start >= ms ? fn.call(null) : handle.v = raf(loop);\n  };\n\n  handle.v = raf(loop);\n  return handle;\n};\nexport default requestTimeout;","import * as React from 'react';\nimport useLatest from '@react-hook/latest';\nconst perf = typeof performance !== 'undefined' ? performance : Date;\n\nconst now = () => perf.now();\n\nexport function useThrottleCallback(callback, fps = 30, leading = false) {\n  const storedCallback = useLatest(callback);\n  const ms = 1000 / fps;\n  const prev = React.useRef(0);\n  const trailingTimeout = React.useRef();\n\n  const clearTrailing = () => trailingTimeout.current && clearTimeout(trailingTimeout.current);\n\n  const deps = [fps, leading, storedCallback]; // Reset any time the deps change\n\n  function _ref() {\n    prev.current = 0;\n    clearTrailing();\n  }\n\n  React.useEffect(() => _ref, deps);\n  return React.useCallback(function () {\n    // eslint-disable-next-line prefer-rest-params\n    const args = arguments;\n    const rightNow = now();\n\n    const call = () => {\n      prev.current = rightNow;\n      clearTrailing();\n      storedCallback.current.apply(null, args);\n    };\n\n    const current = prev.current; // leading\n\n    if (leading && current === 0) return call(); // body\n\n    if (rightNow - current > ms) {\n      if (current > 0) return call();\n      prev.current = rightNow;\n    } // trailing\n\n\n    clearTrailing();\n    trailingTimeout.current = setTimeout(() => {\n      call();\n      prev.current = 0;\n    }, ms);\n  }, deps);\n}\nexport function useThrottle(initialState, fps, leading) {\n  const state = React.useState(initialState);\n  return [state[0], useThrottleCallback(state[1], fps, leading)];\n}","import { useThrottle } from '@react-hook/throttle';\nimport useEvent from '@react-hook/event';\nconst win = typeof window === 'undefined' ? null : window;\n\nconst getScrollY = () => win.scrollY !== void 0 ? win.scrollY : win.pageYOffset === void 0 ? 0 : win.pageYOffset;\n\nexport const useWindowScroll = (fps = 30) => {\n  const state = useThrottle(typeof window === 'undefined' ? 0 : getScrollY, fps, true);\n  useEvent(win, 'scroll', () => state[1](getScrollY()));\n  return state[0];\n};\nexport default useWindowScroll;","import { clearRequestTimeout, requestTimeout } from \"@essentials/request-timeout\";\nimport useScrollPosition from \"@react-hook/window-scroll\";\nimport * as React from \"react\";\n/**\n * A hook for tracking whether the `window` is currently being scrolled and it's scroll position on\n * the y-axis. These values are used for determining which grid cells to render and when\n * to add styles to the masonry container that maximize scroll performance.\n *\n * @param offset - The vertical space in pixels between the top of the grid container and the top\n *  of the browser `document.documentElement`.\n * @param fps - This determines how often (in frames per second) to update the scroll position of the\n *  browser `window` in state, and as a result the rate the masonry grid recalculates its visible cells.\n *  The default value of `12` has been very reasonable in my own testing, but if you have particularly\n *  heavy `render` components it may be prudent to reduce this number.\n */\n\nexport function useScroller(offset, fps) {\n  if (offset === void 0) {\n    offset = 0;\n  }\n\n  if (fps === void 0) {\n    fps = 12;\n  }\n\n  const scrollTop = useScrollPosition(fps);\n  const [isScrolling, setIsScrolling] = React.useState(false);\n  const didMount = React.useRef(0);\n  React.useEffect(() => {\n    if (didMount.current === 1) setIsScrolling(true);\n    let didUnsubscribe = false;\n    const to = requestTimeout(() => {\n      if (didUnsubscribe) return; // This is here to prevent premature bail outs while maintaining high resolution\n      // unsets. Without it there will always bee a lot of unnecessary DOM writes to style.\n\n      setIsScrolling(false);\n    }, 40 + 1000 / fps);\n    didMount.current = 1;\n    return () => {\n      didUnsubscribe = true;\n      clearRequestTimeout(to);\n    };\n  }, [fps, scrollTop]);\n  return {\n    scrollTop: Math.max(0, scrollTop - offset),\n    isScrolling\n  };\n}","import { useMasonry } from \"./use-masonry\";\nimport { useScroller } from \"./use-scroller\";\n/**\n * A heavily-optimized component that updates `useMasonry()` when the scroll position of the browser `window`\n * changes. This bare-metal component is used by `<Masonry>` under the hood.\n *\n * @param props\n */\n\nexport function MasonryScroller(props) {\n  // We put this in its own layer because it's the thing that will trigger the most updates\n  // and we don't want to slower ourselves by cycling through all the functions, objects, and effects\n  // of other hooks\n  const {\n    scrollTop,\n    isScrolling\n  } = useScroller(props.offset, props.scrollFps); // This is an update-heavy phase and while we could just Object.assign here,\n  // it is way faster to inline and there's a relatively low hit to he bundle\n  // size.\n\n  return useMasonry({\n    scrollTop,\n    isScrolling,\n    positioner: props.positioner,\n    resizeObserver: props.resizeObserver,\n    items: props.items,\n    onRender: props.onRender,\n    as: props.as,\n    id: props.id,\n    className: props.className,\n    style: props.style,\n    role: props.role,\n    tabIndex: props.tabIndex,\n    containerRef: props.containerRef,\n    itemAs: props.itemAs,\n    itemStyle: props.itemStyle,\n    itemHeightEstimate: props.itemHeightEstimate,\n    itemKey: props.itemKey,\n    overscanBy: props.overscanBy,\n    height: props.height,\n    render: props.render\n  });\n}\n\nif (typeof process !== \"undefined\" && process.env.NODE_ENV !== \"production\") {\n  MasonryScroller.displayName = \"MasonryScroller\";\n}","import React from 'react';\nconst usePassiveLayoutEffect = React[typeof document !== 'undefined' && document.createElement !== void 0 ? 'useLayoutEffect' : 'useEffect'];\nexport default usePassiveLayoutEffect;","import useLayoutEffect from \"@react-hook/passive-layout-effect\";\nimport * as React from \"react\";\n/**\n * A hook for measuring the width of the grid container, as well as its distance\n * from the top of the document. These values are necessary to correctly calculate the number/width\n * of columns to render, as well as the number of rows to render.\n *\n * @param elementRef - A `ref` object created by `React.useRef()`. That ref should be provided to the\n *   `containerRef` property in `useMasonry()`.\n * @param deps - You can force this hook to recalculate the `offset` and `width` whenever this\n *   dependencies list changes. A common dependencies list might look like `[windowWidth, windowHeight]`,\n *   which would force the hook to recalculate any time the size of the browser `window` changed.\n */\n\nexport function useContainerPosition(elementRef, deps) {\n  if (deps === void 0) {\n    deps = emptyArr;\n  }\n\n  const [containerPosition, setContainerPosition] = React.useState({\n    offset: 0,\n    width: 0\n  });\n  useLayoutEffect(() => {\n    const {\n      current\n    } = elementRef;\n\n    if (current !== null) {\n      let offset = 0;\n      let el = current;\n\n      do {\n        offset += el.offsetTop || 0;\n        el = el.offsetParent;\n      } while (el);\n\n      if (offset !== containerPosition.offset || current.offsetWidth !== containerPosition.width) {\n        setContainerPosition({\n          offset,\n          width: current.offsetWidth\n        });\n      }\n    } // eslint-disable-next-line react-hooks/exhaustive-deps\n\n  }, deps);\n  return containerPosition;\n}\nconst emptyArr = [];","import * as React from \"react\";\nimport { createIntervalTree } from \"./interval-tree\";\n/**\n * This hook creates the grid cell positioner and cache required by `useMasonry()`. This is\n * the meat of the grid's layout algorithm, determining which cells to render at a given scroll\n * position, as well as where to place new items in the grid.\n *\n * @param options - Properties that determine the number of columns in the grid, as well\n *  as their widths.\n * @param options.columnWidth\n * @param options.width\n * @param deps - This hook will create a new positioner, clearing all existing cached positions,\n *  whenever the dependencies in this list change.\n * @param options.columnGutter\n * @param options.rowGutter\n * @param options.columnCount\n * @param options.maxColumnCount\n */\n\nexport function usePositioner(_ref, deps) {\n  let {\n    width,\n    columnWidth = 200,\n    columnGutter = 0,\n    rowGutter,\n    columnCount,\n    maxColumnCount\n  } = _ref;\n\n  if (deps === void 0) {\n    deps = emptyArr;\n  }\n\n  const initPositioner = () => {\n    const [computedColumnWidth, computedColumnCount] = getColumns(width, columnWidth, columnGutter, columnCount, maxColumnCount);\n    return createPositioner(computedColumnCount, computedColumnWidth, columnGutter, rowGutter !== null && rowGutter !== void 0 ? rowGutter : columnGutter);\n  };\n\n  const positionerRef = React.useRef();\n  if (positionerRef.current === undefined) positionerRef.current = initPositioner();\n  const prevDeps = React.useRef(deps);\n  const opts = [width, columnWidth, columnGutter, rowGutter, columnCount, maxColumnCount];\n  const prevOpts = React.useRef(opts);\n  const optsChanged = !opts.every((item, i) => prevOpts.current[i] === item);\n\n  if (typeof process !== \"undefined\" && process.env.NODE_ENV !== \"production\") {\n    if (deps.length !== prevDeps.current.length) {\n      throw new Error(\"usePositioner(): The length of your dependencies array changed.\");\n    }\n  } // Create a new positioner when the dependencies or sizes change\n  // Thanks to https://github.com/khmm12 for pointing this out\n  // https://github.com/jaredLunde/masonic/pull/41\n\n\n  if (optsChanged || !deps.every((item, i) => prevDeps.current[i] === item)) {\n    const prevPositioner = positionerRef.current;\n    const positioner = initPositioner();\n    prevDeps.current = deps;\n    prevOpts.current = opts;\n\n    if (optsChanged) {\n      const cacheSize = prevPositioner.size();\n\n      for (let index = 0; index < cacheSize; index++) {\n        const pos = prevPositioner.get(index);\n        positioner.set(index, pos !== void 0 ? pos.height : 0);\n      }\n    }\n\n    positionerRef.current = positioner;\n  }\n\n  return positionerRef.current;\n}\n\n/**\n * Creates a cell positioner for the `useMasonry()` hook. The `usePositioner()` hook uses\n * this utility under the hood.\n *\n * @param columnCount - The number of columns in the grid\n * @param columnWidth - The width of each column in the grid\n * @param columnGutter - The amount of horizontal space between columns in pixels.\n * @param rowGutter - The amount of vertical space between cells within a column in pixels (falls back\n * to `columnGutter`).\n */\nexport const createPositioner = function (columnCount, columnWidth, columnGutter, rowGutter) {\n  if (columnGutter === void 0) {\n    columnGutter = 0;\n  }\n\n  if (rowGutter === void 0) {\n    rowGutter = columnGutter;\n  }\n\n  // O(log(n)) lookup of cells to render for a given viewport size\n  // Store tops and bottoms of each cell for fast intersection lookup.\n  const intervalTree = createIntervalTree(); // Track the height of each column.\n  // Layout algorithm below always inserts into the shortest column.\n\n  const columnHeights = new Array(columnCount); // Used for O(1) item access\n\n  const items = []; // Tracks the item indexes within an individual column\n\n  const columnItems = new Array(columnCount);\n\n  for (let i = 0; i < columnCount; i++) {\n    columnHeights[i] = 0;\n    columnItems[i] = [];\n  }\n\n  return {\n    columnCount,\n    columnWidth,\n    set: function (index, height) {\n      if (height === void 0) {\n        height = 0;\n      }\n\n      let column = 0; // finds the shortest column and uses it\n\n      for (let i = 1; i < columnHeights.length; i++) {\n        if (columnHeights[i] < columnHeights[column]) column = i;\n      }\n\n      const top = columnHeights[column] || 0;\n      columnHeights[column] = top + height + rowGutter;\n      columnItems[column].push(index);\n      items[index] = {\n        left: column * (columnWidth + columnGutter),\n        top,\n        height,\n        column\n      };\n      intervalTree.insert(top, top + height, index);\n    },\n    get: index => items[index],\n    // This only updates items in the specific columns that have changed, on and after the\n    // specific items that have changed\n    update: updates => {\n      const columns = new Array(columnCount);\n      let i = 0,\n          j = 0; // determines which columns have items that changed, as well as the minimum index\n      // changed in that column, as all items after that index will have their positions\n      // affected by the change\n\n      for (; i < updates.length - 1; i++) {\n        const index = updates[i];\n        const item = items[index];\n        item.height = updates[++i];\n        intervalTree.remove(index);\n        intervalTree.insert(item.top, item.top + item.height, index);\n        columns[item.column] = columns[item.column] === void 0 ? index : Math.min(index, columns[item.column]);\n      }\n\n      for (i = 0; i < columns.length; i++) {\n        // bails out if the column didn't change\n        if (columns[i] === void 0) continue;\n        const itemsInColumn = columnItems[i]; // the index order is sorted with certainty so binary search is a great solution\n        // here as opposed to Array.indexOf()\n\n        const startIndex = binarySearch(itemsInColumn, columns[i]);\n        const index = columnItems[i][startIndex];\n        const startItem = items[index];\n        columnHeights[i] = startItem.top + startItem.height + rowGutter;\n\n        for (j = startIndex + 1; j < itemsInColumn.length; j++) {\n          const index = itemsInColumn[j];\n          const item = items[index];\n          item.top = columnHeights[i];\n          columnHeights[i] = item.top + item.height + rowGutter;\n          intervalTree.remove(index);\n          intervalTree.insert(item.top, item.top + item.height, index);\n        }\n      }\n    },\n    // Render all cells visible within the viewport range defined.\n    range: (lo, hi, renderCallback) => intervalTree.search(lo, hi, (index, top) => renderCallback(index, items[index].left, top)),\n    estimateHeight: (itemCount, defaultItemHeight) => {\n      const tallestColumn = Math.max(0, Math.max.apply(null, columnHeights));\n      return itemCount === intervalTree.size ? tallestColumn : tallestColumn + Math.ceil((itemCount - intervalTree.size) / columnCount) * defaultItemHeight;\n    },\n    shortestColumn: () => {\n      if (columnHeights.length > 1) return Math.min.apply(null, columnHeights);\n      return columnHeights[0] || 0;\n    },\n\n    size() {\n      return intervalTree.size;\n    },\n\n    all() {\n      return items;\n    }\n\n  };\n};\n\n/* istanbul ignore next */\nconst binarySearch = (a, y) => {\n  let l = 0;\n  let h = a.length - 1;\n\n  while (l <= h) {\n    const m = l + h >>> 1;\n    const x = a[m];\n    if (x === y) return m;else if (x <= y) l = m + 1;else h = m - 1;\n  }\n\n  return -1;\n};\n\nconst getColumns = function (width, minimumWidth, gutter, columnCount, maxColumnCount) {\n  if (width === void 0) {\n    width = 0;\n  }\n\n  if (minimumWidth === void 0) {\n    minimumWidth = 0;\n  }\n\n  if (gutter === void 0) {\n    gutter = 8;\n  }\n\n  columnCount = columnCount || Math.min(Math.floor((width + gutter) / (minimumWidth + gutter)), maxColumnCount || Infinity) || 1;\n  const columnWidth = Math.floor((width - gutter * (columnCount - 1)) / columnCount);\n  return [columnWidth, columnCount];\n};\n\nconst emptyArr = [];","var rafSchd = function rafSchd(fn) {\n  var lastArgs = [];\n  var frameId = null;\n\n  var wrapperFn = function wrapperFn() {\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    lastArgs = args;\n\n    if (frameId) {\n      return;\n    }\n\n    frameId = requestAnimationFrame(function () {\n      frameId = null;\n      fn.apply(void 0, lastArgs);\n    });\n  };\n\n  wrapperFn.cancel = function () {\n    if (!frameId) {\n      return;\n    }\n\n    cancelAnimationFrame(frameId);\n    frameId = null;\n  };\n\n  return wrapperFn;\n};\n\nexport default rafSchd;\n","import rafSchd from \"raf-schd\";\nimport * as React from \"react\";\nimport trieMemoize from \"trie-memoize\";\nimport { elementsCache } from \"./elements-cache\";\nimport { useForceUpdate } from \"./use-force-update\";\n\n/**\n * Creates a resize observer that forces updates to the grid cell positions when mutations are\n * made to cells affecting their height.\n *\n * @param positioner - The masonry cell positioner created by the `usePositioner()` hook.\n */\nexport function useResizeObserver(positioner) {\n  const forceUpdate = useForceUpdate();\n  const resizeObserver = createResizeObserver(positioner, forceUpdate); // Cleans up the resize observers when they change or the\n  // component unmounts\n\n  function _ref() {\n    return resizeObserver.disconnect();\n  }\n\n  React.useEffect(() => _ref, [resizeObserver]);\n  return resizeObserver;\n}\n\nconst _handlerForType = /*#__PURE__*/rafSchd(target => {});\n\nfunction _ref2(handler) {\n  handler.cancel();\n}\n\n/**\n * Creates a resize observer that fires an `updater` callback whenever the height of\n * one or many cells change. The `useResizeObserver()` hook is using this under the hood.\n *\n * @param positioner - A cell positioner created by the `usePositioner()` hook or the `createPositioner()` utility\n * @param updater - A callback that fires whenever one or many cell heights change.\n */\nexport const createResizeObserver = /*#__PURE__*/trieMemoize([WeakMap], // TODO: figure out a way to test this\n\n/* istanbul ignore next */\n(positioner, updater) => {\n  const updates = [];\n  const update = rafSchd(() => {\n    if (updates.length > 0) {\n      // Updates the size/positions of the cell with the resize\n      // observer updates\n      positioner.update(updates);\n      updater(updates);\n    }\n\n    updates.length = 0;\n  });\n\n  const commonHandler = target => {\n    const height = target.offsetHeight;\n\n    if (height > 0) {\n      const index = elementsCache.get(target);\n\n      if (index !== void 0) {\n        const position = positioner.get(index);\n        if (position !== void 0 && height !== position.height) updates.push(index, height);\n      }\n    }\n\n    update();\n  };\n\n  const handlers = new Map();\n\n  const handleEntries = entries => {\n    let i = 0;\n\n    for (; i < entries.length; i++) {\n      const entry = entries[i];\n      const index = elementsCache.get(entry.target);\n      if (index === void 0) continue;\n      let handler = handlers.get(index);\n\n      if (!handler) {\n        handler = rafSchd(commonHandler);\n        handlers.set(index, handler);\n      }\n\n      handler(entry.target);\n    }\n  };\n\n  const ro = new ResizeObserver(handleEntries); // Overrides the original disconnect to include cancelling handling the entries.\n  // Ideally this would be its own method but that would result in a breaking\n  // change.\n\n  const disconnect = ro.disconnect.bind(ro);\n\n  ro.disconnect = () => {\n    disconnect();\n    handlers.forEach(_ref2);\n  };\n\n  return ro;\n});","import useEvent from \"@react-hook/event\";\nimport useLatest from \"@react-hook/latest\";\nimport { useThrottleCallback } from \"@react-hook/throttle\";\nimport * as React from \"react\";\n\n/**\n * A hook that creates a callback for scrolling to a specific index in\n * the \"items\" array.\n *\n * @param positioner - A positioner created by the `usePositioner()` hook\n * @param options - Configuration options\n */\nexport function useScrollToIndex(positioner, options) {\n  var _latestOptions$curren;\n\n  const {\n    align = \"top\",\n    element = typeof window !== \"undefined\" && window,\n    offset = 0,\n    height = typeof window !== \"undefined\" ? window.innerHeight : 0\n  } = options;\n  const latestOptions = useLatest({\n    positioner,\n    element,\n    align,\n    offset,\n    height\n  });\n  const getTarget = React.useRef(() => {\n    const latestElement = latestOptions.current.element;\n    return latestElement && \"current\" in latestElement ? latestElement.current : latestElement;\n  }).current;\n  const [state, dispatch] = React.useReducer((state, action) => {\n    const nextState = {\n      position: state.position,\n      index: state.index,\n      prevTop: state.prevTop\n    };\n    /* istanbul ignore next */\n\n    if (action.type === \"scrollToIndex\") {\n      var _action$value;\n\n      return {\n        position: latestOptions.current.positioner.get((_action$value = action.value) !== null && _action$value !== void 0 ? _action$value : -1),\n        index: action.value,\n        prevTop: void 0\n      };\n    } else if (action.type === \"setPosition\") {\n      nextState.position = action.value;\n    } else if (action.type === \"setPrevTop\") {\n      nextState.prevTop = action.value;\n    } else if (action.type === \"reset\") {\n      return defaultState;\n    }\n\n    return nextState;\n  }, defaultState);\n  const throttledDispatch = useThrottleCallback(dispatch, 15); // If we find the position along the way we can immediately take off\n  // to the correct spot.\n\n  useEvent(getTarget(), \"scroll\", () => {\n    if (!state.position && state.index) {\n      const position = latestOptions.current.positioner.get(state.index);\n\n      if (position) {\n        dispatch({\n          type: \"setPosition\",\n          value: position\n        });\n      }\n    }\n  }); // If the top changes out from under us in the case of dynamic cells, we\n  // want to keep following it.\n\n  const currentTop = state.index !== void 0 && ((_latestOptions$curren = latestOptions.current.positioner.get(state.index)) === null || _latestOptions$curren === void 0 ? void 0 : _latestOptions$curren.top);\n  React.useEffect(() => {\n    const target = getTarget();\n    if (!target) return;\n    const {\n      height,\n      align,\n      offset,\n      positioner\n    } = latestOptions.current;\n\n    if (state.position) {\n      let scrollTop = state.position.top;\n\n      if (align === \"bottom\") {\n        scrollTop = scrollTop - height + state.position.height;\n      } else if (align === \"center\") {\n        scrollTop -= (height - state.position.height) / 2;\n      }\n\n      target.scrollTo(0, Math.max(0, scrollTop += offset)); // Resets state after 400ms, an arbitrary time I determined to be\n      // still visually pleasing if there is a slow network reply in dynamic\n      // cells\n\n      let didUnsubscribe = false;\n      const timeout = setTimeout(() => !didUnsubscribe && dispatch({\n        type: \"reset\"\n      }), 400);\n      return () => {\n        didUnsubscribe = true;\n        clearTimeout(timeout);\n      };\n    } else if (state.index !== void 0) {\n      // Estimates the top based upon the average height of current cells\n      let estimatedTop = positioner.shortestColumn() / positioner.size() * state.index;\n      if (state.prevTop) estimatedTop = Math.max(estimatedTop, state.prevTop + height);\n      target.scrollTo(0, estimatedTop);\n      throttledDispatch({\n        type: \"setPrevTop\",\n        value: estimatedTop\n      });\n    }\n  }, [currentTop, state, latestOptions, getTarget, throttledDispatch]);\n  return React.useRef(index => {\n    dispatch({\n      type: \"scrollToIndex\",\n      value: index\n    });\n  }).current;\n}\nconst defaultState = {\n  index: void 0,\n  position: void 0,\n  prevTop: void 0\n};","import { useWindowSize } from \"@react-hook/window-size\";\nimport * as React from \"react\";\nconst __reactCreateElement__ = React.createElement;\nimport { MasonryScroller } from \"./masonry-scroller\";\nimport { useContainerPosition } from \"./use-container-position\";\nimport { usePositioner } from \"./use-positioner\";\nimport { useResizeObserver } from \"./use-resize-observer\";\nimport { useScrollToIndex } from \"./use-scroll-to-index\";\n\n/**\n * A \"batteries included\" masonry grid which includes all of the implementation details below. This component is the\n * easiest way to get off and running in your app, before switching to more advanced implementations, if necessary.\n * It will change its column count to fit its container's width and will decide how many rows to render based upon\n * the height of the browser `window`.\n *\n * @param props\n */\nexport function Masonry(props) {\n  const containerRef = React.useRef(null);\n  const windowSize = useWindowSize({\n    initialWidth: props.ssrWidth,\n    initialHeight: props.ssrHeight\n  });\n  const containerPos = useContainerPosition(containerRef, windowSize);\n  const nextProps = Object.assign({\n    offset: containerPos.offset,\n    width: containerPos.width || windowSize[0],\n    height: windowSize[1],\n    containerRef\n  }, props);\n  nextProps.positioner = usePositioner(nextProps);\n  nextProps.resizeObserver = useResizeObserver(nextProps.positioner);\n  const scrollToIndex = useScrollToIndex(nextProps.positioner, {\n    height: nextProps.height,\n    offset: containerPos.offset,\n    align: typeof props.scrollToIndex === \"object\" ? props.scrollToIndex.align : void 0\n  });\n  const index = props.scrollToIndex && (typeof props.scrollToIndex === \"number\" ? props.scrollToIndex : props.scrollToIndex.index);\n  React.useEffect(() => {\n    if (index !== void 0) scrollToIndex(index);\n  }, [index, scrollToIndex]);\n  return __reactCreateElement__(MasonryScroller, nextProps);\n}\n\nif (typeof process !== \"undefined\" && process.env.NODE_ENV !== \"production\") {\n  Masonry.displayName = \"Masonry\";\n}","import { memo, useEffect, useMemo, useRef, useState } from 'react';\nimport { useLoaderData, useNavigate } from \"react-router-dom\";\nimport AutoSizer from 'react-virtualized-auto-sizer';\nimport useLocalStorageState from 'use-local-storage-state';\nimport { FilterSettings, SongData, SongDB, SortField, SortOrder, SortSettings } from '../../types/types';\nimport { fetchIllustrationPrompt } from '../../components/song_loader';\nimport { AutoTextSize } from 'auto-text-size';\nimport { CircleX } from 'lucide-react';\nimport './SongGallery.css'\nimport { Button } from '@/components/ui/button';\n// import LazyLoad from 'react-lazyload';\n// import Masonry, { ResponsiveMasonry } from \"react-responsive-masonry\"\nimport { Masonry } from \"masonic\";\nimport { IllustrationPrompt } from '@/components/IllustrationPrompt';\n\nconst getShuffledArr = arr => {\n    const newArr = arr.slice()\n    for (let i = newArr.length - 1; i > 0; i--) {\n        const rand = Math.floor(Math.random() * (i + 1));\n        [newArr[i], newArr[rand]] = [newArr[rand], newArr[i]];\n    }\n    return newArr\n};\n\nconst imageHeight = (normalHeight: number, variability: number) => {\n    return normalHeight * (1 - variability + variability * Math.random());\n}\n\n\nfunction CardThatHides({ song }) {\n    const navigate = useNavigate();\n    const [hidden, setHidden] = useState(false);\n    const [showingContent, setShowingContent] = useState(false);\n    const onError = () => { console.log(\"Error showing image in gallery!\"); setHidden(true) };\n    const [imageHeightGen, setImageHeightGen] = useState(null);\n    const [overlayOpacity, setOverlayOpacity] = useState(0);\n\n    useEffect(() => {\n        setImageHeightGen(imageHeight(512, 0.3));\n    }, [])\n\n    return (<>\n        <div className={\"w-full relative \" + (hidden ? 'hidden' : 'flex')} style={{ height: imageHeightGen }} >\n            <div className=\"background-image flex w-full rounded-lg\" onError={onError} style={{ backgroundImage: `url(\"${song.illustrationURL()}\")` }}>\n            </div>\n            <div className={\"image-overlay absolute overflow-hidden rounded-lg z-10 border border-1 border-glass/30 backdrop-blur-lg bg-primary/30 \" + (\"opacity-\" + overlayOpacity)} onMouseOver={() => setOverlayOpacity(100)} onMouseOut={() => setOverlayOpacity(0)}\n                onMouseEnter={() => setShowingContent(true)} onClick={() => setShowingContent(true)}>\n                <div className='w-full h-full flex flex-col items-center justify-start pt-4 overflow-hidden '>\n                    <CircleX className='absolute top-4 right-4 w-8 h-8 text-white/80 hover:text-white' onClick={() => setOverlayOpacity(0)} />\n                    <h2 className=\"text-tiny text-white/90 font-bold uppercase text-shadow\">{song.artist}</h2>\n                    <h2 className=\"text-white font-bold text-shadow\">{song.title}</h2>\n                    <IllustrationPrompt song={song} show={showingContent} className={\"text-white h-32\"}/>\n                    <Button onClick={() => navigate(song.url())} className={\"w-full rounded-t-none bg-primary text-white text-md backdrop-blur-sm hover:bg-background hover:text-primary\" + (showingContent ? \"\" : \" hidden\")}>View</Button>\n                </div>\n            </div>\n        </div>\n    </>\n    )\n}\n\n\n// <Card isFooterBlurredHoverable isFooterBlurred \n// >\n// </Card>\n\nconst SongGallery = () => {\n    const songDB = useLoaderData() as SongDB;\n    const songs = getShuffledArr(songDB.songs) as Array<SongData>;\n\n    const [windowSize, setWindowSize] = useState(null)\n\n    const MasonryCard = ({ index, data, width }) => (\n        <CardThatHides song={data} />\n    );\n\n    const columnWidth = () => {\n        const breakpoints = [700, 1200, 1800];\n        const windowWidth = window.innerWidth;\n        for (const i of Array(3).keys()) {\n            console.log(i, windowWidth, window.innerWidth)\n            if (windowWidth < breakpoints[i]) {\n                return windowWidth / (i + 2);\n            }\n        }\n    }\n\n    return (\n        <div className='max-w-full m-[10px]'>\n            <Masonry items={songs} render={MasonryCard} columnGutter={10} rowGutter={10} columnWidth={columnWidth()} />\n        </div>\n    );\n};\n\nexport default SongGallery;\n"],"names":["CircleX","createLucideIcon","RED","BLACK","NIL","DELETE","KEEP","addInterval","treeNode","high","index","node","prevNode","removeInterval","NULL_NODE","updateMax","max","updateMaxUp","x","rotateLeft","tree","y","rotateRight","replaceNode","fixRemove","w","minimumTree","fixInsert","z","createIntervalTree","indexMap","low","intervalResult","originalYColor","callback","stack","curr","useLatest","current","storedValue","React.useRef","React.useEffect","useDebounceCallback","wait","leading","storedCallback","timeout","deps","_ref","_ref2","React.useCallback","args","useDebounce","initialState","state","React.useState","useEvent","target","type","listener","cleanup","storedListener","storedCleanup","targetEl","didUnsubscribe","emptyObj","win","wv","getSize","useWindowSize","options","initialWidth","initialHeight","size","setDebouncedSize","setSize","memoOne","fn","areEqual","equal","defaultAreEqual","value","prev","OneKeyMap","key","val","k","v","createCache","obj","cache","memo","constructors","depth","baseCache","base","map","i","one","g1","s1","g2","s2","memoize","mapConstructors","item","g","s","elementsCache","useForceUpdate","setState","__reactCreateElement__","React.createElement","useMasonry","positioner","resizeObserver","items","ContainerComponent","id","className","style","role","tabIndex","containerRef","ItemComponent","itemStyle","itemHeightEstimate","itemKey","defaultGetItemKey","overscanBy","scrollTop","isScrolling","height","RenderComponent","onRender","startIndex","stopIndex","forceUpdate","setItemRef","getRefSetter","itemCount","columnWidth","columnCount","range","estimateHeight","shortestColumn","measuredCount","shortestColumnSize","children","itemRole","storedOnRender","rangeEnd","needsFreshBatch","left","top","data","phaseTwoStyle","createRenderElement","batchSize","phaseOneStyle","getCachedSize","didEverMount","containerStyle","getContainerStyle","assignUserStyle","trieMemoize","memoizeOne","cmp2","pargs","userStyle","_","width","el","u","p","now","af","Caf","Raf","raf","caf","h","lastTime","next","clearRequestTimeout","handle","requestTimeout","ms","start","loop","perf","useThrottleCallback","fps","trailingTimeout","clearTrailing","rightNow","call","useThrottle","getScrollY","useWindowScroll","useScroller","offset","useScrollPosition","setIsScrolling","didMount","to","MasonryScroller","props","usePassiveLayoutEffect","React","useContainerPosition","elementRef","emptyArr","containerPosition","setContainerPosition","useLayoutEffect","usePositioner","columnGutter","rowGutter","maxColumnCount","initPositioner","computedColumnWidth","computedColumnCount","getColumns","createPositioner","positionerRef","prevDeps","opts","prevOpts","optsChanged","prevPositioner","cacheSize","pos","intervalTree","columnHeights","columnItems","column","updates","columns","j","itemsInColumn","binarySearch","startItem","lo","hi","renderCallback","defaultItemHeight","tallestColumn","a","l","m","minimumWidth","gutter","rafSchd","lastArgs","frameId","wrapperFn","_len","_key","useResizeObserver","createResizeObserver","handler","updater","update","commonHandler","position","handlers","handleEntries","entries","entry","ro","disconnect","useScrollToIndex","_latestOptions$curren","align","element","latestOptions","getTarget","latestElement","dispatch","React.useReducer","action","nextState","_action$value","defaultState","throttledDispatch","currentTop","estimatedTop","Masonry","windowSize","containerPos","nextProps","scrollToIndex","getShuffledArr","arr","newArr","rand","imageHeight","normalHeight","variability","CardThatHides","song","navigate","useNavigate","hidden","setHidden","useState","showingContent","setShowingContent","onError","imageHeightGen","setImageHeightGen","overlayOpacity","setOverlayOpacity","useEffect","jsx","Fragment","jsxs","IllustrationPrompt","Button","SongGallery","songDB","useLoaderData","songs","MasonryCard","breakpoints","windowWidth"],"mappings":"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","x_google_ignoreList":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24]}