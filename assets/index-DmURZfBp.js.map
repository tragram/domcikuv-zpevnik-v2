{"version":3,"file":"index-DmURZfBp.js","sources":["../../node_modules/@radix-ui/react-compose-refs/dist/index.mjs","../../node_modules/@radix-ui/react-slot/dist/index.mjs","../../node_modules/class-variance-authority/node_modules/clsx/dist/clsx.mjs","../../node_modules/class-variance-authority/dist/index.mjs","../../src/components/ui/button.tsx","../../node_modules/auto-text-size/dist/index.mjs"],"sourcesContent":["// packages/react/compose-refs/src/composeRefs.tsx\nimport * as React from \"react\";\nfunction setRef(ref, value) {\n  if (typeof ref === \"function\") {\n    ref(value);\n  } else if (ref !== null && ref !== void 0) {\n    ref.current = value;\n  }\n}\nfunction composeRefs(...refs) {\n  return (node) => refs.forEach((ref) => setRef(ref, node));\n}\nfunction useComposedRefs(...refs) {\n  return React.useCallback(composeRefs(...refs), refs);\n}\nexport {\n  composeRefs,\n  useComposedRefs\n};\n//# sourceMappingURL=index.mjs.map\n","// packages/react/slot/src/Slot.tsx\nimport * as React from \"react\";\nimport { composeRefs } from \"@radix-ui/react-compose-refs\";\nimport { Fragment, jsx } from \"react/jsx-runtime\";\nvar Slot = React.forwardRef((props, forwardedRef) => {\n  const { children, ...slotProps } = props;\n  const childrenArray = React.Children.toArray(children);\n  const slottable = childrenArray.find(isSlottable);\n  if (slottable) {\n    const newElement = slottable.props.children;\n    const newChildren = childrenArray.map((child) => {\n      if (child === slottable) {\n        if (React.Children.count(newElement) > 1) return React.Children.only(null);\n        return React.isValidElement(newElement) ? newElement.props.children : null;\n      } else {\n        return child;\n      }\n    });\n    return /* @__PURE__ */ jsx(SlotClone, { ...slotProps, ref: forwardedRef, children: React.isValidElement(newElement) ? React.cloneElement(newElement, void 0, newChildren) : null });\n  }\n  return /* @__PURE__ */ jsx(SlotClone, { ...slotProps, ref: forwardedRef, children });\n});\nSlot.displayName = \"Slot\";\nvar SlotClone = React.forwardRef((props, forwardedRef) => {\n  const { children, ...slotProps } = props;\n  if (React.isValidElement(children)) {\n    const childrenRef = getElementRef(children);\n    return React.cloneElement(children, {\n      ...mergeProps(slotProps, children.props),\n      // @ts-ignore\n      ref: forwardedRef ? composeRefs(forwardedRef, childrenRef) : childrenRef\n    });\n  }\n  return React.Children.count(children) > 1 ? React.Children.only(null) : null;\n});\nSlotClone.displayName = \"SlotClone\";\nvar Slottable = ({ children }) => {\n  return /* @__PURE__ */ jsx(Fragment, { children });\n};\nfunction isSlottable(child) {\n  return React.isValidElement(child) && child.type === Slottable;\n}\nfunction mergeProps(slotProps, childProps) {\n  const overrideProps = { ...childProps };\n  for (const propName in childProps) {\n    const slotPropValue = slotProps[propName];\n    const childPropValue = childProps[propName];\n    const isHandler = /^on[A-Z]/.test(propName);\n    if (isHandler) {\n      if (slotPropValue && childPropValue) {\n        overrideProps[propName] = (...args) => {\n          childPropValue(...args);\n          slotPropValue(...args);\n        };\n      } else if (slotPropValue) {\n        overrideProps[propName] = slotPropValue;\n      }\n    } else if (propName === \"style\") {\n      overrideProps[propName] = { ...slotPropValue, ...childPropValue };\n    } else if (propName === \"className\") {\n      overrideProps[propName] = [slotPropValue, childPropValue].filter(Boolean).join(\" \");\n    }\n  }\n  return { ...slotProps, ...overrideProps };\n}\nfunction getElementRef(element) {\n  let getter = Object.getOwnPropertyDescriptor(element.props, \"ref\")?.get;\n  let mayWarn = getter && \"isReactWarning\" in getter && getter.isReactWarning;\n  if (mayWarn) {\n    return element.ref;\n  }\n  getter = Object.getOwnPropertyDescriptor(element, \"ref\")?.get;\n  mayWarn = getter && \"isReactWarning\" in getter && getter.isReactWarning;\n  if (mayWarn) {\n    return element.props.ref;\n  }\n  return element.props.ref || element.ref;\n}\nvar Root = Slot;\nexport {\n  Root,\n  Slot,\n  Slottable\n};\n//# sourceMappingURL=index.mjs.map\n","function r(e){var t,f,n=\"\";if(\"string\"==typeof e||\"number\"==typeof e)n+=e;else if(\"object\"==typeof e)if(Array.isArray(e))for(t=0;t<e.length;t++)e[t]&&(f=r(e[t]))&&(n&&(n+=\" \"),n+=f);else for(t in e)e[t]&&(n&&(n+=\" \"),n+=t);return n}export function clsx(){for(var e,t,f=0,n=\"\";f<arguments.length;)(e=arguments[f++])&&(t=r(e))&&(n&&(n+=\" \"),n+=t);return n}export default clsx;","import { clsx } from \"clsx\";\nconst falsyToString = (value)=>typeof value === \"boolean\" ? \"\".concat(value) : value === 0 ? \"0\" : value;\nexport const cx = clsx;\nexport const cva = (base, config)=>{\n    return (props)=>{\n        var ref;\n        if ((config === null || config === void 0 ? void 0 : config.variants) == null) return cx(base, props === null || props === void 0 ? void 0 : props.class, props === null || props === void 0 ? void 0 : props.className);\n        const { variants , defaultVariants  } = config;\n        const getVariantClassNames = Object.keys(variants).map((variant)=>{\n            const variantProp = props === null || props === void 0 ? void 0 : props[variant];\n            const defaultVariantProp = defaultVariants === null || defaultVariants === void 0 ? void 0 : defaultVariants[variant];\n            if (variantProp === null) return null;\n            const variantKey = falsyToString(variantProp) || falsyToString(defaultVariantProp);\n            return variants[variant][variantKey];\n        });\n        const propsWithoutUndefined = props && Object.entries(props).reduce((acc, param)=>{\n            let [key, value] = param;\n            if (value === undefined) {\n                return acc;\n            }\n            acc[key] = value;\n            return acc;\n        }, {});\n        const getCompoundVariantClassNames = config === null || config === void 0 ? void 0 : (ref = config.compoundVariants) === null || ref === void 0 ? void 0 : ref.reduce((acc, param1)=>{\n            let { class: cvClass , className: cvClassName , ...compoundVariantOptions } = param1;\n            return Object.entries(compoundVariantOptions).every((param)=>{\n                let [key, value] = param;\n                return Array.isArray(value) ? value.includes({\n                    ...defaultVariants,\n                    ...propsWithoutUndefined\n                }[key]) : ({\n                    ...defaultVariants,\n                    ...propsWithoutUndefined\n                })[key] === value;\n            }) ? [\n                ...acc,\n                cvClass,\n                cvClassName\n            ] : acc;\n        }, []);\n        return cx(base, getVariantClassNames, getCompoundVariantClassNames, props === null || props === void 0 ? void 0 : props.class, props === null || props === void 0 ? void 0 : props.className);\n    };\n};\n\n\n//# sourceMappingURL=index.mjs.map","import * as React from \"react\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst buttonVariants = cva(\n  \"inline-flex items-center justify-center gap-2 whitespace-nowrap rounded-md text-sm font-medium transition-colors disabled:pointer-events-none disabled:opacity-50 [&_svg]:pointer-events-none [&_svg]:size-5 [&_svg]:shrink-0\",\n  {\n    variants: {\n      variant: {\n        default: \"bg-primary text-primary-foreground hover:bg-primary/90\",\n        destructive:\n          \"bg-destructive text-destructive-foreground hover:bg-destructive/90\",\n        outline:\n          \"border border-input bg-background hover:bg-accent hover:text-accent-foreground\",\n        secondary:\n          \"bg-secondary text-secondary-foreground hover:bg-secondary/80\",\n        ghost: \"hover:bg-accent hover:text-accent-foreground\",\n        link: \"text-primary underline-offset-4 hover:underline\",\n        circular: \"bg-primary text-primary-foreground hover:bg-primary/90 rounded-full outline outline-2 outline-background shadow-md\"\n      },\n      size: {\n        default: \"h-10 px-4 py-2\",\n        sm: \"h-9 rounded-md px-3\",\n        lg: \"h-11 rounded-md px-8\",\n        icon: \"h-10 w-10\",\n      },\n      isActive: {\n        true: \"bg-primary dark:outline-primary/30\",\n        false: \"bg-white dark:bg-background/90 text-primary hover:text-white hover:outline-white outline-primary dark:outline-primary/30\",\n      }\n    },\n    defaultVariants: {\n      isActive: false,\n      variant: \"default\",\n      size: \"default\",\n    },\n  }\n)\n\nexport interface ButtonProps\n  extends React.ButtonHTMLAttributes<HTMLButtonElement>,\n  VariantProps<typeof buttonVariants> {\n  asChild?: boolean\n}\n\nconst Button = React.forwardRef<HTMLButtonElement, ButtonProps>(\n  ({ className, variant, size, isActive, asChild = false, ...props }, ref) => {\n    const Comp = asChild ? Slot : \"button\"\n    return (\n      <Comp\n        className={cn(buttonVariants({ variant, size, className, isActive }))}\n        ref={ref}\n        {...props}\n      />\n    )\n  }\n)\nButton.displayName = \"Button\"\n\nexport { Button, buttonVariants }\n","var __defProp = Object.defineProperty;\nvar __getOwnPropSymbols = Object.getOwnPropertySymbols;\nvar __hasOwnProp = Object.prototype.hasOwnProperty;\nvar __propIsEnum = Object.prototype.propertyIsEnumerable;\nvar __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;\nvar __spreadValues = (a, b) => {\n  for (var prop in b || (b = {}))\n    if (__hasOwnProp.call(b, prop))\n      __defNormalProp(a, prop, b[prop]);\n  if (__getOwnPropSymbols)\n    for (var prop of __getOwnPropSymbols(b)) {\n      if (__propIsEnum.call(b, prop))\n        __defNormalProp(a, prop, b[prop]);\n    }\n  return a;\n};\nvar __objRest = (source, exclude) => {\n  var target = {};\n  for (var prop in source)\n    if (__hasOwnProp.call(source, prop) && exclude.indexOf(prop) < 0)\n      target[prop] = source[prop];\n  if (source != null && __getOwnPropSymbols)\n    for (var prop of __getOwnPropSymbols(source)) {\n      if (exclude.indexOf(prop) < 0 && __propIsEnum.call(source, prop))\n        target[prop] = source[prop];\n    }\n  return target;\n};\n\n// src/auto-text-size-standalone.ts\nfunction throttleAnimationFrame(func) {\n  let wait = false;\n  return () => {\n    if (!wait) {\n      wait = true;\n      requestAnimationFrame(() => {\n        func();\n        wait = false;\n      });\n    }\n  };\n}\nvar antiOverflowAlgo = ({\n  fontSizePx,\n  minFontSizePx,\n  fontSizePrecisionPx,\n  updateFontSizePx,\n  breakPredicate: breakPred\n}) => {\n  const maxIterCount = Math.ceil(1 / fontSizePrecisionPx);\n  let iterCount = 0;\n  while (fontSizePx > minFontSizePx && iterCount < maxIterCount) {\n    if (breakPred())\n      break;\n    fontSizePx = updateFontSizePx(fontSizePx - fontSizePrecisionPx);\n    iterCount++;\n  }\n};\nvar getContentWidth = (element) => {\n  const computedStyle = getComputedStyle(element);\n  return element.clientWidth - parseFloat(computedStyle.paddingLeft) - parseFloat(computedStyle.paddingRight);\n};\nvar getContentHeight = (element) => {\n  const computedStyle = getComputedStyle(element);\n  return element.clientHeight - parseFloat(computedStyle.paddingTop) - parseFloat(computedStyle.paddingBottom);\n};\nvar multilineAlgo = (opts) => {\n  opts.innerEl.style.whiteSpace = \"nowrap\";\n  onelineAlgo(opts);\n  if (opts.innerEl.scrollWidth > getContentWidth(opts.containerEl)) {\n    opts.innerEl.style.whiteSpace = \"normal\";\n  }\n};\nvar onelineAlgo = ({\n  innerEl,\n  containerEl,\n  fontSizePx,\n  minFontSizePx,\n  maxFontSizePx,\n  fontSizePrecisionPx,\n  updateFontSizePx\n}) => {\n  const maxIterCount = 10;\n  let iterCount = 0;\n  let prevOverflowFactor = 1;\n  while (iterCount < maxIterCount) {\n    const w0 = innerEl.scrollWidth;\n    const w1 = getContentWidth(containerEl);\n    const canGrow = fontSizePx < maxFontSizePx && w0 < w1;\n    const canShrink = fontSizePx > minFontSizePx && w0 > w1;\n    const overflowFactor = w0 / w1;\n    if (prevOverflowFactor === overflowFactor) {\n      break;\n    }\n    if (!(canGrow || canShrink)) {\n      break;\n    }\n    const updatePx = fontSizePx / overflowFactor - fontSizePx;\n    const prevFontSizePx = fontSizePx;\n    fontSizePx = updateFontSizePx(fontSizePx + updatePx);\n    if (Math.abs(fontSizePx - prevFontSizePx) <= fontSizePrecisionPx) {\n      break;\n    }\n    prevOverflowFactor = overflowFactor;\n    iterCount++;\n  }\n  antiOverflowAlgo({\n    fontSizePx,\n    minFontSizePx,\n    updateFontSizePx,\n    fontSizePrecisionPx,\n    breakPredicate: () => innerEl.scrollWidth <= getContentWidth(containerEl)\n  });\n};\nvar boxAlgo = ({\n  innerEl,\n  containerEl,\n  fontSizePx,\n  minFontSizePx,\n  maxFontSizePx,\n  fontSizePrecisionPx,\n  updateFontSizePx\n}) => {\n  const maxIterCount = 100;\n  fontSizePx = updateFontSizePx((maxFontSizePx - minFontSizePx) * 0.5);\n  let updatePx = (maxFontSizePx - minFontSizePx) * 0.25;\n  let iterCount = 0;\n  while (updatePx > fontSizePrecisionPx && iterCount < maxIterCount) {\n    const w0 = innerEl.scrollWidth;\n    const w1 = getContentWidth(containerEl);\n    const h0 = innerEl.scrollHeight;\n    const h1 = getContentHeight(containerEl);\n    if (w0 === w1 && h0 === h1)\n      break;\n    if (fontSizePx < maxFontSizePx && w0 <= w1 && h0 <= h1) {\n      fontSizePx = updateFontSizePx(fontSizePx + updatePx);\n    } else if (fontSizePx > minFontSizePx && (w0 > w1 || h0 > h1)) {\n      fontSizePx = updateFontSizePx(fontSizePx - updatePx);\n    }\n    updatePx *= 0.5;\n    iterCount++;\n  }\n  antiOverflowAlgo({\n    fontSizePx,\n    minFontSizePx,\n    updateFontSizePx,\n    fontSizePrecisionPx,\n    breakPredicate: () => innerEl.scrollWidth <= getContentWidth(containerEl) && innerEl.scrollHeight <= getContentHeight(containerEl)\n  });\n};\nfunction updateTextSize({\n  innerEl,\n  containerEl,\n  mode = \"multiline\",\n  minFontSizePx = 8,\n  maxFontSizePx = 160,\n  fontSizePrecisionPx = 0.1\n}) {\n  const t0 = performance.now();\n  if (!isFinite(minFontSizePx)) {\n    throw new Error(`Invalid minFontSizePx (${minFontSizePx})`);\n  }\n  if (!isFinite(minFontSizePx)) {\n    throw new Error(`Invalid maxFontSizePx (${maxFontSizePx})`);\n  }\n  if (!isFinite(fontSizePrecisionPx) || fontSizePrecisionPx === 0) {\n    throw new Error(`Invalid fontSizePrecisionPx (${fontSizePrecisionPx})`);\n  }\n  if (containerEl.children.length > 1) {\n    console.warn(\n      `AutoTextSize has ${containerEl.children.length - 1} siblings. This may interfere with the algorithm.`\n    );\n  }\n  const containerStyles = {\n    // Necessary to correctly compute the dimensions `innerEl`.\n    display: \"flex\",\n    alignItems: \"start\"\n  };\n  const innerStyles = {\n    display: \"block\"\n    // Necessary to compute dimensions.\n  };\n  if (mode === \"oneline\") {\n    innerStyles.whiteSpace = \"nowrap\";\n  } else if (mode === \"multiline\") {\n    innerStyles.wordBreak = \"break-word\";\n  } else if (mode === \"box\") {\n    innerStyles.whiteSpace = \"pre-wrap\";\n    innerStyles.wordBreak = \"break-word\";\n  } else if (mode === \"boxoneline\") {\n    innerStyles.whiteSpace = \"nowrap\";\n  }\n  Object.assign(containerEl.style, containerStyles);\n  Object.assign(innerEl.style, innerStyles);\n  const fontSizeStr = window.getComputedStyle(innerEl, null).getPropertyValue(\"font-size\");\n  let fontSizePx = parseFloat(fontSizeStr);\n  let iterations = 0;\n  const updateFontSizePx = (px) => {\n    px = Math.min(Math.max(px, minFontSizePx), maxFontSizePx);\n    fontSizePx = px;\n    innerEl.style.fontSize = `${fontSizePx}px`;\n    iterations++;\n    return fontSizePx;\n  };\n  if (fontSizePx > maxFontSizePx || fontSizePx < minFontSizePx) {\n    updateFontSizePx(fontSizePx);\n  }\n  const algoOpts = {\n    innerEl,\n    containerEl,\n    fontSizePx,\n    minFontSizePx,\n    maxFontSizePx,\n    fontSizePrecisionPx,\n    updateFontSizePx\n  };\n  if (mode === \"oneline\") {\n    onelineAlgo(algoOpts);\n  } else if (mode === \"multiline\") {\n    multilineAlgo(algoOpts);\n  } else if (mode === \"box\") {\n    boxAlgo(algoOpts);\n  } else if (mode === \"boxoneline\") {\n    boxAlgo(algoOpts);\n  }\n}\nfunction autoTextSize({\n  innerEl,\n  containerEl,\n  mode,\n  minFontSizePx,\n  maxFontSizePx,\n  fontSizePrecisionPx\n}) {\n  let containerDimensions = void 0;\n  const throttledUpdateTextSize = throttleAnimationFrame(() => {\n    updateTextSize({\n      innerEl,\n      containerEl,\n      mode,\n      maxFontSizePx,\n      minFontSizePx,\n      fontSizePrecisionPx\n    });\n    containerDimensions = [\n      getContentWidth(containerEl),\n      getContentHeight(containerEl)\n    ];\n  });\n  const resizeObserver = new ResizeObserver(() => {\n    const prevContainerDimensions = containerDimensions;\n    containerDimensions = [\n      getContentWidth(containerEl),\n      getContentHeight(containerEl)\n    ];\n    if ((prevContainerDimensions == null ? void 0 : prevContainerDimensions[0]) !== containerDimensions[0] || (prevContainerDimensions == null ? void 0 : prevContainerDimensions[1]) !== containerDimensions[1]) {\n      throttledUpdateTextSize();\n    }\n  });\n  resizeObserver.observe(containerEl);\n  throttledUpdateTextSize.disconnect = () => resizeObserver.disconnect();\n  return throttledUpdateTextSize;\n}\n\n// src/auto-text-size-react.tsx\nimport React, {\n  useCallback,\n  useEffect,\n  useRef\n} from \"react\";\nfunction AutoTextSize(_a) {\n  var _b = _a, {\n    mode,\n    minFontSizePx,\n    maxFontSizePx,\n    fontSizePrecisionPx,\n    as: Comp = \"div\",\n    children: children\n  } = _b, rest = __objRest(_b, [\n    \"mode\",\n    \"minFontSizePx\",\n    \"maxFontSizePx\",\n    \"fontSizePrecisionPx\",\n    \"as\",\n    // TODO: The `...rest` props are not typed to reflect another `as`.\n    \"children\"\n  ]);\n  const updateTextSizeRef = useRef();\n  useEffect(() => {\n    var _a2;\n    return (_a2 = updateTextSizeRef.current) == null ? void 0 : _a2.call(updateTextSizeRef);\n  }, [children]);\n  const refCallback = useCallback(\n    (innerEl) => {\n      var _a2;\n      (_a2 = updateTextSizeRef.current) == null ? void 0 : _a2.disconnect();\n      const containerEl = innerEl == null ? void 0 : innerEl.parentElement;\n      if (!innerEl || !containerEl)\n        return;\n      updateTextSizeRef.current = autoTextSize({\n        innerEl,\n        containerEl,\n        mode,\n        minFontSizePx,\n        maxFontSizePx,\n        fontSizePrecisionPx\n      });\n    },\n    [mode, minFontSizePx, maxFontSizePx, fontSizePrecisionPx]\n  );\n  return /* @__PURE__ */ React.createElement(Comp, __spreadValues({ ref: refCallback }, rest), children);\n}\nexport {\n  AutoTextSize,\n  autoTextSize,\n  updateTextSize\n};\n//# sourceMappingURL=index.mjs.map"],"names":["setRef","ref","value","composeRefs","refs","node","useComposedRefs","React.useCallback","Slot","React.forwardRef","props","forwardedRef","children","slotProps","childrenArray","React.Children","slottable","isSlottable","newElement","newChildren","child","React.isValidElement","jsx","SlotClone","React.cloneElement","childrenRef","getElementRef","mergeProps","Slottable","Fragment","childProps","overrideProps","propName","slotPropValue","childPropValue","args","element","getter","_a","mayWarn","_b","r","t","f","clsx","falsyToString","cx","cva","base","config","variants","defaultVariants","getVariantClassNames","variant","variantProp","defaultVariantProp","variantKey","propsWithoutUndefined","acc","param","key","getCompoundVariantClassNames","param1","cvClass","cvClassName","compoundVariantOptions","buttonVariants","Button","className","size","isActive","asChild","Comp","cn","__defProp","__getOwnPropSymbols","__hasOwnProp","__propIsEnum","__defNormalProp","obj","__spreadValues","a","b","prop","__objRest","source","exclude","target","throttleAnimationFrame","func","wait","antiOverflowAlgo","fontSizePx","minFontSizePx","fontSizePrecisionPx","updateFontSizePx","breakPred","maxIterCount","iterCount","getContentWidth","computedStyle","getContentHeight","multilineAlgo","opts","onelineAlgo","innerEl","containerEl","maxFontSizePx","prevOverflowFactor","w0","w1","canGrow","canShrink","overflowFactor","updatePx","prevFontSizePx","boxAlgo","h0","h1","updateTextSize","mode","containerStyles","innerStyles","fontSizeStr","px","algoOpts","autoTextSize","containerDimensions","throttledUpdateTextSize","resizeObserver","prevContainerDimensions","AutoTextSize","rest","updateTextSizeRef","useRef","useEffect","_a2","refCallback","useCallback","React"],"mappings":"4DAEA,SAASA,EAAOC,EAAKC,EAAO,CACtB,OAAOD,GAAQ,WACjBA,EAAIC,CAAK,EACAD,GAAQ,OACjBA,EAAI,QAAUC,EAElB,CACA,SAASC,KAAeC,EAAM,CAC5B,OAAQC,GAASD,EAAK,QAASH,GAAQD,EAAOC,EAAKI,CAAI,CAAC,CAC1D,CACA,SAASC,KAAmBF,EAAM,CAChC,OAAOG,EAAiB,YAACJ,EAAY,GAAGC,CAAI,EAAGA,CAAI,CACrD,CCVG,IAACI,EAAOC,EAAgB,WAAC,CAACC,EAAOC,IAAiB,CACnD,KAAM,CAAE,SAAAC,EAAU,GAAGC,CAAS,EAAKH,EAC7BI,EAAgBC,EAAAA,SAAe,QAAQH,CAAQ,EAC/CI,EAAYF,EAAc,KAAKG,CAAW,EAChD,GAAID,EAAW,CACb,MAAME,EAAaF,EAAU,MAAM,SAC7BG,EAAcL,EAAc,IAAKM,GACjCA,IAAUJ,EACRD,EAAc,SAAC,MAAMG,CAAU,EAAI,EAAUH,EAAc,SAAC,KAAK,IAAI,EAClEM,EAAAA,eAAqBH,CAAU,EAAIA,EAAW,MAAM,SAAW,KAE/DE,CAEV,EACD,OAAuBE,EAAAA,IAAIC,EAAW,CAAE,GAAGV,EAAW,IAAKF,EAAc,SAAUU,EAAAA,eAAqBH,CAAU,EAAIM,EAAkB,aAACN,EAAY,OAAQC,CAAW,EAAI,KAAM,CACtL,CACE,OAAuBG,EAAAA,IAAIC,EAAW,CAAE,GAAGV,EAAW,IAAKF,EAAc,SAAAC,EAAU,CACrF,CAAC,EACDJ,EAAK,YAAc,OACnB,IAAIe,EAAYd,EAAgB,WAAC,CAACC,EAAOC,IAAiB,CACxD,KAAM,CAAE,SAAAC,EAAU,GAAGC,CAAS,EAAKH,EACnC,GAAIW,EAAAA,eAAqBT,CAAQ,EAAG,CAClC,MAAMa,EAAcC,EAAcd,CAAQ,EAC1C,OAAOY,EAAAA,aAAmBZ,EAAU,CAClC,GAAGe,EAAWd,EAAWD,EAAS,KAAK,EAEvC,IAAKD,EAAeR,EAAYQ,EAAcc,CAAW,EAAIA,CACnE,CAAK,CACL,CACE,OAAOV,EAAc,SAAC,MAAMH,CAAQ,EAAI,EAAIG,WAAe,KAAK,IAAI,EAAI,IAC1E,CAAC,EACDQ,EAAU,YAAc,YACxB,IAAIK,EAAY,CAAC,CAAE,SAAAhB,KACMU,MAAIO,EAAAA,SAAU,CAAE,SAAAjB,EAAU,EAEnD,SAASK,EAAYG,EAAO,CAC1B,OAAOC,EAAoB,eAACD,CAAK,GAAKA,EAAM,OAASQ,CACvD,CACA,SAASD,EAAWd,EAAWiB,EAAY,CACzC,MAAMC,EAAgB,CAAE,GAAGD,CAAY,EACvC,UAAWE,KAAYF,EAAY,CACjC,MAAMG,EAAgBpB,EAAUmB,CAAQ,EAClCE,EAAiBJ,EAAWE,CAAQ,EACxB,WAAW,KAAKA,CAAQ,EAEpCC,GAAiBC,EACnBH,EAAcC,CAAQ,EAAI,IAAIG,IAAS,CACrCD,EAAe,GAAGC,CAAI,EACtBF,EAAc,GAAGE,CAAI,CACtB,EACQF,IACTF,EAAcC,CAAQ,EAAIC,GAEnBD,IAAa,QACtBD,EAAcC,CAAQ,EAAI,CAAE,GAAGC,EAAe,GAAGC,CAAgB,EACxDF,IAAa,cACtBD,EAAcC,CAAQ,EAAI,CAACC,EAAeC,CAAc,EAAE,OAAO,OAAO,EAAE,KAAK,GAAG,EAExF,CACE,MAAO,CAAE,GAAGrB,EAAW,GAAGkB,CAAe,CAC3C,CACA,SAASL,EAAcU,EAAS,SAC9B,IAAIC,GAASC,EAAA,OAAO,yBAAyBF,EAAQ,MAAO,KAAK,IAApD,YAAAE,EAAuD,IAChEC,EAAUF,GAAU,mBAAoBA,GAAUA,EAAO,eAC7D,OAAIE,EACKH,EAAQ,KAEjBC,GAASG,EAAA,OAAO,yBAAyBJ,EAAS,KAAK,IAA9C,YAAAI,EAAiD,IAC1DD,EAAUF,GAAU,mBAAoBA,GAAUA,EAAO,eACrDE,EACKH,EAAQ,MAAM,IAEhBA,EAAQ,MAAM,KAAOA,EAAQ,IACtC,CC7EA,SAASK,EAAE,EAAE,CAAC,IAAIC,EAAEC,EAAE,EAAE,GAAG,GAAa,OAAO,GAAjB,UAA8B,OAAO,GAAjB,SAAmB,GAAG,UAAoB,OAAO,GAAjB,SAAmB,GAAG,MAAM,QAAQ,CAAC,EAAE,IAAID,EAAE,EAAEA,EAAE,EAAE,OAAOA,IAAI,EAAEA,CAAC,IAAIC,EAAEF,EAAE,EAAEC,CAAC,CAAC,KAAK,IAAI,GAAG,KAAK,GAAGC,OAAQ,KAAID,KAAK,EAAE,EAAEA,CAAC,IAAI,IAAI,GAAG,KAAK,GAAGA,GAAG,OAAO,CAAC,CAAQ,SAASE,GAAM,CAAC,QAAQ,EAAEF,EAAEC,EAAE,EAAE,EAAE,GAAGA,EAAE,UAAU,SAAS,EAAE,UAAUA,GAAG,KAAKD,EAAED,EAAE,CAAC,KAAK,IAAI,GAAG,KAAK,GAAGC,GAAG,OAAO,CAAC,CCCjW,MAAMG,EAAiB3C,GAAQ,OAAOA,GAAU,UAAY,GAAG,OAAOA,CAAK,EAAIA,IAAU,EAAI,IAAMA,EACtF4C,EAAKF,EACLG,EAAM,CAACC,EAAMC,IACdvC,GAAQ,CACZ,IAAIT,EACJ,IAAKgD,GAAW,KAA4B,OAASA,EAAO,WAAa,KAAM,OAAOH,EAAGE,EAAMtC,GAAU,KAA2B,OAASA,EAAM,MAAOA,GAAU,KAA2B,OAASA,EAAM,SAAS,EACvN,KAAM,CAAE,SAAAwC,EAAW,gBAAAC,CAAe,EAAMF,EAClCG,EAAuB,OAAO,KAAKF,CAAQ,EAAE,IAAKG,GAAU,CAC9D,MAAMC,EAAc5C,GAAU,KAA2B,OAASA,EAAM2C,CAAO,EACzEE,EAAqBJ,GAAoB,KAAqC,OAASA,EAAgBE,CAAO,EACpH,GAAIC,IAAgB,KAAM,OAAO,KACjC,MAAME,EAAaX,EAAcS,CAAW,GAAKT,EAAcU,CAAkB,EACjF,OAAOL,EAASG,CAAO,EAAEG,CAAU,CAC/C,CAAS,EACKC,EAAwB/C,GAAS,OAAO,QAAQA,CAAK,EAAE,OAAO,CAACgD,EAAKC,IAAQ,CAC9E,GAAI,CAACC,EAAK1D,CAAK,EAAIyD,EACnB,OAAIzD,IAAU,SAGdwD,EAAIE,CAAG,EAAI1D,GACJwD,CACV,EAAE,EAAE,EACCG,EAA+BZ,GAAW,OAAsChD,EAAMgD,EAAO,oBAAsB,MAAQhD,IAAQ,OAA7D,OAA+EA,EAAI,OAAO,CAACyD,EAAKI,IAAS,CACjL,GAAI,CAAE,MAAOC,EAAU,UAAWC,EAAc,GAAGC,CAAsB,EAAKH,EAC9E,OAAO,OAAO,QAAQG,CAAsB,EAAE,MAAON,GAAQ,CACzD,GAAI,CAACC,EAAK1D,CAAK,EAAIyD,EACnB,OAAO,MAAM,QAAQzD,CAAK,EAAIA,EAAM,SAAS,CACzC,GAAGiD,EACH,GAAGM,CACvB,EAAkBG,CAAG,CAAC,EAAK,CACP,GAAGT,EACH,GAAGM,CACvB,EAAmBG,CAAG,IAAM1D,CAC5B,CAAa,EAAI,CACD,GAAGwD,EACHK,EACAC,CAChB,EAAgBN,CACP,EAAE,EAAE,EACL,OAAOZ,EAAGE,EAAMI,EAAsBS,EAA8BnD,GAAU,KAA2B,OAASA,EAAM,MAAOA,GAAU,KAA2B,OAASA,EAAM,SAAS,CAC/L,ECnCCwD,EAAiBnB,EACrB,gOACA,CACE,SAAU,CACR,QAAS,CACP,QAAS,yDACT,YACE,qEACF,QACE,iFACF,UACE,+DACF,MAAO,+CACP,KAAM,kDACN,SAAU,oHACZ,EACA,KAAM,CACJ,QAAS,iBACT,GAAI,sBACJ,GAAI,uBACJ,KAAM,WACR,EACA,SAAU,CACR,KAAM,qCACN,MAAO,0HAAA,CAEX,EACA,gBAAiB,CACf,SAAU,GACV,QAAS,UACT,KAAM,SAAA,CACR,CAEJ,EAQMoB,EAAS1D,EAAM,WACnB,CAAC,CAAE,UAAA2D,EAAW,QAAAf,EAAS,KAAAgB,EAAM,SAAAC,EAAU,QAAAC,EAAU,GAAO,GAAG7D,CAAM,EAAGT,IAAQ,CACpE,MAAAuE,EAAOD,EAAU/D,EAAO,SAE5B,OAAAc,EAAA,IAACkD,EAAA,CACC,UAAWC,EAAGP,EAAe,CAAE,QAAAb,EAAS,KAAAgB,EAAM,UAAAD,EAAW,SAAAE,CAAS,CAAC,CAAC,EACpE,IAAArE,EACC,GAAGS,CAAA,CACN,CAAA,CAGN,EACAyD,EAAO,YAAc,SC3DrB,IAAIO,EAAY,OAAO,eACnBC,EAAsB,OAAO,sBAC7BC,EAAe,OAAO,UAAU,eAChCC,EAAe,OAAO,UAAU,qBAChCC,EAAkB,CAACC,EAAKnB,EAAK1D,IAAU0D,KAAOmB,EAAML,EAAUK,EAAKnB,EAAK,CAAE,WAAY,GAAM,aAAc,GAAM,SAAU,GAAM,MAAA1D,CAAK,CAAE,EAAI6E,EAAInB,CAAG,EAAI1D,EACtJ8E,EAAiB,CAACC,EAAGC,IAAM,CAC7B,QAASC,KAAQD,IAAMA,EAAI,CAAA,GACrBN,EAAa,KAAKM,EAAGC,CAAI,GAC3BL,EAAgBG,EAAGE,EAAMD,EAAEC,CAAI,CAAC,EACpC,GAAIR,EACF,QAASQ,KAAQR,EAAoBO,CAAC,EAChCL,EAAa,KAAKK,EAAGC,CAAI,GAC3BL,EAAgBG,EAAGE,EAAMD,EAAEC,CAAI,CAAC,EAEtC,OAAOF,CACT,EACIG,EAAY,CAACC,EAAQC,IAAY,CACnC,IAAIC,EAAS,CAAE,EACf,QAASJ,KAAQE,EACXT,EAAa,KAAKS,EAAQF,CAAI,GAAKG,EAAQ,QAAQH,CAAI,EAAI,IAC7DI,EAAOJ,CAAI,EAAIE,EAAOF,CAAI,GAC9B,GAAIE,GAAU,MAAQV,EACpB,QAASQ,KAAQR,EAAoBU,CAAM,EACrCC,EAAQ,QAAQH,CAAI,EAAI,GAAKN,EAAa,KAAKQ,EAAQF,CAAI,IAC7DI,EAAOJ,CAAI,EAAIE,EAAOF,CAAI,GAEhC,OAAOI,CACT,EAGA,SAASC,EAAuBC,EAAM,CACpC,IAAIC,EAAO,GACX,MAAO,IAAM,CACNA,IACHA,EAAO,GACP,sBAAsB,IAAM,CAC1BD,EAAM,EACNC,EAAO,EACf,CAAO,EAEJ,CACH,CACA,IAAIC,EAAmB,CAAC,CACtB,WAAAC,EACA,cAAAC,EACA,oBAAAC,EACA,iBAAAC,EACA,eAAgBC,CAClB,IAAM,CACJ,MAAMC,EAAe,KAAK,KAAK,EAAIH,CAAmB,EACtD,IAAII,EAAY,EAChB,KAAON,EAAaC,GAAiBK,EAAYD,GAC3C,CAAAD,EAAW,GAEfJ,EAAaG,EAAiBH,EAAaE,CAAmB,EAC9DI,GAEJ,EACIC,EAAmB/D,GAAY,CACjC,MAAMgE,EAAgB,iBAAiBhE,CAAO,EAC9C,OAAOA,EAAQ,YAAc,WAAWgE,EAAc,WAAW,EAAI,WAAWA,EAAc,YAAY,CAC5G,EACIC,EAAoBjE,GAAY,CAClC,MAAMgE,EAAgB,iBAAiBhE,CAAO,EAC9C,OAAOA,EAAQ,aAAe,WAAWgE,EAAc,UAAU,EAAI,WAAWA,EAAc,aAAa,CAC7G,EACIE,EAAiBC,GAAS,CAC5BA,EAAK,QAAQ,MAAM,WAAa,SAChCC,EAAYD,CAAI,EACZA,EAAK,QAAQ,YAAcJ,EAAgBI,EAAK,WAAW,IAC7DA,EAAK,QAAQ,MAAM,WAAa,SAEpC,EACIC,EAAc,CAAC,CACjB,QAAAC,EACA,YAAAC,EACA,WAAAd,EACA,cAAAC,EACA,cAAAc,EACA,oBAAAb,EACA,iBAAAC,CACF,IAAM,CAEJ,IAAIG,EAAY,EACZU,EAAqB,EACzB,KAAOV,EAAY,IAAc,CAC/B,MAAMW,EAAKJ,EAAQ,YACbK,EAAKX,EAAgBO,CAAW,EAChCK,EAAUnB,EAAae,GAAiBE,EAAKC,EAC7CE,EAAYpB,EAAaC,GAAiBgB,EAAKC,EAC/CG,EAAiBJ,EAAKC,EAI5B,GAHIF,IAAuBK,GAGvB,EAAEF,GAAWC,GACf,MAEF,MAAME,EAAWtB,EAAaqB,EAAiBrB,EACzCuB,EAAiBvB,EAEvB,GADAA,EAAaG,EAAiBH,EAAasB,CAAQ,EAC/C,KAAK,IAAItB,EAAauB,CAAc,GAAKrB,EAC3C,MAEFc,EAAqBK,EACrBf,GACJ,CACEP,EAAiB,CACf,WAAAC,EACA,cAAAC,EACA,iBAAAE,EACA,oBAAAD,EACA,eAAgB,IAAMW,EAAQ,aAAeN,EAAgBO,CAAW,CAC5E,CAAG,CACH,EACIU,EAAU,CAAC,CACb,QAAAX,EACA,YAAAC,EACA,WAAAd,EACA,cAAAC,EACA,cAAAc,EACA,oBAAAb,EACA,iBAAAC,CACF,IAAM,CAEJH,EAAaG,GAAkBY,EAAgBd,GAAiB,EAAG,EACnE,IAAIqB,GAAYP,EAAgBd,GAAiB,IAC7CK,EAAY,EAChB,KAAOgB,EAAWpB,GAAuBI,EAAY,KAAc,CACjE,MAAMW,EAAKJ,EAAQ,YACbK,EAAKX,EAAgBO,CAAW,EAChCW,EAAKZ,EAAQ,aACba,EAAKjB,EAAiBK,CAAW,EACvC,GAAIG,IAAOC,GAAMO,IAAOC,EACtB,MACE1B,EAAae,GAAiBE,GAAMC,GAAMO,GAAMC,EAClD1B,EAAaG,EAAiBH,EAAasB,CAAQ,EAC1CtB,EAAaC,IAAkBgB,EAAKC,GAAMO,EAAKC,KACxD1B,EAAaG,EAAiBH,EAAasB,CAAQ,GAErDA,GAAY,GACZhB,GACJ,CACEP,EAAiB,CACf,WAAAC,EACA,cAAAC,EACA,iBAAAE,EACA,oBAAAD,EACA,eAAgB,IAAMW,EAAQ,aAAeN,EAAgBO,CAAW,GAAKD,EAAQ,cAAgBJ,EAAiBK,CAAW,CACrI,CAAG,CACH,EACA,SAASa,EAAe,CACtB,QAAAd,EACA,YAAAC,EACA,KAAAc,EAAO,YACP,cAAA3B,EAAgB,EAChB,cAAAc,EAAgB,IAChB,oBAAAb,EAAsB,EACxB,EAAG,CAED,GADW,YAAY,IAAG,EACtB,CAAC,SAASD,CAAa,EACzB,MAAM,IAAI,MAAM,0BAA0BA,CAAa,GAAG,EAE5D,GAAI,CAAC,SAASA,CAAa,EACzB,MAAM,IAAI,MAAM,0BAA0Bc,CAAa,GAAG,EAE5D,GAAI,CAAC,SAASb,CAAmB,GAAKA,IAAwB,EAC5D,MAAM,IAAI,MAAM,gCAAgCA,CAAmB,GAAG,EAEpEY,EAAY,SAAS,OAAS,GAChC,QAAQ,KACN,oBAAoBA,EAAY,SAAS,OAAS,CAAC,mDACpD,EAEH,MAAMe,EAAkB,CAEtB,QAAS,OACT,WAAY,OACb,EACKC,EAAc,CAClB,QAAS,OAEV,EACGF,IAAS,UACXE,EAAY,WAAa,SAChBF,IAAS,YAClBE,EAAY,UAAY,aACfF,IAAS,OAClBE,EAAY,WAAa,WACzBA,EAAY,UAAY,cACfF,IAAS,eAClBE,EAAY,WAAa,UAE3B,OAAO,OAAOhB,EAAY,MAAOe,CAAe,EAChD,OAAO,OAAOhB,EAAQ,MAAOiB,CAAW,EACxC,MAAMC,EAAc,OAAO,iBAAiBlB,EAAS,IAAI,EAAE,iBAAiB,WAAW,EACvF,IAAIb,EAAa,WAAW+B,CAAW,EAEvC,MAAM5B,EAAoB6B,IACxBA,EAAK,KAAK,IAAI,KAAK,IAAIA,EAAI/B,CAAa,EAAGc,CAAa,EACxDf,EAAagC,EACbnB,EAAQ,MAAM,SAAW,GAAGb,CAAU,KAE/BA,IAELA,EAAae,GAAiBf,EAAaC,IAC7CE,EAAiBH,CAAU,EAE7B,MAAMiC,EAAW,CACf,QAAApB,EACA,YAAAC,EACA,WAAAd,EACA,cAAAC,EACA,cAAAc,EACA,oBAAAb,EACA,iBAAAC,CACD,EACGyB,IAAS,UACXhB,EAAYqB,CAAQ,EACXL,IAAS,YAClBlB,EAAcuB,CAAQ,GACbL,IAAS,OAETA,IAAS,eAClBJ,EAAQS,CAAQ,CAEpB,CACA,SAASC,EAAa,CACpB,QAAArB,EACA,YAAAC,EACA,KAAAc,EACA,cAAA3B,EACA,cAAAc,EACA,oBAAAb,CACF,EAAG,CACD,IAAIiC,EACJ,MAAMC,EAA0BxC,EAAuB,IAAM,CAC3D+B,EAAe,CACb,QAAAd,EACA,YAAAC,EACA,KAAAc,EACA,cAAAb,EACA,cAAAd,EACA,oBAAAC,CACN,CAAK,EACDiC,EAAsB,CACpB5B,EAAgBO,CAAW,EAC3BL,EAAiBK,CAAW,CAC7B,CACL,CAAG,EACKuB,EAAiB,IAAI,eAAe,IAAM,CAC9C,MAAMC,EAA0BH,EAChCA,EAAsB,CACpB5B,EAAgBO,CAAW,EAC3BL,EAAiBK,CAAW,CAC7B,IACIwB,GAA2B,KAAO,OAASA,EAAwB,CAAC,KAAOH,EAAoB,CAAC,IAAMG,GAA2B,KAAO,OAASA,EAAwB,CAAC,KAAOH,EAAoB,CAAC,IACzMC,EAAyB,CAE/B,CAAG,EACD,OAAAC,EAAe,QAAQvB,CAAW,EAClCsB,EAAwB,WAAa,IAAMC,EAAe,WAAY,EAC/DD,CACT,CAQA,SAASG,GAAa7F,EAAI,CACxB,IAAIE,EAAKF,EAAI,CACX,KAAAkF,EACA,cAAA3B,EACA,cAAAc,EACA,oBAAAb,EACA,GAAItB,EAAO,MACX,SAAU5D,CACX,EAAG4B,EAAI4F,EAAOhD,EAAU5C,EAAI,CAC3B,OACA,gBACA,gBACA,sBACA,KAEA,UACJ,CAAG,EACD,MAAM6F,EAAoBC,EAAAA,OAAQ,EAClCC,EAAAA,UAAU,IAAM,CACd,IAAIC,EACJ,OAAQA,EAAMH,EAAkB,UAAY,KAAO,OAASG,EAAI,KAAKH,CAAiB,CAC1F,EAAK,CAACzH,CAAQ,CAAC,EACb,MAAM6H,EAAcC,EAAW,YAC5BjC,GAAY,CACX,IAAI+B,GACHA,EAAMH,EAAkB,UAAY,MAAgBG,EAAI,WAAY,EACrE,MAAM9B,EAAcD,GAAW,KAAO,OAASA,EAAQ,cACnD,CAACA,GAAW,CAACC,IAEjB2B,EAAkB,QAAUP,EAAa,CACvC,QAAArB,EACA,YAAAC,EACA,KAAAc,EACA,cAAA3B,EACA,cAAAc,EACA,oBAAAb,CACR,CAAO,EACF,EACD,CAAC0B,EAAM3B,EAAec,EAAeb,CAAmB,CACzD,EACD,OAAuB6C,EAAM,cAAcnE,EAAMQ,EAAe,CAAE,IAAKyD,CAAa,EAAEL,CAAI,EAAGxH,CAAQ,CACvG","x_google_ignoreList":[0,1,2,3,5]}