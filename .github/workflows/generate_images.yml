name: Generate Images

on:
  push:
    branches:
      - main
    paths:
      - 'songs/chordpro/**'
  workflow_dispatch:  # Allows manual triggering

jobs:
  check-changes:
    runs-on: ubuntu-latest
    outputs:
      should_run: ${{ steps.filter.outputs.chordpro }}
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
          
      - name: Check for changes in chordpro directory
        uses: dorny/paths-filter@v2
        id: filter
        with:
          filters: |
            chordpro:
              - added: 'songs/chordpro/**'

  generate-images:
    needs: check-changes
    if: ${{ needs.check-changes.outputs.should_run == 'true' || github.event_name == 'workflow_dispatch' }}
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'
          
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r scripts/requirements.txt
          
      - name: Create secrets file
        run: |
          echo "hugging_face_token: ${{ secrets.HUGGING_FACE_TOKEN }}" > secrets.yaml
          echo "openai:" >> secrets.yaml
          echo "  api_key: ${{ secrets.OPENAI_API_KEY }}" >> secrets.yaml
          echo "  organization_id: ${{ secrets.OPENAI_ORGANIZATION_ID }}" >> secrets.yaml
          echo "  project_id: ${{ secrets.OPENAI_PROJECT_ID }}" >> secrets.yaml
      
      - name: Run image generation script
        run: python scripts/generate_images.py
        
      - name: Check for changes
        id: check_changes
        run: |
          git add songs/illustrations songs/illustrations_thumbnails songs/image_prompts
          git status --porcelain | wc -l | xargs -I {} echo "CHANGES={}" >> $GITHUB_OUTPUT
          
      - name: Commit and push changes
        if: steps.check_changes.outputs.CHANGES != '0'
        run: |
          git config --global user.name $user_name
          git config --global user.email $user_email
          git remote set-url origin https://${github_token}@github.com/${repository}
          git commit -m "Update song illustrations [skip ci]"
          git push
        env:
          user_name: 'github-actions[bot]'
          user_email: 'github-actions[bot]@users.noreply.github.com'
          github_token: ${{ secrets.ACTIONS_DEPLOY_ACCESS_TOKEN }}
          repository: ${{ github.repository }}